// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: thirdinterface.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "thirdinterface.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace thirdinterface {

namespace {

const ::google::protobuf::Descriptor* PkgGetPasswordTableReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgGetPasswordTableReq_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PkgGetPasswordTableReq_EnGetType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PkgGetPasswordTableReq_EnStatus_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PkgGetPasswordTableReq_EnGetCondition_descriptor_ = NULL;
const ::google::protobuf::Descriptor* PkgGetPasswordTable_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgGetPasswordTable_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgGetPasswordTableReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgGetPasswordTableReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgGetPasswordStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgGetPasswordStatus_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PkgGetPasswordStatus_EnStatus_descriptor_ = NULL;
const ::google::protobuf::Descriptor* PkgSetGetPasswordTableStatusReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgSetGetPasswordTableStatusReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgSetGetPasswordTableStatusReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgSetGetPasswordTableStatusReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgSysInfoListGetReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgSysInfoListGetReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgSysInfoValue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgSysInfoValue_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgSysInfoListGetReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgSysInfoListGetReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgRegisterInvitionReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgRegisterInvitionReq_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PkgRegisterInvitionReq_EnGetType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PkgRegisterInvitionReq_EnStatus_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PkgRegisterInvitionReq_EnGetCondition_descriptor_ = NULL;
const ::google::protobuf::Descriptor* PkgRegisterInvition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgRegisterInvition_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgRegisterInvitionReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgRegisterInvitionReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgRegisterInvitionStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgRegisterInvitionStatus_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PkgRegisterInvitionStatus_EnStatus_descriptor_ = NULL;
const ::google::protobuf::Descriptor* PkgSetRegisterInvitionStatusReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgSetRegisterInvitionStatusReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgSetRegisterInvitionStatusReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgSetRegisterInvitionStatusReply_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_thirdinterface_2eproto() {
  protobuf_AddDesc_thirdinterface_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "thirdinterface.proto");
  GOOGLE_CHECK(file != NULL);
  PkgGetPasswordTableReq_descriptor_ = file->message_type(0);
  static const int PkgGetPasswordTableReq_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGetPasswordTableReq, createtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGetPasswordTableReq, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGetPasswordTableReq, gettype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGetPasswordTableReq, startid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGetPasswordTableReq, getcondition_),
  };
  PkgGetPasswordTableReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgGetPasswordTableReq_descriptor_,
      PkgGetPasswordTableReq::default_instance_,
      PkgGetPasswordTableReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGetPasswordTableReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgGetPasswordTableReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGetPasswordTableReq, _internal_metadata_),
      -1);
  PkgGetPasswordTableReq_EnGetType_descriptor_ = PkgGetPasswordTableReq_descriptor_->enum_type(0);
  PkgGetPasswordTableReq_EnStatus_descriptor_ = PkgGetPasswordTableReq_descriptor_->enum_type(1);
  PkgGetPasswordTableReq_EnGetCondition_descriptor_ = PkgGetPasswordTableReq_descriptor_->enum_type(2);
  PkgGetPasswordTable_descriptor_ = file->message_type(1);
  static const int PkgGetPasswordTable_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGetPasswordTable, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGetPasswordTable, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGetPasswordTable, authtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGetPasswordTable, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGetPasswordTable, phonenumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGetPasswordTable, emailaddress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGetPasswordTable, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGetPasswordTable, authcode_),
  };
  PkgGetPasswordTable_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgGetPasswordTable_descriptor_,
      PkgGetPasswordTable::default_instance_,
      PkgGetPasswordTable_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGetPasswordTable, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgGetPasswordTable),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGetPasswordTable, _internal_metadata_),
      -1);
  PkgGetPasswordTableReply_descriptor_ = file->message_type(2);
  static const int PkgGetPasswordTableReply_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGetPasswordTableReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGetPasswordTableReply, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGetPasswordTableReply, infolist_),
  };
  PkgGetPasswordTableReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgGetPasswordTableReply_descriptor_,
      PkgGetPasswordTableReply::default_instance_,
      PkgGetPasswordTableReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGetPasswordTableReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgGetPasswordTableReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGetPasswordTableReply, _internal_metadata_),
      -1);
  PkgGetPasswordStatus_descriptor_ = file->message_type(3);
  static const int PkgGetPasswordStatus_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGetPasswordStatus, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGetPasswordStatus, status_),
  };
  PkgGetPasswordStatus_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgGetPasswordStatus_descriptor_,
      PkgGetPasswordStatus::default_instance_,
      PkgGetPasswordStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGetPasswordStatus, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgGetPasswordStatus),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGetPasswordStatus, _internal_metadata_),
      -1);
  PkgGetPasswordStatus_EnStatus_descriptor_ = PkgGetPasswordStatus_descriptor_->enum_type(0);
  PkgSetGetPasswordTableStatusReq_descriptor_ = file->message_type(4);
  static const int PkgSetGetPasswordTableStatusReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSetGetPasswordTableStatusReq, statuslist_),
  };
  PkgSetGetPasswordTableStatusReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgSetGetPasswordTableStatusReq_descriptor_,
      PkgSetGetPasswordTableStatusReq::default_instance_,
      PkgSetGetPasswordTableStatusReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSetGetPasswordTableStatusReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgSetGetPasswordTableStatusReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSetGetPasswordTableStatusReq, _internal_metadata_),
      -1);
  PkgSetGetPasswordTableStatusReply_descriptor_ = file->message_type(5);
  static const int PkgSetGetPasswordTableStatusReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSetGetPasswordTableStatusReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSetGetPasswordTableStatusReply, err_),
  };
  PkgSetGetPasswordTableStatusReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgSetGetPasswordTableStatusReply_descriptor_,
      PkgSetGetPasswordTableStatusReply::default_instance_,
      PkgSetGetPasswordTableStatusReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSetGetPasswordTableStatusReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgSetGetPasswordTableStatusReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSetGetPasswordTableStatusReply, _internal_metadata_),
      -1);
  PkgSysInfoListGetReq_descriptor_ = file->message_type(6);
  static const int PkgSysInfoListGetReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSysInfoListGetReq, keystring_),
  };
  PkgSysInfoListGetReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgSysInfoListGetReq_descriptor_,
      PkgSysInfoListGetReq::default_instance_,
      PkgSysInfoListGetReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSysInfoListGetReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgSysInfoListGetReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSysInfoListGetReq, _internal_metadata_),
      -1);
  PkgSysInfoValue_descriptor_ = file->message_type(7);
  static const int PkgSysInfoValue_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSysInfoValue, keystring_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSysInfoValue, valuestring_),
  };
  PkgSysInfoValue_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgSysInfoValue_descriptor_,
      PkgSysInfoValue::default_instance_,
      PkgSysInfoValue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSysInfoValue, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgSysInfoValue),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSysInfoValue, _internal_metadata_),
      -1);
  PkgSysInfoListGetReply_descriptor_ = file->message_type(8);
  static const int PkgSysInfoListGetReply_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSysInfoListGetReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSysInfoListGetReply, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSysInfoListGetReply, valuemaps_),
  };
  PkgSysInfoListGetReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgSysInfoListGetReply_descriptor_,
      PkgSysInfoListGetReply::default_instance_,
      PkgSysInfoListGetReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSysInfoListGetReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgSysInfoListGetReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSysInfoListGetReply, _internal_metadata_),
      -1);
  PkgRegisterInvitionReq_descriptor_ = file->message_type(9);
  static const int PkgRegisterInvitionReq_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRegisterInvitionReq, createtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRegisterInvitionReq, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRegisterInvitionReq, gettype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRegisterInvitionReq, startid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRegisterInvitionReq, getcondition_),
  };
  PkgRegisterInvitionReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgRegisterInvitionReq_descriptor_,
      PkgRegisterInvitionReq::default_instance_,
      PkgRegisterInvitionReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRegisterInvitionReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgRegisterInvitionReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRegisterInvitionReq, _internal_metadata_),
      -1);
  PkgRegisterInvitionReq_EnGetType_descriptor_ = PkgRegisterInvitionReq_descriptor_->enum_type(0);
  PkgRegisterInvitionReq_EnStatus_descriptor_ = PkgRegisterInvitionReq_descriptor_->enum_type(1);
  PkgRegisterInvitionReq_EnGetCondition_descriptor_ = PkgRegisterInvitionReq_descriptor_->enum_type(2);
  PkgRegisterInvition_descriptor_ = file->message_type(10);
  static const int PkgRegisterInvition_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRegisterInvition, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRegisterInvition, companyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRegisterInvition, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRegisterInvition, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRegisterInvition, invitiontime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRegisterInvition, phonenumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRegisterInvition, emailaddress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRegisterInvition, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRegisterInvition, invitioncode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRegisterInvition, companyname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRegisterInvition, sendrealname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRegisterInvition, torealname_),
  };
  PkgRegisterInvition_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgRegisterInvition_descriptor_,
      PkgRegisterInvition::default_instance_,
      PkgRegisterInvition_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRegisterInvition, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgRegisterInvition),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRegisterInvition, _internal_metadata_),
      -1);
  PkgRegisterInvitionReply_descriptor_ = file->message_type(11);
  static const int PkgRegisterInvitionReply_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRegisterInvitionReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRegisterInvitionReply, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRegisterInvitionReply, infolist_),
  };
  PkgRegisterInvitionReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgRegisterInvitionReply_descriptor_,
      PkgRegisterInvitionReply::default_instance_,
      PkgRegisterInvitionReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRegisterInvitionReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgRegisterInvitionReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRegisterInvitionReply, _internal_metadata_),
      -1);
  PkgRegisterInvitionStatus_descriptor_ = file->message_type(12);
  static const int PkgRegisterInvitionStatus_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRegisterInvitionStatus, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRegisterInvitionStatus, status_),
  };
  PkgRegisterInvitionStatus_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgRegisterInvitionStatus_descriptor_,
      PkgRegisterInvitionStatus::default_instance_,
      PkgRegisterInvitionStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRegisterInvitionStatus, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgRegisterInvitionStatus),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRegisterInvitionStatus, _internal_metadata_),
      -1);
  PkgRegisterInvitionStatus_EnStatus_descriptor_ = PkgRegisterInvitionStatus_descriptor_->enum_type(0);
  PkgSetRegisterInvitionStatusReq_descriptor_ = file->message_type(13);
  static const int PkgSetRegisterInvitionStatusReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSetRegisterInvitionStatusReq, statuslist_),
  };
  PkgSetRegisterInvitionStatusReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgSetRegisterInvitionStatusReq_descriptor_,
      PkgSetRegisterInvitionStatusReq::default_instance_,
      PkgSetRegisterInvitionStatusReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSetRegisterInvitionStatusReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgSetRegisterInvitionStatusReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSetRegisterInvitionStatusReq, _internal_metadata_),
      -1);
  PkgSetRegisterInvitionStatusReply_descriptor_ = file->message_type(14);
  static const int PkgSetRegisterInvitionStatusReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSetRegisterInvitionStatusReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSetRegisterInvitionStatusReply, err_),
  };
  PkgSetRegisterInvitionStatusReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgSetRegisterInvitionStatusReply_descriptor_,
      PkgSetRegisterInvitionStatusReply::default_instance_,
      PkgSetRegisterInvitionStatusReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSetRegisterInvitionStatusReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgSetRegisterInvitionStatusReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSetRegisterInvitionStatusReply, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_thirdinterface_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgGetPasswordTableReq_descriptor_, &PkgGetPasswordTableReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgGetPasswordTable_descriptor_, &PkgGetPasswordTable::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgGetPasswordTableReply_descriptor_, &PkgGetPasswordTableReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgGetPasswordStatus_descriptor_, &PkgGetPasswordStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgSetGetPasswordTableStatusReq_descriptor_, &PkgSetGetPasswordTableStatusReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgSetGetPasswordTableStatusReply_descriptor_, &PkgSetGetPasswordTableStatusReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgSysInfoListGetReq_descriptor_, &PkgSysInfoListGetReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgSysInfoValue_descriptor_, &PkgSysInfoValue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgSysInfoListGetReply_descriptor_, &PkgSysInfoListGetReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgRegisterInvitionReq_descriptor_, &PkgRegisterInvitionReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgRegisterInvition_descriptor_, &PkgRegisterInvition::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgRegisterInvitionReply_descriptor_, &PkgRegisterInvitionReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgRegisterInvitionStatus_descriptor_, &PkgRegisterInvitionStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgSetRegisterInvitionStatusReq_descriptor_, &PkgSetRegisterInvitionStatusReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgSetRegisterInvitionStatusReply_descriptor_, &PkgSetRegisterInvitionStatusReply::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_thirdinterface_2eproto() {
  delete PkgGetPasswordTableReq::default_instance_;
  delete PkgGetPasswordTableReq_reflection_;
  delete PkgGetPasswordTable::default_instance_;
  delete PkgGetPasswordTable_reflection_;
  delete PkgGetPasswordTableReply::default_instance_;
  delete PkgGetPasswordTableReply_reflection_;
  delete PkgGetPasswordStatus::default_instance_;
  delete PkgGetPasswordStatus_reflection_;
  delete PkgSetGetPasswordTableStatusReq::default_instance_;
  delete PkgSetGetPasswordTableStatusReq_reflection_;
  delete PkgSetGetPasswordTableStatusReply::default_instance_;
  delete PkgSetGetPasswordTableStatusReply_reflection_;
  delete PkgSysInfoListGetReq::default_instance_;
  delete PkgSysInfoListGetReq_reflection_;
  delete PkgSysInfoValue::default_instance_;
  delete PkgSysInfoValue_reflection_;
  delete PkgSysInfoListGetReply::default_instance_;
  delete PkgSysInfoListGetReply_reflection_;
  delete PkgRegisterInvitionReq::default_instance_;
  delete PkgRegisterInvitionReq_reflection_;
  delete PkgRegisterInvition::default_instance_;
  delete PkgRegisterInvition_reflection_;
  delete PkgRegisterInvitionReply::default_instance_;
  delete PkgRegisterInvitionReply_reflection_;
  delete PkgRegisterInvitionStatus::default_instance_;
  delete PkgRegisterInvitionStatus_reflection_;
  delete PkgSetRegisterInvitionStatusReq::default_instance_;
  delete PkgSetRegisterInvitionStatusReq_reflection_;
  delete PkgSetRegisterInvitionStatusReply::default_instance_;
  delete PkgSetRegisterInvitionStatusReply_reflection_;
}

void protobuf_AddDesc_thirdinterface_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024thirdinterface.proto\022\016thirdinterface\"\352"
    "\003\n\026PkgGetPasswordTableReq\022\022\n\ncreatetime\030"
    "\001 \001(\t\022G\n\006status\030\002 \001(\0162/.thirdinterface.P"
    "kgGetPasswordTableReq.EnStatus:\006ES_NEW\022K"
    "\n\007gettype\030\003 \001(\01620.thirdinterface.PkgGetP"
    "asswordTableReq.EnGetType:\010GT_PHONE\022\022\n\007s"
    "tartid\030\004 \001(\005:\0010\022K\n\014getcondition\030\005 \001(\01625."
    "thirdinterface.PkgGetPasswordTableReq.En"
    "GetCondition\"3\n\tEnGetType\022\014\n\010GT_PHONE\020\000\022"
    "\014\n\010GT_EMAIL\020\001\022\n\n\006GT_ALL\020\002\"W\n\010EnStatus\022\n\n"
    "\006ES_NEW\020\000\022\016\n\nES_SENDING\020\001\022\r\n\tES_SENDOK\020\002"
    "\022\020\n\014ES_SENDERROR\020\003\022\016\n\nES_INVALID\020\004\"7\n\016En"
    "GetCondition\022\020\n\014EGC_TIMELESS\020\001\022\023\n\017EGC_TI"
    "MEGREATER\020\002\"\234\001\n\023PkgGetPasswordTable\022\n\n\002i"
    "d\030\001 \001(\005\022\014\n\004time\030\002 \001(\t\022\020\n\010authtype\030\003 \001(\005\022"
    "\014\n\004type\030\004 \001(\005\022\023\n\013phonenumber\030\005 \001(\t\022\024\n\014em"
    "ailaddress\030\006 \001(\t\022\016\n\006status\030\007 \001(\005\022\020\n\010auth"
    "code\030\010 \001(\t\"q\n\030PkgGetPasswordTableReply\022\021"
    "\n\tissuccess\030\001 \002(\010\022\013\n\003err\030\002 \001(\t\0225\n\010infoli"
    "st\030\003 \003(\0132#.thirdinterface.PkgGetPassword"
    "Table\"\272\001\n\024PkgGetPasswordStatus\022\n\n\002id\030\001 \001"
    "(\005\022=\n\006status\030\002 \001(\0162-.thirdinterface.PkgG"
    "etPasswordStatus.EnStatus\"W\n\010EnStatus\022\n\n"
    "\006ES_NEW\020\000\022\016\n\nES_SENDING\020\001\022\r\n\tES_SENDOK\020\002"
    "\022\020\n\014ES_SENDERROR\020\003\022\016\n\nES_INVALID\020\004\"[\n\037Pk"
    "gSetGetPasswordTableStatusReq\0228\n\nstatusl"
    "ist\030\001 \003(\0132$.thirdinterface.PkgGetPasswor"
    "dStatus\"C\n!PkgSetGetPasswordTableStatusR"
    "eply\022\021\n\tissuccess\030\001 \002(\010\022\013\n\003err\030\002 \001(\t\")\n\024"
    "PkgSysInfoListGetReq\022\021\n\tkeystring\030\001 \003(\t\""
    "9\n\017PkgSysInfoValue\022\021\n\tkeystring\030\001 \001(\t\022\023\n"
    "\013valuestring\030\002 \001(\t\"l\n\026PkgSysInfoListGetR"
    "eply\022\021\n\tissuccess\030\001 \002(\010\022\013\n\003err\030\002 \001(\t\0222\n\t"
    "valuemaps\030\n \003(\0132\037.thirdinterface.PkgSysI"
    "nfoValue\"\352\003\n\026PkgRegisterInvitionReq\022\022\n\nc"
    "reatetime\030\001 \001(\t\022G\n\006status\030\002 \001(\0162/.thirdi"
    "nterface.PkgRegisterInvitionReq.EnStatus"
    ":\006ES_NEW\022K\n\007gettype\030\003 \001(\01620.thirdinterfa"
    "ce.PkgRegisterInvitionReq.EnGetType:\010GT_"
    "PHONE\022\022\n\007startid\030\004 \001(\005:\0010\022K\n\014getconditio"
    "n\030\005 \001(\01625.thirdinterface.PkgRegisterInvi"
    "tionReq.EnGetCondition\"3\n\tEnGetType\022\014\n\010G"
    "T_PHONE\020\000\022\014\n\010GT_EMAIL\020\001\022\n\n\006GT_ALL\020\002\"W\n\010E"
    "nStatus\022\n\n\006ES_NEW\020\000\022\016\n\nES_SENDING\020\001\022\r\n\tE"
    "S_SENDOK\020\002\022\020\n\014ES_SENDERROR\020\003\022\016\n\nES_INVAL"
    "ID\020\004\"7\n\016EnGetCondition\022\020\n\014EGC_TIMELESS\020\001"
    "\022\023\n\017EGC_TIMEGREATER\020\002\"\370\001\n\023PkgRegisterInv"
    "ition\022\n\n\002id\030\001 \001(\005\022\021\n\tcompanyid\030\002 \001(\005\022\016\n\006"
    "userid\030\003 \001(\005\022\014\n\004type\030\004 \001(\005\022\024\n\014invitionti"
    "me\030\005 \001(\t\022\023\n\013phonenumber\030\006 \001(\t\022\024\n\014emailad"
    "dress\030\007 \001(\t\022\016\n\006status\030\010 \001(\005\022\024\n\014invitionc"
    "ode\030\t \001(\t\022\023\n\013companyname\030\n \001(\t\022\024\n\014sendre"
    "alname\030\013 \001(\t\022\022\n\ntorealname\030\014 \001(\t\"q\n\030PkgR"
    "egisterInvitionReply\022\021\n\tissuccess\030\001 \002(\010\022"
    "\013\n\003err\030\002 \001(\t\0225\n\010infolist\030\003 \003(\0132#.thirdin"
    "terface.PkgRegisterInvition\"\304\001\n\031PkgRegis"
    "terInvitionStatus\022\n\n\002id\030\001 \001(\005\022B\n\006status\030"
    "\002 \001(\01622.thirdinterface.PkgRegisterInviti"
    "onStatus.EnStatus\"W\n\010EnStatus\022\n\n\006ES_NEW\020"
    "\000\022\016\n\nES_SENDING\020\001\022\r\n\tES_SENDOK\020\002\022\020\n\014ES_S"
    "ENDERROR\020\003\022\016\n\nES_INVALID\020\004\"`\n\037PkgSetRegi"
    "sterInvitionStatusReq\022=\n\nstatuslist\030\001 \003("
    "\0132).thirdinterface.PkgRegisterInvitionSt"
    "atus\"C\n!PkgSetRegisterInvitionStatusRepl"
    "y\022\021\n\tissuccess\030\001 \002(\010\022\013\n\003err\030\002 \001(\t", 2593);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "thirdinterface.proto", &protobuf_RegisterTypes);
  PkgGetPasswordTableReq::default_instance_ = new PkgGetPasswordTableReq();
  PkgGetPasswordTable::default_instance_ = new PkgGetPasswordTable();
  PkgGetPasswordTableReply::default_instance_ = new PkgGetPasswordTableReply();
  PkgGetPasswordStatus::default_instance_ = new PkgGetPasswordStatus();
  PkgSetGetPasswordTableStatusReq::default_instance_ = new PkgSetGetPasswordTableStatusReq();
  PkgSetGetPasswordTableStatusReply::default_instance_ = new PkgSetGetPasswordTableStatusReply();
  PkgSysInfoListGetReq::default_instance_ = new PkgSysInfoListGetReq();
  PkgSysInfoValue::default_instance_ = new PkgSysInfoValue();
  PkgSysInfoListGetReply::default_instance_ = new PkgSysInfoListGetReply();
  PkgRegisterInvitionReq::default_instance_ = new PkgRegisterInvitionReq();
  PkgRegisterInvition::default_instance_ = new PkgRegisterInvition();
  PkgRegisterInvitionReply::default_instance_ = new PkgRegisterInvitionReply();
  PkgRegisterInvitionStatus::default_instance_ = new PkgRegisterInvitionStatus();
  PkgSetRegisterInvitionStatusReq::default_instance_ = new PkgSetRegisterInvitionStatusReq();
  PkgSetRegisterInvitionStatusReply::default_instance_ = new PkgSetRegisterInvitionStatusReply();
  PkgGetPasswordTableReq::default_instance_->InitAsDefaultInstance();
  PkgGetPasswordTable::default_instance_->InitAsDefaultInstance();
  PkgGetPasswordTableReply::default_instance_->InitAsDefaultInstance();
  PkgGetPasswordStatus::default_instance_->InitAsDefaultInstance();
  PkgSetGetPasswordTableStatusReq::default_instance_->InitAsDefaultInstance();
  PkgSetGetPasswordTableStatusReply::default_instance_->InitAsDefaultInstance();
  PkgSysInfoListGetReq::default_instance_->InitAsDefaultInstance();
  PkgSysInfoValue::default_instance_->InitAsDefaultInstance();
  PkgSysInfoListGetReply::default_instance_->InitAsDefaultInstance();
  PkgRegisterInvitionReq::default_instance_->InitAsDefaultInstance();
  PkgRegisterInvition::default_instance_->InitAsDefaultInstance();
  PkgRegisterInvitionReply::default_instance_->InitAsDefaultInstance();
  PkgRegisterInvitionStatus::default_instance_->InitAsDefaultInstance();
  PkgSetRegisterInvitionStatusReq::default_instance_->InitAsDefaultInstance();
  PkgSetRegisterInvitionStatusReply::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_thirdinterface_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_thirdinterface_2eproto {
  StaticDescriptorInitializer_thirdinterface_2eproto() {
    protobuf_AddDesc_thirdinterface_2eproto();
  }
} static_descriptor_initializer_thirdinterface_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

const ::google::protobuf::EnumDescriptor* PkgGetPasswordTableReq_EnGetType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgGetPasswordTableReq_EnGetType_descriptor_;
}
bool PkgGetPasswordTableReq_EnGetType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PkgGetPasswordTableReq_EnGetType PkgGetPasswordTableReq::GT_PHONE;
const PkgGetPasswordTableReq_EnGetType PkgGetPasswordTableReq::GT_EMAIL;
const PkgGetPasswordTableReq_EnGetType PkgGetPasswordTableReq::GT_ALL;
const PkgGetPasswordTableReq_EnGetType PkgGetPasswordTableReq::EnGetType_MIN;
const PkgGetPasswordTableReq_EnGetType PkgGetPasswordTableReq::EnGetType_MAX;
const int PkgGetPasswordTableReq::EnGetType_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* PkgGetPasswordTableReq_EnStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgGetPasswordTableReq_EnStatus_descriptor_;
}
bool PkgGetPasswordTableReq_EnStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PkgGetPasswordTableReq_EnStatus PkgGetPasswordTableReq::ES_NEW;
const PkgGetPasswordTableReq_EnStatus PkgGetPasswordTableReq::ES_SENDING;
const PkgGetPasswordTableReq_EnStatus PkgGetPasswordTableReq::ES_SENDOK;
const PkgGetPasswordTableReq_EnStatus PkgGetPasswordTableReq::ES_SENDERROR;
const PkgGetPasswordTableReq_EnStatus PkgGetPasswordTableReq::ES_INVALID;
const PkgGetPasswordTableReq_EnStatus PkgGetPasswordTableReq::EnStatus_MIN;
const PkgGetPasswordTableReq_EnStatus PkgGetPasswordTableReq::EnStatus_MAX;
const int PkgGetPasswordTableReq::EnStatus_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* PkgGetPasswordTableReq_EnGetCondition_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgGetPasswordTableReq_EnGetCondition_descriptor_;
}
bool PkgGetPasswordTableReq_EnGetCondition_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PkgGetPasswordTableReq_EnGetCondition PkgGetPasswordTableReq::EGC_TIMELESS;
const PkgGetPasswordTableReq_EnGetCondition PkgGetPasswordTableReq::EGC_TIMEGREATER;
const PkgGetPasswordTableReq_EnGetCondition PkgGetPasswordTableReq::EnGetCondition_MIN;
const PkgGetPasswordTableReq_EnGetCondition PkgGetPasswordTableReq::EnGetCondition_MAX;
const int PkgGetPasswordTableReq::EnGetCondition_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int PkgGetPasswordTableReq::kCreatetimeFieldNumber;
const int PkgGetPasswordTableReq::kStatusFieldNumber;
const int PkgGetPasswordTableReq::kGettypeFieldNumber;
const int PkgGetPasswordTableReq::kStartidFieldNumber;
const int PkgGetPasswordTableReq::kGetconditionFieldNumber;
#endif  // !_MSC_VER

PkgGetPasswordTableReq::PkgGetPasswordTableReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:thirdinterface.PkgGetPasswordTableReq)
}

void PkgGetPasswordTableReq::InitAsDefaultInstance() {
}

PkgGetPasswordTableReq::PkgGetPasswordTableReq(const PkgGetPasswordTableReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:thirdinterface.PkgGetPasswordTableReq)
}

void PkgGetPasswordTableReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  createtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  gettype_ = 0;
  startid_ = 0;
  getcondition_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgGetPasswordTableReq::~PkgGetPasswordTableReq() {
  // @@protoc_insertion_point(destructor:thirdinterface.PkgGetPasswordTableReq)
  SharedDtor();
}

void PkgGetPasswordTableReq::SharedDtor() {
  createtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgGetPasswordTableReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgGetPasswordTableReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgGetPasswordTableReq_descriptor_;
}

const PkgGetPasswordTableReq& PkgGetPasswordTableReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_thirdinterface_2eproto();
  return *default_instance_;
}

PkgGetPasswordTableReq* PkgGetPasswordTableReq::default_instance_ = NULL;

PkgGetPasswordTableReq* PkgGetPasswordTableReq::New(::google::protobuf::Arena* arena) const {
  PkgGetPasswordTableReq* n = new PkgGetPasswordTableReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgGetPasswordTableReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgGetPasswordTableReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(status_, startid_);
    if (has_createtime()) {
      createtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    getcondition_ = 1;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgGetPasswordTableReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:thirdinterface.PkgGetPasswordTableReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string createtime = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_createtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->createtime().data(), this->createtime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "thirdinterface.PkgGetPasswordTableReq.createtime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }

      // optional .thirdinterface.PkgGetPasswordTableReq.EnStatus status = 2 [default = ES_NEW];
      case 2: {
        if (tag == 16) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::thirdinterface::PkgGetPasswordTableReq_EnStatus_IsValid(value)) {
            set_status(static_cast< ::thirdinterface::PkgGetPasswordTableReq_EnStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_gettype;
        break;
      }

      // optional .thirdinterface.PkgGetPasswordTableReq.EnGetType gettype = 3 [default = GT_PHONE];
      case 3: {
        if (tag == 24) {
         parse_gettype:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::thirdinterface::PkgGetPasswordTableReq_EnGetType_IsValid(value)) {
            set_gettype(static_cast< ::thirdinterface::PkgGetPasswordTableReq_EnGetType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_startid;
        break;
      }

      // optional int32 startid = 4 [default = 0];
      case 4: {
        if (tag == 32) {
         parse_startid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &startid_)));
          set_has_startid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_getcondition;
        break;
      }

      // optional .thirdinterface.PkgGetPasswordTableReq.EnGetCondition getcondition = 5;
      case 5: {
        if (tag == 40) {
         parse_getcondition:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::thirdinterface::PkgGetPasswordTableReq_EnGetCondition_IsValid(value)) {
            set_getcondition(static_cast< ::thirdinterface::PkgGetPasswordTableReq_EnGetCondition >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:thirdinterface.PkgGetPasswordTableReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:thirdinterface.PkgGetPasswordTableReq)
  return false;
#undef DO_
}

void PkgGetPasswordTableReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:thirdinterface.PkgGetPasswordTableReq)
  // optional string createtime = 1;
  if (has_createtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createtime().data(), this->createtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgGetPasswordTableReq.createtime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->createtime(), output);
  }

  // optional .thirdinterface.PkgGetPasswordTableReq.EnStatus status = 2 [default = ES_NEW];
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  // optional .thirdinterface.PkgGetPasswordTableReq.EnGetType gettype = 3 [default = GT_PHONE];
  if (has_gettype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->gettype(), output);
  }

  // optional int32 startid = 4 [default = 0];
  if (has_startid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->startid(), output);
  }

  // optional .thirdinterface.PkgGetPasswordTableReq.EnGetCondition getcondition = 5;
  if (has_getcondition()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->getcondition(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:thirdinterface.PkgGetPasswordTableReq)
}

::google::protobuf::uint8* PkgGetPasswordTableReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:thirdinterface.PkgGetPasswordTableReq)
  // optional string createtime = 1;
  if (has_createtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createtime().data(), this->createtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgGetPasswordTableReq.createtime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->createtime(), target);
  }

  // optional .thirdinterface.PkgGetPasswordTableReq.EnStatus status = 2 [default = ES_NEW];
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  // optional .thirdinterface.PkgGetPasswordTableReq.EnGetType gettype = 3 [default = GT_PHONE];
  if (has_gettype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->gettype(), target);
  }

  // optional int32 startid = 4 [default = 0];
  if (has_startid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->startid(), target);
  }

  // optional .thirdinterface.PkgGetPasswordTableReq.EnGetCondition getcondition = 5;
  if (has_getcondition()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->getcondition(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thirdinterface.PkgGetPasswordTableReq)
  return target;
}

int PkgGetPasswordTableReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31) {
    // optional string createtime = 1;
    if (has_createtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->createtime());
    }

    // optional .thirdinterface.PkgGetPasswordTableReq.EnStatus status = 2 [default = ES_NEW];
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional .thirdinterface.PkgGetPasswordTableReq.EnGetType gettype = 3 [default = GT_PHONE];
    if (has_gettype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->gettype());
    }

    // optional int32 startid = 4 [default = 0];
    if (has_startid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->startid());
    }

    // optional .thirdinterface.PkgGetPasswordTableReq.EnGetCondition getcondition = 5;
    if (has_getcondition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->getcondition());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgGetPasswordTableReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgGetPasswordTableReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgGetPasswordTableReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgGetPasswordTableReq::MergeFrom(const PkgGetPasswordTableReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_createtime()) {
      set_has_createtime();
      createtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.createtime_);
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_gettype()) {
      set_gettype(from.gettype());
    }
    if (from.has_startid()) {
      set_startid(from.startid());
    }
    if (from.has_getcondition()) {
      set_getcondition(from.getcondition());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgGetPasswordTableReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgGetPasswordTableReq::CopyFrom(const PkgGetPasswordTableReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgGetPasswordTableReq::IsInitialized() const {

  return true;
}

void PkgGetPasswordTableReq::Swap(PkgGetPasswordTableReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgGetPasswordTableReq::InternalSwap(PkgGetPasswordTableReq* other) {
  createtime_.Swap(&other->createtime_);
  std::swap(status_, other->status_);
  std::swap(gettype_, other->gettype_);
  std::swap(startid_, other->startid_);
  std::swap(getcondition_, other->getcondition_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgGetPasswordTableReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgGetPasswordTableReq_descriptor_;
  metadata.reflection = PkgGetPasswordTableReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgGetPasswordTable::kIdFieldNumber;
const int PkgGetPasswordTable::kTimeFieldNumber;
const int PkgGetPasswordTable::kAuthtypeFieldNumber;
const int PkgGetPasswordTable::kTypeFieldNumber;
const int PkgGetPasswordTable::kPhonenumberFieldNumber;
const int PkgGetPasswordTable::kEmailaddressFieldNumber;
const int PkgGetPasswordTable::kStatusFieldNumber;
const int PkgGetPasswordTable::kAuthcodeFieldNumber;
#endif  // !_MSC_VER

PkgGetPasswordTable::PkgGetPasswordTable()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:thirdinterface.PkgGetPasswordTable)
}

void PkgGetPasswordTable::InitAsDefaultInstance() {
}

PkgGetPasswordTable::PkgGetPasswordTable(const PkgGetPasswordTable& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:thirdinterface.PkgGetPasswordTable)
}

void PkgGetPasswordTable::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authtype_ = 0;
  type_ = 0;
  phonenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emailaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  authcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgGetPasswordTable::~PkgGetPasswordTable() {
  // @@protoc_insertion_point(destructor:thirdinterface.PkgGetPasswordTable)
  SharedDtor();
}

void PkgGetPasswordTable::SharedDtor() {
  time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emailaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgGetPasswordTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgGetPasswordTable::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgGetPasswordTable_descriptor_;
}

const PkgGetPasswordTable& PkgGetPasswordTable::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_thirdinterface_2eproto();
  return *default_instance_;
}

PkgGetPasswordTable* PkgGetPasswordTable::default_instance_ = NULL;

PkgGetPasswordTable* PkgGetPasswordTable::New(::google::protobuf::Arena* arena) const {
  PkgGetPasswordTable* n = new PkgGetPasswordTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgGetPasswordTable::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgGetPasswordTable*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(id_, authtype_);
    ZR_(type_, status_);
    if (has_time()) {
      time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_phonenumber()) {
      phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_emailaddress()) {
      emailaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_authcode()) {
      authcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgGetPasswordTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:thirdinterface.PkgGetPasswordTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_time;
        break;
      }

      // optional string time = 2;
      case 2: {
        if (tag == 18) {
         parse_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->time().data(), this->time().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "thirdinterface.PkgGetPasswordTable.time");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_authtype;
        break;
      }

      // optional int32 authtype = 3;
      case 3: {
        if (tag == 24) {
         parse_authtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &authtype_)));
          set_has_authtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_type;
        break;
      }

      // optional int32 type = 4;
      case 4: {
        if (tag == 32) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_phonenumber;
        break;
      }

      // optional string phonenumber = 5;
      case 5: {
        if (tag == 42) {
         parse_phonenumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonenumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phonenumber().data(), this->phonenumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "thirdinterface.PkgGetPasswordTable.phonenumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_emailaddress;
        break;
      }

      // optional string emailaddress = 6;
      case 6: {
        if (tag == 50) {
         parse_emailaddress:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_emailaddress()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->emailaddress().data(), this->emailaddress().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "thirdinterface.PkgGetPasswordTable.emailaddress");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_status;
        break;
      }

      // optional int32 status = 7;
      case 7: {
        if (tag == 56) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_authcode;
        break;
      }

      // optional string authcode = 8;
      case 8: {
        if (tag == 66) {
         parse_authcode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_authcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->authcode().data(), this->authcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "thirdinterface.PkgGetPasswordTable.authcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:thirdinterface.PkgGetPasswordTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:thirdinterface.PkgGetPasswordTable)
  return false;
#undef DO_
}

void PkgGetPasswordTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:thirdinterface.PkgGetPasswordTable)
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string time = 2;
  if (has_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->time().data(), this->time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgGetPasswordTable.time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->time(), output);
  }

  // optional int32 authtype = 3;
  if (has_authtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->authtype(), output);
  }

  // optional int32 type = 4;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->type(), output);
  }

  // optional string phonenumber = 5;
  if (has_phonenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgGetPasswordTable.phonenumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->phonenumber(), output);
  }

  // optional string emailaddress = 6;
  if (has_emailaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emailaddress().data(), this->emailaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgGetPasswordTable.emailaddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->emailaddress(), output);
  }

  // optional int32 status = 7;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->status(), output);
  }

  // optional string authcode = 8;
  if (has_authcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->authcode().data(), this->authcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgGetPasswordTable.authcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->authcode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:thirdinterface.PkgGetPasswordTable)
}

::google::protobuf::uint8* PkgGetPasswordTable::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:thirdinterface.PkgGetPasswordTable)
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string time = 2;
  if (has_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->time().data(), this->time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgGetPasswordTable.time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->time(), target);
  }

  // optional int32 authtype = 3;
  if (has_authtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->authtype(), target);
  }

  // optional int32 type = 4;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->type(), target);
  }

  // optional string phonenumber = 5;
  if (has_phonenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgGetPasswordTable.phonenumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->phonenumber(), target);
  }

  // optional string emailaddress = 6;
  if (has_emailaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emailaddress().data(), this->emailaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgGetPasswordTable.emailaddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->emailaddress(), target);
  }

  // optional int32 status = 7;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->status(), target);
  }

  // optional string authcode = 8;
  if (has_authcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->authcode().data(), this->authcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgGetPasswordTable.authcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->authcode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thirdinterface.PkgGetPasswordTable)
  return target;
}

int PkgGetPasswordTable::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional string time = 2;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->time());
    }

    // optional int32 authtype = 3;
    if (has_authtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->authtype());
    }

    // optional int32 type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional string phonenumber = 5;
    if (has_phonenumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phonenumber());
    }

    // optional string emailaddress = 6;
    if (has_emailaddress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->emailaddress());
    }

    // optional int32 status = 7;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }

    // optional string authcode = 8;
    if (has_authcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->authcode());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgGetPasswordTable::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgGetPasswordTable* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgGetPasswordTable*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgGetPasswordTable::MergeFrom(const PkgGetPasswordTable& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_time()) {
      set_has_time();
      time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
    }
    if (from.has_authtype()) {
      set_authtype(from.authtype());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_phonenumber()) {
      set_has_phonenumber();
      phonenumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenumber_);
    }
    if (from.has_emailaddress()) {
      set_has_emailaddress();
      emailaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.emailaddress_);
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_authcode()) {
      set_has_authcode();
      authcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authcode_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgGetPasswordTable::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgGetPasswordTable::CopyFrom(const PkgGetPasswordTable& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgGetPasswordTable::IsInitialized() const {

  return true;
}

void PkgGetPasswordTable::Swap(PkgGetPasswordTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgGetPasswordTable::InternalSwap(PkgGetPasswordTable* other) {
  std::swap(id_, other->id_);
  time_.Swap(&other->time_);
  std::swap(authtype_, other->authtype_);
  std::swap(type_, other->type_);
  phonenumber_.Swap(&other->phonenumber_);
  emailaddress_.Swap(&other->emailaddress_);
  std::swap(status_, other->status_);
  authcode_.Swap(&other->authcode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgGetPasswordTable::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgGetPasswordTable_descriptor_;
  metadata.reflection = PkgGetPasswordTable_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgGetPasswordTableReply::kIssuccessFieldNumber;
const int PkgGetPasswordTableReply::kErrFieldNumber;
const int PkgGetPasswordTableReply::kInfolistFieldNumber;
#endif  // !_MSC_VER

PkgGetPasswordTableReply::PkgGetPasswordTableReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:thirdinterface.PkgGetPasswordTableReply)
}

void PkgGetPasswordTableReply::InitAsDefaultInstance() {
}

PkgGetPasswordTableReply::PkgGetPasswordTableReply(const PkgGetPasswordTableReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:thirdinterface.PkgGetPasswordTableReply)
}

void PkgGetPasswordTableReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = false;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgGetPasswordTableReply::~PkgGetPasswordTableReply() {
  // @@protoc_insertion_point(destructor:thirdinterface.PkgGetPasswordTableReply)
  SharedDtor();
}

void PkgGetPasswordTableReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgGetPasswordTableReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgGetPasswordTableReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgGetPasswordTableReply_descriptor_;
}

const PkgGetPasswordTableReply& PkgGetPasswordTableReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_thirdinterface_2eproto();
  return *default_instance_;
}

PkgGetPasswordTableReply* PkgGetPasswordTableReply::default_instance_ = NULL;

PkgGetPasswordTableReply* PkgGetPasswordTableReply::New(::google::protobuf::Arena* arena) const {
  PkgGetPasswordTableReply* n = new PkgGetPasswordTableReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgGetPasswordTableReply::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    issuccess_ = false;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  infolist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgGetPasswordTableReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:thirdinterface.PkgGetPasswordTableReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "thirdinterface.PkgGetPasswordTableReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_infolist;
        break;
      }

      // repeated .thirdinterface.PkgGetPasswordTable infolist = 3;
      case 3: {
        if (tag == 26) {
         parse_infolist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_infolist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_infolist;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:thirdinterface.PkgGetPasswordTableReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:thirdinterface.PkgGetPasswordTableReply)
  return false;
#undef DO_
}

void PkgGetPasswordTableReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:thirdinterface.PkgGetPasswordTableReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgGetPasswordTableReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  // repeated .thirdinterface.PkgGetPasswordTable infolist = 3;
  for (unsigned int i = 0, n = this->infolist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->infolist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:thirdinterface.PkgGetPasswordTableReply)
}

::google::protobuf::uint8* PkgGetPasswordTableReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:thirdinterface.PkgGetPasswordTableReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgGetPasswordTableReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  // repeated .thirdinterface.PkgGetPasswordTable infolist = 3;
  for (unsigned int i = 0, n = this->infolist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->infolist(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thirdinterface.PkgGetPasswordTableReply)
  return target;
}

int PkgGetPasswordTableReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1;
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  // optional string err = 2;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  // repeated .thirdinterface.PkgGetPasswordTable infolist = 3;
  total_size += 1 * this->infolist_size();
  for (int i = 0; i < this->infolist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->infolist(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgGetPasswordTableReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgGetPasswordTableReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgGetPasswordTableReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgGetPasswordTableReply::MergeFrom(const PkgGetPasswordTableReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  infolist_.MergeFrom(from.infolist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgGetPasswordTableReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgGetPasswordTableReply::CopyFrom(const PkgGetPasswordTableReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgGetPasswordTableReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgGetPasswordTableReply::Swap(PkgGetPasswordTableReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgGetPasswordTableReply::InternalSwap(PkgGetPasswordTableReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  infolist_.UnsafeArenaSwap(&other->infolist_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgGetPasswordTableReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgGetPasswordTableReply_descriptor_;
  metadata.reflection = PkgGetPasswordTableReply_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* PkgGetPasswordStatus_EnStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgGetPasswordStatus_EnStatus_descriptor_;
}
bool PkgGetPasswordStatus_EnStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PkgGetPasswordStatus_EnStatus PkgGetPasswordStatus::ES_NEW;
const PkgGetPasswordStatus_EnStatus PkgGetPasswordStatus::ES_SENDING;
const PkgGetPasswordStatus_EnStatus PkgGetPasswordStatus::ES_SENDOK;
const PkgGetPasswordStatus_EnStatus PkgGetPasswordStatus::ES_SENDERROR;
const PkgGetPasswordStatus_EnStatus PkgGetPasswordStatus::ES_INVALID;
const PkgGetPasswordStatus_EnStatus PkgGetPasswordStatus::EnStatus_MIN;
const PkgGetPasswordStatus_EnStatus PkgGetPasswordStatus::EnStatus_MAX;
const int PkgGetPasswordStatus::EnStatus_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int PkgGetPasswordStatus::kIdFieldNumber;
const int PkgGetPasswordStatus::kStatusFieldNumber;
#endif  // !_MSC_VER

PkgGetPasswordStatus::PkgGetPasswordStatus()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:thirdinterface.PkgGetPasswordStatus)
}

void PkgGetPasswordStatus::InitAsDefaultInstance() {
}

PkgGetPasswordStatus::PkgGetPasswordStatus(const PkgGetPasswordStatus& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:thirdinterface.PkgGetPasswordStatus)
}

void PkgGetPasswordStatus::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgGetPasswordStatus::~PkgGetPasswordStatus() {
  // @@protoc_insertion_point(destructor:thirdinterface.PkgGetPasswordStatus)
  SharedDtor();
}

void PkgGetPasswordStatus::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PkgGetPasswordStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgGetPasswordStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgGetPasswordStatus_descriptor_;
}

const PkgGetPasswordStatus& PkgGetPasswordStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_thirdinterface_2eproto();
  return *default_instance_;
}

PkgGetPasswordStatus* PkgGetPasswordStatus::default_instance_ = NULL;

PkgGetPasswordStatus* PkgGetPasswordStatus::New(::google::protobuf::Arena* arena) const {
  PkgGetPasswordStatus* n = new PkgGetPasswordStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgGetPasswordStatus::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgGetPasswordStatus*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, status_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgGetPasswordStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:thirdinterface.PkgGetPasswordStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }

      // optional .thirdinterface.PkgGetPasswordStatus.EnStatus status = 2;
      case 2: {
        if (tag == 16) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::thirdinterface::PkgGetPasswordStatus_EnStatus_IsValid(value)) {
            set_status(static_cast< ::thirdinterface::PkgGetPasswordStatus_EnStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:thirdinterface.PkgGetPasswordStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:thirdinterface.PkgGetPasswordStatus)
  return false;
#undef DO_
}

void PkgGetPasswordStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:thirdinterface.PkgGetPasswordStatus)
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional .thirdinterface.PkgGetPasswordStatus.EnStatus status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:thirdinterface.PkgGetPasswordStatus)
}

::google::protobuf::uint8* PkgGetPasswordStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:thirdinterface.PkgGetPasswordStatus)
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional .thirdinterface.PkgGetPasswordStatus.EnStatus status = 2;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thirdinterface.PkgGetPasswordStatus)
  return target;
}

int PkgGetPasswordStatus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional .thirdinterface.PkgGetPasswordStatus.EnStatus status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgGetPasswordStatus::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgGetPasswordStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgGetPasswordStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgGetPasswordStatus::MergeFrom(const PkgGetPasswordStatus& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgGetPasswordStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgGetPasswordStatus::CopyFrom(const PkgGetPasswordStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgGetPasswordStatus::IsInitialized() const {

  return true;
}

void PkgGetPasswordStatus::Swap(PkgGetPasswordStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgGetPasswordStatus::InternalSwap(PkgGetPasswordStatus* other) {
  std::swap(id_, other->id_);
  std::swap(status_, other->status_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgGetPasswordStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgGetPasswordStatus_descriptor_;
  metadata.reflection = PkgGetPasswordStatus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgSetGetPasswordTableStatusReq::kStatuslistFieldNumber;
#endif  // !_MSC_VER

PkgSetGetPasswordTableStatusReq::PkgSetGetPasswordTableStatusReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:thirdinterface.PkgSetGetPasswordTableStatusReq)
}

void PkgSetGetPasswordTableStatusReq::InitAsDefaultInstance() {
}

PkgSetGetPasswordTableStatusReq::PkgSetGetPasswordTableStatusReq(const PkgSetGetPasswordTableStatusReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:thirdinterface.PkgSetGetPasswordTableStatusReq)
}

void PkgSetGetPasswordTableStatusReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgSetGetPasswordTableStatusReq::~PkgSetGetPasswordTableStatusReq() {
  // @@protoc_insertion_point(destructor:thirdinterface.PkgSetGetPasswordTableStatusReq)
  SharedDtor();
}

void PkgSetGetPasswordTableStatusReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PkgSetGetPasswordTableStatusReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgSetGetPasswordTableStatusReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgSetGetPasswordTableStatusReq_descriptor_;
}

const PkgSetGetPasswordTableStatusReq& PkgSetGetPasswordTableStatusReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_thirdinterface_2eproto();
  return *default_instance_;
}

PkgSetGetPasswordTableStatusReq* PkgSetGetPasswordTableStatusReq::default_instance_ = NULL;

PkgSetGetPasswordTableStatusReq* PkgSetGetPasswordTableStatusReq::New(::google::protobuf::Arena* arena) const {
  PkgSetGetPasswordTableStatusReq* n = new PkgSetGetPasswordTableStatusReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgSetGetPasswordTableStatusReq::Clear() {
  statuslist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgSetGetPasswordTableStatusReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:thirdinterface.PkgSetGetPasswordTableStatusReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .thirdinterface.PkgGetPasswordStatus statuslist = 1;
      case 1: {
        if (tag == 10) {
         parse_statuslist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_statuslist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_statuslist;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:thirdinterface.PkgSetGetPasswordTableStatusReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:thirdinterface.PkgSetGetPasswordTableStatusReq)
  return false;
#undef DO_
}

void PkgSetGetPasswordTableStatusReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:thirdinterface.PkgSetGetPasswordTableStatusReq)
  // repeated .thirdinterface.PkgGetPasswordStatus statuslist = 1;
  for (unsigned int i = 0, n = this->statuslist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->statuslist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:thirdinterface.PkgSetGetPasswordTableStatusReq)
}

::google::protobuf::uint8* PkgSetGetPasswordTableStatusReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:thirdinterface.PkgSetGetPasswordTableStatusReq)
  // repeated .thirdinterface.PkgGetPasswordStatus statuslist = 1;
  for (unsigned int i = 0, n = this->statuslist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->statuslist(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thirdinterface.PkgSetGetPasswordTableStatusReq)
  return target;
}

int PkgSetGetPasswordTableStatusReq::ByteSize() const {
  int total_size = 0;

  // repeated .thirdinterface.PkgGetPasswordStatus statuslist = 1;
  total_size += 1 * this->statuslist_size();
  for (int i = 0; i < this->statuslist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->statuslist(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgSetGetPasswordTableStatusReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgSetGetPasswordTableStatusReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgSetGetPasswordTableStatusReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgSetGetPasswordTableStatusReq::MergeFrom(const PkgSetGetPasswordTableStatusReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  statuslist_.MergeFrom(from.statuslist_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgSetGetPasswordTableStatusReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgSetGetPasswordTableStatusReq::CopyFrom(const PkgSetGetPasswordTableStatusReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgSetGetPasswordTableStatusReq::IsInitialized() const {

  return true;
}

void PkgSetGetPasswordTableStatusReq::Swap(PkgSetGetPasswordTableStatusReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgSetGetPasswordTableStatusReq::InternalSwap(PkgSetGetPasswordTableStatusReq* other) {
  statuslist_.UnsafeArenaSwap(&other->statuslist_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgSetGetPasswordTableStatusReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgSetGetPasswordTableStatusReq_descriptor_;
  metadata.reflection = PkgSetGetPasswordTableStatusReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgSetGetPasswordTableStatusReply::kIssuccessFieldNumber;
const int PkgSetGetPasswordTableStatusReply::kErrFieldNumber;
#endif  // !_MSC_VER

PkgSetGetPasswordTableStatusReply::PkgSetGetPasswordTableStatusReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:thirdinterface.PkgSetGetPasswordTableStatusReply)
}

void PkgSetGetPasswordTableStatusReply::InitAsDefaultInstance() {
}

PkgSetGetPasswordTableStatusReply::PkgSetGetPasswordTableStatusReply(const PkgSetGetPasswordTableStatusReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:thirdinterface.PkgSetGetPasswordTableStatusReply)
}

void PkgSetGetPasswordTableStatusReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = false;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgSetGetPasswordTableStatusReply::~PkgSetGetPasswordTableStatusReply() {
  // @@protoc_insertion_point(destructor:thirdinterface.PkgSetGetPasswordTableStatusReply)
  SharedDtor();
}

void PkgSetGetPasswordTableStatusReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgSetGetPasswordTableStatusReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgSetGetPasswordTableStatusReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgSetGetPasswordTableStatusReply_descriptor_;
}

const PkgSetGetPasswordTableStatusReply& PkgSetGetPasswordTableStatusReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_thirdinterface_2eproto();
  return *default_instance_;
}

PkgSetGetPasswordTableStatusReply* PkgSetGetPasswordTableStatusReply::default_instance_ = NULL;

PkgSetGetPasswordTableStatusReply* PkgSetGetPasswordTableStatusReply::New(::google::protobuf::Arena* arena) const {
  PkgSetGetPasswordTableStatusReply* n = new PkgSetGetPasswordTableStatusReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgSetGetPasswordTableStatusReply::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    issuccess_ = false;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgSetGetPasswordTableStatusReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:thirdinterface.PkgSetGetPasswordTableStatusReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "thirdinterface.PkgSetGetPasswordTableStatusReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:thirdinterface.PkgSetGetPasswordTableStatusReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:thirdinterface.PkgSetGetPasswordTableStatusReply)
  return false;
#undef DO_
}

void PkgSetGetPasswordTableStatusReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:thirdinterface.PkgSetGetPasswordTableStatusReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgSetGetPasswordTableStatusReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:thirdinterface.PkgSetGetPasswordTableStatusReply)
}

::google::protobuf::uint8* PkgSetGetPasswordTableStatusReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:thirdinterface.PkgSetGetPasswordTableStatusReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgSetGetPasswordTableStatusReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thirdinterface.PkgSetGetPasswordTableStatusReply)
  return target;
}

int PkgSetGetPasswordTableStatusReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1;
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  // optional string err = 2;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgSetGetPasswordTableStatusReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgSetGetPasswordTableStatusReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgSetGetPasswordTableStatusReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgSetGetPasswordTableStatusReply::MergeFrom(const PkgSetGetPasswordTableStatusReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgSetGetPasswordTableStatusReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgSetGetPasswordTableStatusReply::CopyFrom(const PkgSetGetPasswordTableStatusReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgSetGetPasswordTableStatusReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgSetGetPasswordTableStatusReply::Swap(PkgSetGetPasswordTableStatusReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgSetGetPasswordTableStatusReply::InternalSwap(PkgSetGetPasswordTableStatusReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgSetGetPasswordTableStatusReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgSetGetPasswordTableStatusReply_descriptor_;
  metadata.reflection = PkgSetGetPasswordTableStatusReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgSysInfoListGetReq::kKeystringFieldNumber;
#endif  // !_MSC_VER

PkgSysInfoListGetReq::PkgSysInfoListGetReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:thirdinterface.PkgSysInfoListGetReq)
}

void PkgSysInfoListGetReq::InitAsDefaultInstance() {
}

PkgSysInfoListGetReq::PkgSysInfoListGetReq(const PkgSysInfoListGetReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:thirdinterface.PkgSysInfoListGetReq)
}

void PkgSysInfoListGetReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgSysInfoListGetReq::~PkgSysInfoListGetReq() {
  // @@protoc_insertion_point(destructor:thirdinterface.PkgSysInfoListGetReq)
  SharedDtor();
}

void PkgSysInfoListGetReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PkgSysInfoListGetReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgSysInfoListGetReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgSysInfoListGetReq_descriptor_;
}

const PkgSysInfoListGetReq& PkgSysInfoListGetReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_thirdinterface_2eproto();
  return *default_instance_;
}

PkgSysInfoListGetReq* PkgSysInfoListGetReq::default_instance_ = NULL;

PkgSysInfoListGetReq* PkgSysInfoListGetReq::New(::google::protobuf::Arena* arena) const {
  PkgSysInfoListGetReq* n = new PkgSysInfoListGetReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgSysInfoListGetReq::Clear() {
  keystring_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgSysInfoListGetReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:thirdinterface.PkgSysInfoListGetReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string keystring = 1;
      case 1: {
        if (tag == 10) {
         parse_keystring:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_keystring()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->keystring(this->keystring_size() - 1).data(),
            this->keystring(this->keystring_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "thirdinterface.PkgSysInfoListGetReq.keystring");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_keystring;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:thirdinterface.PkgSysInfoListGetReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:thirdinterface.PkgSysInfoListGetReq)
  return false;
#undef DO_
}

void PkgSysInfoListGetReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:thirdinterface.PkgSysInfoListGetReq)
  // repeated string keystring = 1;
  for (int i = 0; i < this->keystring_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->keystring(i).data(), this->keystring(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "thirdinterface.PkgSysInfoListGetReq.keystring");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->keystring(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:thirdinterface.PkgSysInfoListGetReq)
}

::google::protobuf::uint8* PkgSysInfoListGetReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:thirdinterface.PkgSysInfoListGetReq)
  // repeated string keystring = 1;
  for (int i = 0; i < this->keystring_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keystring(i).data(), this->keystring(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgSysInfoListGetReq.keystring");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->keystring(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thirdinterface.PkgSysInfoListGetReq)
  return target;
}

int PkgSysInfoListGetReq::ByteSize() const {
  int total_size = 0;

  // repeated string keystring = 1;
  total_size += 1 * this->keystring_size();
  for (int i = 0; i < this->keystring_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->keystring(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgSysInfoListGetReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgSysInfoListGetReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgSysInfoListGetReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgSysInfoListGetReq::MergeFrom(const PkgSysInfoListGetReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  keystring_.MergeFrom(from.keystring_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgSysInfoListGetReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgSysInfoListGetReq::CopyFrom(const PkgSysInfoListGetReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgSysInfoListGetReq::IsInitialized() const {

  return true;
}

void PkgSysInfoListGetReq::Swap(PkgSysInfoListGetReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgSysInfoListGetReq::InternalSwap(PkgSysInfoListGetReq* other) {
  keystring_.UnsafeArenaSwap(&other->keystring_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgSysInfoListGetReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgSysInfoListGetReq_descriptor_;
  metadata.reflection = PkgSysInfoListGetReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgSysInfoValue::kKeystringFieldNumber;
const int PkgSysInfoValue::kValuestringFieldNumber;
#endif  // !_MSC_VER

PkgSysInfoValue::PkgSysInfoValue()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:thirdinterface.PkgSysInfoValue)
}

void PkgSysInfoValue::InitAsDefaultInstance() {
}

PkgSysInfoValue::PkgSysInfoValue(const PkgSysInfoValue& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:thirdinterface.PkgSysInfoValue)
}

void PkgSysInfoValue::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  keystring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valuestring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgSysInfoValue::~PkgSysInfoValue() {
  // @@protoc_insertion_point(destructor:thirdinterface.PkgSysInfoValue)
  SharedDtor();
}

void PkgSysInfoValue::SharedDtor() {
  keystring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valuestring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgSysInfoValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgSysInfoValue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgSysInfoValue_descriptor_;
}

const PkgSysInfoValue& PkgSysInfoValue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_thirdinterface_2eproto();
  return *default_instance_;
}

PkgSysInfoValue* PkgSysInfoValue::default_instance_ = NULL;

PkgSysInfoValue* PkgSysInfoValue::New(::google::protobuf::Arena* arena) const {
  PkgSysInfoValue* n = new PkgSysInfoValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgSysInfoValue::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_keystring()) {
      keystring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_valuestring()) {
      valuestring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgSysInfoValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:thirdinterface.PkgSysInfoValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string keystring = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_keystring()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->keystring().data(), this->keystring().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "thirdinterface.PkgSysInfoValue.keystring");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_valuestring;
        break;
      }

      // optional string valuestring = 2;
      case 2: {
        if (tag == 18) {
         parse_valuestring:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_valuestring()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->valuestring().data(), this->valuestring().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "thirdinterface.PkgSysInfoValue.valuestring");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:thirdinterface.PkgSysInfoValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:thirdinterface.PkgSysInfoValue)
  return false;
#undef DO_
}

void PkgSysInfoValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:thirdinterface.PkgSysInfoValue)
  // optional string keystring = 1;
  if (has_keystring()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keystring().data(), this->keystring().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgSysInfoValue.keystring");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->keystring(), output);
  }

  // optional string valuestring = 2;
  if (has_valuestring()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->valuestring().data(), this->valuestring().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgSysInfoValue.valuestring");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->valuestring(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:thirdinterface.PkgSysInfoValue)
}

::google::protobuf::uint8* PkgSysInfoValue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:thirdinterface.PkgSysInfoValue)
  // optional string keystring = 1;
  if (has_keystring()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keystring().data(), this->keystring().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgSysInfoValue.keystring");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->keystring(), target);
  }

  // optional string valuestring = 2;
  if (has_valuestring()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->valuestring().data(), this->valuestring().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgSysInfoValue.valuestring");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->valuestring(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thirdinterface.PkgSysInfoValue)
  return target;
}

int PkgSysInfoValue::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3) {
    // optional string keystring = 1;
    if (has_keystring()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->keystring());
    }

    // optional string valuestring = 2;
    if (has_valuestring()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->valuestring());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgSysInfoValue::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgSysInfoValue* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgSysInfoValue*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgSysInfoValue::MergeFrom(const PkgSysInfoValue& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_keystring()) {
      set_has_keystring();
      keystring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keystring_);
    }
    if (from.has_valuestring()) {
      set_has_valuestring();
      valuestring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.valuestring_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgSysInfoValue::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgSysInfoValue::CopyFrom(const PkgSysInfoValue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgSysInfoValue::IsInitialized() const {

  return true;
}

void PkgSysInfoValue::Swap(PkgSysInfoValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgSysInfoValue::InternalSwap(PkgSysInfoValue* other) {
  keystring_.Swap(&other->keystring_);
  valuestring_.Swap(&other->valuestring_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgSysInfoValue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgSysInfoValue_descriptor_;
  metadata.reflection = PkgSysInfoValue_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgSysInfoListGetReply::kIssuccessFieldNumber;
const int PkgSysInfoListGetReply::kErrFieldNumber;
const int PkgSysInfoListGetReply::kValuemapsFieldNumber;
#endif  // !_MSC_VER

PkgSysInfoListGetReply::PkgSysInfoListGetReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:thirdinterface.PkgSysInfoListGetReply)
}

void PkgSysInfoListGetReply::InitAsDefaultInstance() {
}

PkgSysInfoListGetReply::PkgSysInfoListGetReply(const PkgSysInfoListGetReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:thirdinterface.PkgSysInfoListGetReply)
}

void PkgSysInfoListGetReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = false;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgSysInfoListGetReply::~PkgSysInfoListGetReply() {
  // @@protoc_insertion_point(destructor:thirdinterface.PkgSysInfoListGetReply)
  SharedDtor();
}

void PkgSysInfoListGetReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgSysInfoListGetReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgSysInfoListGetReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgSysInfoListGetReply_descriptor_;
}

const PkgSysInfoListGetReply& PkgSysInfoListGetReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_thirdinterface_2eproto();
  return *default_instance_;
}

PkgSysInfoListGetReply* PkgSysInfoListGetReply::default_instance_ = NULL;

PkgSysInfoListGetReply* PkgSysInfoListGetReply::New(::google::protobuf::Arena* arena) const {
  PkgSysInfoListGetReply* n = new PkgSysInfoListGetReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgSysInfoListGetReply::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    issuccess_ = false;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  valuemaps_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgSysInfoListGetReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:thirdinterface.PkgSysInfoListGetReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "thirdinterface.PkgSysInfoListGetReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_valuemaps;
        break;
      }

      // repeated .thirdinterface.PkgSysInfoValue valuemaps = 10;
      case 10: {
        if (tag == 82) {
         parse_valuemaps:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_valuemaps()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_valuemaps;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:thirdinterface.PkgSysInfoListGetReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:thirdinterface.PkgSysInfoListGetReply)
  return false;
#undef DO_
}

void PkgSysInfoListGetReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:thirdinterface.PkgSysInfoListGetReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgSysInfoListGetReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  // repeated .thirdinterface.PkgSysInfoValue valuemaps = 10;
  for (unsigned int i = 0, n = this->valuemaps_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->valuemaps(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:thirdinterface.PkgSysInfoListGetReply)
}

::google::protobuf::uint8* PkgSysInfoListGetReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:thirdinterface.PkgSysInfoListGetReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgSysInfoListGetReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  // repeated .thirdinterface.PkgSysInfoValue valuemaps = 10;
  for (unsigned int i = 0, n = this->valuemaps_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->valuemaps(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thirdinterface.PkgSysInfoListGetReply)
  return target;
}

int PkgSysInfoListGetReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1;
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  // optional string err = 2;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  // repeated .thirdinterface.PkgSysInfoValue valuemaps = 10;
  total_size += 1 * this->valuemaps_size();
  for (int i = 0; i < this->valuemaps_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->valuemaps(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgSysInfoListGetReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgSysInfoListGetReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgSysInfoListGetReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgSysInfoListGetReply::MergeFrom(const PkgSysInfoListGetReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  valuemaps_.MergeFrom(from.valuemaps_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgSysInfoListGetReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgSysInfoListGetReply::CopyFrom(const PkgSysInfoListGetReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgSysInfoListGetReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgSysInfoListGetReply::Swap(PkgSysInfoListGetReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgSysInfoListGetReply::InternalSwap(PkgSysInfoListGetReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  valuemaps_.UnsafeArenaSwap(&other->valuemaps_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgSysInfoListGetReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgSysInfoListGetReply_descriptor_;
  metadata.reflection = PkgSysInfoListGetReply_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* PkgRegisterInvitionReq_EnGetType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgRegisterInvitionReq_EnGetType_descriptor_;
}
bool PkgRegisterInvitionReq_EnGetType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PkgRegisterInvitionReq_EnGetType PkgRegisterInvitionReq::GT_PHONE;
const PkgRegisterInvitionReq_EnGetType PkgRegisterInvitionReq::GT_EMAIL;
const PkgRegisterInvitionReq_EnGetType PkgRegisterInvitionReq::GT_ALL;
const PkgRegisterInvitionReq_EnGetType PkgRegisterInvitionReq::EnGetType_MIN;
const PkgRegisterInvitionReq_EnGetType PkgRegisterInvitionReq::EnGetType_MAX;
const int PkgRegisterInvitionReq::EnGetType_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* PkgRegisterInvitionReq_EnStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgRegisterInvitionReq_EnStatus_descriptor_;
}
bool PkgRegisterInvitionReq_EnStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PkgRegisterInvitionReq_EnStatus PkgRegisterInvitionReq::ES_NEW;
const PkgRegisterInvitionReq_EnStatus PkgRegisterInvitionReq::ES_SENDING;
const PkgRegisterInvitionReq_EnStatus PkgRegisterInvitionReq::ES_SENDOK;
const PkgRegisterInvitionReq_EnStatus PkgRegisterInvitionReq::ES_SENDERROR;
const PkgRegisterInvitionReq_EnStatus PkgRegisterInvitionReq::ES_INVALID;
const PkgRegisterInvitionReq_EnStatus PkgRegisterInvitionReq::EnStatus_MIN;
const PkgRegisterInvitionReq_EnStatus PkgRegisterInvitionReq::EnStatus_MAX;
const int PkgRegisterInvitionReq::EnStatus_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* PkgRegisterInvitionReq_EnGetCondition_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgRegisterInvitionReq_EnGetCondition_descriptor_;
}
bool PkgRegisterInvitionReq_EnGetCondition_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PkgRegisterInvitionReq_EnGetCondition PkgRegisterInvitionReq::EGC_TIMELESS;
const PkgRegisterInvitionReq_EnGetCondition PkgRegisterInvitionReq::EGC_TIMEGREATER;
const PkgRegisterInvitionReq_EnGetCondition PkgRegisterInvitionReq::EnGetCondition_MIN;
const PkgRegisterInvitionReq_EnGetCondition PkgRegisterInvitionReq::EnGetCondition_MAX;
const int PkgRegisterInvitionReq::EnGetCondition_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int PkgRegisterInvitionReq::kCreatetimeFieldNumber;
const int PkgRegisterInvitionReq::kStatusFieldNumber;
const int PkgRegisterInvitionReq::kGettypeFieldNumber;
const int PkgRegisterInvitionReq::kStartidFieldNumber;
const int PkgRegisterInvitionReq::kGetconditionFieldNumber;
#endif  // !_MSC_VER

PkgRegisterInvitionReq::PkgRegisterInvitionReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:thirdinterface.PkgRegisterInvitionReq)
}

void PkgRegisterInvitionReq::InitAsDefaultInstance() {
}

PkgRegisterInvitionReq::PkgRegisterInvitionReq(const PkgRegisterInvitionReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:thirdinterface.PkgRegisterInvitionReq)
}

void PkgRegisterInvitionReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  createtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  gettype_ = 0;
  startid_ = 0;
  getcondition_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgRegisterInvitionReq::~PkgRegisterInvitionReq() {
  // @@protoc_insertion_point(destructor:thirdinterface.PkgRegisterInvitionReq)
  SharedDtor();
}

void PkgRegisterInvitionReq::SharedDtor() {
  createtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgRegisterInvitionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgRegisterInvitionReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgRegisterInvitionReq_descriptor_;
}

const PkgRegisterInvitionReq& PkgRegisterInvitionReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_thirdinterface_2eproto();
  return *default_instance_;
}

PkgRegisterInvitionReq* PkgRegisterInvitionReq::default_instance_ = NULL;

PkgRegisterInvitionReq* PkgRegisterInvitionReq::New(::google::protobuf::Arena* arena) const {
  PkgRegisterInvitionReq* n = new PkgRegisterInvitionReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgRegisterInvitionReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgRegisterInvitionReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(status_, startid_);
    if (has_createtime()) {
      createtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    getcondition_ = 1;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgRegisterInvitionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:thirdinterface.PkgRegisterInvitionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string createtime = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_createtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->createtime().data(), this->createtime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "thirdinterface.PkgRegisterInvitionReq.createtime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }

      // optional .thirdinterface.PkgRegisterInvitionReq.EnStatus status = 2 [default = ES_NEW];
      case 2: {
        if (tag == 16) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::thirdinterface::PkgRegisterInvitionReq_EnStatus_IsValid(value)) {
            set_status(static_cast< ::thirdinterface::PkgRegisterInvitionReq_EnStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_gettype;
        break;
      }

      // optional .thirdinterface.PkgRegisterInvitionReq.EnGetType gettype = 3 [default = GT_PHONE];
      case 3: {
        if (tag == 24) {
         parse_gettype:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::thirdinterface::PkgRegisterInvitionReq_EnGetType_IsValid(value)) {
            set_gettype(static_cast< ::thirdinterface::PkgRegisterInvitionReq_EnGetType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_startid;
        break;
      }

      // optional int32 startid = 4 [default = 0];
      case 4: {
        if (tag == 32) {
         parse_startid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &startid_)));
          set_has_startid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_getcondition;
        break;
      }

      // optional .thirdinterface.PkgRegisterInvitionReq.EnGetCondition getcondition = 5;
      case 5: {
        if (tag == 40) {
         parse_getcondition:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::thirdinterface::PkgRegisterInvitionReq_EnGetCondition_IsValid(value)) {
            set_getcondition(static_cast< ::thirdinterface::PkgRegisterInvitionReq_EnGetCondition >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:thirdinterface.PkgRegisterInvitionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:thirdinterface.PkgRegisterInvitionReq)
  return false;
#undef DO_
}

void PkgRegisterInvitionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:thirdinterface.PkgRegisterInvitionReq)
  // optional string createtime = 1;
  if (has_createtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createtime().data(), this->createtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgRegisterInvitionReq.createtime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->createtime(), output);
  }

  // optional .thirdinterface.PkgRegisterInvitionReq.EnStatus status = 2 [default = ES_NEW];
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  // optional .thirdinterface.PkgRegisterInvitionReq.EnGetType gettype = 3 [default = GT_PHONE];
  if (has_gettype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->gettype(), output);
  }

  // optional int32 startid = 4 [default = 0];
  if (has_startid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->startid(), output);
  }

  // optional .thirdinterface.PkgRegisterInvitionReq.EnGetCondition getcondition = 5;
  if (has_getcondition()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->getcondition(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:thirdinterface.PkgRegisterInvitionReq)
}

::google::protobuf::uint8* PkgRegisterInvitionReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:thirdinterface.PkgRegisterInvitionReq)
  // optional string createtime = 1;
  if (has_createtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createtime().data(), this->createtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgRegisterInvitionReq.createtime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->createtime(), target);
  }

  // optional .thirdinterface.PkgRegisterInvitionReq.EnStatus status = 2 [default = ES_NEW];
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  // optional .thirdinterface.PkgRegisterInvitionReq.EnGetType gettype = 3 [default = GT_PHONE];
  if (has_gettype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->gettype(), target);
  }

  // optional int32 startid = 4 [default = 0];
  if (has_startid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->startid(), target);
  }

  // optional .thirdinterface.PkgRegisterInvitionReq.EnGetCondition getcondition = 5;
  if (has_getcondition()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->getcondition(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thirdinterface.PkgRegisterInvitionReq)
  return target;
}

int PkgRegisterInvitionReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31) {
    // optional string createtime = 1;
    if (has_createtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->createtime());
    }

    // optional .thirdinterface.PkgRegisterInvitionReq.EnStatus status = 2 [default = ES_NEW];
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional .thirdinterface.PkgRegisterInvitionReq.EnGetType gettype = 3 [default = GT_PHONE];
    if (has_gettype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->gettype());
    }

    // optional int32 startid = 4 [default = 0];
    if (has_startid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->startid());
    }

    // optional .thirdinterface.PkgRegisterInvitionReq.EnGetCondition getcondition = 5;
    if (has_getcondition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->getcondition());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgRegisterInvitionReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgRegisterInvitionReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgRegisterInvitionReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgRegisterInvitionReq::MergeFrom(const PkgRegisterInvitionReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_createtime()) {
      set_has_createtime();
      createtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.createtime_);
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_gettype()) {
      set_gettype(from.gettype());
    }
    if (from.has_startid()) {
      set_startid(from.startid());
    }
    if (from.has_getcondition()) {
      set_getcondition(from.getcondition());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgRegisterInvitionReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgRegisterInvitionReq::CopyFrom(const PkgRegisterInvitionReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgRegisterInvitionReq::IsInitialized() const {

  return true;
}

void PkgRegisterInvitionReq::Swap(PkgRegisterInvitionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgRegisterInvitionReq::InternalSwap(PkgRegisterInvitionReq* other) {
  createtime_.Swap(&other->createtime_);
  std::swap(status_, other->status_);
  std::swap(gettype_, other->gettype_);
  std::swap(startid_, other->startid_);
  std::swap(getcondition_, other->getcondition_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgRegisterInvitionReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgRegisterInvitionReq_descriptor_;
  metadata.reflection = PkgRegisterInvitionReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgRegisterInvition::kIdFieldNumber;
const int PkgRegisterInvition::kCompanyidFieldNumber;
const int PkgRegisterInvition::kUseridFieldNumber;
const int PkgRegisterInvition::kTypeFieldNumber;
const int PkgRegisterInvition::kInvitiontimeFieldNumber;
const int PkgRegisterInvition::kPhonenumberFieldNumber;
const int PkgRegisterInvition::kEmailaddressFieldNumber;
const int PkgRegisterInvition::kStatusFieldNumber;
const int PkgRegisterInvition::kInvitioncodeFieldNumber;
const int PkgRegisterInvition::kCompanynameFieldNumber;
const int PkgRegisterInvition::kSendrealnameFieldNumber;
const int PkgRegisterInvition::kTorealnameFieldNumber;
#endif  // !_MSC_VER

PkgRegisterInvition::PkgRegisterInvition()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:thirdinterface.PkgRegisterInvition)
}

void PkgRegisterInvition::InitAsDefaultInstance() {
}

PkgRegisterInvition::PkgRegisterInvition(const PkgRegisterInvition& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:thirdinterface.PkgRegisterInvition)
}

void PkgRegisterInvition::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  companyid_ = 0;
  userid_ = 0;
  type_ = 0;
  invitiontime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emailaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  invitioncode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  companyname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendrealname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  torealname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgRegisterInvition::~PkgRegisterInvition() {
  // @@protoc_insertion_point(destructor:thirdinterface.PkgRegisterInvition)
  SharedDtor();
}

void PkgRegisterInvition::SharedDtor() {
  invitiontime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emailaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invitioncode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  companyname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendrealname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  torealname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgRegisterInvition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgRegisterInvition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgRegisterInvition_descriptor_;
}

const PkgRegisterInvition& PkgRegisterInvition::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_thirdinterface_2eproto();
  return *default_instance_;
}

PkgRegisterInvition* PkgRegisterInvition::default_instance_ = NULL;

PkgRegisterInvition* PkgRegisterInvition::New(::google::protobuf::Arena* arena) const {
  PkgRegisterInvition* n = new PkgRegisterInvition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgRegisterInvition::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgRegisterInvition*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(id_, type_);
    if (has_invitiontime()) {
      invitiontime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_phonenumber()) {
      phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_emailaddress()) {
      emailaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    status_ = 0;
  }
  if (_has_bits_[8 / 32] & 3840) {
    if (has_invitioncode()) {
      invitioncode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_companyname()) {
      companyname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_sendrealname()) {
      sendrealname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_torealname()) {
      torealname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgRegisterInvition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:thirdinterface.PkgRegisterInvition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_companyid;
        break;
      }

      // optional int32 companyid = 2;
      case 2: {
        if (tag == 16) {
         parse_companyid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &companyid_)));
          set_has_companyid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_userid;
        break;
      }

      // optional int32 userid = 3;
      case 3: {
        if (tag == 24) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
          set_has_userid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_type;
        break;
      }

      // optional int32 type = 4;
      case 4: {
        if (tag == 32) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_invitiontime;
        break;
      }

      // optional string invitiontime = 5;
      case 5: {
        if (tag == 42) {
         parse_invitiontime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_invitiontime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->invitiontime().data(), this->invitiontime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "thirdinterface.PkgRegisterInvition.invitiontime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_phonenumber;
        break;
      }

      // optional string phonenumber = 6;
      case 6: {
        if (tag == 50) {
         parse_phonenumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonenumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phonenumber().data(), this->phonenumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "thirdinterface.PkgRegisterInvition.phonenumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_emailaddress;
        break;
      }

      // optional string emailaddress = 7;
      case 7: {
        if (tag == 58) {
         parse_emailaddress:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_emailaddress()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->emailaddress().data(), this->emailaddress().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "thirdinterface.PkgRegisterInvition.emailaddress");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_status;
        break;
      }

      // optional int32 status = 8;
      case 8: {
        if (tag == 64) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_invitioncode;
        break;
      }

      // optional string invitioncode = 9;
      case 9: {
        if (tag == 74) {
         parse_invitioncode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_invitioncode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->invitioncode().data(), this->invitioncode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "thirdinterface.PkgRegisterInvition.invitioncode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_companyname;
        break;
      }

      // optional string companyname = 10;
      case 10: {
        if (tag == 82) {
         parse_companyname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_companyname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->companyname().data(), this->companyname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "thirdinterface.PkgRegisterInvition.companyname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_sendrealname;
        break;
      }

      // optional string sendrealname = 11;
      case 11: {
        if (tag == 90) {
         parse_sendrealname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sendrealname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sendrealname().data(), this->sendrealname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "thirdinterface.PkgRegisterInvition.sendrealname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_torealname;
        break;
      }

      // optional string torealname = 12;
      case 12: {
        if (tag == 98) {
         parse_torealname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_torealname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->torealname().data(), this->torealname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "thirdinterface.PkgRegisterInvition.torealname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:thirdinterface.PkgRegisterInvition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:thirdinterface.PkgRegisterInvition)
  return false;
#undef DO_
}

void PkgRegisterInvition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:thirdinterface.PkgRegisterInvition)
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 companyid = 2;
  if (has_companyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->companyid(), output);
  }

  // optional int32 userid = 3;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->userid(), output);
  }

  // optional int32 type = 4;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->type(), output);
  }

  // optional string invitiontime = 5;
  if (has_invitiontime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->invitiontime().data(), this->invitiontime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgRegisterInvition.invitiontime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->invitiontime(), output);
  }

  // optional string phonenumber = 6;
  if (has_phonenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgRegisterInvition.phonenumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->phonenumber(), output);
  }

  // optional string emailaddress = 7;
  if (has_emailaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emailaddress().data(), this->emailaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgRegisterInvition.emailaddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->emailaddress(), output);
  }

  // optional int32 status = 8;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->status(), output);
  }

  // optional string invitioncode = 9;
  if (has_invitioncode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->invitioncode().data(), this->invitioncode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgRegisterInvition.invitioncode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->invitioncode(), output);
  }

  // optional string companyname = 10;
  if (has_companyname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->companyname().data(), this->companyname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgRegisterInvition.companyname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->companyname(), output);
  }

  // optional string sendrealname = 11;
  if (has_sendrealname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sendrealname().data(), this->sendrealname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgRegisterInvition.sendrealname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->sendrealname(), output);
  }

  // optional string torealname = 12;
  if (has_torealname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->torealname().data(), this->torealname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgRegisterInvition.torealname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->torealname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:thirdinterface.PkgRegisterInvition)
}

::google::protobuf::uint8* PkgRegisterInvition::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:thirdinterface.PkgRegisterInvition)
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 companyid = 2;
  if (has_companyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->companyid(), target);
  }

  // optional int32 userid = 3;
  if (has_userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->userid(), target);
  }

  // optional int32 type = 4;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->type(), target);
  }

  // optional string invitiontime = 5;
  if (has_invitiontime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->invitiontime().data(), this->invitiontime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgRegisterInvition.invitiontime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->invitiontime(), target);
  }

  // optional string phonenumber = 6;
  if (has_phonenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgRegisterInvition.phonenumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->phonenumber(), target);
  }

  // optional string emailaddress = 7;
  if (has_emailaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emailaddress().data(), this->emailaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgRegisterInvition.emailaddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->emailaddress(), target);
  }

  // optional int32 status = 8;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->status(), target);
  }

  // optional string invitioncode = 9;
  if (has_invitioncode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->invitioncode().data(), this->invitioncode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgRegisterInvition.invitioncode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->invitioncode(), target);
  }

  // optional string companyname = 10;
  if (has_companyname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->companyname().data(), this->companyname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgRegisterInvition.companyname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->companyname(), target);
  }

  // optional string sendrealname = 11;
  if (has_sendrealname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sendrealname().data(), this->sendrealname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgRegisterInvition.sendrealname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->sendrealname(), target);
  }

  // optional string torealname = 12;
  if (has_torealname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->torealname().data(), this->torealname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgRegisterInvition.torealname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->torealname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thirdinterface.PkgRegisterInvition)
  return target;
}

int PkgRegisterInvition::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 companyid = 2;
    if (has_companyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->companyid());
    }

    // optional int32 userid = 3;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional int32 type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional string invitiontime = 5;
    if (has_invitiontime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->invitiontime());
    }

    // optional string phonenumber = 6;
    if (has_phonenumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phonenumber());
    }

    // optional string emailaddress = 7;
    if (has_emailaddress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->emailaddress());
    }

    // optional int32 status = 8;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }

  }
  if (_has_bits_[8 / 32] & 3840) {
    // optional string invitioncode = 9;
    if (has_invitioncode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->invitioncode());
    }

    // optional string companyname = 10;
    if (has_companyname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->companyname());
    }

    // optional string sendrealname = 11;
    if (has_sendrealname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sendrealname());
    }

    // optional string torealname = 12;
    if (has_torealname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->torealname());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgRegisterInvition::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgRegisterInvition* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgRegisterInvition*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgRegisterInvition::MergeFrom(const PkgRegisterInvition& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_companyid()) {
      set_companyid(from.companyid());
    }
    if (from.has_userid()) {
      set_userid(from.userid());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_invitiontime()) {
      set_has_invitiontime();
      invitiontime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.invitiontime_);
    }
    if (from.has_phonenumber()) {
      set_has_phonenumber();
      phonenumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenumber_);
    }
    if (from.has_emailaddress()) {
      set_has_emailaddress();
      emailaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.emailaddress_);
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_invitioncode()) {
      set_has_invitioncode();
      invitioncode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.invitioncode_);
    }
    if (from.has_companyname()) {
      set_has_companyname();
      companyname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.companyname_);
    }
    if (from.has_sendrealname()) {
      set_has_sendrealname();
      sendrealname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sendrealname_);
    }
    if (from.has_torealname()) {
      set_has_torealname();
      torealname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.torealname_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgRegisterInvition::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgRegisterInvition::CopyFrom(const PkgRegisterInvition& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgRegisterInvition::IsInitialized() const {

  return true;
}

void PkgRegisterInvition::Swap(PkgRegisterInvition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgRegisterInvition::InternalSwap(PkgRegisterInvition* other) {
  std::swap(id_, other->id_);
  std::swap(companyid_, other->companyid_);
  std::swap(userid_, other->userid_);
  std::swap(type_, other->type_);
  invitiontime_.Swap(&other->invitiontime_);
  phonenumber_.Swap(&other->phonenumber_);
  emailaddress_.Swap(&other->emailaddress_);
  std::swap(status_, other->status_);
  invitioncode_.Swap(&other->invitioncode_);
  companyname_.Swap(&other->companyname_);
  sendrealname_.Swap(&other->sendrealname_);
  torealname_.Swap(&other->torealname_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgRegisterInvition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgRegisterInvition_descriptor_;
  metadata.reflection = PkgRegisterInvition_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgRegisterInvitionReply::kIssuccessFieldNumber;
const int PkgRegisterInvitionReply::kErrFieldNumber;
const int PkgRegisterInvitionReply::kInfolistFieldNumber;
#endif  // !_MSC_VER

PkgRegisterInvitionReply::PkgRegisterInvitionReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:thirdinterface.PkgRegisterInvitionReply)
}

void PkgRegisterInvitionReply::InitAsDefaultInstance() {
}

PkgRegisterInvitionReply::PkgRegisterInvitionReply(const PkgRegisterInvitionReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:thirdinterface.PkgRegisterInvitionReply)
}

void PkgRegisterInvitionReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = false;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgRegisterInvitionReply::~PkgRegisterInvitionReply() {
  // @@protoc_insertion_point(destructor:thirdinterface.PkgRegisterInvitionReply)
  SharedDtor();
}

void PkgRegisterInvitionReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgRegisterInvitionReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgRegisterInvitionReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgRegisterInvitionReply_descriptor_;
}

const PkgRegisterInvitionReply& PkgRegisterInvitionReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_thirdinterface_2eproto();
  return *default_instance_;
}

PkgRegisterInvitionReply* PkgRegisterInvitionReply::default_instance_ = NULL;

PkgRegisterInvitionReply* PkgRegisterInvitionReply::New(::google::protobuf::Arena* arena) const {
  PkgRegisterInvitionReply* n = new PkgRegisterInvitionReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgRegisterInvitionReply::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    issuccess_ = false;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  infolist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgRegisterInvitionReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:thirdinterface.PkgRegisterInvitionReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "thirdinterface.PkgRegisterInvitionReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_infolist;
        break;
      }

      // repeated .thirdinterface.PkgRegisterInvition infolist = 3;
      case 3: {
        if (tag == 26) {
         parse_infolist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_infolist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_infolist;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:thirdinterface.PkgRegisterInvitionReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:thirdinterface.PkgRegisterInvitionReply)
  return false;
#undef DO_
}

void PkgRegisterInvitionReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:thirdinterface.PkgRegisterInvitionReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgRegisterInvitionReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  // repeated .thirdinterface.PkgRegisterInvition infolist = 3;
  for (unsigned int i = 0, n = this->infolist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->infolist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:thirdinterface.PkgRegisterInvitionReply)
}

::google::protobuf::uint8* PkgRegisterInvitionReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:thirdinterface.PkgRegisterInvitionReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgRegisterInvitionReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  // repeated .thirdinterface.PkgRegisterInvition infolist = 3;
  for (unsigned int i = 0, n = this->infolist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->infolist(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thirdinterface.PkgRegisterInvitionReply)
  return target;
}

int PkgRegisterInvitionReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1;
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  // optional string err = 2;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  // repeated .thirdinterface.PkgRegisterInvition infolist = 3;
  total_size += 1 * this->infolist_size();
  for (int i = 0; i < this->infolist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->infolist(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgRegisterInvitionReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgRegisterInvitionReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgRegisterInvitionReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgRegisterInvitionReply::MergeFrom(const PkgRegisterInvitionReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  infolist_.MergeFrom(from.infolist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgRegisterInvitionReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgRegisterInvitionReply::CopyFrom(const PkgRegisterInvitionReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgRegisterInvitionReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgRegisterInvitionReply::Swap(PkgRegisterInvitionReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgRegisterInvitionReply::InternalSwap(PkgRegisterInvitionReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  infolist_.UnsafeArenaSwap(&other->infolist_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgRegisterInvitionReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgRegisterInvitionReply_descriptor_;
  metadata.reflection = PkgRegisterInvitionReply_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* PkgRegisterInvitionStatus_EnStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgRegisterInvitionStatus_EnStatus_descriptor_;
}
bool PkgRegisterInvitionStatus_EnStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PkgRegisterInvitionStatus_EnStatus PkgRegisterInvitionStatus::ES_NEW;
const PkgRegisterInvitionStatus_EnStatus PkgRegisterInvitionStatus::ES_SENDING;
const PkgRegisterInvitionStatus_EnStatus PkgRegisterInvitionStatus::ES_SENDOK;
const PkgRegisterInvitionStatus_EnStatus PkgRegisterInvitionStatus::ES_SENDERROR;
const PkgRegisterInvitionStatus_EnStatus PkgRegisterInvitionStatus::ES_INVALID;
const PkgRegisterInvitionStatus_EnStatus PkgRegisterInvitionStatus::EnStatus_MIN;
const PkgRegisterInvitionStatus_EnStatus PkgRegisterInvitionStatus::EnStatus_MAX;
const int PkgRegisterInvitionStatus::EnStatus_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int PkgRegisterInvitionStatus::kIdFieldNumber;
const int PkgRegisterInvitionStatus::kStatusFieldNumber;
#endif  // !_MSC_VER

PkgRegisterInvitionStatus::PkgRegisterInvitionStatus()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:thirdinterface.PkgRegisterInvitionStatus)
}

void PkgRegisterInvitionStatus::InitAsDefaultInstance() {
}

PkgRegisterInvitionStatus::PkgRegisterInvitionStatus(const PkgRegisterInvitionStatus& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:thirdinterface.PkgRegisterInvitionStatus)
}

void PkgRegisterInvitionStatus::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgRegisterInvitionStatus::~PkgRegisterInvitionStatus() {
  // @@protoc_insertion_point(destructor:thirdinterface.PkgRegisterInvitionStatus)
  SharedDtor();
}

void PkgRegisterInvitionStatus::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PkgRegisterInvitionStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgRegisterInvitionStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgRegisterInvitionStatus_descriptor_;
}

const PkgRegisterInvitionStatus& PkgRegisterInvitionStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_thirdinterface_2eproto();
  return *default_instance_;
}

PkgRegisterInvitionStatus* PkgRegisterInvitionStatus::default_instance_ = NULL;

PkgRegisterInvitionStatus* PkgRegisterInvitionStatus::New(::google::protobuf::Arena* arena) const {
  PkgRegisterInvitionStatus* n = new PkgRegisterInvitionStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgRegisterInvitionStatus::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgRegisterInvitionStatus*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, status_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgRegisterInvitionStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:thirdinterface.PkgRegisterInvitionStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }

      // optional .thirdinterface.PkgRegisterInvitionStatus.EnStatus status = 2;
      case 2: {
        if (tag == 16) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::thirdinterface::PkgRegisterInvitionStatus_EnStatus_IsValid(value)) {
            set_status(static_cast< ::thirdinterface::PkgRegisterInvitionStatus_EnStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:thirdinterface.PkgRegisterInvitionStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:thirdinterface.PkgRegisterInvitionStatus)
  return false;
#undef DO_
}

void PkgRegisterInvitionStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:thirdinterface.PkgRegisterInvitionStatus)
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional .thirdinterface.PkgRegisterInvitionStatus.EnStatus status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:thirdinterface.PkgRegisterInvitionStatus)
}

::google::protobuf::uint8* PkgRegisterInvitionStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:thirdinterface.PkgRegisterInvitionStatus)
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional .thirdinterface.PkgRegisterInvitionStatus.EnStatus status = 2;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thirdinterface.PkgRegisterInvitionStatus)
  return target;
}

int PkgRegisterInvitionStatus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional .thirdinterface.PkgRegisterInvitionStatus.EnStatus status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgRegisterInvitionStatus::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgRegisterInvitionStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgRegisterInvitionStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgRegisterInvitionStatus::MergeFrom(const PkgRegisterInvitionStatus& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgRegisterInvitionStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgRegisterInvitionStatus::CopyFrom(const PkgRegisterInvitionStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgRegisterInvitionStatus::IsInitialized() const {

  return true;
}

void PkgRegisterInvitionStatus::Swap(PkgRegisterInvitionStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgRegisterInvitionStatus::InternalSwap(PkgRegisterInvitionStatus* other) {
  std::swap(id_, other->id_);
  std::swap(status_, other->status_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgRegisterInvitionStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgRegisterInvitionStatus_descriptor_;
  metadata.reflection = PkgRegisterInvitionStatus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgSetRegisterInvitionStatusReq::kStatuslistFieldNumber;
#endif  // !_MSC_VER

PkgSetRegisterInvitionStatusReq::PkgSetRegisterInvitionStatusReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:thirdinterface.PkgSetRegisterInvitionStatusReq)
}

void PkgSetRegisterInvitionStatusReq::InitAsDefaultInstance() {
}

PkgSetRegisterInvitionStatusReq::PkgSetRegisterInvitionStatusReq(const PkgSetRegisterInvitionStatusReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:thirdinterface.PkgSetRegisterInvitionStatusReq)
}

void PkgSetRegisterInvitionStatusReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgSetRegisterInvitionStatusReq::~PkgSetRegisterInvitionStatusReq() {
  // @@protoc_insertion_point(destructor:thirdinterface.PkgSetRegisterInvitionStatusReq)
  SharedDtor();
}

void PkgSetRegisterInvitionStatusReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PkgSetRegisterInvitionStatusReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgSetRegisterInvitionStatusReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgSetRegisterInvitionStatusReq_descriptor_;
}

const PkgSetRegisterInvitionStatusReq& PkgSetRegisterInvitionStatusReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_thirdinterface_2eproto();
  return *default_instance_;
}

PkgSetRegisterInvitionStatusReq* PkgSetRegisterInvitionStatusReq::default_instance_ = NULL;

PkgSetRegisterInvitionStatusReq* PkgSetRegisterInvitionStatusReq::New(::google::protobuf::Arena* arena) const {
  PkgSetRegisterInvitionStatusReq* n = new PkgSetRegisterInvitionStatusReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgSetRegisterInvitionStatusReq::Clear() {
  statuslist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgSetRegisterInvitionStatusReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:thirdinterface.PkgSetRegisterInvitionStatusReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .thirdinterface.PkgRegisterInvitionStatus statuslist = 1;
      case 1: {
        if (tag == 10) {
         parse_statuslist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_statuslist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_statuslist;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:thirdinterface.PkgSetRegisterInvitionStatusReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:thirdinterface.PkgSetRegisterInvitionStatusReq)
  return false;
#undef DO_
}

void PkgSetRegisterInvitionStatusReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:thirdinterface.PkgSetRegisterInvitionStatusReq)
  // repeated .thirdinterface.PkgRegisterInvitionStatus statuslist = 1;
  for (unsigned int i = 0, n = this->statuslist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->statuslist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:thirdinterface.PkgSetRegisterInvitionStatusReq)
}

::google::protobuf::uint8* PkgSetRegisterInvitionStatusReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:thirdinterface.PkgSetRegisterInvitionStatusReq)
  // repeated .thirdinterface.PkgRegisterInvitionStatus statuslist = 1;
  for (unsigned int i = 0, n = this->statuslist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->statuslist(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thirdinterface.PkgSetRegisterInvitionStatusReq)
  return target;
}

int PkgSetRegisterInvitionStatusReq::ByteSize() const {
  int total_size = 0;

  // repeated .thirdinterface.PkgRegisterInvitionStatus statuslist = 1;
  total_size += 1 * this->statuslist_size();
  for (int i = 0; i < this->statuslist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->statuslist(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgSetRegisterInvitionStatusReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgSetRegisterInvitionStatusReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgSetRegisterInvitionStatusReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgSetRegisterInvitionStatusReq::MergeFrom(const PkgSetRegisterInvitionStatusReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  statuslist_.MergeFrom(from.statuslist_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgSetRegisterInvitionStatusReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgSetRegisterInvitionStatusReq::CopyFrom(const PkgSetRegisterInvitionStatusReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgSetRegisterInvitionStatusReq::IsInitialized() const {

  return true;
}

void PkgSetRegisterInvitionStatusReq::Swap(PkgSetRegisterInvitionStatusReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgSetRegisterInvitionStatusReq::InternalSwap(PkgSetRegisterInvitionStatusReq* other) {
  statuslist_.UnsafeArenaSwap(&other->statuslist_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgSetRegisterInvitionStatusReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgSetRegisterInvitionStatusReq_descriptor_;
  metadata.reflection = PkgSetRegisterInvitionStatusReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgSetRegisterInvitionStatusReply::kIssuccessFieldNumber;
const int PkgSetRegisterInvitionStatusReply::kErrFieldNumber;
#endif  // !_MSC_VER

PkgSetRegisterInvitionStatusReply::PkgSetRegisterInvitionStatusReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:thirdinterface.PkgSetRegisterInvitionStatusReply)
}

void PkgSetRegisterInvitionStatusReply::InitAsDefaultInstance() {
}

PkgSetRegisterInvitionStatusReply::PkgSetRegisterInvitionStatusReply(const PkgSetRegisterInvitionStatusReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:thirdinterface.PkgSetRegisterInvitionStatusReply)
}

void PkgSetRegisterInvitionStatusReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = false;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgSetRegisterInvitionStatusReply::~PkgSetRegisterInvitionStatusReply() {
  // @@protoc_insertion_point(destructor:thirdinterface.PkgSetRegisterInvitionStatusReply)
  SharedDtor();
}

void PkgSetRegisterInvitionStatusReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgSetRegisterInvitionStatusReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgSetRegisterInvitionStatusReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgSetRegisterInvitionStatusReply_descriptor_;
}

const PkgSetRegisterInvitionStatusReply& PkgSetRegisterInvitionStatusReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_thirdinterface_2eproto();
  return *default_instance_;
}

PkgSetRegisterInvitionStatusReply* PkgSetRegisterInvitionStatusReply::default_instance_ = NULL;

PkgSetRegisterInvitionStatusReply* PkgSetRegisterInvitionStatusReply::New(::google::protobuf::Arena* arena) const {
  PkgSetRegisterInvitionStatusReply* n = new PkgSetRegisterInvitionStatusReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgSetRegisterInvitionStatusReply::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    issuccess_ = false;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgSetRegisterInvitionStatusReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:thirdinterface.PkgSetRegisterInvitionStatusReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "thirdinterface.PkgSetRegisterInvitionStatusReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:thirdinterface.PkgSetRegisterInvitionStatusReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:thirdinterface.PkgSetRegisterInvitionStatusReply)
  return false;
#undef DO_
}

void PkgSetRegisterInvitionStatusReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:thirdinterface.PkgSetRegisterInvitionStatusReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgSetRegisterInvitionStatusReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:thirdinterface.PkgSetRegisterInvitionStatusReply)
}

::google::protobuf::uint8* PkgSetRegisterInvitionStatusReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:thirdinterface.PkgSetRegisterInvitionStatusReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "thirdinterface.PkgSetRegisterInvitionStatusReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thirdinterface.PkgSetRegisterInvitionStatusReply)
  return target;
}

int PkgSetRegisterInvitionStatusReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1;
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  // optional string err = 2;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgSetRegisterInvitionStatusReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgSetRegisterInvitionStatusReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgSetRegisterInvitionStatusReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgSetRegisterInvitionStatusReply::MergeFrom(const PkgSetRegisterInvitionStatusReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgSetRegisterInvitionStatusReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgSetRegisterInvitionStatusReply::CopyFrom(const PkgSetRegisterInvitionStatusReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgSetRegisterInvitionStatusReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgSetRegisterInvitionStatusReply::Swap(PkgSetRegisterInvitionStatusReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgSetRegisterInvitionStatusReply::InternalSwap(PkgSetRegisterInvitionStatusReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgSetRegisterInvitionStatusReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgSetRegisterInvitionStatusReply_descriptor_;
  metadata.reflection = PkgSetRegisterInvitionStatusReply_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace thirdinterface

// @@protoc_insertion_point(global_scope)
