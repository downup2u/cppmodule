// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: session.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "session.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace session {

namespace {

const ::google::protobuf::Descriptor* PkgSessionUser_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgSessionUser_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgRoleUser_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgRoleUser_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgUser_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUser_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EnAuthType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_session_2eproto() {
  protobuf_AddDesc_session_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "session.proto");
  GOOGLE_CHECK(file != NULL);
  PkgSessionUser_descriptor_ = file->message_type(0);
  static const int PkgSessionUser_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSessionUser, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSessionUser, apptype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSessionUser, appversion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSessionUser, applanguage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSessionUser, clientsn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSessionUser, serversn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSessionUser, hashedserversn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSessionUser, ostype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSessionUser, osversion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSessionUser, osrr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSessionUser, encryptkey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSessionUser, user_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSessionUser, loginsn_),
  };
  PkgSessionUser_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgSessionUser_descriptor_,
      PkgSessionUser::default_instance_,
      PkgSessionUser_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSessionUser, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgSessionUser),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSessionUser, _internal_metadata_),
      -1);
  PkgRoleUser_descriptor_ = file->message_type(1);
  static const int PkgRoleUser_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRoleUser, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRoleUser, rolename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRoleUser, roledesc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRoleUser, permission_),
  };
  PkgRoleUser_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgRoleUser_descriptor_,
      PkgRoleUser::default_instance_,
      PkgRoleUser_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRoleUser, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgRoleUser),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgRoleUser, _internal_metadata_),
      -1);
  PkgUser_descriptor_ = file->message_type(2);
  static const int PkgUser_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUser, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUser, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUser, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUser, realname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUser, phonenumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUser, emailaddress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUser, permission_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUser, companyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUser, companyname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUser, createtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUser, permissionroleid_),
  };
  PkgUser_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUser_descriptor_,
      PkgUser::default_instance_,
      PkgUser_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUser, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUser),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUser, _internal_metadata_),
      -1);
  EnAuthType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_session_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgSessionUser_descriptor_, &PkgSessionUser::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgRoleUser_descriptor_, &PkgRoleUser::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUser_descriptor_, &PkgUser::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_session_2eproto() {
  delete PkgSessionUser::default_instance_;
  delete PkgSessionUser_reflection_;
  delete PkgRoleUser::default_instance_;
  delete PkgRoleUser_reflection_;
  delete PkgUser::default_instance_;
  delete PkgUser_reflection_;
}

void protobuf_AddDesc_session_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rsession.proto\022\007session\"\216\002\n\016PkgSessionU"
    "ser\022\016\n\006userid\030\001 \001(\005\022\017\n\007apptype\030\002 \001(\t\022\022\n\n"
    "appversion\030\003 \001(\t\022\023\n\013applanguage\030\004 \001(\t\022\020\n"
    "\010clientsn\030\005 \001(\t\022\020\n\010serversn\030\006 \001(\t\022\026\n\016has"
    "hedserversn\030\007 \001(\t\022\016\n\006ostype\030\n \001(\t\022\021\n\tosv"
    "ersion\030\013 \001(\t\022\014\n\004osrr\030\014 \001(\t\022\022\n\nencryptkey"
    "\030d \001(\t\022\037\n\004user\030\310\001 \001(\0132\020.session.PkgUser\022"
    "\020\n\007loginsn\030\351\007 \001(\t\"Q\n\013PkgRoleUser\022\n\n\002id\030\001"
    " \001(\005\022\020\n\010rolename\030\002 \001(\t\022\020\n\010roledesc\030\003 \001(\t"
    "\022\022\n\npermission\030\004 \001(\005\"\347\001\n\007PkgUser\022\016\n\006user"
    "id\030\003 \001(\005\022\020\n\010password\030\004 \001(\t\022\020\n\010username\030\n"
    " \001(\t\022\020\n\010realname\030\013 \001(\t\022\023\n\013phonenumber\030\014 "
    "\001(\t\022\024\n\014emailaddress\030\r \001(\t\022\022\n\npermission\030"
    "\017 \001(\005\022\024\n\tcompanyid\030\020 \001(\005:\0010\022\023\n\013companyna"
    "me\030\021 \001(\t\022\022\n\ncreatetime\030\023 \001(\t\022\030\n\020permissi"
    "onroleid\030\024 \001(\005*6\n\nEnAuthType\022\023\n\017EA_REGIS"
    "TERAUTH\020\000\022\023\n\017EA_FINDPASSWORD\020\001", 670);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "session.proto", &protobuf_RegisterTypes);
  PkgSessionUser::default_instance_ = new PkgSessionUser();
  PkgRoleUser::default_instance_ = new PkgRoleUser();
  PkgUser::default_instance_ = new PkgUser();
  PkgSessionUser::default_instance_->InitAsDefaultInstance();
  PkgRoleUser::default_instance_->InitAsDefaultInstance();
  PkgUser::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_session_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_session_2eproto {
  StaticDescriptorInitializer_session_2eproto() {
    protobuf_AddDesc_session_2eproto();
  }
} static_descriptor_initializer_session_2eproto_;
const ::google::protobuf::EnumDescriptor* EnAuthType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnAuthType_descriptor_;
}
bool EnAuthType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int PkgSessionUser::kUseridFieldNumber;
const int PkgSessionUser::kApptypeFieldNumber;
const int PkgSessionUser::kAppversionFieldNumber;
const int PkgSessionUser::kApplanguageFieldNumber;
const int PkgSessionUser::kClientsnFieldNumber;
const int PkgSessionUser::kServersnFieldNumber;
const int PkgSessionUser::kHashedserversnFieldNumber;
const int PkgSessionUser::kOstypeFieldNumber;
const int PkgSessionUser::kOsversionFieldNumber;
const int PkgSessionUser::kOsrrFieldNumber;
const int PkgSessionUser::kEncryptkeyFieldNumber;
const int PkgSessionUser::kUserFieldNumber;
const int PkgSessionUser::kLoginsnFieldNumber;
#endif  // !_MSC_VER

PkgSessionUser::PkgSessionUser()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:session.PkgSessionUser)
}

void PkgSessionUser::InitAsDefaultInstance() {
  user_ = const_cast< ::session::PkgUser*>(&::session::PkgUser::default_instance());
}

PkgSessionUser::PkgSessionUser(const PkgSessionUser& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:session.PkgSessionUser)
}

void PkgSessionUser::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  userid_ = 0;
  apptype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  applanguage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientsn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serversn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashedserversn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ostype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  osversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  osrr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encryptkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_ = NULL;
  loginsn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgSessionUser::~PkgSessionUser() {
  // @@protoc_insertion_point(destructor:session.PkgSessionUser)
  SharedDtor();
}

void PkgSessionUser::SharedDtor() {
  apptype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  applanguage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientsn_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serversn_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashedserversn_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ostype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  osversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  osrr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encryptkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loginsn_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete user_;
  }
}

void PkgSessionUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgSessionUser::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgSessionUser_descriptor_;
}

const PkgSessionUser& PkgSessionUser::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_session_2eproto();
  return *default_instance_;
}

PkgSessionUser* PkgSessionUser::default_instance_ = NULL;

PkgSessionUser* PkgSessionUser::New(::google::protobuf::Arena* arena) const {
  PkgSessionUser* n = new PkgSessionUser;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgSessionUser::Clear() {
  if (_has_bits_[0 / 32] & 255) {
    userid_ = 0;
    if (has_apptype()) {
      apptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_appversion()) {
      appversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_applanguage()) {
      applanguage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_clientsn()) {
      clientsn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_serversn()) {
      serversn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_hashedserversn()) {
      hashedserversn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_ostype()) {
      ostype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 7936) {
    if (has_osversion()) {
      osversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_osrr()) {
      osrr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_encryptkey()) {
      encryptkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_user()) {
      if (user_ != NULL) user_->::session::PkgUser::Clear();
    }
    if (has_loginsn()) {
      loginsn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgSessionUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:session.PkgSessionUser)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
          set_has_userid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_apptype;
        break;
      }

      // optional string apptype = 2;
      case 2: {
        if (tag == 18) {
         parse_apptype:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apptype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->apptype().data(), this->apptype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "session.PkgSessionUser.apptype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_appversion;
        break;
      }

      // optional string appversion = 3;
      case 3: {
        if (tag == 26) {
         parse_appversion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appversion()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appversion().data(), this->appversion().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "session.PkgSessionUser.appversion");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_applanguage;
        break;
      }

      // optional string applanguage = 4;
      case 4: {
        if (tag == 34) {
         parse_applanguage:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_applanguage()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->applanguage().data(), this->applanguage().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "session.PkgSessionUser.applanguage");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_clientsn;
        break;
      }

      // optional string clientsn = 5;
      case 5: {
        if (tag == 42) {
         parse_clientsn:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientsn()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->clientsn().data(), this->clientsn().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "session.PkgSessionUser.clientsn");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_serversn;
        break;
      }

      // optional string serversn = 6;
      case 6: {
        if (tag == 50) {
         parse_serversn:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serversn()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->serversn().data(), this->serversn().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "session.PkgSessionUser.serversn");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_hashedserversn;
        break;
      }

      // optional string hashedserversn = 7;
      case 7: {
        if (tag == 58) {
         parse_hashedserversn:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hashedserversn()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hashedserversn().data(), this->hashedserversn().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "session.PkgSessionUser.hashedserversn");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_ostype;
        break;
      }

      // optional string ostype = 10;
      case 10: {
        if (tag == 82) {
         parse_ostype:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ostype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ostype().data(), this->ostype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "session.PkgSessionUser.ostype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_osversion;
        break;
      }

      // optional string osversion = 11;
      case 11: {
        if (tag == 90) {
         parse_osversion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_osversion()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->osversion().data(), this->osversion().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "session.PkgSessionUser.osversion");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_osrr;
        break;
      }

      // optional string osrr = 12;
      case 12: {
        if (tag == 98) {
         parse_osrr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_osrr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->osrr().data(), this->osrr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "session.PkgSessionUser.osrr");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(802)) goto parse_encryptkey;
        break;
      }

      // optional string encryptkey = 100;
      case 100: {
        if (tag == 802) {
         parse_encryptkey:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_encryptkey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->encryptkey().data(), this->encryptkey().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "session.PkgSessionUser.encryptkey");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1602)) goto parse_user;
        break;
      }

      // optional .session.PkgUser user = 200;
      case 200: {
        if (tag == 1602) {
         parse_user:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_user()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8010)) goto parse_loginsn;
        break;
      }

      // optional string loginsn = 1001;
      case 1001: {
        if (tag == 8010) {
         parse_loginsn:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_loginsn()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->loginsn().data(), this->loginsn().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "session.PkgSessionUser.loginsn");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:session.PkgSessionUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:session.PkgSessionUser)
  return false;
#undef DO_
}

void PkgSessionUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:session.PkgSessionUser)
  // optional int32 userid = 1;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // optional string apptype = 2;
  if (has_apptype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->apptype().data(), this->apptype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgSessionUser.apptype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->apptype(), output);
  }

  // optional string appversion = 3;
  if (has_appversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appversion().data(), this->appversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgSessionUser.appversion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->appversion(), output);
  }

  // optional string applanguage = 4;
  if (has_applanguage()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->applanguage().data(), this->applanguage().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgSessionUser.applanguage");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->applanguage(), output);
  }

  // optional string clientsn = 5;
  if (has_clientsn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clientsn().data(), this->clientsn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgSessionUser.clientsn");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->clientsn(), output);
  }

  // optional string serversn = 6;
  if (has_serversn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serversn().data(), this->serversn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgSessionUser.serversn");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->serversn(), output);
  }

  // optional string hashedserversn = 7;
  if (has_hashedserversn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hashedserversn().data(), this->hashedserversn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgSessionUser.hashedserversn");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->hashedserversn(), output);
  }

  // optional string ostype = 10;
  if (has_ostype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ostype().data(), this->ostype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgSessionUser.ostype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->ostype(), output);
  }

  // optional string osversion = 11;
  if (has_osversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->osversion().data(), this->osversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgSessionUser.osversion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->osversion(), output);
  }

  // optional string osrr = 12;
  if (has_osrr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->osrr().data(), this->osrr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgSessionUser.osrr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->osrr(), output);
  }

  // optional string encryptkey = 100;
  if (has_encryptkey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->encryptkey().data(), this->encryptkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgSessionUser.encryptkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      100, this->encryptkey(), output);
  }

  // optional .session.PkgUser user = 200;
  if (has_user()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      200, *this->user_, output);
  }

  // optional string loginsn = 1001;
  if (has_loginsn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->loginsn().data(), this->loginsn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgSessionUser.loginsn");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1001, this->loginsn(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:session.PkgSessionUser)
}

::google::protobuf::uint8* PkgSessionUser::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:session.PkgSessionUser)
  // optional int32 userid = 1;
  if (has_userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // optional string apptype = 2;
  if (has_apptype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->apptype().data(), this->apptype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgSessionUser.apptype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->apptype(), target);
  }

  // optional string appversion = 3;
  if (has_appversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appversion().data(), this->appversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgSessionUser.appversion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->appversion(), target);
  }

  // optional string applanguage = 4;
  if (has_applanguage()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->applanguage().data(), this->applanguage().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgSessionUser.applanguage");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->applanguage(), target);
  }

  // optional string clientsn = 5;
  if (has_clientsn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clientsn().data(), this->clientsn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgSessionUser.clientsn");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->clientsn(), target);
  }

  // optional string serversn = 6;
  if (has_serversn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serversn().data(), this->serversn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgSessionUser.serversn");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->serversn(), target);
  }

  // optional string hashedserversn = 7;
  if (has_hashedserversn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hashedserversn().data(), this->hashedserversn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgSessionUser.hashedserversn");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->hashedserversn(), target);
  }

  // optional string ostype = 10;
  if (has_ostype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ostype().data(), this->ostype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgSessionUser.ostype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->ostype(), target);
  }

  // optional string osversion = 11;
  if (has_osversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->osversion().data(), this->osversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgSessionUser.osversion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->osversion(), target);
  }

  // optional string osrr = 12;
  if (has_osrr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->osrr().data(), this->osrr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgSessionUser.osrr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->osrr(), target);
  }

  // optional string encryptkey = 100;
  if (has_encryptkey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->encryptkey().data(), this->encryptkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgSessionUser.encryptkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        100, this->encryptkey(), target);
  }

  // optional .session.PkgUser user = 200;
  if (has_user()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        200, *this->user_, target);
  }

  // optional string loginsn = 1001;
  if (has_loginsn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->loginsn().data(), this->loginsn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgSessionUser.loginsn");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1001, this->loginsn(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:session.PkgSessionUser)
  return target;
}

int PkgSessionUser::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255) {
    // optional int32 userid = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional string apptype = 2;
    if (has_apptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->apptype());
    }

    // optional string appversion = 3;
    if (has_appversion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appversion());
    }

    // optional string applanguage = 4;
    if (has_applanguage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->applanguage());
    }

    // optional string clientsn = 5;
    if (has_clientsn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->clientsn());
    }

    // optional string serversn = 6;
    if (has_serversn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->serversn());
    }

    // optional string hashedserversn = 7;
    if (has_hashedserversn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hashedserversn());
    }

    // optional string ostype = 10;
    if (has_ostype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ostype());
    }

  }
  if (_has_bits_[8 / 32] & 7936) {
    // optional string osversion = 11;
    if (has_osversion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->osversion());
    }

    // optional string osrr = 12;
    if (has_osrr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->osrr());
    }

    // optional string encryptkey = 100;
    if (has_encryptkey()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->encryptkey());
    }

    // optional .session.PkgUser user = 200;
    if (has_user()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->user_);
    }

    // optional string loginsn = 1001;
    if (has_loginsn()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->loginsn());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgSessionUser::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgSessionUser* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgSessionUser*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgSessionUser::MergeFrom(const PkgSessionUser& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_userid()) {
      set_userid(from.userid());
    }
    if (from.has_apptype()) {
      set_has_apptype();
      apptype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apptype_);
    }
    if (from.has_appversion()) {
      set_has_appversion();
      appversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appversion_);
    }
    if (from.has_applanguage()) {
      set_has_applanguage();
      applanguage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.applanguage_);
    }
    if (from.has_clientsn()) {
      set_has_clientsn();
      clientsn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientsn_);
    }
    if (from.has_serversn()) {
      set_has_serversn();
      serversn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serversn_);
    }
    if (from.has_hashedserversn()) {
      set_has_hashedserversn();
      hashedserversn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hashedserversn_);
    }
    if (from.has_ostype()) {
      set_has_ostype();
      ostype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ostype_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_osversion()) {
      set_has_osversion();
      osversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.osversion_);
    }
    if (from.has_osrr()) {
      set_has_osrr();
      osrr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.osrr_);
    }
    if (from.has_encryptkey()) {
      set_has_encryptkey();
      encryptkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encryptkey_);
    }
    if (from.has_user()) {
      mutable_user()->::session::PkgUser::MergeFrom(from.user());
    }
    if (from.has_loginsn()) {
      set_has_loginsn();
      loginsn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.loginsn_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgSessionUser::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgSessionUser::CopyFrom(const PkgSessionUser& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgSessionUser::IsInitialized() const {

  return true;
}

void PkgSessionUser::Swap(PkgSessionUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgSessionUser::InternalSwap(PkgSessionUser* other) {
  std::swap(userid_, other->userid_);
  apptype_.Swap(&other->apptype_);
  appversion_.Swap(&other->appversion_);
  applanguage_.Swap(&other->applanguage_);
  clientsn_.Swap(&other->clientsn_);
  serversn_.Swap(&other->serversn_);
  hashedserversn_.Swap(&other->hashedserversn_);
  ostype_.Swap(&other->ostype_);
  osversion_.Swap(&other->osversion_);
  osrr_.Swap(&other->osrr_);
  encryptkey_.Swap(&other->encryptkey_);
  std::swap(user_, other->user_);
  loginsn_.Swap(&other->loginsn_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgSessionUser::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgSessionUser_descriptor_;
  metadata.reflection = PkgSessionUser_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgRoleUser::kIdFieldNumber;
const int PkgRoleUser::kRolenameFieldNumber;
const int PkgRoleUser::kRoledescFieldNumber;
const int PkgRoleUser::kPermissionFieldNumber;
#endif  // !_MSC_VER

PkgRoleUser::PkgRoleUser()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:session.PkgRoleUser)
}

void PkgRoleUser::InitAsDefaultInstance() {
}

PkgRoleUser::PkgRoleUser(const PkgRoleUser& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:session.PkgRoleUser)
}

void PkgRoleUser::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  rolename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roledesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permission_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgRoleUser::~PkgRoleUser() {
  // @@protoc_insertion_point(destructor:session.PkgRoleUser)
  SharedDtor();
}

void PkgRoleUser::SharedDtor() {
  rolename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roledesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgRoleUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgRoleUser::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgRoleUser_descriptor_;
}

const PkgRoleUser& PkgRoleUser::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_session_2eproto();
  return *default_instance_;
}

PkgRoleUser* PkgRoleUser::default_instance_ = NULL;

PkgRoleUser* PkgRoleUser::New(::google::protobuf::Arena* arena) const {
  PkgRoleUser* n = new PkgRoleUser;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgRoleUser::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgRoleUser*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(id_, permission_);
    if (has_rolename()) {
      rolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_roledesc()) {
      roledesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgRoleUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:session.PkgRoleUser)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_rolename;
        break;
      }

      // optional string rolename = 2;
      case 2: {
        if (tag == 18) {
         parse_rolename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rolename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rolename().data(), this->rolename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "session.PkgRoleUser.rolename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_roledesc;
        break;
      }

      // optional string roledesc = 3;
      case 3: {
        if (tag == 26) {
         parse_roledesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roledesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->roledesc().data(), this->roledesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "session.PkgRoleUser.roledesc");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_permission;
        break;
      }

      // optional int32 permission = 4;
      case 4: {
        if (tag == 32) {
         parse_permission:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &permission_)));
          set_has_permission();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:session.PkgRoleUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:session.PkgRoleUser)
  return false;
#undef DO_
}

void PkgRoleUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:session.PkgRoleUser)
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string rolename = 2;
  if (has_rolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgRoleUser.rolename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rolename(), output);
  }

  // optional string roledesc = 3;
  if (has_roledesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roledesc().data(), this->roledesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgRoleUser.roledesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->roledesc(), output);
  }

  // optional int32 permission = 4;
  if (has_permission()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->permission(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:session.PkgRoleUser)
}

::google::protobuf::uint8* PkgRoleUser::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:session.PkgRoleUser)
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string rolename = 2;
  if (has_rolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgRoleUser.rolename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rolename(), target);
  }

  // optional string roledesc = 3;
  if (has_roledesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roledesc().data(), this->roledesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgRoleUser.roledesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->roledesc(), target);
  }

  // optional int32 permission = 4;
  if (has_permission()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->permission(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:session.PkgRoleUser)
  return target;
}

int PkgRoleUser::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional string rolename = 2;
    if (has_rolename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rolename());
    }

    // optional string roledesc = 3;
    if (has_roledesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->roledesc());
    }

    // optional int32 permission = 4;
    if (has_permission()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->permission());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgRoleUser::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgRoleUser* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgRoleUser*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgRoleUser::MergeFrom(const PkgRoleUser& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_rolename()) {
      set_has_rolename();
      rolename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rolename_);
    }
    if (from.has_roledesc()) {
      set_has_roledesc();
      roledesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roledesc_);
    }
    if (from.has_permission()) {
      set_permission(from.permission());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgRoleUser::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgRoleUser::CopyFrom(const PkgRoleUser& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgRoleUser::IsInitialized() const {

  return true;
}

void PkgRoleUser::Swap(PkgRoleUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgRoleUser::InternalSwap(PkgRoleUser* other) {
  std::swap(id_, other->id_);
  rolename_.Swap(&other->rolename_);
  roledesc_.Swap(&other->roledesc_);
  std::swap(permission_, other->permission_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgRoleUser::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgRoleUser_descriptor_;
  metadata.reflection = PkgRoleUser_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgUser::kUseridFieldNumber;
const int PkgUser::kPasswordFieldNumber;
const int PkgUser::kUsernameFieldNumber;
const int PkgUser::kRealnameFieldNumber;
const int PkgUser::kPhonenumberFieldNumber;
const int PkgUser::kEmailaddressFieldNumber;
const int PkgUser::kPermissionFieldNumber;
const int PkgUser::kCompanyidFieldNumber;
const int PkgUser::kCompanynameFieldNumber;
const int PkgUser::kCreatetimeFieldNumber;
const int PkgUser::kPermissionroleidFieldNumber;
#endif  // !_MSC_VER

PkgUser::PkgUser()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:session.PkgUser)
}

void PkgUser::InitAsDefaultInstance() {
}

PkgUser::PkgUser(const PkgUser& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:session.PkgUser)
}

void PkgUser::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  userid_ = 0;
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  realname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emailaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permission_ = 0;
  companyid_ = 0;
  companyname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permissionroleid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUser::~PkgUser() {
  // @@protoc_insertion_point(destructor:session.PkgUser)
  SharedDtor();
}

void PkgUser::SharedDtor() {
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  realname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emailaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  companyname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUser::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUser_descriptor_;
}

const PkgUser& PkgUser::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_session_2eproto();
  return *default_instance_;
}

PkgUser* PkgUser::default_instance_ = NULL;

PkgUser* PkgUser::New(::google::protobuf::Arena* arena) const {
  PkgUser* n = new PkgUser;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUser::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgUser*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(userid_, permission_);
    if (has_password()) {
      password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_username()) {
      username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_realname()) {
      realname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_phonenumber()) {
      phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_emailaddress()) {
      emailaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    companyid_ = 0;
  }
  if (_has_bits_[8 / 32] & 1792) {
    if (has_companyname()) {
      companyname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_createtime()) {
      createtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    permissionroleid_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:session.PkgUser)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 3;
      case 3: {
        if (tag == 24) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
          set_has_userid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_password;
        break;
      }

      // optional string password = 4;
      case 4: {
        if (tag == 34) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "session.PkgUser.password");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_username;
        break;
      }

      // optional string username = 10;
      case 10: {
        if (tag == 82) {
         parse_username:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "session.PkgUser.username");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_realname;
        break;
      }

      // optional string realname = 11;
      case 11: {
        if (tag == 90) {
         parse_realname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_realname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->realname().data(), this->realname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "session.PkgUser.realname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_phonenumber;
        break;
      }

      // optional string phonenumber = 12;
      case 12: {
        if (tag == 98) {
         parse_phonenumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonenumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phonenumber().data(), this->phonenumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "session.PkgUser.phonenumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_emailaddress;
        break;
      }

      // optional string emailaddress = 13;
      case 13: {
        if (tag == 106) {
         parse_emailaddress:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_emailaddress()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->emailaddress().data(), this->emailaddress().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "session.PkgUser.emailaddress");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_permission;
        break;
      }

      // optional int32 permission = 15;
      case 15: {
        if (tag == 120) {
         parse_permission:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &permission_)));
          set_has_permission();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_companyid;
        break;
      }

      // optional int32 companyid = 16 [default = 0];
      case 16: {
        if (tag == 128) {
         parse_companyid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &companyid_)));
          set_has_companyid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_companyname;
        break;
      }

      // optional string companyname = 17;
      case 17: {
        if (tag == 138) {
         parse_companyname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_companyname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->companyname().data(), this->companyname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "session.PkgUser.companyname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_createtime;
        break;
      }

      // optional string createtime = 19;
      case 19: {
        if (tag == 154) {
         parse_createtime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_createtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->createtime().data(), this->createtime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "session.PkgUser.createtime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_permissionroleid;
        break;
      }

      // optional int32 permissionroleid = 20;
      case 20: {
        if (tag == 160) {
         parse_permissionroleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &permissionroleid_)));
          set_has_permissionroleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:session.PkgUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:session.PkgUser)
  return false;
#undef DO_
}

void PkgUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:session.PkgUser)
  // optional int32 userid = 3;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->userid(), output);
  }

  // optional string password = 4;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgUser.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->password(), output);
  }

  // optional string username = 10;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgUser.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->username(), output);
  }

  // optional string realname = 11;
  if (has_realname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->realname().data(), this->realname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgUser.realname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->realname(), output);
  }

  // optional string phonenumber = 12;
  if (has_phonenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgUser.phonenumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->phonenumber(), output);
  }

  // optional string emailaddress = 13;
  if (has_emailaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emailaddress().data(), this->emailaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgUser.emailaddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->emailaddress(), output);
  }

  // optional int32 permission = 15;
  if (has_permission()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->permission(), output);
  }

  // optional int32 companyid = 16 [default = 0];
  if (has_companyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->companyid(), output);
  }

  // optional string companyname = 17;
  if (has_companyname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->companyname().data(), this->companyname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgUser.companyname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->companyname(), output);
  }

  // optional string createtime = 19;
  if (has_createtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createtime().data(), this->createtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgUser.createtime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->createtime(), output);
  }

  // optional int32 permissionroleid = 20;
  if (has_permissionroleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->permissionroleid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:session.PkgUser)
}

::google::protobuf::uint8* PkgUser::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:session.PkgUser)
  // optional int32 userid = 3;
  if (has_userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->userid(), target);
  }

  // optional string password = 4;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgUser.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->password(), target);
  }

  // optional string username = 10;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgUser.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->username(), target);
  }

  // optional string realname = 11;
  if (has_realname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->realname().data(), this->realname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgUser.realname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->realname(), target);
  }

  // optional string phonenumber = 12;
  if (has_phonenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgUser.phonenumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->phonenumber(), target);
  }

  // optional string emailaddress = 13;
  if (has_emailaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emailaddress().data(), this->emailaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgUser.emailaddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->emailaddress(), target);
  }

  // optional int32 permission = 15;
  if (has_permission()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->permission(), target);
  }

  // optional int32 companyid = 16 [default = 0];
  if (has_companyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->companyid(), target);
  }

  // optional string companyname = 17;
  if (has_companyname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->companyname().data(), this->companyname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgUser.companyname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->companyname(), target);
  }

  // optional string createtime = 19;
  if (has_createtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createtime().data(), this->createtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session.PkgUser.createtime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->createtime(), target);
  }

  // optional int32 permissionroleid = 20;
  if (has_permissionroleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->permissionroleid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:session.PkgUser)
  return target;
}

int PkgUser::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255) {
    // optional int32 userid = 3;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional string password = 4;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string username = 10;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional string realname = 11;
    if (has_realname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->realname());
    }

    // optional string phonenumber = 12;
    if (has_phonenumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phonenumber());
    }

    // optional string emailaddress = 13;
    if (has_emailaddress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->emailaddress());
    }

    // optional int32 permission = 15;
    if (has_permission()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->permission());
    }

    // optional int32 companyid = 16 [default = 0];
    if (has_companyid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->companyid());
    }

  }
  if (_has_bits_[8 / 32] & 1792) {
    // optional string companyname = 17;
    if (has_companyname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->companyname());
    }

    // optional string createtime = 19;
    if (has_createtime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->createtime());
    }

    // optional int32 permissionroleid = 20;
    if (has_permissionroleid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->permissionroleid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUser::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUser* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUser*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUser::MergeFrom(const PkgUser& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_userid()) {
      set_userid(from.userid());
    }
    if (from.has_password()) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (from.has_username()) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (from.has_realname()) {
      set_has_realname();
      realname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.realname_);
    }
    if (from.has_phonenumber()) {
      set_has_phonenumber();
      phonenumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenumber_);
    }
    if (from.has_emailaddress()) {
      set_has_emailaddress();
      emailaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.emailaddress_);
    }
    if (from.has_permission()) {
      set_permission(from.permission());
    }
    if (from.has_companyid()) {
      set_companyid(from.companyid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_companyname()) {
      set_has_companyname();
      companyname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.companyname_);
    }
    if (from.has_createtime()) {
      set_has_createtime();
      createtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.createtime_);
    }
    if (from.has_permissionroleid()) {
      set_permissionroleid(from.permissionroleid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUser::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUser::CopyFrom(const PkgUser& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUser::IsInitialized() const {

  return true;
}

void PkgUser::Swap(PkgUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUser::InternalSwap(PkgUser* other) {
  std::swap(userid_, other->userid_);
  password_.Swap(&other->password_);
  username_.Swap(&other->username_);
  realname_.Swap(&other->realname_);
  phonenumber_.Swap(&other->phonenumber_);
  emailaddress_.Swap(&other->emailaddress_);
  std::swap(permission_, other->permission_);
  std::swap(companyid_, other->companyid_);
  companyname_.Swap(&other->companyname_);
  createtime_.Swap(&other->createtime_);
  std::swap(permissionroleid_, other->permissionroleid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUser::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUser_descriptor_;
  metadata.reflection = PkgUser_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace session

// @@protoc_insertion_point(global_scope)
