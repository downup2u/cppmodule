// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: comm.proto

#ifndef PROTOBUF_comm_2eproto__INCLUDED
#define PROTOBUF_comm_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace comm {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_comm_2eproto();
void protobuf_AssignDesc_comm_2eproto();
void protobuf_ShutdownFile_comm_2eproto();

class PkgConnectReq;
class PkgConnectReply;
class PkgUserCheckReq;
class PkgUserCheckReply;
class PkgUserCheckInvitionCodeReq;
class PkgUserCheckInvitionCodeReply;
class PkgUserGetAuthReq;
class PkgUserGetAuthReply;
class PkgUserCreateReq;
class PkgUserCreateReply;
class PkgUserLoginReq;
class PkgCompanyInfo;
class PkgUserLoginReply;
class PkgUserGetPasswordReq;
class PkgUserGetPasswordReply;
class PkgUserResetPasswordReq;
class PkgUserResetPasswordReply;
class PkgUserSetReq;
class PkgUserSetReply;
class PkgUserInvitionUserReq;
class PkgUserInvitionUserReply;
class PkgUserInvitionCheckReq;
class PkgUserInvitionCheckReply;
class PkgUserCreateCompanyReq;
class PkgUserCreateCompanyReply;
class PkgUserReassignAdminReq;
class PkgUserReassignAdminReply;
class PkgUserDeleteFromCompanyReq;
class PkgUserDeleteFromCompanyReply;
class PkgUserExitCompanyReq;
class PkgUserExitCompanyReply;
class PkgTaskInfo;
class PkgTaskPageQueryReq;
class PkgTaskPageQueryReq_PkgTaskQueryCondition;
class PkgTaskPageQueryReply;
class PkgTaskQueryReq;
class PkgTaskQueryReply;
class PkgTaskSortFlag;
class PkgTaskSetSortFlagReq;
class PkgTaskSetSortFlagReply;
class PkgTaskOperationReq;
class PkgTaskOperationReply;
class PkgCompanyGroup;
class PkgGroupUser;
class PkgCompanyGroupQueryReq;
class PkgCompanyGroupQueryReply;
class PkgAdvInfo;
class PkgAdvQueryReq;
class PkgAdvQueryReply;
class PkgQueryMyProfileReq;
class PkgQueryMyProfileReply;
class PkgLogoutReq;
class PkgLogoutReply;
class PkgNotifyReq;
class PkgNotifyReply;
class PkgPhoneCppWrapReq;
class PkgPhoneCppWrapReply;

enum PkgUserSetReq_EnSetType {
  PkgUserSetReq_EnSetType_ST_PHONE = 1,
  PkgUserSetReq_EnSetType_ST_EMAIL = 2,
  PkgUserSetReq_EnSetType_ST_USERNAME = 4,
  PkgUserSetReq_EnSetType_ST_NEWPASSWORD = 8,
  PkgUserSetReq_EnSetType_ST_REALNAME = 16
};
bool PkgUserSetReq_EnSetType_IsValid(int value);
const PkgUserSetReq_EnSetType PkgUserSetReq_EnSetType_EnSetType_MIN = PkgUserSetReq_EnSetType_ST_PHONE;
const PkgUserSetReq_EnSetType PkgUserSetReq_EnSetType_EnSetType_MAX = PkgUserSetReq_EnSetType_ST_REALNAME;
const int PkgUserSetReq_EnSetType_EnSetType_ARRAYSIZE = PkgUserSetReq_EnSetType_EnSetType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PkgUserSetReq_EnSetType_descriptor();
inline const ::std::string& PkgUserSetReq_EnSetType_Name(PkgUserSetReq_EnSetType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PkgUserSetReq_EnSetType_descriptor(), value);
}
inline bool PkgUserSetReq_EnSetType_Parse(
    const ::std::string& name, PkgUserSetReq_EnSetType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PkgUserSetReq_EnSetType>(
    PkgUserSetReq_EnSetType_descriptor(), name, value);
}
enum PkgUserExitCompanyReq_EnCmd {
  PkgUserExitCompanyReq_EnCmd_CMD_EXIT = 1,
  PkgUserExitCompanyReq_EnCmd_CMD_DISMISS = 2
};
bool PkgUserExitCompanyReq_EnCmd_IsValid(int value);
const PkgUserExitCompanyReq_EnCmd PkgUserExitCompanyReq_EnCmd_EnCmd_MIN = PkgUserExitCompanyReq_EnCmd_CMD_EXIT;
const PkgUserExitCompanyReq_EnCmd PkgUserExitCompanyReq_EnCmd_EnCmd_MAX = PkgUserExitCompanyReq_EnCmd_CMD_DISMISS;
const int PkgUserExitCompanyReq_EnCmd_EnCmd_ARRAYSIZE = PkgUserExitCompanyReq_EnCmd_EnCmd_MAX + 1;

const ::google::protobuf::EnumDescriptor* PkgUserExitCompanyReq_EnCmd_descriptor();
inline const ::std::string& PkgUserExitCompanyReq_EnCmd_Name(PkgUserExitCompanyReq_EnCmd value) {
  return ::google::protobuf::internal::NameOfEnum(
    PkgUserExitCompanyReq_EnCmd_descriptor(), value);
}
inline bool PkgUserExitCompanyReq_EnCmd_Parse(
    const ::std::string& name, PkgUserExitCompanyReq_EnCmd* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PkgUserExitCompanyReq_EnCmd>(
    PkgUserExitCompanyReq_EnCmd_descriptor(), name, value);
}
enum PkgTaskInfo_EnTaskLevel {
  PkgTaskInfo_EnTaskLevel_TL_IMPORTANCE_ARGENCY = 3,
  PkgTaskInfo_EnTaskLevel_TL_IMPORTANCE_NOTARGENCY = 1,
  PkgTaskInfo_EnTaskLevel_TL_NOTIMPORTANCE_ARGENCY = 2,
  PkgTaskInfo_EnTaskLevel_TL_NOTIMPORTANCE_NOTARGENCY = 0
};
bool PkgTaskInfo_EnTaskLevel_IsValid(int value);
const PkgTaskInfo_EnTaskLevel PkgTaskInfo_EnTaskLevel_EnTaskLevel_MIN = PkgTaskInfo_EnTaskLevel_TL_NOTIMPORTANCE_NOTARGENCY;
const PkgTaskInfo_EnTaskLevel PkgTaskInfo_EnTaskLevel_EnTaskLevel_MAX = PkgTaskInfo_EnTaskLevel_TL_IMPORTANCE_ARGENCY;
const int PkgTaskInfo_EnTaskLevel_EnTaskLevel_ARRAYSIZE = PkgTaskInfo_EnTaskLevel_EnTaskLevel_MAX + 1;

const ::google::protobuf::EnumDescriptor* PkgTaskInfo_EnTaskLevel_descriptor();
inline const ::std::string& PkgTaskInfo_EnTaskLevel_Name(PkgTaskInfo_EnTaskLevel value) {
  return ::google::protobuf::internal::NameOfEnum(
    PkgTaskInfo_EnTaskLevel_descriptor(), value);
}
inline bool PkgTaskInfo_EnTaskLevel_Parse(
    const ::std::string& name, PkgTaskInfo_EnTaskLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PkgTaskInfo_EnTaskLevel>(
    PkgTaskInfo_EnTaskLevel_descriptor(), name, value);
}
enum PkgTaskInfo_EnTaskStatus {
  PkgTaskInfo_EnTaskStatus_TS_NEW = 0,
  PkgTaskInfo_EnTaskStatus_TS_GOING = 1,
  PkgTaskInfo_EnTaskStatus_TS_FINISHED = 2,
  PkgTaskInfo_EnTaskStatus_TS_DENY = 3,
  PkgTaskInfo_EnTaskStatus_TS_DELETED = 4
};
bool PkgTaskInfo_EnTaskStatus_IsValid(int value);
const PkgTaskInfo_EnTaskStatus PkgTaskInfo_EnTaskStatus_EnTaskStatus_MIN = PkgTaskInfo_EnTaskStatus_TS_NEW;
const PkgTaskInfo_EnTaskStatus PkgTaskInfo_EnTaskStatus_EnTaskStatus_MAX = PkgTaskInfo_EnTaskStatus_TS_DELETED;
const int PkgTaskInfo_EnTaskStatus_EnTaskStatus_ARRAYSIZE = PkgTaskInfo_EnTaskStatus_EnTaskStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* PkgTaskInfo_EnTaskStatus_descriptor();
inline const ::std::string& PkgTaskInfo_EnTaskStatus_Name(PkgTaskInfo_EnTaskStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    PkgTaskInfo_EnTaskStatus_descriptor(), value);
}
inline bool PkgTaskInfo_EnTaskStatus_Parse(
    const ::std::string& name, PkgTaskInfo_EnTaskStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PkgTaskInfo_EnTaskStatus>(
    PkgTaskInfo_EnTaskStatus_descriptor(), name, value);
}
enum PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag {
  PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_PR_ALL = 1,
  PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_PR_READED = 2,
  PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_PR_NOTREADED = 3
};
bool PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_IsValid(int value);
const PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_EnReadedFlag_MIN = PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_PR_ALL;
const PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_EnReadedFlag_MAX = PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_PR_NOTREADED;
const int PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_EnReadedFlag_ARRAYSIZE = PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_EnReadedFlag_MAX + 1;

const ::google::protobuf::EnumDescriptor* PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_descriptor();
inline const ::std::string& PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_Name(PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag value) {
  return ::google::protobuf::internal::NameOfEnum(
    PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_descriptor(), value);
}
inline bool PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_Parse(
    const ::std::string& name, PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag>(
    PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_descriptor(), name, value);
}
enum PkgTaskPageQueryReq_EnTaskFlag {
  PkgTaskPageQueryReq_EnTaskFlag_TF_MYTASK = 0,
  PkgTaskPageQueryReq_EnTaskFlag_TF_COWORKTASK = 1,
  PkgTaskPageQueryReq_EnTaskFlag_TF_TASKTABLE = 2,
  PkgTaskPageQueryReq_EnTaskFlag_TF_USERDEFINED = 10
};
bool PkgTaskPageQueryReq_EnTaskFlag_IsValid(int value);
const PkgTaskPageQueryReq_EnTaskFlag PkgTaskPageQueryReq_EnTaskFlag_EnTaskFlag_MIN = PkgTaskPageQueryReq_EnTaskFlag_TF_MYTASK;
const PkgTaskPageQueryReq_EnTaskFlag PkgTaskPageQueryReq_EnTaskFlag_EnTaskFlag_MAX = PkgTaskPageQueryReq_EnTaskFlag_TF_USERDEFINED;
const int PkgTaskPageQueryReq_EnTaskFlag_EnTaskFlag_ARRAYSIZE = PkgTaskPageQueryReq_EnTaskFlag_EnTaskFlag_MAX + 1;

const ::google::protobuf::EnumDescriptor* PkgTaskPageQueryReq_EnTaskFlag_descriptor();
inline const ::std::string& PkgTaskPageQueryReq_EnTaskFlag_Name(PkgTaskPageQueryReq_EnTaskFlag value) {
  return ::google::protobuf::internal::NameOfEnum(
    PkgTaskPageQueryReq_EnTaskFlag_descriptor(), value);
}
inline bool PkgTaskPageQueryReq_EnTaskFlag_Parse(
    const ::std::string& name, PkgTaskPageQueryReq_EnTaskFlag* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PkgTaskPageQueryReq_EnTaskFlag>(
    PkgTaskPageQueryReq_EnTaskFlag_descriptor(), name, value);
}
enum PkgTaskPageQueryReq_EnTaskQueryCondition {
  PkgTaskPageQueryReq_EnTaskQueryCondition_TQC_DATESTART = 1,
  PkgTaskPageQueryReq_EnTaskQueryCondition_TQC_DATEEND = 2,
  PkgTaskPageQueryReq_EnTaskQueryCondition_TQC_KEYFORNAME = 4,
  PkgTaskPageQueryReq_EnTaskQueryCondition_TQC_KEYFORCONTENT = 8,
  PkgTaskPageQueryReq_EnTaskQueryCondition_TQC_TASKSTATUS = 16,
  PkgTaskPageQueryReq_EnTaskQueryCondition_TQC_TASKNOTSTATUS = 32,
  PkgTaskPageQueryReq_EnTaskQueryCondition_TQC_ONLYSEND = 64,
  PkgTaskPageQueryReq_EnTaskQueryCondition_TQC_ONLYRECV = 128,
  PkgTaskPageQueryReq_EnTaskQueryCondition_TQC_READEDFLAG = 256,
  PkgTaskPageQueryReq_EnTaskQueryCondition_TQC_LASTUPDATETIME = 1024
};
bool PkgTaskPageQueryReq_EnTaskQueryCondition_IsValid(int value);
const PkgTaskPageQueryReq_EnTaskQueryCondition PkgTaskPageQueryReq_EnTaskQueryCondition_EnTaskQueryCondition_MIN = PkgTaskPageQueryReq_EnTaskQueryCondition_TQC_DATESTART;
const PkgTaskPageQueryReq_EnTaskQueryCondition PkgTaskPageQueryReq_EnTaskQueryCondition_EnTaskQueryCondition_MAX = PkgTaskPageQueryReq_EnTaskQueryCondition_TQC_LASTUPDATETIME;
const int PkgTaskPageQueryReq_EnTaskQueryCondition_EnTaskQueryCondition_ARRAYSIZE = PkgTaskPageQueryReq_EnTaskQueryCondition_EnTaskQueryCondition_MAX + 1;

const ::google::protobuf::EnumDescriptor* PkgTaskPageQueryReq_EnTaskQueryCondition_descriptor();
inline const ::std::string& PkgTaskPageQueryReq_EnTaskQueryCondition_Name(PkgTaskPageQueryReq_EnTaskQueryCondition value) {
  return ::google::protobuf::internal::NameOfEnum(
    PkgTaskPageQueryReq_EnTaskQueryCondition_descriptor(), value);
}
inline bool PkgTaskPageQueryReq_EnTaskQueryCondition_Parse(
    const ::std::string& name, PkgTaskPageQueryReq_EnTaskQueryCondition* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PkgTaskPageQueryReq_EnTaskQueryCondition>(
    PkgTaskPageQueryReq_EnTaskQueryCondition_descriptor(), name, value);
}
enum PkgTaskPageQueryReq_EnPageFlag {
  PkgTaskPageQueryReq_EnPageFlag_P_ONLYNUM = 1,
  PkgTaskPageQueryReq_EnPageFlag_P_RETURNALL = 2,
  PkgTaskPageQueryReq_EnPageFlag_P_RETURNPAGE = 3
};
bool PkgTaskPageQueryReq_EnPageFlag_IsValid(int value);
const PkgTaskPageQueryReq_EnPageFlag PkgTaskPageQueryReq_EnPageFlag_EnPageFlag_MIN = PkgTaskPageQueryReq_EnPageFlag_P_ONLYNUM;
const PkgTaskPageQueryReq_EnPageFlag PkgTaskPageQueryReq_EnPageFlag_EnPageFlag_MAX = PkgTaskPageQueryReq_EnPageFlag_P_RETURNPAGE;
const int PkgTaskPageQueryReq_EnPageFlag_EnPageFlag_ARRAYSIZE = PkgTaskPageQueryReq_EnPageFlag_EnPageFlag_MAX + 1;

const ::google::protobuf::EnumDescriptor* PkgTaskPageQueryReq_EnPageFlag_descriptor();
inline const ::std::string& PkgTaskPageQueryReq_EnPageFlag_Name(PkgTaskPageQueryReq_EnPageFlag value) {
  return ::google::protobuf::internal::NameOfEnum(
    PkgTaskPageQueryReq_EnPageFlag_descriptor(), value);
}
inline bool PkgTaskPageQueryReq_EnPageFlag_Parse(
    const ::std::string& name, PkgTaskPageQueryReq_EnPageFlag* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PkgTaskPageQueryReq_EnPageFlag>(
    PkgTaskPageQueryReq_EnPageFlag_descriptor(), name, value);
}
enum PkgTaskQueryReq_EnQueryFlag {
  PkgTaskQueryReq_EnQueryFlag_QF_TASKINFO = 1,
  PkgTaskQueryReq_EnQueryFlag_QF_TASKWITHSUBTASK = 2,
  PkgTaskQueryReq_EnQueryFlag_QF_TASKWITHASSGIN = 4
};
bool PkgTaskQueryReq_EnQueryFlag_IsValid(int value);
const PkgTaskQueryReq_EnQueryFlag PkgTaskQueryReq_EnQueryFlag_EnQueryFlag_MIN = PkgTaskQueryReq_EnQueryFlag_QF_TASKINFO;
const PkgTaskQueryReq_EnQueryFlag PkgTaskQueryReq_EnQueryFlag_EnQueryFlag_MAX = PkgTaskQueryReq_EnQueryFlag_QF_TASKWITHASSGIN;
const int PkgTaskQueryReq_EnQueryFlag_EnQueryFlag_ARRAYSIZE = PkgTaskQueryReq_EnQueryFlag_EnQueryFlag_MAX + 1;

const ::google::protobuf::EnumDescriptor* PkgTaskQueryReq_EnQueryFlag_descriptor();
inline const ::std::string& PkgTaskQueryReq_EnQueryFlag_Name(PkgTaskQueryReq_EnQueryFlag value) {
  return ::google::protobuf::internal::NameOfEnum(
    PkgTaskQueryReq_EnQueryFlag_descriptor(), value);
}
inline bool PkgTaskQueryReq_EnQueryFlag_Parse(
    const ::std::string& name, PkgTaskQueryReq_EnQueryFlag* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PkgTaskQueryReq_EnQueryFlag>(
    PkgTaskQueryReq_EnQueryFlag_descriptor(), name, value);
}
enum PkgTaskOperationReq_EnTaskOperation {
  PkgTaskOperationReq_EnTaskOperation_TO_INSERT_INFO = 1,
  PkgTaskOperationReq_EnTaskOperation_TO_INSERT_INFO_SUBTASKINFO = 2,
  PkgTaskOperationReq_EnTaskOperation_TO_INSERT_INFO_COWORK = 4,
  PkgTaskOperationReq_EnTaskOperation_TO_UPDATE_INFO = 16,
  PkgTaskOperationReq_EnTaskOperation_TO_UPDATE_STATUS = 32,
  PkgTaskOperationReq_EnTaskOperation_TO_DELETE_INFO = 64,
  PkgTaskOperationReq_EnTaskOperation_TO_UPDATE_READED = 128
};
bool PkgTaskOperationReq_EnTaskOperation_IsValid(int value);
const PkgTaskOperationReq_EnTaskOperation PkgTaskOperationReq_EnTaskOperation_EnTaskOperation_MIN = PkgTaskOperationReq_EnTaskOperation_TO_INSERT_INFO;
const PkgTaskOperationReq_EnTaskOperation PkgTaskOperationReq_EnTaskOperation_EnTaskOperation_MAX = PkgTaskOperationReq_EnTaskOperation_TO_UPDATE_READED;
const int PkgTaskOperationReq_EnTaskOperation_EnTaskOperation_ARRAYSIZE = PkgTaskOperationReq_EnTaskOperation_EnTaskOperation_MAX + 1;

const ::google::protobuf::EnumDescriptor* PkgTaskOperationReq_EnTaskOperation_descriptor();
inline const ::std::string& PkgTaskOperationReq_EnTaskOperation_Name(PkgTaskOperationReq_EnTaskOperation value) {
  return ::google::protobuf::internal::NameOfEnum(
    PkgTaskOperationReq_EnTaskOperation_descriptor(), value);
}
inline bool PkgTaskOperationReq_EnTaskOperation_Parse(
    const ::std::string& name, PkgTaskOperationReq_EnTaskOperation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PkgTaskOperationReq_EnTaskOperation>(
    PkgTaskOperationReq_EnTaskOperation_descriptor(), name, value);
}
enum PkgCompanyGroupQueryReq_EnQueryType {
  PkgCompanyGroupQueryReq_EnQueryType_QT_ALL = 0,
  PkgCompanyGroupQueryReq_EnQueryType_QT_MINE = 1
};
bool PkgCompanyGroupQueryReq_EnQueryType_IsValid(int value);
const PkgCompanyGroupQueryReq_EnQueryType PkgCompanyGroupQueryReq_EnQueryType_EnQueryType_MIN = PkgCompanyGroupQueryReq_EnQueryType_QT_ALL;
const PkgCompanyGroupQueryReq_EnQueryType PkgCompanyGroupQueryReq_EnQueryType_EnQueryType_MAX = PkgCompanyGroupQueryReq_EnQueryType_QT_MINE;
const int PkgCompanyGroupQueryReq_EnQueryType_EnQueryType_ARRAYSIZE = PkgCompanyGroupQueryReq_EnQueryType_EnQueryType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PkgCompanyGroupQueryReq_EnQueryType_descriptor();
inline const ::std::string& PkgCompanyGroupQueryReq_EnQueryType_Name(PkgCompanyGroupQueryReq_EnQueryType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PkgCompanyGroupQueryReq_EnQueryType_descriptor(), value);
}
inline bool PkgCompanyGroupQueryReq_EnQueryType_Parse(
    const ::std::string& name, PkgCompanyGroupQueryReq_EnQueryType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PkgCompanyGroupQueryReq_EnQueryType>(
    PkgCompanyGroupQueryReq_EnQueryType_descriptor(), name, value);
}
enum PkgAdvQueryReq_EnQueryType {
  PkgAdvQueryReq_EnQueryType_QT_SPNUM = 1,
  PkgAdvQueryReq_EnQueryType_QT_VAILDTIME = 2,
  PkgAdvQueryReq_EnQueryType_QT_ADVID = 4
};
bool PkgAdvQueryReq_EnQueryType_IsValid(int value);
const PkgAdvQueryReq_EnQueryType PkgAdvQueryReq_EnQueryType_EnQueryType_MIN = PkgAdvQueryReq_EnQueryType_QT_SPNUM;
const PkgAdvQueryReq_EnQueryType PkgAdvQueryReq_EnQueryType_EnQueryType_MAX = PkgAdvQueryReq_EnQueryType_QT_ADVID;
const int PkgAdvQueryReq_EnQueryType_EnQueryType_ARRAYSIZE = PkgAdvQueryReq_EnQueryType_EnQueryType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PkgAdvQueryReq_EnQueryType_descriptor();
inline const ::std::string& PkgAdvQueryReq_EnQueryType_Name(PkgAdvQueryReq_EnQueryType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PkgAdvQueryReq_EnQueryType_descriptor(), value);
}
inline bool PkgAdvQueryReq_EnQueryType_Parse(
    const ::std::string& name, PkgAdvQueryReq_EnQueryType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PkgAdvQueryReq_EnQueryType>(
    PkgAdvQueryReq_EnQueryType_descriptor(), name, value);
}
enum PkgPhoneCppWrapReq_EnReqType {
  PkgPhoneCppWrapReq_EnReqType_PONEWRAP_LOGINSUCCESS = 0,
  PkgPhoneCppWrapReq_EnReqType_PONEWRAP_GETUSERTASKUPDATETIME = 1,
  PkgPhoneCppWrapReq_EnReqType_PONEWRAP_SETUSERTASKUPDATETIMEANDTASKS = 2,
  PkgPhoneCppWrapReq_EnReqType_PONEWRAP_QUERYPAGETASKS = 3,
  PkgPhoneCppWrapReq_EnReqType_PONEWRAP_QUERYTASKDETAIL = 4
};
bool PkgPhoneCppWrapReq_EnReqType_IsValid(int value);
const PkgPhoneCppWrapReq_EnReqType PkgPhoneCppWrapReq_EnReqType_EnReqType_MIN = PkgPhoneCppWrapReq_EnReqType_PONEWRAP_LOGINSUCCESS;
const PkgPhoneCppWrapReq_EnReqType PkgPhoneCppWrapReq_EnReqType_EnReqType_MAX = PkgPhoneCppWrapReq_EnReqType_PONEWRAP_QUERYTASKDETAIL;
const int PkgPhoneCppWrapReq_EnReqType_EnReqType_ARRAYSIZE = PkgPhoneCppWrapReq_EnReqType_EnReqType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PkgPhoneCppWrapReq_EnReqType_descriptor();
inline const ::std::string& PkgPhoneCppWrapReq_EnReqType_Name(PkgPhoneCppWrapReq_EnReqType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PkgPhoneCppWrapReq_EnReqType_descriptor(), value);
}
inline bool PkgPhoneCppWrapReq_EnReqType_Parse(
    const ::std::string& name, PkgPhoneCppWrapReq_EnReqType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PkgPhoneCppWrapReq_EnReqType>(
    PkgPhoneCppWrapReq_EnReqType_descriptor(), name, value);
}
enum EnGetType {
  GT_PHONE = 0,
  GT_EMAIL = 1,
  GT_USERID = 2,
  GT_USERNAME = 3
};
bool EnGetType_IsValid(int value);
const EnGetType EnGetType_MIN = GT_PHONE;
const EnGetType EnGetType_MAX = GT_USERNAME;
const int EnGetType_ARRAYSIZE = EnGetType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnGetType_descriptor();
inline const ::std::string& EnGetType_Name(EnGetType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnGetType_descriptor(), value);
}
inline bool EnGetType_Parse(
    const ::std::string& name, EnGetType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnGetType>(
    EnGetType_descriptor(), name, value);
}
enum EnUpdatedFlag {
  UF_COMPANYINFO = 1,
  UF_TASKCOWORK = 2,
  UF_MYTASK = 4,
  UF_MYTASKFINISHEDNUMBERS = 8,
  UF_USERROLE = 16,
  UF_ADVINFO = 1024,
  UF_VERSION = 2048
};
bool EnUpdatedFlag_IsValid(int value);
const EnUpdatedFlag EnUpdatedFlag_MIN = UF_COMPANYINFO;
const EnUpdatedFlag EnUpdatedFlag_MAX = UF_VERSION;
const int EnUpdatedFlag_ARRAYSIZE = EnUpdatedFlag_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnUpdatedFlag_descriptor();
inline const ::std::string& EnUpdatedFlag_Name(EnUpdatedFlag value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnUpdatedFlag_descriptor(), value);
}
inline bool EnUpdatedFlag_Parse(
    const ::std::string& name, EnUpdatedFlag* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnUpdatedFlag>(
    EnUpdatedFlag_descriptor(), name, value);
}
// ===================================================================

class PkgConnectReq : public ::google::protobuf::Message {
 public:
  PkgConnectReq();
  virtual ~PkgConnectReq();

  PkgConnectReq(const PkgConnectReq& from);

  inline PkgConnectReq& operator=(const PkgConnectReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgConnectReq& default_instance();

  void Swap(PkgConnectReq* other);

  // implements Message ----------------------------------------------

  inline PkgConnectReq* New() const { return New(NULL); }

  PkgConnectReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgConnectReq& from);
  void MergeFrom(const PkgConnectReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgConnectReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string apptype = 2;
  inline bool has_apptype() const;
  inline void clear_apptype();
  static const int kApptypeFieldNumber = 2;
  inline const ::std::string& apptype() const;
  inline void set_apptype(const ::std::string& value);
  inline void set_apptype(const char* value);
  inline void set_apptype(const char* value, size_t size);
  inline ::std::string* mutable_apptype();
  inline ::std::string* release_apptype();
  inline void set_allocated_apptype(::std::string* apptype);

  // optional string appversion = 3;
  inline bool has_appversion() const;
  inline void clear_appversion();
  static const int kAppversionFieldNumber = 3;
  inline const ::std::string& appversion() const;
  inline void set_appversion(const ::std::string& value);
  inline void set_appversion(const char* value);
  inline void set_appversion(const char* value, size_t size);
  inline ::std::string* mutable_appversion();
  inline ::std::string* release_appversion();
  inline void set_allocated_appversion(::std::string* appversion);

  // optional string applanguage = 4;
  inline bool has_applanguage() const;
  inline void clear_applanguage();
  static const int kApplanguageFieldNumber = 4;
  inline const ::std::string& applanguage() const;
  inline void set_applanguage(const ::std::string& value);
  inline void set_applanguage(const char* value);
  inline void set_applanguage(const char* value, size_t size);
  inline ::std::string* mutable_applanguage();
  inline ::std::string* release_applanguage();
  inline void set_allocated_applanguage(::std::string* applanguage);

  // optional string ostype = 10;
  inline bool has_ostype() const;
  inline void clear_ostype();
  static const int kOstypeFieldNumber = 10;
  inline const ::std::string& ostype() const;
  inline void set_ostype(const ::std::string& value);
  inline void set_ostype(const char* value);
  inline void set_ostype(const char* value, size_t size);
  inline ::std::string* mutable_ostype();
  inline ::std::string* release_ostype();
  inline void set_allocated_ostype(::std::string* ostype);

  // optional string osversion = 11;
  inline bool has_osversion() const;
  inline void clear_osversion();
  static const int kOsversionFieldNumber = 11;
  inline const ::std::string& osversion() const;
  inline void set_osversion(const ::std::string& value);
  inline void set_osversion(const char* value);
  inline void set_osversion(const char* value, size_t size);
  inline ::std::string* mutable_osversion();
  inline ::std::string* release_osversion();
  inline void set_allocated_osversion(::std::string* osversion);

  // optional string osrr = 12;
  inline bool has_osrr() const;
  inline void clear_osrr();
  static const int kOsrrFieldNumber = 12;
  inline const ::std::string& osrr() const;
  inline void set_osrr(const ::std::string& value);
  inline void set_osrr(const char* value);
  inline void set_osrr(const char* value, size_t size);
  inline ::std::string* mutable_osrr();
  inline ::std::string* release_osrr();
  inline void set_allocated_osrr(::std::string* osrr);

  // optional string clientsn = 101;
  inline bool has_clientsn() const;
  inline void clear_clientsn();
  static const int kClientsnFieldNumber = 101;
  inline const ::std::string& clientsn() const;
  inline void set_clientsn(const ::std::string& value);
  inline void set_clientsn(const char* value);
  inline void set_clientsn(const char* value, size_t size);
  inline ::std::string* mutable_clientsn();
  inline ::std::string* release_clientsn();
  inline void set_allocated_clientsn(::std::string* clientsn);

  // @@protoc_insertion_point(class_scope:comm.PkgConnectReq)
 private:
  inline void set_has_apptype();
  inline void clear_has_apptype();
  inline void set_has_appversion();
  inline void clear_has_appversion();
  inline void set_has_applanguage();
  inline void clear_has_applanguage();
  inline void set_has_ostype();
  inline void clear_has_ostype();
  inline void set_has_osversion();
  inline void clear_has_osversion();
  inline void set_has_osrr();
  inline void clear_has_osrr();
  inline void set_has_clientsn();
  inline void clear_has_clientsn();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr apptype_;
  ::google::protobuf::internal::ArenaStringPtr appversion_;
  ::google::protobuf::internal::ArenaStringPtr applanguage_;
  ::google::protobuf::internal::ArenaStringPtr ostype_;
  ::google::protobuf::internal::ArenaStringPtr osversion_;
  ::google::protobuf::internal::ArenaStringPtr osrr_;
  ::google::protobuf::internal::ArenaStringPtr clientsn_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgConnectReq* default_instance_;
};
// -------------------------------------------------------------------

class PkgConnectReply : public ::google::protobuf::Message {
 public:
  PkgConnectReply();
  virtual ~PkgConnectReply();

  PkgConnectReply(const PkgConnectReply& from);

  inline PkgConnectReply& operator=(const PkgConnectReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgConnectReply& default_instance();

  void Swap(PkgConnectReply* other);

  // implements Message ----------------------------------------------

  inline PkgConnectReply* New() const { return New(NULL); }

  PkgConnectReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgConnectReply& from);
  void MergeFrom(const PkgConnectReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgConnectReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool issuccess = 1 [default = true];
  inline bool has_issuccess() const;
  inline void clear_issuccess();
  static const int kIssuccessFieldNumber = 1;
  inline bool issuccess() const;
  inline void set_issuccess(bool value);

  // optional string err = 2;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 2;
  inline const ::std::string& err() const;
  inline void set_err(const ::std::string& value);
  inline void set_err(const char* value);
  inline void set_err(const char* value, size_t size);
  inline ::std::string* mutable_err();
  inline ::std::string* release_err();
  inline void set_allocated_err(::std::string* err);

  // repeated string urllist = 10;
  inline int urllist_size() const;
  inline void clear_urllist();
  static const int kUrllistFieldNumber = 10;
  inline const ::std::string& urllist(int index) const;
  inline ::std::string* mutable_urllist(int index);
  inline void set_urllist(int index, const ::std::string& value);
  inline void set_urllist(int index, const char* value);
  inline void set_urllist(int index, const char* value, size_t size);
  inline ::std::string* add_urllist();
  inline void add_urllist(const ::std::string& value);
  inline void add_urllist(const char* value);
  inline void add_urllist(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& urllist() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_urllist();

  // optional string encryptkey = 11;
  inline bool has_encryptkey() const;
  inline void clear_encryptkey();
  static const int kEncryptkeyFieldNumber = 11;
  inline const ::std::string& encryptkey() const;
  inline void set_encryptkey(const ::std::string& value);
  inline void set_encryptkey(const char* value);
  inline void set_encryptkey(const char* value, size_t size);
  inline ::std::string* mutable_encryptkey();
  inline ::std::string* release_encryptkey();
  inline void set_allocated_encryptkey(::std::string* encryptkey);

  // optional string hashedclientsn = 100;
  inline bool has_hashedclientsn() const;
  inline void clear_hashedclientsn();
  static const int kHashedclientsnFieldNumber = 100;
  inline const ::std::string& hashedclientsn() const;
  inline void set_hashedclientsn(const ::std::string& value);
  inline void set_hashedclientsn(const char* value);
  inline void set_hashedclientsn(const char* value, size_t size);
  inline ::std::string* mutable_hashedclientsn();
  inline ::std::string* release_hashedclientsn();
  inline void set_allocated_hashedclientsn(::std::string* hashedclientsn);

  // optional string serversn = 101;
  inline bool has_serversn() const;
  inline void clear_serversn();
  static const int kServersnFieldNumber = 101;
  inline const ::std::string& serversn() const;
  inline void set_serversn(const ::std::string& value);
  inline void set_serversn(const char* value);
  inline void set_serversn(const char* value, size_t size);
  inline ::std::string* mutable_serversn();
  inline ::std::string* release_serversn();
  inline void set_allocated_serversn(::std::string* serversn);

  // @@protoc_insertion_point(class_scope:comm.PkgConnectReply)
 private:
  inline void set_has_issuccess();
  inline void clear_has_issuccess();
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_encryptkey();
  inline void clear_has_encryptkey();
  inline void set_has_hashedclientsn();
  inline void clear_has_hashedclientsn();
  inline void set_has_serversn();
  inline void clear_has_serversn();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  ::google::protobuf::RepeatedPtrField< ::std::string> urllist_;
  ::google::protobuf::internal::ArenaStringPtr encryptkey_;
  ::google::protobuf::internal::ArenaStringPtr hashedclientsn_;
  ::google::protobuf::internal::ArenaStringPtr serversn_;
  bool issuccess_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgConnectReply* default_instance_;
};
// -------------------------------------------------------------------

class PkgUserCheckReq : public ::google::protobuf::Message {
 public:
  PkgUserCheckReq();
  virtual ~PkgUserCheckReq();

  PkgUserCheckReq(const PkgUserCheckReq& from);

  inline PkgUserCheckReq& operator=(const PkgUserCheckReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserCheckReq& default_instance();

  void Swap(PkgUserCheckReq* other);

  // implements Message ----------------------------------------------

  inline PkgUserCheckReq* New() const { return New(NULL); }

  PkgUserCheckReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserCheckReq& from);
  void MergeFrom(const PkgUserCheckReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserCheckReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  inline bool has_gettype() const;
  inline void clear_gettype();
  static const int kGettypeFieldNumber = 1;
  inline ::comm::EnGetType gettype() const;
  inline void set_gettype(::comm::EnGetType value);

  // optional string phonenumber = 3;
  inline bool has_phonenumber() const;
  inline void clear_phonenumber();
  static const int kPhonenumberFieldNumber = 3;
  inline const ::std::string& phonenumber() const;
  inline void set_phonenumber(const ::std::string& value);
  inline void set_phonenumber(const char* value);
  inline void set_phonenumber(const char* value, size_t size);
  inline ::std::string* mutable_phonenumber();
  inline ::std::string* release_phonenumber();
  inline void set_allocated_phonenumber(::std::string* phonenumber);

  // optional string emailaddress = 4;
  inline bool has_emailaddress() const;
  inline void clear_emailaddress();
  static const int kEmailaddressFieldNumber = 4;
  inline const ::std::string& emailaddress() const;
  inline void set_emailaddress(const ::std::string& value);
  inline void set_emailaddress(const char* value);
  inline void set_emailaddress(const char* value, size_t size);
  inline ::std::string* mutable_emailaddress();
  inline ::std::string* release_emailaddress();
  inline void set_allocated_emailaddress(::std::string* emailaddress);

  // optional string username = 5;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 5;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // @@protoc_insertion_point(class_scope:comm.PkgUserCheckReq)
 private:
  inline void set_has_gettype();
  inline void clear_has_gettype();
  inline void set_has_phonenumber();
  inline void clear_has_phonenumber();
  inline void set_has_emailaddress();
  inline void clear_has_emailaddress();
  inline void set_has_username();
  inline void clear_has_username();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr phonenumber_;
  ::google::protobuf::internal::ArenaStringPtr emailaddress_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  int gettype_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgUserCheckReq* default_instance_;
};
// -------------------------------------------------------------------

class PkgUserCheckReply : public ::google::protobuf::Message {
 public:
  PkgUserCheckReply();
  virtual ~PkgUserCheckReply();

  PkgUserCheckReply(const PkgUserCheckReply& from);

  inline PkgUserCheckReply& operator=(const PkgUserCheckReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserCheckReply& default_instance();

  void Swap(PkgUserCheckReply* other);

  // implements Message ----------------------------------------------

  inline PkgUserCheckReply* New() const { return New(NULL); }

  PkgUserCheckReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserCheckReply& from);
  void MergeFrom(const PkgUserCheckReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserCheckReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool issuccess = 1 [default = true];
  inline bool has_issuccess() const;
  inline void clear_issuccess();
  static const int kIssuccessFieldNumber = 1;
  inline bool issuccess() const;
  inline void set_issuccess(bool value);

  // optional string err = 2;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 2;
  inline const ::std::string& err() const;
  inline void set_err(const ::std::string& value);
  inline void set_err(const char* value);
  inline void set_err(const char* value, size_t size);
  inline ::std::string* mutable_err();
  inline ::std::string* release_err();
  inline void set_allocated_err(::std::string* err);

  // optional int32 userid = 3;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 3;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:comm.PkgUserCheckReply)
 private:
  inline void set_has_issuccess();
  inline void clear_has_issuccess();
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  bool issuccess_;
  ::google::protobuf::int32 userid_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgUserCheckReply* default_instance_;
};
// -------------------------------------------------------------------

class PkgUserCheckInvitionCodeReq : public ::google::protobuf::Message {
 public:
  PkgUserCheckInvitionCodeReq();
  virtual ~PkgUserCheckInvitionCodeReq();

  PkgUserCheckInvitionCodeReq(const PkgUserCheckInvitionCodeReq& from);

  inline PkgUserCheckInvitionCodeReq& operator=(const PkgUserCheckInvitionCodeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserCheckInvitionCodeReq& default_instance();

  void Swap(PkgUserCheckInvitionCodeReq* other);

  // implements Message ----------------------------------------------

  inline PkgUserCheckInvitionCodeReq* New() const { return New(NULL); }

  PkgUserCheckInvitionCodeReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserCheckInvitionCodeReq& from);
  void MergeFrom(const PkgUserCheckInvitionCodeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserCheckInvitionCodeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  inline bool has_gettype() const;
  inline void clear_gettype();
  static const int kGettypeFieldNumber = 1;
  inline ::comm::EnGetType gettype() const;
  inline void set_gettype(::comm::EnGetType value);

  // optional string invitioncode = 2;
  inline bool has_invitioncode() const;
  inline void clear_invitioncode();
  static const int kInvitioncodeFieldNumber = 2;
  inline const ::std::string& invitioncode() const;
  inline void set_invitioncode(const ::std::string& value);
  inline void set_invitioncode(const char* value);
  inline void set_invitioncode(const char* value, size_t size);
  inline ::std::string* mutable_invitioncode();
  inline ::std::string* release_invitioncode();
  inline void set_allocated_invitioncode(::std::string* invitioncode);

  // @@protoc_insertion_point(class_scope:comm.PkgUserCheckInvitionCodeReq)
 private:
  inline void set_has_gettype();
  inline void clear_has_gettype();
  inline void set_has_invitioncode();
  inline void clear_has_invitioncode();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr invitioncode_;
  int gettype_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgUserCheckInvitionCodeReq* default_instance_;
};
// -------------------------------------------------------------------

class PkgUserCheckInvitionCodeReply : public ::google::protobuf::Message {
 public:
  PkgUserCheckInvitionCodeReply();
  virtual ~PkgUserCheckInvitionCodeReply();

  PkgUserCheckInvitionCodeReply(const PkgUserCheckInvitionCodeReply& from);

  inline PkgUserCheckInvitionCodeReply& operator=(const PkgUserCheckInvitionCodeReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserCheckInvitionCodeReply& default_instance();

  void Swap(PkgUserCheckInvitionCodeReply* other);

  // implements Message ----------------------------------------------

  inline PkgUserCheckInvitionCodeReply* New() const { return New(NULL); }

  PkgUserCheckInvitionCodeReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserCheckInvitionCodeReply& from);
  void MergeFrom(const PkgUserCheckInvitionCodeReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserCheckInvitionCodeReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool issuccess = 1 [default = true];
  inline bool has_issuccess() const;
  inline void clear_issuccess();
  static const int kIssuccessFieldNumber = 1;
  inline bool issuccess() const;
  inline void set_issuccess(bool value);

  // optional string err = 2;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 2;
  inline const ::std::string& err() const;
  inline void set_err(const ::std::string& value);
  inline void set_err(const char* value);
  inline void set_err(const char* value, size_t size);
  inline ::std::string* mutable_err();
  inline ::std::string* release_err();
  inline void set_allocated_err(::std::string* err);

  // optional string phonenumber = 3;
  inline bool has_phonenumber() const;
  inline void clear_phonenumber();
  static const int kPhonenumberFieldNumber = 3;
  inline const ::std::string& phonenumber() const;
  inline void set_phonenumber(const ::std::string& value);
  inline void set_phonenumber(const char* value);
  inline void set_phonenumber(const char* value, size_t size);
  inline ::std::string* mutable_phonenumber();
  inline ::std::string* release_phonenumber();
  inline void set_allocated_phonenumber(::std::string* phonenumber);

  // optional string emailaddress = 4;
  inline bool has_emailaddress() const;
  inline void clear_emailaddress();
  static const int kEmailaddressFieldNumber = 4;
  inline const ::std::string& emailaddress() const;
  inline void set_emailaddress(const ::std::string& value);
  inline void set_emailaddress(const char* value);
  inline void set_emailaddress(const char* value, size_t size);
  inline ::std::string* mutable_emailaddress();
  inline ::std::string* release_emailaddress();
  inline void set_allocated_emailaddress(::std::string* emailaddress);

  // @@protoc_insertion_point(class_scope:comm.PkgUserCheckInvitionCodeReply)
 private:
  inline void set_has_issuccess();
  inline void clear_has_issuccess();
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_phonenumber();
  inline void clear_has_phonenumber();
  inline void set_has_emailaddress();
  inline void clear_has_emailaddress();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  ::google::protobuf::internal::ArenaStringPtr phonenumber_;
  ::google::protobuf::internal::ArenaStringPtr emailaddress_;
  bool issuccess_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgUserCheckInvitionCodeReply* default_instance_;
};
// -------------------------------------------------------------------

class PkgUserGetAuthReq : public ::google::protobuf::Message {
 public:
  PkgUserGetAuthReq();
  virtual ~PkgUserGetAuthReq();

  PkgUserGetAuthReq(const PkgUserGetAuthReq& from);

  inline PkgUserGetAuthReq& operator=(const PkgUserGetAuthReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserGetAuthReq& default_instance();

  void Swap(PkgUserGetAuthReq* other);

  // implements Message ----------------------------------------------

  inline PkgUserGetAuthReq* New() const { return New(NULL); }

  PkgUserGetAuthReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserGetAuthReq& from);
  void MergeFrom(const PkgUserGetAuthReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserGetAuthReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  inline bool has_gettype() const;
  inline void clear_gettype();
  static const int kGettypeFieldNumber = 1;
  inline ::comm::EnGetType gettype() const;
  inline void set_gettype(::comm::EnGetType value);

  // optional string phonenumber = 3;
  inline bool has_phonenumber() const;
  inline void clear_phonenumber();
  static const int kPhonenumberFieldNumber = 3;
  inline const ::std::string& phonenumber() const;
  inline void set_phonenumber(const ::std::string& value);
  inline void set_phonenumber(const char* value);
  inline void set_phonenumber(const char* value, size_t size);
  inline ::std::string* mutable_phonenumber();
  inline ::std::string* release_phonenumber();
  inline void set_allocated_phonenumber(::std::string* phonenumber);

  // optional string emailaddress = 4;
  inline bool has_emailaddress() const;
  inline void clear_emailaddress();
  static const int kEmailaddressFieldNumber = 4;
  inline const ::std::string& emailaddress() const;
  inline void set_emailaddress(const ::std::string& value);
  inline void set_emailaddress(const char* value);
  inline void set_emailaddress(const char* value, size_t size);
  inline ::std::string* mutable_emailaddress();
  inline ::std::string* release_emailaddress();
  inline void set_allocated_emailaddress(::std::string* emailaddress);

  // @@protoc_insertion_point(class_scope:comm.PkgUserGetAuthReq)
 private:
  inline void set_has_gettype();
  inline void clear_has_gettype();
  inline void set_has_phonenumber();
  inline void clear_has_phonenumber();
  inline void set_has_emailaddress();
  inline void clear_has_emailaddress();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr phonenumber_;
  ::google::protobuf::internal::ArenaStringPtr emailaddress_;
  int gettype_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgUserGetAuthReq* default_instance_;
};
// -------------------------------------------------------------------

class PkgUserGetAuthReply : public ::google::protobuf::Message {
 public:
  PkgUserGetAuthReply();
  virtual ~PkgUserGetAuthReply();

  PkgUserGetAuthReply(const PkgUserGetAuthReply& from);

  inline PkgUserGetAuthReply& operator=(const PkgUserGetAuthReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserGetAuthReply& default_instance();

  void Swap(PkgUserGetAuthReply* other);

  // implements Message ----------------------------------------------

  inline PkgUserGetAuthReply* New() const { return New(NULL); }

  PkgUserGetAuthReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserGetAuthReply& from);
  void MergeFrom(const PkgUserGetAuthReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserGetAuthReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool issuccess = 1 [default = true];
  inline bool has_issuccess() const;
  inline void clear_issuccess();
  static const int kIssuccessFieldNumber = 1;
  inline bool issuccess() const;
  inline void set_issuccess(bool value);

  // optional string err = 2;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 2;
  inline const ::std::string& err() const;
  inline void set_err(const ::std::string& value);
  inline void set_err(const char* value);
  inline void set_err(const char* value, size_t size);
  inline ::std::string* mutable_err();
  inline ::std::string* release_err();
  inline void set_allocated_err(::std::string* err);

  // @@protoc_insertion_point(class_scope:comm.PkgUserGetAuthReply)
 private:
  inline void set_has_issuccess();
  inline void clear_has_issuccess();
  inline void set_has_err();
  inline void clear_has_err();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  bool issuccess_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgUserGetAuthReply* default_instance_;
};
// -------------------------------------------------------------------

class PkgUserCreateReq : public ::google::protobuf::Message {
 public:
  PkgUserCreateReq();
  virtual ~PkgUserCreateReq();

  PkgUserCreateReq(const PkgUserCreateReq& from);

  inline PkgUserCreateReq& operator=(const PkgUserCreateReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserCreateReq& default_instance();

  void Swap(PkgUserCreateReq* other);

  // implements Message ----------------------------------------------

  inline PkgUserCreateReq* New() const { return New(NULL); }

  PkgUserCreateReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserCreateReq& from);
  void MergeFrom(const PkgUserCreateReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserCreateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  inline bool has_gettype() const;
  inline void clear_gettype();
  static const int kGettypeFieldNumber = 1;
  inline ::comm::EnGetType gettype() const;
  inline void set_gettype(::comm::EnGetType value);

  // optional string phonenumber = 2;
  inline bool has_phonenumber() const;
  inline void clear_phonenumber();
  static const int kPhonenumberFieldNumber = 2;
  inline const ::std::string& phonenumber() const;
  inline void set_phonenumber(const ::std::string& value);
  inline void set_phonenumber(const char* value);
  inline void set_phonenumber(const char* value, size_t size);
  inline ::std::string* mutable_phonenumber();
  inline ::std::string* release_phonenumber();
  inline void set_allocated_phonenumber(::std::string* phonenumber);

  // optional string emailaddress = 3;
  inline bool has_emailaddress() const;
  inline void clear_emailaddress();
  static const int kEmailaddressFieldNumber = 3;
  inline const ::std::string& emailaddress() const;
  inline void set_emailaddress(const ::std::string& value);
  inline void set_emailaddress(const char* value);
  inline void set_emailaddress(const char* value, size_t size);
  inline ::std::string* mutable_emailaddress();
  inline ::std::string* release_emailaddress();
  inline void set_allocated_emailaddress(::std::string* emailaddress);

  // optional string authcode = 4;
  inline bool has_authcode() const;
  inline void clear_authcode();
  static const int kAuthcodeFieldNumber = 4;
  inline const ::std::string& authcode() const;
  inline void set_authcode(const ::std::string& value);
  inline void set_authcode(const char* value);
  inline void set_authcode(const char* value, size_t size);
  inline ::std::string* mutable_authcode();
  inline ::std::string* release_authcode();
  inline void set_allocated_authcode(::std::string* authcode);

  // optional string invitioncode = 5;
  inline bool has_invitioncode() const;
  inline void clear_invitioncode();
  static const int kInvitioncodeFieldNumber = 5;
  inline const ::std::string& invitioncode() const;
  inline void set_invitioncode(const ::std::string& value);
  inline void set_invitioncode(const char* value);
  inline void set_invitioncode(const char* value, size_t size);
  inline ::std::string* mutable_invitioncode();
  inline ::std::string* release_invitioncode();
  inline void set_allocated_invitioncode(::std::string* invitioncode);

  // @@protoc_insertion_point(class_scope:comm.PkgUserCreateReq)
 private:
  inline void set_has_gettype();
  inline void clear_has_gettype();
  inline void set_has_phonenumber();
  inline void clear_has_phonenumber();
  inline void set_has_emailaddress();
  inline void clear_has_emailaddress();
  inline void set_has_authcode();
  inline void clear_has_authcode();
  inline void set_has_invitioncode();
  inline void clear_has_invitioncode();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr phonenumber_;
  ::google::protobuf::internal::ArenaStringPtr emailaddress_;
  ::google::protobuf::internal::ArenaStringPtr authcode_;
  ::google::protobuf::internal::ArenaStringPtr invitioncode_;
  int gettype_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgUserCreateReq* default_instance_;
};
// -------------------------------------------------------------------

class PkgUserCreateReply : public ::google::protobuf::Message {
 public:
  PkgUserCreateReply();
  virtual ~PkgUserCreateReply();

  PkgUserCreateReply(const PkgUserCreateReply& from);

  inline PkgUserCreateReply& operator=(const PkgUserCreateReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserCreateReply& default_instance();

  void Swap(PkgUserCreateReply* other);

  // implements Message ----------------------------------------------

  inline PkgUserCreateReply* New() const { return New(NULL); }

  PkgUserCreateReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserCreateReply& from);
  void MergeFrom(const PkgUserCreateReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserCreateReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool issuccess = 1 [default = true];
  inline bool has_issuccess() const;
  inline void clear_issuccess();
  static const int kIssuccessFieldNumber = 1;
  inline bool issuccess() const;
  inline void set_issuccess(bool value);

  // optional string err = 2;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 2;
  inline const ::std::string& err() const;
  inline void set_err(const ::std::string& value);
  inline void set_err(const char* value);
  inline void set_err(const char* value, size_t size);
  inline ::std::string* mutable_err();
  inline ::std::string* release_err();
  inline void set_allocated_err(::std::string* err);

  // optional int32 userid = 3;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 3;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);

  // optional string realname = 11;
  inline bool has_realname() const;
  inline void clear_realname();
  static const int kRealnameFieldNumber = 11;
  inline const ::std::string& realname() const;
  inline void set_realname(const ::std::string& value);
  inline void set_realname(const char* value);
  inline void set_realname(const char* value, size_t size);
  inline ::std::string* mutable_realname();
  inline ::std::string* release_realname();
  inline void set_allocated_realname(::std::string* realname);

  // @@protoc_insertion_point(class_scope:comm.PkgUserCreateReply)
 private:
  inline void set_has_issuccess();
  inline void clear_has_issuccess();
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_realname();
  inline void clear_has_realname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  bool issuccess_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::internal::ArenaStringPtr realname_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgUserCreateReply* default_instance_;
};
// -------------------------------------------------------------------

class PkgUserLoginReq : public ::google::protobuf::Message {
 public:
  PkgUserLoginReq();
  virtual ~PkgUserLoginReq();

  PkgUserLoginReq(const PkgUserLoginReq& from);

  inline PkgUserLoginReq& operator=(const PkgUserLoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserLoginReq& default_instance();

  void Swap(PkgUserLoginReq* other);

  // implements Message ----------------------------------------------

  inline PkgUserLoginReq* New() const { return New(NULL); }

  PkgUserLoginReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserLoginReq& from);
  void MergeFrom(const PkgUserLoginReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  inline bool has_gettype() const;
  inline void clear_gettype();
  static const int kGettypeFieldNumber = 1;
  inline ::comm::EnGetType gettype() const;
  inline void set_gettype(::comm::EnGetType value);

  // optional int32 userid = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 2;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);

  // optional string phonenumber = 3;
  inline bool has_phonenumber() const;
  inline void clear_phonenumber();
  static const int kPhonenumberFieldNumber = 3;
  inline const ::std::string& phonenumber() const;
  inline void set_phonenumber(const ::std::string& value);
  inline void set_phonenumber(const char* value);
  inline void set_phonenumber(const char* value, size_t size);
  inline ::std::string* mutable_phonenumber();
  inline ::std::string* release_phonenumber();
  inline void set_allocated_phonenumber(::std::string* phonenumber);

  // optional string emailaddress = 4;
  inline bool has_emailaddress() const;
  inline void clear_emailaddress();
  static const int kEmailaddressFieldNumber = 4;
  inline const ::std::string& emailaddress() const;
  inline void set_emailaddress(const ::std::string& value);
  inline void set_emailaddress(const char* value);
  inline void set_emailaddress(const char* value, size_t size);
  inline ::std::string* mutable_emailaddress();
  inline ::std::string* release_emailaddress();
  inline void set_allocated_emailaddress(::std::string* emailaddress);

  // optional string username = 5;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 5;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // required string password = 10;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 10;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // optional string hashedserversn = 100;
  inline bool has_hashedserversn() const;
  inline void clear_hashedserversn();
  static const int kHashedserversnFieldNumber = 100;
  inline const ::std::string& hashedserversn() const;
  inline void set_hashedserversn(const ::std::string& value);
  inline void set_hashedserversn(const char* value);
  inline void set_hashedserversn(const char* value, size_t size);
  inline ::std::string* mutable_hashedserversn();
  inline ::std::string* release_hashedserversn();
  inline void set_allocated_hashedserversn(::std::string* hashedserversn);

  // @@protoc_insertion_point(class_scope:comm.PkgUserLoginReq)
 private:
  inline void set_has_gettype();
  inline void clear_has_gettype();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_phonenumber();
  inline void clear_has_phonenumber();
  inline void set_has_emailaddress();
  inline void clear_has_emailaddress();
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_password();
  inline void clear_has_password();
  inline void set_has_hashedserversn();
  inline void clear_has_hashedserversn();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int gettype_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::internal::ArenaStringPtr phonenumber_;
  ::google::protobuf::internal::ArenaStringPtr emailaddress_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr hashedserversn_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgUserLoginReq* default_instance_;
};
// -------------------------------------------------------------------

class PkgCompanyInfo : public ::google::protobuf::Message {
 public:
  PkgCompanyInfo();
  virtual ~PkgCompanyInfo();

  PkgCompanyInfo(const PkgCompanyInfo& from);

  inline PkgCompanyInfo& operator=(const PkgCompanyInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgCompanyInfo& default_instance();

  void Swap(PkgCompanyInfo* other);

  // implements Message ----------------------------------------------

  inline PkgCompanyInfo* New() const { return New(NULL); }

  PkgCompanyInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgCompanyInfo& from);
  void MergeFrom(const PkgCompanyInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgCompanyInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 companyid = 16 [default = 0];
  inline bool has_companyid() const;
  inline void clear_companyid();
  static const int kCompanyidFieldNumber = 16;
  inline ::google::protobuf::int32 companyid() const;
  inline void set_companyid(::google::protobuf::int32 value);

  // optional string companyname = 17;
  inline bool has_companyname() const;
  inline void clear_companyname();
  static const int kCompanynameFieldNumber = 17;
  inline const ::std::string& companyname() const;
  inline void set_companyname(const ::std::string& value);
  inline void set_companyname(const char* value);
  inline void set_companyname(const char* value, size_t size);
  inline ::std::string* mutable_companyname();
  inline ::std::string* release_companyname();
  inline void set_allocated_companyname(::std::string* companyname);

  // optional int32 companyusernumber = 18;
  inline bool has_companyusernumber() const;
  inline void clear_companyusernumber();
  static const int kCompanyusernumberFieldNumber = 18;
  inline ::google::protobuf::int32 companyusernumber() const;
  inline void set_companyusernumber(::google::protobuf::int32 value);

  // optional string companycreatetime = 21;
  inline bool has_companycreatetime() const;
  inline void clear_companycreatetime();
  static const int kCompanycreatetimeFieldNumber = 21;
  inline const ::std::string& companycreatetime() const;
  inline void set_companycreatetime(const ::std::string& value);
  inline void set_companycreatetime(const char* value);
  inline void set_companycreatetime(const char* value, size_t size);
  inline ::std::string* mutable_companycreatetime();
  inline ::std::string* release_companycreatetime();
  inline void set_allocated_companycreatetime(::std::string* companycreatetime);

  // @@protoc_insertion_point(class_scope:comm.PkgCompanyInfo)
 private:
  inline void set_has_companyid();
  inline void clear_has_companyid();
  inline void set_has_companyname();
  inline void clear_has_companyname();
  inline void set_has_companyusernumber();
  inline void clear_has_companyusernumber();
  inline void set_has_companycreatetime();
  inline void clear_has_companycreatetime();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr companyname_;
  ::google::protobuf::int32 companyid_;
  ::google::protobuf::int32 companyusernumber_;
  ::google::protobuf::internal::ArenaStringPtr companycreatetime_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgCompanyInfo* default_instance_;
};
// -------------------------------------------------------------------

class PkgUserLoginReply : public ::google::protobuf::Message {
 public:
  PkgUserLoginReply();
  virtual ~PkgUserLoginReply();

  PkgUserLoginReply(const PkgUserLoginReply& from);

  inline PkgUserLoginReply& operator=(const PkgUserLoginReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserLoginReply& default_instance();

  void Swap(PkgUserLoginReply* other);

  // implements Message ----------------------------------------------

  inline PkgUserLoginReply* New() const { return New(NULL); }

  PkgUserLoginReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserLoginReply& from);
  void MergeFrom(const PkgUserLoginReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserLoginReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool issuccess = 1 [default = true];
  inline bool has_issuccess() const;
  inline void clear_issuccess();
  static const int kIssuccessFieldNumber = 1;
  inline bool issuccess() const;
  inline void set_issuccess(bool value);

  // optional string err = 2;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 2;
  inline const ::std::string& err() const;
  inline void set_err(const ::std::string& value);
  inline void set_err(const char* value);
  inline void set_err(const char* value, size_t size);
  inline ::std::string* mutable_err();
  inline ::std::string* release_err();
  inline void set_allocated_err(::std::string* err);

  // optional int32 userid = 3;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 3;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);

  // optional string username = 10;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 10;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // optional string realname = 11;
  inline bool has_realname() const;
  inline void clear_realname();
  static const int kRealnameFieldNumber = 11;
  inline const ::std::string& realname() const;
  inline void set_realname(const ::std::string& value);
  inline void set_realname(const char* value);
  inline void set_realname(const char* value, size_t size);
  inline ::std::string* mutable_realname();
  inline ::std::string* release_realname();
  inline void set_allocated_realname(::std::string* realname);

  // optional string phonenumber = 12;
  inline bool has_phonenumber() const;
  inline void clear_phonenumber();
  static const int kPhonenumberFieldNumber = 12;
  inline const ::std::string& phonenumber() const;
  inline void set_phonenumber(const ::std::string& value);
  inline void set_phonenumber(const char* value);
  inline void set_phonenumber(const char* value, size_t size);
  inline ::std::string* mutable_phonenumber();
  inline ::std::string* release_phonenumber();
  inline void set_allocated_phonenumber(::std::string* phonenumber);

  // optional string emailaddress = 13;
  inline bool has_emailaddress() const;
  inline void clear_emailaddress();
  static const int kEmailaddressFieldNumber = 13;
  inline const ::std::string& emailaddress() const;
  inline void set_emailaddress(const ::std::string& value);
  inline void set_emailaddress(const char* value);
  inline void set_emailaddress(const char* value, size_t size);
  inline ::std::string* mutable_emailaddress();
  inline ::std::string* release_emailaddress();
  inline void set_allocated_emailaddress(::std::string* emailaddress);

  // optional bool isloginsuccess = 14;
  inline bool has_isloginsuccess() const;
  inline void clear_isloginsuccess();
  static const int kIsloginsuccessFieldNumber = 14;
  inline bool isloginsuccess() const;
  inline void set_isloginsuccess(bool value);

  // optional int32 permission = 15;
  inline bool has_permission() const;
  inline void clear_permission();
  static const int kPermissionFieldNumber = 15;
  inline ::google::protobuf::int32 permission() const;
  inline void set_permission(::google::protobuf::int32 value);

  // optional int32 companyid = 16 [default = 0];
  inline bool has_companyid() const;
  inline void clear_companyid();
  static const int kCompanyidFieldNumber = 16;
  inline ::google::protobuf::int32 companyid() const;
  inline void set_companyid(::google::protobuf::int32 value);

  // optional string companyname = 17;
  inline bool has_companyname() const;
  inline void clear_companyname();
  static const int kCompanynameFieldNumber = 17;
  inline const ::std::string& companyname() const;
  inline void set_companyname(const ::std::string& value);
  inline void set_companyname(const char* value);
  inline void set_companyname(const char* value, size_t size);
  inline ::std::string* mutable_companyname();
  inline ::std::string* release_companyname();
  inline void set_allocated_companyname(::std::string* companyname);

  // optional int32 companyusernumber = 18;
  inline bool has_companyusernumber() const;
  inline void clear_companyusernumber();
  static const int kCompanyusernumberFieldNumber = 18;
  inline ::google::protobuf::int32 companyusernumber() const;
  inline void set_companyusernumber(::google::protobuf::int32 value);

  // optional string createtime = 19;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreatetimeFieldNumber = 19;
  inline const ::std::string& createtime() const;
  inline void set_createtime(const ::std::string& value);
  inline void set_createtime(const char* value);
  inline void set_createtime(const char* value, size_t size);
  inline ::std::string* mutable_createtime();
  inline ::std::string* release_createtime();
  inline void set_allocated_createtime(::std::string* createtime);

  // optional string rolename = 20;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRolenameFieldNumber = 20;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // optional string companycreatetime = 21;
  inline bool has_companycreatetime() const;
  inline void clear_companycreatetime();
  static const int kCompanycreatetimeFieldNumber = 21;
  inline const ::std::string& companycreatetime() const;
  inline void set_companycreatetime(const ::std::string& value);
  inline void set_companycreatetime(const char* value);
  inline void set_companycreatetime(const char* value, size_t size);
  inline ::std::string* mutable_companycreatetime();
  inline ::std::string* release_companycreatetime();
  inline void set_allocated_companycreatetime(::std::string* companycreatetime);

  // optional int32 permissionroleid = 22;
  inline bool has_permissionroleid() const;
  inline void clear_permissionroleid();
  static const int kPermissionroleidFieldNumber = 22;
  inline ::google::protobuf::int32 permissionroleid() const;
  inline void set_permissionroleid(::google::protobuf::int32 value);

  // optional .comm.PkgCompanyInfo companyinfo = 100;
  inline bool has_companyinfo() const;
  inline void clear_companyinfo();
  static const int kCompanyinfoFieldNumber = 100;
  inline const ::comm::PkgCompanyInfo& companyinfo() const;
  inline ::comm::PkgCompanyInfo* mutable_companyinfo();
  inline ::comm::PkgCompanyInfo* release_companyinfo();
  inline void set_allocated_companyinfo(::comm::PkgCompanyInfo* companyinfo);

  // @@protoc_insertion_point(class_scope:comm.PkgUserLoginReply)
 private:
  inline void set_has_issuccess();
  inline void clear_has_issuccess();
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_realname();
  inline void clear_has_realname();
  inline void set_has_phonenumber();
  inline void clear_has_phonenumber();
  inline void set_has_emailaddress();
  inline void clear_has_emailaddress();
  inline void set_has_isloginsuccess();
  inline void clear_has_isloginsuccess();
  inline void set_has_permission();
  inline void clear_has_permission();
  inline void set_has_companyid();
  inline void clear_has_companyid();
  inline void set_has_companyname();
  inline void clear_has_companyname();
  inline void set_has_companyusernumber();
  inline void clear_has_companyusernumber();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_rolename();
  inline void clear_has_rolename();
  inline void set_has_companycreatetime();
  inline void clear_has_companycreatetime();
  inline void set_has_permissionroleid();
  inline void clear_has_permissionroleid();
  inline void set_has_companyinfo();
  inline void clear_has_companyinfo();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::int32 userid_;
  bool issuccess_;
  bool isloginsuccess_;
  ::google::protobuf::internal::ArenaStringPtr realname_;
  ::google::protobuf::internal::ArenaStringPtr phonenumber_;
  ::google::protobuf::internal::ArenaStringPtr emailaddress_;
  ::google::protobuf::int32 permission_;
  ::google::protobuf::int32 companyid_;
  ::google::protobuf::internal::ArenaStringPtr companyname_;
  ::google::protobuf::internal::ArenaStringPtr createtime_;
  ::google::protobuf::internal::ArenaStringPtr rolename_;
  ::google::protobuf::int32 companyusernumber_;
  ::google::protobuf::int32 permissionroleid_;
  ::google::protobuf::internal::ArenaStringPtr companycreatetime_;
  ::comm::PkgCompanyInfo* companyinfo_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgUserLoginReply* default_instance_;
};
// -------------------------------------------------------------------

class PkgUserGetPasswordReq : public ::google::protobuf::Message {
 public:
  PkgUserGetPasswordReq();
  virtual ~PkgUserGetPasswordReq();

  PkgUserGetPasswordReq(const PkgUserGetPasswordReq& from);

  inline PkgUserGetPasswordReq& operator=(const PkgUserGetPasswordReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserGetPasswordReq& default_instance();

  void Swap(PkgUserGetPasswordReq* other);

  // implements Message ----------------------------------------------

  inline PkgUserGetPasswordReq* New() const { return New(NULL); }

  PkgUserGetPasswordReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserGetPasswordReq& from);
  void MergeFrom(const PkgUserGetPasswordReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserGetPasswordReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  inline bool has_gettype() const;
  inline void clear_gettype();
  static const int kGettypeFieldNumber = 1;
  inline ::comm::EnGetType gettype() const;
  inline void set_gettype(::comm::EnGetType value);

  // optional string phonenumber = 2;
  inline bool has_phonenumber() const;
  inline void clear_phonenumber();
  static const int kPhonenumberFieldNumber = 2;
  inline const ::std::string& phonenumber() const;
  inline void set_phonenumber(const ::std::string& value);
  inline void set_phonenumber(const char* value);
  inline void set_phonenumber(const char* value, size_t size);
  inline ::std::string* mutable_phonenumber();
  inline ::std::string* release_phonenumber();
  inline void set_allocated_phonenumber(::std::string* phonenumber);

  // optional string emailaddress = 3;
  inline bool has_emailaddress() const;
  inline void clear_emailaddress();
  static const int kEmailaddressFieldNumber = 3;
  inline const ::std::string& emailaddress() const;
  inline void set_emailaddress(const ::std::string& value);
  inline void set_emailaddress(const char* value);
  inline void set_emailaddress(const char* value, size_t size);
  inline ::std::string* mutable_emailaddress();
  inline ::std::string* release_emailaddress();
  inline void set_allocated_emailaddress(::std::string* emailaddress);

  // @@protoc_insertion_point(class_scope:comm.PkgUserGetPasswordReq)
 private:
  inline void set_has_gettype();
  inline void clear_has_gettype();
  inline void set_has_phonenumber();
  inline void clear_has_phonenumber();
  inline void set_has_emailaddress();
  inline void clear_has_emailaddress();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr phonenumber_;
  ::google::protobuf::internal::ArenaStringPtr emailaddress_;
  int gettype_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgUserGetPasswordReq* default_instance_;
};
// -------------------------------------------------------------------

class PkgUserGetPasswordReply : public ::google::protobuf::Message {
 public:
  PkgUserGetPasswordReply();
  virtual ~PkgUserGetPasswordReply();

  PkgUserGetPasswordReply(const PkgUserGetPasswordReply& from);

  inline PkgUserGetPasswordReply& operator=(const PkgUserGetPasswordReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserGetPasswordReply& default_instance();

  void Swap(PkgUserGetPasswordReply* other);

  // implements Message ----------------------------------------------

  inline PkgUserGetPasswordReply* New() const { return New(NULL); }

  PkgUserGetPasswordReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserGetPasswordReply& from);
  void MergeFrom(const PkgUserGetPasswordReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserGetPasswordReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool issuccess = 1 [default = true];
  inline bool has_issuccess() const;
  inline void clear_issuccess();
  static const int kIssuccessFieldNumber = 1;
  inline bool issuccess() const;
  inline void set_issuccess(bool value);

  // optional string err = 2;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 2;
  inline const ::std::string& err() const;
  inline void set_err(const ::std::string& value);
  inline void set_err(const char* value);
  inline void set_err(const char* value, size_t size);
  inline ::std::string* mutable_err();
  inline ::std::string* release_err();
  inline void set_allocated_err(::std::string* err);

  // @@protoc_insertion_point(class_scope:comm.PkgUserGetPasswordReply)
 private:
  inline void set_has_issuccess();
  inline void clear_has_issuccess();
  inline void set_has_err();
  inline void clear_has_err();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  bool issuccess_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgUserGetPasswordReply* default_instance_;
};
// -------------------------------------------------------------------

class PkgUserResetPasswordReq : public ::google::protobuf::Message {
 public:
  PkgUserResetPasswordReq();
  virtual ~PkgUserResetPasswordReq();

  PkgUserResetPasswordReq(const PkgUserResetPasswordReq& from);

  inline PkgUserResetPasswordReq& operator=(const PkgUserResetPasswordReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserResetPasswordReq& default_instance();

  void Swap(PkgUserResetPasswordReq* other);

  // implements Message ----------------------------------------------

  inline PkgUserResetPasswordReq* New() const { return New(NULL); }

  PkgUserResetPasswordReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserResetPasswordReq& from);
  void MergeFrom(const PkgUserResetPasswordReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserResetPasswordReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  inline bool has_gettype() const;
  inline void clear_gettype();
  static const int kGettypeFieldNumber = 1;
  inline ::comm::EnGetType gettype() const;
  inline void set_gettype(::comm::EnGetType value);

  // optional int32 userid = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 2;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);

  // optional string phonenumber = 3;
  inline bool has_phonenumber() const;
  inline void clear_phonenumber();
  static const int kPhonenumberFieldNumber = 3;
  inline const ::std::string& phonenumber() const;
  inline void set_phonenumber(const ::std::string& value);
  inline void set_phonenumber(const char* value);
  inline void set_phonenumber(const char* value, size_t size);
  inline ::std::string* mutable_phonenumber();
  inline ::std::string* release_phonenumber();
  inline void set_allocated_phonenumber(::std::string* phonenumber);

  // optional string emailaddress = 4;
  inline bool has_emailaddress() const;
  inline void clear_emailaddress();
  static const int kEmailaddressFieldNumber = 4;
  inline const ::std::string& emailaddress() const;
  inline void set_emailaddress(const ::std::string& value);
  inline void set_emailaddress(const char* value);
  inline void set_emailaddress(const char* value, size_t size);
  inline ::std::string* mutable_emailaddress();
  inline ::std::string* release_emailaddress();
  inline void set_allocated_emailaddress(::std::string* emailaddress);

  // optional string username = 5;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 5;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // required string authcode = 10;
  inline bool has_authcode() const;
  inline void clear_authcode();
  static const int kAuthcodeFieldNumber = 10;
  inline const ::std::string& authcode() const;
  inline void set_authcode(const ::std::string& value);
  inline void set_authcode(const char* value);
  inline void set_authcode(const char* value, size_t size);
  inline ::std::string* mutable_authcode();
  inline ::std::string* release_authcode();
  inline void set_allocated_authcode(::std::string* authcode);

  // @@protoc_insertion_point(class_scope:comm.PkgUserResetPasswordReq)
 private:
  inline void set_has_gettype();
  inline void clear_has_gettype();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_phonenumber();
  inline void clear_has_phonenumber();
  inline void set_has_emailaddress();
  inline void clear_has_emailaddress();
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_authcode();
  inline void clear_has_authcode();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int gettype_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::internal::ArenaStringPtr phonenumber_;
  ::google::protobuf::internal::ArenaStringPtr emailaddress_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr authcode_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgUserResetPasswordReq* default_instance_;
};
// -------------------------------------------------------------------

class PkgUserResetPasswordReply : public ::google::protobuf::Message {
 public:
  PkgUserResetPasswordReply();
  virtual ~PkgUserResetPasswordReply();

  PkgUserResetPasswordReply(const PkgUserResetPasswordReply& from);

  inline PkgUserResetPasswordReply& operator=(const PkgUserResetPasswordReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserResetPasswordReply& default_instance();

  void Swap(PkgUserResetPasswordReply* other);

  // implements Message ----------------------------------------------

  inline PkgUserResetPasswordReply* New() const { return New(NULL); }

  PkgUserResetPasswordReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserResetPasswordReply& from);
  void MergeFrom(const PkgUserResetPasswordReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserResetPasswordReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool issuccess = 1 [default = true];
  inline bool has_issuccess() const;
  inline void clear_issuccess();
  static const int kIssuccessFieldNumber = 1;
  inline bool issuccess() const;
  inline void set_issuccess(bool value);

  // optional string err = 2;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 2;
  inline const ::std::string& err() const;
  inline void set_err(const ::std::string& value);
  inline void set_err(const char* value);
  inline void set_err(const char* value, size_t size);
  inline ::std::string* mutable_err();
  inline ::std::string* release_err();
  inline void set_allocated_err(::std::string* err);

  // optional string oldpassword = 3;
  inline bool has_oldpassword() const;
  inline void clear_oldpassword();
  static const int kOldpasswordFieldNumber = 3;
  inline const ::std::string& oldpassword() const;
  inline void set_oldpassword(const ::std::string& value);
  inline void set_oldpassword(const char* value);
  inline void set_oldpassword(const char* value, size_t size);
  inline ::std::string* mutable_oldpassword();
  inline ::std::string* release_oldpassword();
  inline void set_allocated_oldpassword(::std::string* oldpassword);

  // @@protoc_insertion_point(class_scope:comm.PkgUserResetPasswordReply)
 private:
  inline void set_has_issuccess();
  inline void clear_has_issuccess();
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_oldpassword();
  inline void clear_has_oldpassword();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  ::google::protobuf::internal::ArenaStringPtr oldpassword_;
  bool issuccess_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgUserResetPasswordReply* default_instance_;
};
// -------------------------------------------------------------------

class PkgUserSetReq : public ::google::protobuf::Message {
 public:
  PkgUserSetReq();
  virtual ~PkgUserSetReq();

  PkgUserSetReq(const PkgUserSetReq& from);

  inline PkgUserSetReq& operator=(const PkgUserSetReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserSetReq& default_instance();

  void Swap(PkgUserSetReq* other);

  // implements Message ----------------------------------------------

  inline PkgUserSetReq* New() const { return New(NULL); }

  PkgUserSetReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserSetReq& from);
  void MergeFrom(const PkgUserSetReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserSetReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef PkgUserSetReq_EnSetType EnSetType;
  static const EnSetType ST_PHONE = PkgUserSetReq_EnSetType_ST_PHONE;
  static const EnSetType ST_EMAIL = PkgUserSetReq_EnSetType_ST_EMAIL;
  static const EnSetType ST_USERNAME = PkgUserSetReq_EnSetType_ST_USERNAME;
  static const EnSetType ST_NEWPASSWORD = PkgUserSetReq_EnSetType_ST_NEWPASSWORD;
  static const EnSetType ST_REALNAME = PkgUserSetReq_EnSetType_ST_REALNAME;
  static inline bool EnSetType_IsValid(int value) {
    return PkgUserSetReq_EnSetType_IsValid(value);
  }
  static const EnSetType EnSetType_MIN =
    PkgUserSetReq_EnSetType_EnSetType_MIN;
  static const EnSetType EnSetType_MAX =
    PkgUserSetReq_EnSetType_EnSetType_MAX;
  static const int EnSetType_ARRAYSIZE =
    PkgUserSetReq_EnSetType_EnSetType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EnSetType_descriptor() {
    return PkgUserSetReq_EnSetType_descriptor();
  }
  static inline const ::std::string& EnSetType_Name(EnSetType value) {
    return PkgUserSetReq_EnSetType_Name(value);
  }
  static inline bool EnSetType_Parse(const ::std::string& name,
      EnSetType* value) {
    return PkgUserSetReq_EnSetType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  inline bool has_gettype() const;
  inline void clear_gettype();
  static const int kGettypeFieldNumber = 1;
  inline ::comm::EnGetType gettype() const;
  inline void set_gettype(::comm::EnGetType value);

  // required int32 settype = 2;
  inline bool has_settype() const;
  inline void clear_settype();
  static const int kSettypeFieldNumber = 2;
  inline ::google::protobuf::int32 settype() const;
  inline void set_settype(::google::protobuf::int32 value);

  // optional int32 userid = 3;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 3;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);

  // required string password = 4;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 4;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // optional string phonenumber = 5;
  inline bool has_phonenumber() const;
  inline void clear_phonenumber();
  static const int kPhonenumberFieldNumber = 5;
  inline const ::std::string& phonenumber() const;
  inline void set_phonenumber(const ::std::string& value);
  inline void set_phonenumber(const char* value);
  inline void set_phonenumber(const char* value, size_t size);
  inline ::std::string* mutable_phonenumber();
  inline ::std::string* release_phonenumber();
  inline void set_allocated_phonenumber(::std::string* phonenumber);

  // optional string emailaddress = 6;
  inline bool has_emailaddress() const;
  inline void clear_emailaddress();
  static const int kEmailaddressFieldNumber = 6;
  inline const ::std::string& emailaddress() const;
  inline void set_emailaddress(const ::std::string& value);
  inline void set_emailaddress(const char* value);
  inline void set_emailaddress(const char* value, size_t size);
  inline ::std::string* mutable_emailaddress();
  inline ::std::string* release_emailaddress();
  inline void set_allocated_emailaddress(::std::string* emailaddress);

  // optional string username = 7;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 7;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // required string newpassword = 8;
  inline bool has_newpassword() const;
  inline void clear_newpassword();
  static const int kNewpasswordFieldNumber = 8;
  inline const ::std::string& newpassword() const;
  inline void set_newpassword(const ::std::string& value);
  inline void set_newpassword(const char* value);
  inline void set_newpassword(const char* value, size_t size);
  inline ::std::string* mutable_newpassword();
  inline ::std::string* release_newpassword();
  inline void set_allocated_newpassword(::std::string* newpassword);

  // optional string realname = 9;
  inline bool has_realname() const;
  inline void clear_realname();
  static const int kRealnameFieldNumber = 9;
  inline const ::std::string& realname() const;
  inline void set_realname(const ::std::string& value);
  inline void set_realname(const char* value);
  inline void set_realname(const char* value, size_t size);
  inline ::std::string* mutable_realname();
  inline ::std::string* release_realname();
  inline void set_allocated_realname(::std::string* realname);

  // @@protoc_insertion_point(class_scope:comm.PkgUserSetReq)
 private:
  inline void set_has_gettype();
  inline void clear_has_gettype();
  inline void set_has_settype();
  inline void clear_has_settype();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_password();
  inline void clear_has_password();
  inline void set_has_phonenumber();
  inline void clear_has_phonenumber();
  inline void set_has_emailaddress();
  inline void clear_has_emailaddress();
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_newpassword();
  inline void clear_has_newpassword();
  inline void set_has_realname();
  inline void clear_has_realname();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int gettype_;
  ::google::protobuf::int32 settype_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr phonenumber_;
  ::google::protobuf::internal::ArenaStringPtr emailaddress_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr newpassword_;
  ::google::protobuf::internal::ArenaStringPtr realname_;
  ::google::protobuf::int32 userid_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgUserSetReq* default_instance_;
};
// -------------------------------------------------------------------

class PkgUserSetReply : public ::google::protobuf::Message {
 public:
  PkgUserSetReply();
  virtual ~PkgUserSetReply();

  PkgUserSetReply(const PkgUserSetReply& from);

  inline PkgUserSetReply& operator=(const PkgUserSetReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserSetReply& default_instance();

  void Swap(PkgUserSetReply* other);

  // implements Message ----------------------------------------------

  inline PkgUserSetReply* New() const { return New(NULL); }

  PkgUserSetReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserSetReply& from);
  void MergeFrom(const PkgUserSetReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserSetReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool issuccess = 1 [default = true];
  inline bool has_issuccess() const;
  inline void clear_issuccess();
  static const int kIssuccessFieldNumber = 1;
  inline bool issuccess() const;
  inline void set_issuccess(bool value);

  // optional string err = 2;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 2;
  inline const ::std::string& err() const;
  inline void set_err(const ::std::string& value);
  inline void set_err(const char* value);
  inline void set_err(const char* value, size_t size);
  inline ::std::string* mutable_err();
  inline ::std::string* release_err();
  inline void set_allocated_err(::std::string* err);

  // @@protoc_insertion_point(class_scope:comm.PkgUserSetReply)
 private:
  inline void set_has_issuccess();
  inline void clear_has_issuccess();
  inline void set_has_err();
  inline void clear_has_err();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  bool issuccess_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgUserSetReply* default_instance_;
};
// -------------------------------------------------------------------

class PkgUserInvitionUserReq : public ::google::protobuf::Message {
 public:
  PkgUserInvitionUserReq();
  virtual ~PkgUserInvitionUserReq();

  PkgUserInvitionUserReq(const PkgUserInvitionUserReq& from);

  inline PkgUserInvitionUserReq& operator=(const PkgUserInvitionUserReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserInvitionUserReq& default_instance();

  void Swap(PkgUserInvitionUserReq* other);

  // implements Message ----------------------------------------------

  inline PkgUserInvitionUserReq* New() const { return New(NULL); }

  PkgUserInvitionUserReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserInvitionUserReq& from);
  void MergeFrom(const PkgUserInvitionUserReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserInvitionUserReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  inline bool has_gettype() const;
  inline void clear_gettype();
  static const int kGettypeFieldNumber = 1;
  inline ::comm::EnGetType gettype() const;
  inline void set_gettype(::comm::EnGetType value);

  // optional string phonenumber = 3;
  inline bool has_phonenumber() const;
  inline void clear_phonenumber();
  static const int kPhonenumberFieldNumber = 3;
  inline const ::std::string& phonenumber() const;
  inline void set_phonenumber(const ::std::string& value);
  inline void set_phonenumber(const char* value);
  inline void set_phonenumber(const char* value, size_t size);
  inline ::std::string* mutable_phonenumber();
  inline ::std::string* release_phonenumber();
  inline void set_allocated_phonenumber(::std::string* phonenumber);

  // optional string emailaddress = 4;
  inline bool has_emailaddress() const;
  inline void clear_emailaddress();
  static const int kEmailaddressFieldNumber = 4;
  inline const ::std::string& emailaddress() const;
  inline void set_emailaddress(const ::std::string& value);
  inline void set_emailaddress(const char* value);
  inline void set_emailaddress(const char* value, size_t size);
  inline ::std::string* mutable_emailaddress();
  inline ::std::string* release_emailaddress();
  inline void set_allocated_emailaddress(::std::string* emailaddress);

  // optional string realname = 5;
  inline bool has_realname() const;
  inline void clear_realname();
  static const int kRealnameFieldNumber = 5;
  inline const ::std::string& realname() const;
  inline void set_realname(const ::std::string& value);
  inline void set_realname(const char* value);
  inline void set_realname(const char* value, size_t size);
  inline ::std::string* mutable_realname();
  inline ::std::string* release_realname();
  inline void set_allocated_realname(::std::string* realname);

  // @@protoc_insertion_point(class_scope:comm.PkgUserInvitionUserReq)
 private:
  inline void set_has_gettype();
  inline void clear_has_gettype();
  inline void set_has_phonenumber();
  inline void clear_has_phonenumber();
  inline void set_has_emailaddress();
  inline void clear_has_emailaddress();
  inline void set_has_realname();
  inline void clear_has_realname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr phonenumber_;
  ::google::protobuf::internal::ArenaStringPtr emailaddress_;
  ::google::protobuf::internal::ArenaStringPtr realname_;
  int gettype_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgUserInvitionUserReq* default_instance_;
};
// -------------------------------------------------------------------

class PkgUserInvitionUserReply : public ::google::protobuf::Message {
 public:
  PkgUserInvitionUserReply();
  virtual ~PkgUserInvitionUserReply();

  PkgUserInvitionUserReply(const PkgUserInvitionUserReply& from);

  inline PkgUserInvitionUserReply& operator=(const PkgUserInvitionUserReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserInvitionUserReply& default_instance();

  void Swap(PkgUserInvitionUserReply* other);

  // implements Message ----------------------------------------------

  inline PkgUserInvitionUserReply* New() const { return New(NULL); }

  PkgUserInvitionUserReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserInvitionUserReply& from);
  void MergeFrom(const PkgUserInvitionUserReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserInvitionUserReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool issuccess = 1 [default = true];
  inline bool has_issuccess() const;
  inline void clear_issuccess();
  static const int kIssuccessFieldNumber = 1;
  inline bool issuccess() const;
  inline void set_issuccess(bool value);

  // optional string err = 2;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 2;
  inline const ::std::string& err() const;
  inline void set_err(const ::std::string& value);
  inline void set_err(const char* value);
  inline void set_err(const char* value, size_t size);
  inline ::std::string* mutable_err();
  inline ::std::string* release_err();
  inline void set_allocated_err(::std::string* err);

  // optional string invitioncode = 3;
  inline bool has_invitioncode() const;
  inline void clear_invitioncode();
  static const int kInvitioncodeFieldNumber = 3;
  inline const ::std::string& invitioncode() const;
  inline void set_invitioncode(const ::std::string& value);
  inline void set_invitioncode(const char* value);
  inline void set_invitioncode(const char* value, size_t size);
  inline ::std::string* mutable_invitioncode();
  inline ::std::string* release_invitioncode();
  inline void set_allocated_invitioncode(::std::string* invitioncode);

  // @@protoc_insertion_point(class_scope:comm.PkgUserInvitionUserReply)
 private:
  inline void set_has_issuccess();
  inline void clear_has_issuccess();
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_invitioncode();
  inline void clear_has_invitioncode();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  ::google::protobuf::internal::ArenaStringPtr invitioncode_;
  bool issuccess_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgUserInvitionUserReply* default_instance_;
};
// -------------------------------------------------------------------

class PkgUserInvitionCheckReq : public ::google::protobuf::Message {
 public:
  PkgUserInvitionCheckReq();
  virtual ~PkgUserInvitionCheckReq();

  PkgUserInvitionCheckReq(const PkgUserInvitionCheckReq& from);

  inline PkgUserInvitionCheckReq& operator=(const PkgUserInvitionCheckReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserInvitionCheckReq& default_instance();

  void Swap(PkgUserInvitionCheckReq* other);

  // implements Message ----------------------------------------------

  inline PkgUserInvitionCheckReq* New() const { return New(NULL); }

  PkgUserInvitionCheckReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserInvitionCheckReq& from);
  void MergeFrom(const PkgUserInvitionCheckReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserInvitionCheckReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string invitioncode = 1;
  inline bool has_invitioncode() const;
  inline void clear_invitioncode();
  static const int kInvitioncodeFieldNumber = 1;
  inline const ::std::string& invitioncode() const;
  inline void set_invitioncode(const ::std::string& value);
  inline void set_invitioncode(const char* value);
  inline void set_invitioncode(const char* value, size_t size);
  inline ::std::string* mutable_invitioncode();
  inline ::std::string* release_invitioncode();
  inline void set_allocated_invitioncode(::std::string* invitioncode);

  // @@protoc_insertion_point(class_scope:comm.PkgUserInvitionCheckReq)
 private:
  inline void set_has_invitioncode();
  inline void clear_has_invitioncode();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr invitioncode_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgUserInvitionCheckReq* default_instance_;
};
// -------------------------------------------------------------------

class PkgUserInvitionCheckReply : public ::google::protobuf::Message {
 public:
  PkgUserInvitionCheckReply();
  virtual ~PkgUserInvitionCheckReply();

  PkgUserInvitionCheckReply(const PkgUserInvitionCheckReply& from);

  inline PkgUserInvitionCheckReply& operator=(const PkgUserInvitionCheckReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserInvitionCheckReply& default_instance();

  void Swap(PkgUserInvitionCheckReply* other);

  // implements Message ----------------------------------------------

  inline PkgUserInvitionCheckReply* New() const { return New(NULL); }

  PkgUserInvitionCheckReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserInvitionCheckReply& from);
  void MergeFrom(const PkgUserInvitionCheckReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserInvitionCheckReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool issuccess = 1 [default = true];
  inline bool has_issuccess() const;
  inline void clear_issuccess();
  static const int kIssuccessFieldNumber = 1;
  inline bool issuccess() const;
  inline void set_issuccess(bool value);

  // optional string err = 2;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 2;
  inline const ::std::string& err() const;
  inline void set_err(const ::std::string& value);
  inline void set_err(const char* value);
  inline void set_err(const char* value, size_t size);
  inline ::std::string* mutable_err();
  inline ::std::string* release_err();
  inline void set_allocated_err(::std::string* err);

  // optional int32 permission = 15;
  inline bool has_permission() const;
  inline void clear_permission();
  static const int kPermissionFieldNumber = 15;
  inline ::google::protobuf::int32 permission() const;
  inline void set_permission(::google::protobuf::int32 value);

  // optional int32 companyid = 16 [default = 0];
  inline bool has_companyid() const;
  inline void clear_companyid();
  static const int kCompanyidFieldNumber = 16;
  inline ::google::protobuf::int32 companyid() const;
  inline void set_companyid(::google::protobuf::int32 value);

  // optional string companyname = 17;
  inline bool has_companyname() const;
  inline void clear_companyname();
  static const int kCompanynameFieldNumber = 17;
  inline const ::std::string& companyname() const;
  inline void set_companyname(const ::std::string& value);
  inline void set_companyname(const char* value);
  inline void set_companyname(const char* value, size_t size);
  inline ::std::string* mutable_companyname();
  inline ::std::string* release_companyname();
  inline void set_allocated_companyname(::std::string* companyname);

  // optional int32 companyusernumber = 18;
  inline bool has_companyusernumber() const;
  inline void clear_companyusernumber();
  static const int kCompanyusernumberFieldNumber = 18;
  inline ::google::protobuf::int32 companyusernumber() const;
  inline void set_companyusernumber(::google::protobuf::int32 value);

  // optional string rolename = 20;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRolenameFieldNumber = 20;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // optional string companycreatetime = 21;
  inline bool has_companycreatetime() const;
  inline void clear_companycreatetime();
  static const int kCompanycreatetimeFieldNumber = 21;
  inline const ::std::string& companycreatetime() const;
  inline void set_companycreatetime(const ::std::string& value);
  inline void set_companycreatetime(const char* value);
  inline void set_companycreatetime(const char* value, size_t size);
  inline ::std::string* mutable_companycreatetime();
  inline ::std::string* release_companycreatetime();
  inline void set_allocated_companycreatetime(::std::string* companycreatetime);

  // optional int32 permissionroleid = 22;
  inline bool has_permissionroleid() const;
  inline void clear_permissionroleid();
  static const int kPermissionroleidFieldNumber = 22;
  inline ::google::protobuf::int32 permissionroleid() const;
  inline void set_permissionroleid(::google::protobuf::int32 value);

  // optional .comm.PkgCompanyInfo companyinfo = 100;
  inline bool has_companyinfo() const;
  inline void clear_companyinfo();
  static const int kCompanyinfoFieldNumber = 100;
  inline const ::comm::PkgCompanyInfo& companyinfo() const;
  inline ::comm::PkgCompanyInfo* mutable_companyinfo();
  inline ::comm::PkgCompanyInfo* release_companyinfo();
  inline void set_allocated_companyinfo(::comm::PkgCompanyInfo* companyinfo);

  // @@protoc_insertion_point(class_scope:comm.PkgUserInvitionCheckReply)
 private:
  inline void set_has_issuccess();
  inline void clear_has_issuccess();
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_permission();
  inline void clear_has_permission();
  inline void set_has_companyid();
  inline void clear_has_companyid();
  inline void set_has_companyname();
  inline void clear_has_companyname();
  inline void set_has_companyusernumber();
  inline void clear_has_companyusernumber();
  inline void set_has_rolename();
  inline void clear_has_rolename();
  inline void set_has_companycreatetime();
  inline void clear_has_companycreatetime();
  inline void set_has_permissionroleid();
  inline void clear_has_permissionroleid();
  inline void set_has_companyinfo();
  inline void clear_has_companyinfo();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  bool issuccess_;
  ::google::protobuf::int32 permission_;
  ::google::protobuf::internal::ArenaStringPtr companyname_;
  ::google::protobuf::int32 companyid_;
  ::google::protobuf::int32 companyusernumber_;
  ::google::protobuf::internal::ArenaStringPtr rolename_;
  ::google::protobuf::internal::ArenaStringPtr companycreatetime_;
  ::comm::PkgCompanyInfo* companyinfo_;
  ::google::protobuf::int32 permissionroleid_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgUserInvitionCheckReply* default_instance_;
};
// -------------------------------------------------------------------

class PkgUserCreateCompanyReq : public ::google::protobuf::Message {
 public:
  PkgUserCreateCompanyReq();
  virtual ~PkgUserCreateCompanyReq();

  PkgUserCreateCompanyReq(const PkgUserCreateCompanyReq& from);

  inline PkgUserCreateCompanyReq& operator=(const PkgUserCreateCompanyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserCreateCompanyReq& default_instance();

  void Swap(PkgUserCreateCompanyReq* other);

  // implements Message ----------------------------------------------

  inline PkgUserCreateCompanyReq* New() const { return New(NULL); }

  PkgUserCreateCompanyReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserCreateCompanyReq& from);
  void MergeFrom(const PkgUserCreateCompanyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserCreateCompanyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string companyname = 1;
  inline bool has_companyname() const;
  inline void clear_companyname();
  static const int kCompanynameFieldNumber = 1;
  inline const ::std::string& companyname() const;
  inline void set_companyname(const ::std::string& value);
  inline void set_companyname(const char* value);
  inline void set_companyname(const char* value, size_t size);
  inline ::std::string* mutable_companyname();
  inline ::std::string* release_companyname();
  inline void set_allocated_companyname(::std::string* companyname);

  // @@protoc_insertion_point(class_scope:comm.PkgUserCreateCompanyReq)
 private:
  inline void set_has_companyname();
  inline void clear_has_companyname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr companyname_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgUserCreateCompanyReq* default_instance_;
};
// -------------------------------------------------------------------

class PkgUserCreateCompanyReply : public ::google::protobuf::Message {
 public:
  PkgUserCreateCompanyReply();
  virtual ~PkgUserCreateCompanyReply();

  PkgUserCreateCompanyReply(const PkgUserCreateCompanyReply& from);

  inline PkgUserCreateCompanyReply& operator=(const PkgUserCreateCompanyReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserCreateCompanyReply& default_instance();

  void Swap(PkgUserCreateCompanyReply* other);

  // implements Message ----------------------------------------------

  inline PkgUserCreateCompanyReply* New() const { return New(NULL); }

  PkgUserCreateCompanyReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserCreateCompanyReply& from);
  void MergeFrom(const PkgUserCreateCompanyReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserCreateCompanyReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool issuccess = 1 [default = true];
  inline bool has_issuccess() const;
  inline void clear_issuccess();
  static const int kIssuccessFieldNumber = 1;
  inline bool issuccess() const;
  inline void set_issuccess(bool value);

  // optional string err = 2;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 2;
  inline const ::std::string& err() const;
  inline void set_err(const ::std::string& value);
  inline void set_err(const char* value);
  inline void set_err(const char* value, size_t size);
  inline ::std::string* mutable_err();
  inline ::std::string* release_err();
  inline void set_allocated_err(::std::string* err);

  // optional int32 companyid = 16 [default = 0];
  inline bool has_companyid() const;
  inline void clear_companyid();
  static const int kCompanyidFieldNumber = 16;
  inline ::google::protobuf::int32 companyid() const;
  inline void set_companyid(::google::protobuf::int32 value);

  // optional string companyname = 17;
  inline bool has_companyname() const;
  inline void clear_companyname();
  static const int kCompanynameFieldNumber = 17;
  inline const ::std::string& companyname() const;
  inline void set_companyname(const ::std::string& value);
  inline void set_companyname(const char* value);
  inline void set_companyname(const char* value, size_t size);
  inline ::std::string* mutable_companyname();
  inline ::std::string* release_companyname();
  inline void set_allocated_companyname(::std::string* companyname);

  // optional int32 companyusernumber = 18;
  inline bool has_companyusernumber() const;
  inline void clear_companyusernumber();
  static const int kCompanyusernumberFieldNumber = 18;
  inline ::google::protobuf::int32 companyusernumber() const;
  inline void set_companyusernumber(::google::protobuf::int32 value);

  // optional string rolename = 20;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRolenameFieldNumber = 20;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // optional string companycreatetime = 21;
  inline bool has_companycreatetime() const;
  inline void clear_companycreatetime();
  static const int kCompanycreatetimeFieldNumber = 21;
  inline const ::std::string& companycreatetime() const;
  inline void set_companycreatetime(const ::std::string& value);
  inline void set_companycreatetime(const char* value);
  inline void set_companycreatetime(const char* value, size_t size);
  inline ::std::string* mutable_companycreatetime();
  inline ::std::string* release_companycreatetime();
  inline void set_allocated_companycreatetime(::std::string* companycreatetime);

  // optional int32 permissionroleid = 22;
  inline bool has_permissionroleid() const;
  inline void clear_permissionroleid();
  static const int kPermissionroleidFieldNumber = 22;
  inline ::google::protobuf::int32 permissionroleid() const;
  inline void set_permissionroleid(::google::protobuf::int32 value);

  // optional .comm.PkgCompanyInfo companyinfo = 100;
  inline bool has_companyinfo() const;
  inline void clear_companyinfo();
  static const int kCompanyinfoFieldNumber = 100;
  inline const ::comm::PkgCompanyInfo& companyinfo() const;
  inline ::comm::PkgCompanyInfo* mutable_companyinfo();
  inline ::comm::PkgCompanyInfo* release_companyinfo();
  inline void set_allocated_companyinfo(::comm::PkgCompanyInfo* companyinfo);

  // @@protoc_insertion_point(class_scope:comm.PkgUserCreateCompanyReply)
 private:
  inline void set_has_issuccess();
  inline void clear_has_issuccess();
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_companyid();
  inline void clear_has_companyid();
  inline void set_has_companyname();
  inline void clear_has_companyname();
  inline void set_has_companyusernumber();
  inline void clear_has_companyusernumber();
  inline void set_has_rolename();
  inline void clear_has_rolename();
  inline void set_has_companycreatetime();
  inline void clear_has_companycreatetime();
  inline void set_has_permissionroleid();
  inline void clear_has_permissionroleid();
  inline void set_has_companyinfo();
  inline void clear_has_companyinfo();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  bool issuccess_;
  ::google::protobuf::int32 companyid_;
  ::google::protobuf::internal::ArenaStringPtr companyname_;
  ::google::protobuf::internal::ArenaStringPtr rolename_;
  ::google::protobuf::int32 companyusernumber_;
  ::google::protobuf::int32 permissionroleid_;
  ::google::protobuf::internal::ArenaStringPtr companycreatetime_;
  ::comm::PkgCompanyInfo* companyinfo_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgUserCreateCompanyReply* default_instance_;
};
// -------------------------------------------------------------------

class PkgUserReassignAdminReq : public ::google::protobuf::Message {
 public:
  PkgUserReassignAdminReq();
  virtual ~PkgUserReassignAdminReq();

  PkgUserReassignAdminReq(const PkgUserReassignAdminReq& from);

  inline PkgUserReassignAdminReq& operator=(const PkgUserReassignAdminReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserReassignAdminReq& default_instance();

  void Swap(PkgUserReassignAdminReq* other);

  // implements Message ----------------------------------------------

  inline PkgUserReassignAdminReq* New() const { return New(NULL); }

  PkgUserReassignAdminReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserReassignAdminReq& from);
  void MergeFrom(const PkgUserReassignAdminReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserReassignAdminReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 adminuserid = 2;
  inline bool has_adminuserid() const;
  inline void clear_adminuserid();
  static const int kAdminuseridFieldNumber = 2;
  inline ::google::protobuf::int32 adminuserid() const;
  inline void set_adminuserid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:comm.PkgUserReassignAdminReq)
 private:
  inline void set_has_adminuserid();
  inline void clear_has_adminuserid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 adminuserid_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgUserReassignAdminReq* default_instance_;
};
// -------------------------------------------------------------------

class PkgUserReassignAdminReply : public ::google::protobuf::Message {
 public:
  PkgUserReassignAdminReply();
  virtual ~PkgUserReassignAdminReply();

  PkgUserReassignAdminReply(const PkgUserReassignAdminReply& from);

  inline PkgUserReassignAdminReply& operator=(const PkgUserReassignAdminReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserReassignAdminReply& default_instance();

  void Swap(PkgUserReassignAdminReply* other);

  // implements Message ----------------------------------------------

  inline PkgUserReassignAdminReply* New() const { return New(NULL); }

  PkgUserReassignAdminReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserReassignAdminReply& from);
  void MergeFrom(const PkgUserReassignAdminReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserReassignAdminReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool issuccess = 1 [default = true];
  inline bool has_issuccess() const;
  inline void clear_issuccess();
  static const int kIssuccessFieldNumber = 1;
  inline bool issuccess() const;
  inline void set_issuccess(bool value);

  // optional string err = 2;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 2;
  inline const ::std::string& err() const;
  inline void set_err(const ::std::string& value);
  inline void set_err(const char* value);
  inline void set_err(const char* value, size_t size);
  inline ::std::string* mutable_err();
  inline ::std::string* release_err();
  inline void set_allocated_err(::std::string* err);

  // optional int32 permission = 15;
  inline bool has_permission() const;
  inline void clear_permission();
  static const int kPermissionFieldNumber = 15;
  inline ::google::protobuf::int32 permission() const;
  inline void set_permission(::google::protobuf::int32 value);

  // optional string rolename = 20;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRolenameFieldNumber = 20;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // optional int32 permissionroleid = 22;
  inline bool has_permissionroleid() const;
  inline void clear_permissionroleid();
  static const int kPermissionroleidFieldNumber = 22;
  inline ::google::protobuf::int32 permissionroleid() const;
  inline void set_permissionroleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:comm.PkgUserReassignAdminReply)
 private:
  inline void set_has_issuccess();
  inline void clear_has_issuccess();
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_permission();
  inline void clear_has_permission();
  inline void set_has_rolename();
  inline void clear_has_rolename();
  inline void set_has_permissionroleid();
  inline void clear_has_permissionroleid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  bool issuccess_;
  ::google::protobuf::int32 permission_;
  ::google::protobuf::internal::ArenaStringPtr rolename_;
  ::google::protobuf::int32 permissionroleid_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgUserReassignAdminReply* default_instance_;
};
// -------------------------------------------------------------------

class PkgUserDeleteFromCompanyReq : public ::google::protobuf::Message {
 public:
  PkgUserDeleteFromCompanyReq();
  virtual ~PkgUserDeleteFromCompanyReq();

  PkgUserDeleteFromCompanyReq(const PkgUserDeleteFromCompanyReq& from);

  inline PkgUserDeleteFromCompanyReq& operator=(const PkgUserDeleteFromCompanyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserDeleteFromCompanyReq& default_instance();

  void Swap(PkgUserDeleteFromCompanyReq* other);

  // implements Message ----------------------------------------------

  inline PkgUserDeleteFromCompanyReq* New() const { return New(NULL); }

  PkgUserDeleteFromCompanyReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserDeleteFromCompanyReq& from);
  void MergeFrom(const PkgUserDeleteFromCompanyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserDeleteFromCompanyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 useridlist = 1;
  inline int useridlist_size() const;
  inline void clear_useridlist();
  static const int kUseridlistFieldNumber = 1;
  inline ::google::protobuf::int32 useridlist(int index) const;
  inline void set_useridlist(int index, ::google::protobuf::int32 value);
  inline void add_useridlist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      useridlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_useridlist();

  // @@protoc_insertion_point(class_scope:comm.PkgUserDeleteFromCompanyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > useridlist_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgUserDeleteFromCompanyReq* default_instance_;
};
// -------------------------------------------------------------------

class PkgUserDeleteFromCompanyReply : public ::google::protobuf::Message {
 public:
  PkgUserDeleteFromCompanyReply();
  virtual ~PkgUserDeleteFromCompanyReply();

  PkgUserDeleteFromCompanyReply(const PkgUserDeleteFromCompanyReply& from);

  inline PkgUserDeleteFromCompanyReply& operator=(const PkgUserDeleteFromCompanyReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserDeleteFromCompanyReply& default_instance();

  void Swap(PkgUserDeleteFromCompanyReply* other);

  // implements Message ----------------------------------------------

  inline PkgUserDeleteFromCompanyReply* New() const { return New(NULL); }

  PkgUserDeleteFromCompanyReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserDeleteFromCompanyReply& from);
  void MergeFrom(const PkgUserDeleteFromCompanyReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserDeleteFromCompanyReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool issuccess = 1 [default = true];
  inline bool has_issuccess() const;
  inline void clear_issuccess();
  static const int kIssuccessFieldNumber = 1;
  inline bool issuccess() const;
  inline void set_issuccess(bool value);

  // optional string err = 2;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 2;
  inline const ::std::string& err() const;
  inline void set_err(const ::std::string& value);
  inline void set_err(const char* value);
  inline void set_err(const char* value, size_t size);
  inline ::std::string* mutable_err();
  inline ::std::string* release_err();
  inline void set_allocated_err(::std::string* err);

  // optional int32 companyusernumber = 18;
  inline bool has_companyusernumber() const;
  inline void clear_companyusernumber();
  static const int kCompanyusernumberFieldNumber = 18;
  inline ::google::protobuf::int32 companyusernumber() const;
  inline void set_companyusernumber(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:comm.PkgUserDeleteFromCompanyReply)
 private:
  inline void set_has_issuccess();
  inline void clear_has_issuccess();
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_companyusernumber();
  inline void clear_has_companyusernumber();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  bool issuccess_;
  ::google::protobuf::int32 companyusernumber_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgUserDeleteFromCompanyReply* default_instance_;
};
// -------------------------------------------------------------------

class PkgUserExitCompanyReq : public ::google::protobuf::Message {
 public:
  PkgUserExitCompanyReq();
  virtual ~PkgUserExitCompanyReq();

  PkgUserExitCompanyReq(const PkgUserExitCompanyReq& from);

  inline PkgUserExitCompanyReq& operator=(const PkgUserExitCompanyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserExitCompanyReq& default_instance();

  void Swap(PkgUserExitCompanyReq* other);

  // implements Message ----------------------------------------------

  inline PkgUserExitCompanyReq* New() const { return New(NULL); }

  PkgUserExitCompanyReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserExitCompanyReq& from);
  void MergeFrom(const PkgUserExitCompanyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserExitCompanyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef PkgUserExitCompanyReq_EnCmd EnCmd;
  static const EnCmd CMD_EXIT = PkgUserExitCompanyReq_EnCmd_CMD_EXIT;
  static const EnCmd CMD_DISMISS = PkgUserExitCompanyReq_EnCmd_CMD_DISMISS;
  static inline bool EnCmd_IsValid(int value) {
    return PkgUserExitCompanyReq_EnCmd_IsValid(value);
  }
  static const EnCmd EnCmd_MIN =
    PkgUserExitCompanyReq_EnCmd_EnCmd_MIN;
  static const EnCmd EnCmd_MAX =
    PkgUserExitCompanyReq_EnCmd_EnCmd_MAX;
  static const int EnCmd_ARRAYSIZE =
    PkgUserExitCompanyReq_EnCmd_EnCmd_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EnCmd_descriptor() {
    return PkgUserExitCompanyReq_EnCmd_descriptor();
  }
  static inline const ::std::string& EnCmd_Name(EnCmd value) {
    return PkgUserExitCompanyReq_EnCmd_Name(value);
  }
  static inline bool EnCmd_Parse(const ::std::string& name,
      EnCmd* value) {
    return PkgUserExitCompanyReq_EnCmd_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .comm.PkgUserExitCompanyReq.EnCmd encmd = 1 [default = CMD_EXIT];
  inline bool has_encmd() const;
  inline void clear_encmd();
  static const int kEncmdFieldNumber = 1;
  inline ::comm::PkgUserExitCompanyReq_EnCmd encmd() const;
  inline void set_encmd(::comm::PkgUserExitCompanyReq_EnCmd value);

  // @@protoc_insertion_point(class_scope:comm.PkgUserExitCompanyReq)
 private:
  inline void set_has_encmd();
  inline void clear_has_encmd();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int encmd_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgUserExitCompanyReq* default_instance_;
};
// -------------------------------------------------------------------

class PkgUserExitCompanyReply : public ::google::protobuf::Message {
 public:
  PkgUserExitCompanyReply();
  virtual ~PkgUserExitCompanyReply();

  PkgUserExitCompanyReply(const PkgUserExitCompanyReply& from);

  inline PkgUserExitCompanyReply& operator=(const PkgUserExitCompanyReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserExitCompanyReply& default_instance();

  void Swap(PkgUserExitCompanyReply* other);

  // implements Message ----------------------------------------------

  inline PkgUserExitCompanyReply* New() const { return New(NULL); }

  PkgUserExitCompanyReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserExitCompanyReply& from);
  void MergeFrom(const PkgUserExitCompanyReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserExitCompanyReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool issuccess = 1 [default = true];
  inline bool has_issuccess() const;
  inline void clear_issuccess();
  static const int kIssuccessFieldNumber = 1;
  inline bool issuccess() const;
  inline void set_issuccess(bool value);

  // optional string err = 2;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 2;
  inline const ::std::string& err() const;
  inline void set_err(const ::std::string& value);
  inline void set_err(const char* value);
  inline void set_err(const char* value, size_t size);
  inline ::std::string* mutable_err();
  inline ::std::string* release_err();
  inline void set_allocated_err(::std::string* err);

  // @@protoc_insertion_point(class_scope:comm.PkgUserExitCompanyReply)
 private:
  inline void set_has_issuccess();
  inline void clear_has_issuccess();
  inline void set_has_err();
  inline void clear_has_err();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  bool issuccess_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgUserExitCompanyReply* default_instance_;
};
// -------------------------------------------------------------------

class PkgTaskInfo : public ::google::protobuf::Message {
 public:
  PkgTaskInfo();
  virtual ~PkgTaskInfo();

  PkgTaskInfo(const PkgTaskInfo& from);

  inline PkgTaskInfo& operator=(const PkgTaskInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgTaskInfo& default_instance();

  void Swap(PkgTaskInfo* other);

  // implements Message ----------------------------------------------

  inline PkgTaskInfo* New() const { return New(NULL); }

  PkgTaskInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgTaskInfo& from);
  void MergeFrom(const PkgTaskInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgTaskInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef PkgTaskInfo_EnTaskLevel EnTaskLevel;
  static const EnTaskLevel TL_IMPORTANCE_ARGENCY = PkgTaskInfo_EnTaskLevel_TL_IMPORTANCE_ARGENCY;
  static const EnTaskLevel TL_IMPORTANCE_NOTARGENCY = PkgTaskInfo_EnTaskLevel_TL_IMPORTANCE_NOTARGENCY;
  static const EnTaskLevel TL_NOTIMPORTANCE_ARGENCY = PkgTaskInfo_EnTaskLevel_TL_NOTIMPORTANCE_ARGENCY;
  static const EnTaskLevel TL_NOTIMPORTANCE_NOTARGENCY = PkgTaskInfo_EnTaskLevel_TL_NOTIMPORTANCE_NOTARGENCY;
  static inline bool EnTaskLevel_IsValid(int value) {
    return PkgTaskInfo_EnTaskLevel_IsValid(value);
  }
  static const EnTaskLevel EnTaskLevel_MIN =
    PkgTaskInfo_EnTaskLevel_EnTaskLevel_MIN;
  static const EnTaskLevel EnTaskLevel_MAX =
    PkgTaskInfo_EnTaskLevel_EnTaskLevel_MAX;
  static const int EnTaskLevel_ARRAYSIZE =
    PkgTaskInfo_EnTaskLevel_EnTaskLevel_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EnTaskLevel_descriptor() {
    return PkgTaskInfo_EnTaskLevel_descriptor();
  }
  static inline const ::std::string& EnTaskLevel_Name(EnTaskLevel value) {
    return PkgTaskInfo_EnTaskLevel_Name(value);
  }
  static inline bool EnTaskLevel_Parse(const ::std::string& name,
      EnTaskLevel* value) {
    return PkgTaskInfo_EnTaskLevel_Parse(name, value);
  }

  typedef PkgTaskInfo_EnTaskStatus EnTaskStatus;
  static const EnTaskStatus TS_NEW = PkgTaskInfo_EnTaskStatus_TS_NEW;
  static const EnTaskStatus TS_GOING = PkgTaskInfo_EnTaskStatus_TS_GOING;
  static const EnTaskStatus TS_FINISHED = PkgTaskInfo_EnTaskStatus_TS_FINISHED;
  static const EnTaskStatus TS_DENY = PkgTaskInfo_EnTaskStatus_TS_DENY;
  static const EnTaskStatus TS_DELETED = PkgTaskInfo_EnTaskStatus_TS_DELETED;
  static inline bool EnTaskStatus_IsValid(int value) {
    return PkgTaskInfo_EnTaskStatus_IsValid(value);
  }
  static const EnTaskStatus EnTaskStatus_MIN =
    PkgTaskInfo_EnTaskStatus_EnTaskStatus_MIN;
  static const EnTaskStatus EnTaskStatus_MAX =
    PkgTaskInfo_EnTaskStatus_EnTaskStatus_MAX;
  static const int EnTaskStatus_ARRAYSIZE =
    PkgTaskInfo_EnTaskStatus_EnTaskStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EnTaskStatus_descriptor() {
    return PkgTaskInfo_EnTaskStatus_descriptor();
  }
  static inline const ::std::string& EnTaskStatus_Name(EnTaskStatus value) {
    return PkgTaskInfo_EnTaskStatus_Name(value);
  }
  static inline bool EnTaskStatus_Parse(const ::std::string& name,
      EnTaskStatus* value) {
    return PkgTaskInfo_EnTaskStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 parentid = 2 [default = 0];
  inline bool has_parentid() const;
  inline void clear_parentid();
  static const int kParentidFieldNumber = 2;
  inline ::google::protobuf::int32 parentid() const;
  inline void set_parentid(::google::protobuf::int32 value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string taskdate = 4;
  inline bool has_taskdate() const;
  inline void clear_taskdate();
  static const int kTaskdateFieldNumber = 4;
  inline const ::std::string& taskdate() const;
  inline void set_taskdate(const ::std::string& value);
  inline void set_taskdate(const char* value);
  inline void set_taskdate(const char* value, size_t size);
  inline ::std::string* mutable_taskdate();
  inline ::std::string* release_taskdate();
  inline void set_allocated_taskdate(::std::string* taskdate);

  // optional string content = 5;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 5;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // optional string remark = 6;
  inline bool has_remark() const;
  inline void clear_remark();
  static const int kRemarkFieldNumber = 6;
  inline const ::std::string& remark() const;
  inline void set_remark(const ::std::string& value);
  inline void set_remark(const char* value);
  inline void set_remark(const char* value, size_t size);
  inline ::std::string* mutable_remark();
  inline ::std::string* release_remark();
  inline void set_allocated_remark(::std::string* remark);

  // optional .comm.PkgTaskInfo.EnTaskLevel tasklevel = 7 [default = TL_IMPORTANCE_NOTARGENCY];
  inline bool has_tasklevel() const;
  inline void clear_tasklevel();
  static const int kTasklevelFieldNumber = 7;
  inline ::comm::PkgTaskInfo_EnTaskLevel tasklevel() const;
  inline void set_tasklevel(::comm::PkgTaskInfo_EnTaskLevel value);

  // optional int32 createuserid = 8;
  inline bool has_createuserid() const;
  inline void clear_createuserid();
  static const int kCreateuseridFieldNumber = 8;
  inline ::google::protobuf::int32 createuserid() const;
  inline void set_createuserid(::google::protobuf::int32 value);

  // optional .comm.PkgTaskInfo.EnTaskStatus status = 9 [default = TS_NEW];
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 9;
  inline ::comm::PkgTaskInfo_EnTaskStatus status() const;
  inline void set_status(::comm::PkgTaskInfo_EnTaskStatus value);

  // optional string createtime = 10;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreatetimeFieldNumber = 10;
  inline const ::std::string& createtime() const;
  inline void set_createtime(const ::std::string& value);
  inline void set_createtime(const char* value);
  inline void set_createtime(const char* value, size_t size);
  inline ::std::string* mutable_createtime();
  inline ::std::string* release_createtime();
  inline void set_allocated_createtime(::std::string* createtime);

  // optional string finishtime = 11;
  inline bool has_finishtime() const;
  inline void clear_finishtime();
  static const int kFinishtimeFieldNumber = 11;
  inline const ::std::string& finishtime() const;
  inline void set_finishtime(const ::std::string& value);
  inline void set_finishtime(const char* value);
  inline void set_finishtime(const char* value, size_t size);
  inline ::std::string* mutable_finishtime();
  inline ::std::string* release_finishtime();
  inline void set_allocated_finishtime(::std::string* finishtime);

  // optional int32 accepteduserid = 13 [default = 0];
  inline bool has_accepteduserid() const;
  inline void clear_accepteduserid();
  static const int kAccepteduseridFieldNumber = 13;
  inline ::google::protobuf::int32 accepteduserid() const;
  inline void set_accepteduserid(::google::protobuf::int32 value);

  // optional int32 coworkid = 14 [default = 0];
  inline bool has_coworkid() const;
  inline void clear_coworkid();
  static const int kCoworkidFieldNumber = 14;
  inline ::google::protobuf::int32 coworkid() const;
  inline void set_coworkid(::google::protobuf::int32 value);

  // optional string updatetime = 15;
  inline bool has_updatetime() const;
  inline void clear_updatetime();
  static const int kUpdatetimeFieldNumber = 15;
  inline const ::std::string& updatetime() const;
  inline void set_updatetime(const ::std::string& value);
  inline void set_updatetime(const char* value);
  inline void set_updatetime(const char* value, size_t size);
  inline ::std::string* mutable_updatetime();
  inline ::std::string* release_updatetime();
  inline void set_allocated_updatetime(::std::string* updatetime);

  // optional int32 isreaded = 16 [default = 0];
  inline bool has_isreaded() const;
  inline void clear_isreaded();
  static const int kIsreadedFieldNumber = 16;
  inline ::google::protobuf::int32 isreaded() const;
  inline void set_isreaded(::google::protobuf::int32 value);

  // optional int32 sortflag = 17 [default = 0];
  inline bool has_sortflag() const;
  inline void clear_sortflag();
  static const int kSortflagFieldNumber = 17;
  inline ::google::protobuf::int32 sortflag() const;
  inline void set_sortflag(::google::protobuf::int32 value);

  // optional string createdrealname = 30;
  inline bool has_createdrealname() const;
  inline void clear_createdrealname();
  static const int kCreatedrealnameFieldNumber = 30;
  inline const ::std::string& createdrealname() const;
  inline void set_createdrealname(const ::std::string& value);
  inline void set_createdrealname(const char* value);
  inline void set_createdrealname(const char* value, size_t size);
  inline ::std::string* mutable_createdrealname();
  inline ::std::string* release_createdrealname();
  inline void set_allocated_createdrealname(::std::string* createdrealname);

  // optional string acceptedrealname = 31;
  inline bool has_acceptedrealname() const;
  inline void clear_acceptedrealname();
  static const int kAcceptedrealnameFieldNumber = 31;
  inline const ::std::string& acceptedrealname() const;
  inline void set_acceptedrealname(const ::std::string& value);
  inline void set_acceptedrealname(const char* value);
  inline void set_acceptedrealname(const char* value, size_t size);
  inline ::std::string* mutable_acceptedrealname();
  inline ::std::string* release_acceptedrealname();
  inline void set_allocated_acceptedrealname(::std::string* acceptedrealname);

  // @@protoc_insertion_point(class_scope:comm.PkgTaskInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_parentid();
  inline void clear_has_parentid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_taskdate();
  inline void clear_has_taskdate();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_remark();
  inline void clear_has_remark();
  inline void set_has_tasklevel();
  inline void clear_has_tasklevel();
  inline void set_has_createuserid();
  inline void clear_has_createuserid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_finishtime();
  inline void clear_has_finishtime();
  inline void set_has_accepteduserid();
  inline void clear_has_accepteduserid();
  inline void set_has_coworkid();
  inline void clear_has_coworkid();
  inline void set_has_updatetime();
  inline void clear_has_updatetime();
  inline void set_has_isreaded();
  inline void clear_has_isreaded();
  inline void set_has_sortflag();
  inline void clear_has_sortflag();
  inline void set_has_createdrealname();
  inline void clear_has_createdrealname();
  inline void set_has_acceptedrealname();
  inline void clear_has_acceptedrealname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 parentid_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr taskdate_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::internal::ArenaStringPtr remark_;
  int tasklevel_;
  ::google::protobuf::int32 createuserid_;
  ::google::protobuf::internal::ArenaStringPtr createtime_;
  int status_;
  ::google::protobuf::int32 accepteduserid_;
  ::google::protobuf::internal::ArenaStringPtr finishtime_;
  ::google::protobuf::internal::ArenaStringPtr updatetime_;
  ::google::protobuf::int32 coworkid_;
  ::google::protobuf::int32 isreaded_;
  ::google::protobuf::internal::ArenaStringPtr createdrealname_;
  ::google::protobuf::internal::ArenaStringPtr acceptedrealname_;
  ::google::protobuf::int32 sortflag_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgTaskInfo* default_instance_;
};
// -------------------------------------------------------------------

class PkgTaskPageQueryReq_PkgTaskQueryCondition : public ::google::protobuf::Message {
 public:
  PkgTaskPageQueryReq_PkgTaskQueryCondition();
  virtual ~PkgTaskPageQueryReq_PkgTaskQueryCondition();

  PkgTaskPageQueryReq_PkgTaskQueryCondition(const PkgTaskPageQueryReq_PkgTaskQueryCondition& from);

  inline PkgTaskPageQueryReq_PkgTaskQueryCondition& operator=(const PkgTaskPageQueryReq_PkgTaskQueryCondition& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgTaskPageQueryReq_PkgTaskQueryCondition& default_instance();

  void Swap(PkgTaskPageQueryReq_PkgTaskQueryCondition* other);

  // implements Message ----------------------------------------------

  inline PkgTaskPageQueryReq_PkgTaskQueryCondition* New() const { return New(NULL); }

  PkgTaskPageQueryReq_PkgTaskQueryCondition* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgTaskPageQueryReq_PkgTaskQueryCondition& from);
  void MergeFrom(const PkgTaskPageQueryReq_PkgTaskQueryCondition& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgTaskPageQueryReq_PkgTaskQueryCondition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag EnReadedFlag;
  static const EnReadedFlag PR_ALL = PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_PR_ALL;
  static const EnReadedFlag PR_READED = PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_PR_READED;
  static const EnReadedFlag PR_NOTREADED = PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_PR_NOTREADED;
  static inline bool EnReadedFlag_IsValid(int value) {
    return PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_IsValid(value);
  }
  static const EnReadedFlag EnReadedFlag_MIN =
    PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_EnReadedFlag_MIN;
  static const EnReadedFlag EnReadedFlag_MAX =
    PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_EnReadedFlag_MAX;
  static const int EnReadedFlag_ARRAYSIZE =
    PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_EnReadedFlag_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EnReadedFlag_descriptor() {
    return PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_descriptor();
  }
  static inline const ::std::string& EnReadedFlag_Name(EnReadedFlag value) {
    return PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_Name(value);
  }
  static inline bool EnReadedFlag_Parse(const ::std::string& name,
      EnReadedFlag* value) {
    return PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string taskdatestart = 2;
  inline bool has_taskdatestart() const;
  inline void clear_taskdatestart();
  static const int kTaskdatestartFieldNumber = 2;
  inline const ::std::string& taskdatestart() const;
  inline void set_taskdatestart(const ::std::string& value);
  inline void set_taskdatestart(const char* value);
  inline void set_taskdatestart(const char* value, size_t size);
  inline ::std::string* mutable_taskdatestart();
  inline ::std::string* release_taskdatestart();
  inline void set_allocated_taskdatestart(::std::string* taskdatestart);

  // optional string taskdateend = 3;
  inline bool has_taskdateend() const;
  inline void clear_taskdateend();
  static const int kTaskdateendFieldNumber = 3;
  inline const ::std::string& taskdateend() const;
  inline void set_taskdateend(const ::std::string& value);
  inline void set_taskdateend(const char* value);
  inline void set_taskdateend(const char* value, size_t size);
  inline ::std::string* mutable_taskdateend();
  inline ::std::string* release_taskdateend();
  inline void set_allocated_taskdateend(::std::string* taskdateend);

  // optional string keyforname = 4;
  inline bool has_keyforname() const;
  inline void clear_keyforname();
  static const int kKeyfornameFieldNumber = 4;
  inline const ::std::string& keyforname() const;
  inline void set_keyforname(const ::std::string& value);
  inline void set_keyforname(const char* value);
  inline void set_keyforname(const char* value, size_t size);
  inline ::std::string* mutable_keyforname();
  inline ::std::string* release_keyforname();
  inline void set_allocated_keyforname(::std::string* keyforname);

  // optional string keyforcontent = 5;
  inline bool has_keyforcontent() const;
  inline void clear_keyforcontent();
  static const int kKeyforcontentFieldNumber = 5;
  inline const ::std::string& keyforcontent() const;
  inline void set_keyforcontent(const ::std::string& value);
  inline void set_keyforcontent(const char* value);
  inline void set_keyforcontent(const char* value, size_t size);
  inline ::std::string* mutable_keyforcontent();
  inline ::std::string* release_keyforcontent();
  inline void set_allocated_keyforcontent(::std::string* keyforcontent);

  // repeated int32 taskstatuslist = 6;
  inline int taskstatuslist_size() const;
  inline void clear_taskstatuslist();
  static const int kTaskstatuslistFieldNumber = 6;
  inline ::google::protobuf::int32 taskstatuslist(int index) const;
  inline void set_taskstatuslist(int index, ::google::protobuf::int32 value);
  inline void add_taskstatuslist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      taskstatuslist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_taskstatuslist();

  // optional .comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.EnReadedFlag enreadedflag = 7 [default = PR_ALL];
  inline bool has_enreadedflag() const;
  inline void clear_enreadedflag();
  static const int kEnreadedflagFieldNumber = 7;
  inline ::comm::PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag enreadedflag() const;
  inline void set_enreadedflag(::comm::PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag value);

  // optional string lastupdatetime = 100;
  inline bool has_lastupdatetime() const;
  inline void clear_lastupdatetime();
  static const int kLastupdatetimeFieldNumber = 100;
  inline const ::std::string& lastupdatetime() const;
  inline void set_lastupdatetime(const ::std::string& value);
  inline void set_lastupdatetime(const char* value);
  inline void set_lastupdatetime(const char* value, size_t size);
  inline ::std::string* mutable_lastupdatetime();
  inline ::std::string* release_lastupdatetime();
  inline void set_allocated_lastupdatetime(::std::string* lastupdatetime);

  // @@protoc_insertion_point(class_scope:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition)
 private:
  inline void set_has_taskdatestart();
  inline void clear_has_taskdatestart();
  inline void set_has_taskdateend();
  inline void clear_has_taskdateend();
  inline void set_has_keyforname();
  inline void clear_has_keyforname();
  inline void set_has_keyforcontent();
  inline void clear_has_keyforcontent();
  inline void set_has_enreadedflag();
  inline void clear_has_enreadedflag();
  inline void set_has_lastupdatetime();
  inline void clear_has_lastupdatetime();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr taskdatestart_;
  ::google::protobuf::internal::ArenaStringPtr taskdateend_;
  ::google::protobuf::internal::ArenaStringPtr keyforname_;
  ::google::protobuf::internal::ArenaStringPtr keyforcontent_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > taskstatuslist_;
  ::google::protobuf::internal::ArenaStringPtr lastupdatetime_;
  int enreadedflag_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgTaskPageQueryReq_PkgTaskQueryCondition* default_instance_;
};
// -------------------------------------------------------------------

class PkgTaskPageQueryReq : public ::google::protobuf::Message {
 public:
  PkgTaskPageQueryReq();
  virtual ~PkgTaskPageQueryReq();

  PkgTaskPageQueryReq(const PkgTaskPageQueryReq& from);

  inline PkgTaskPageQueryReq& operator=(const PkgTaskPageQueryReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgTaskPageQueryReq& default_instance();

  void Swap(PkgTaskPageQueryReq* other);

  // implements Message ----------------------------------------------

  inline PkgTaskPageQueryReq* New() const { return New(NULL); }

  PkgTaskPageQueryReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgTaskPageQueryReq& from);
  void MergeFrom(const PkgTaskPageQueryReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgTaskPageQueryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef PkgTaskPageQueryReq_PkgTaskQueryCondition PkgTaskQueryCondition;

  typedef PkgTaskPageQueryReq_EnTaskFlag EnTaskFlag;
  static const EnTaskFlag TF_MYTASK = PkgTaskPageQueryReq_EnTaskFlag_TF_MYTASK;
  static const EnTaskFlag TF_COWORKTASK = PkgTaskPageQueryReq_EnTaskFlag_TF_COWORKTASK;
  static const EnTaskFlag TF_TASKTABLE = PkgTaskPageQueryReq_EnTaskFlag_TF_TASKTABLE;
  static const EnTaskFlag TF_USERDEFINED = PkgTaskPageQueryReq_EnTaskFlag_TF_USERDEFINED;
  static inline bool EnTaskFlag_IsValid(int value) {
    return PkgTaskPageQueryReq_EnTaskFlag_IsValid(value);
  }
  static const EnTaskFlag EnTaskFlag_MIN =
    PkgTaskPageQueryReq_EnTaskFlag_EnTaskFlag_MIN;
  static const EnTaskFlag EnTaskFlag_MAX =
    PkgTaskPageQueryReq_EnTaskFlag_EnTaskFlag_MAX;
  static const int EnTaskFlag_ARRAYSIZE =
    PkgTaskPageQueryReq_EnTaskFlag_EnTaskFlag_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EnTaskFlag_descriptor() {
    return PkgTaskPageQueryReq_EnTaskFlag_descriptor();
  }
  static inline const ::std::string& EnTaskFlag_Name(EnTaskFlag value) {
    return PkgTaskPageQueryReq_EnTaskFlag_Name(value);
  }
  static inline bool EnTaskFlag_Parse(const ::std::string& name,
      EnTaskFlag* value) {
    return PkgTaskPageQueryReq_EnTaskFlag_Parse(name, value);
  }

  typedef PkgTaskPageQueryReq_EnTaskQueryCondition EnTaskQueryCondition;
  static const EnTaskQueryCondition TQC_DATESTART = PkgTaskPageQueryReq_EnTaskQueryCondition_TQC_DATESTART;
  static const EnTaskQueryCondition TQC_DATEEND = PkgTaskPageQueryReq_EnTaskQueryCondition_TQC_DATEEND;
  static const EnTaskQueryCondition TQC_KEYFORNAME = PkgTaskPageQueryReq_EnTaskQueryCondition_TQC_KEYFORNAME;
  static const EnTaskQueryCondition TQC_KEYFORCONTENT = PkgTaskPageQueryReq_EnTaskQueryCondition_TQC_KEYFORCONTENT;
  static const EnTaskQueryCondition TQC_TASKSTATUS = PkgTaskPageQueryReq_EnTaskQueryCondition_TQC_TASKSTATUS;
  static const EnTaskQueryCondition TQC_TASKNOTSTATUS = PkgTaskPageQueryReq_EnTaskQueryCondition_TQC_TASKNOTSTATUS;
  static const EnTaskQueryCondition TQC_ONLYSEND = PkgTaskPageQueryReq_EnTaskQueryCondition_TQC_ONLYSEND;
  static const EnTaskQueryCondition TQC_ONLYRECV = PkgTaskPageQueryReq_EnTaskQueryCondition_TQC_ONLYRECV;
  static const EnTaskQueryCondition TQC_READEDFLAG = PkgTaskPageQueryReq_EnTaskQueryCondition_TQC_READEDFLAG;
  static const EnTaskQueryCondition TQC_LASTUPDATETIME = PkgTaskPageQueryReq_EnTaskQueryCondition_TQC_LASTUPDATETIME;
  static inline bool EnTaskQueryCondition_IsValid(int value) {
    return PkgTaskPageQueryReq_EnTaskQueryCondition_IsValid(value);
  }
  static const EnTaskQueryCondition EnTaskQueryCondition_MIN =
    PkgTaskPageQueryReq_EnTaskQueryCondition_EnTaskQueryCondition_MIN;
  static const EnTaskQueryCondition EnTaskQueryCondition_MAX =
    PkgTaskPageQueryReq_EnTaskQueryCondition_EnTaskQueryCondition_MAX;
  static const int EnTaskQueryCondition_ARRAYSIZE =
    PkgTaskPageQueryReq_EnTaskQueryCondition_EnTaskQueryCondition_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EnTaskQueryCondition_descriptor() {
    return PkgTaskPageQueryReq_EnTaskQueryCondition_descriptor();
  }
  static inline const ::std::string& EnTaskQueryCondition_Name(EnTaskQueryCondition value) {
    return PkgTaskPageQueryReq_EnTaskQueryCondition_Name(value);
  }
  static inline bool EnTaskQueryCondition_Parse(const ::std::string& name,
      EnTaskQueryCondition* value) {
    return PkgTaskPageQueryReq_EnTaskQueryCondition_Parse(name, value);
  }

  typedef PkgTaskPageQueryReq_EnPageFlag EnPageFlag;
  static const EnPageFlag P_ONLYNUM = PkgTaskPageQueryReq_EnPageFlag_P_ONLYNUM;
  static const EnPageFlag P_RETURNALL = PkgTaskPageQueryReq_EnPageFlag_P_RETURNALL;
  static const EnPageFlag P_RETURNPAGE = PkgTaskPageQueryReq_EnPageFlag_P_RETURNPAGE;
  static inline bool EnPageFlag_IsValid(int value) {
    return PkgTaskPageQueryReq_EnPageFlag_IsValid(value);
  }
  static const EnPageFlag EnPageFlag_MIN =
    PkgTaskPageQueryReq_EnPageFlag_EnPageFlag_MIN;
  static const EnPageFlag EnPageFlag_MAX =
    PkgTaskPageQueryReq_EnPageFlag_EnPageFlag_MAX;
  static const int EnPageFlag_ARRAYSIZE =
    PkgTaskPageQueryReq_EnPageFlag_EnPageFlag_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EnPageFlag_descriptor() {
    return PkgTaskPageQueryReq_EnPageFlag_descriptor();
  }
  static inline const ::std::string& EnPageFlag_Name(EnPageFlag value) {
    return PkgTaskPageQueryReq_EnPageFlag_Name(value);
  }
  static inline bool EnPageFlag_Parse(const ::std::string& name,
      EnPageFlag* value) {
    return PkgTaskPageQueryReq_EnPageFlag_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .comm.PkgTaskPageQueryReq.EnTaskFlag taskflag = 1 [default = TF_MYTASK];
  inline bool has_taskflag() const;
  inline void clear_taskflag();
  static const int kTaskflagFieldNumber = 1;
  inline ::comm::PkgTaskPageQueryReq_EnTaskFlag taskflag() const;
  inline void set_taskflag(::comm::PkgTaskPageQueryReq_EnTaskFlag value);

  // optional int32 enconditon = 2 [default = 0];
  inline bool has_enconditon() const;
  inline void clear_enconditon();
  static const int kEnconditonFieldNumber = 2;
  inline ::google::protobuf::int32 enconditon() const;
  inline void set_enconditon(::google::protobuf::int32 value);

  // optional .comm.PkgTaskPageQueryReq.PkgTaskQueryCondition pkgtaskquerycondition = 3;
  inline bool has_pkgtaskquerycondition() const;
  inline void clear_pkgtaskquerycondition();
  static const int kPkgtaskqueryconditionFieldNumber = 3;
  inline const ::comm::PkgTaskPageQueryReq_PkgTaskQueryCondition& pkgtaskquerycondition() const;
  inline ::comm::PkgTaskPageQueryReq_PkgTaskQueryCondition* mutable_pkgtaskquerycondition();
  inline ::comm::PkgTaskPageQueryReq_PkgTaskQueryCondition* release_pkgtaskquerycondition();
  inline void set_allocated_pkgtaskquerycondition(::comm::PkgTaskPageQueryReq_PkgTaskQueryCondition* pkgtaskquerycondition);

  // optional .comm.PkgTaskPageQueryReq.EnPageFlag pageflag = 4 [default = P_RETURNALL];
  inline bool has_pageflag() const;
  inline void clear_pageflag();
  static const int kPageflagFieldNumber = 4;
  inline ::comm::PkgTaskPageQueryReq_EnPageFlag pageflag() const;
  inline void set_pageflag(::comm::PkgTaskPageQueryReq_EnPageFlag value);

  // optional int32 indexstart = 5;
  inline bool has_indexstart() const;
  inline void clear_indexstart();
  static const int kIndexstartFieldNumber = 5;
  inline ::google::protobuf::int32 indexstart() const;
  inline void set_indexstart(::google::protobuf::int32 value);

  // optional int32 indexend = 6;
  inline bool has_indexend() const;
  inline void clear_indexend();
  static const int kIndexendFieldNumber = 6;
  inline ::google::protobuf::int32 indexend() const;
  inline void set_indexend(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:comm.PkgTaskPageQueryReq)
 private:
  inline void set_has_taskflag();
  inline void clear_has_taskflag();
  inline void set_has_enconditon();
  inline void clear_has_enconditon();
  inline void set_has_pkgtaskquerycondition();
  inline void clear_has_pkgtaskquerycondition();
  inline void set_has_pageflag();
  inline void clear_has_pageflag();
  inline void set_has_indexstart();
  inline void clear_has_indexstart();
  inline void set_has_indexend();
  inline void clear_has_indexend();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int taskflag_;
  ::google::protobuf::int32 enconditon_;
  ::comm::PkgTaskPageQueryReq_PkgTaskQueryCondition* pkgtaskquerycondition_;
  int pageflag_;
  ::google::protobuf::int32 indexstart_;
  ::google::protobuf::int32 indexend_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgTaskPageQueryReq* default_instance_;
};
// -------------------------------------------------------------------

class PkgTaskPageQueryReply : public ::google::protobuf::Message {
 public:
  PkgTaskPageQueryReply();
  virtual ~PkgTaskPageQueryReply();

  PkgTaskPageQueryReply(const PkgTaskPageQueryReply& from);

  inline PkgTaskPageQueryReply& operator=(const PkgTaskPageQueryReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgTaskPageQueryReply& default_instance();

  void Swap(PkgTaskPageQueryReply* other);

  // implements Message ----------------------------------------------

  inline PkgTaskPageQueryReply* New() const { return New(NULL); }

  PkgTaskPageQueryReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgTaskPageQueryReply& from);
  void MergeFrom(const PkgTaskPageQueryReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgTaskPageQueryReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool issuccess = 1;
  inline bool has_issuccess() const;
  inline void clear_issuccess();
  static const int kIssuccessFieldNumber = 1;
  inline bool issuccess() const;
  inline void set_issuccess(bool value);

  // optional string err = 2;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 2;
  inline const ::std::string& err() const;
  inline void set_err(const ::std::string& value);
  inline void set_err(const char* value);
  inline void set_err(const char* value, size_t size);
  inline ::std::string* mutable_err();
  inline ::std::string* release_err();
  inline void set_allocated_err(::std::string* err);

  // repeated .comm.PkgTaskInfo taskinfolist = 3;
  inline int taskinfolist_size() const;
  inline void clear_taskinfolist();
  static const int kTaskinfolistFieldNumber = 3;
  inline const ::comm::PkgTaskInfo& taskinfolist(int index) const;
  inline ::comm::PkgTaskInfo* mutable_taskinfolist(int index);
  inline ::comm::PkgTaskInfo* add_taskinfolist();
  inline const ::google::protobuf::RepeatedPtrField< ::comm::PkgTaskInfo >&
      taskinfolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::comm::PkgTaskInfo >*
      mutable_taskinfolist();

  // optional int32 returnnum = 5;
  inline bool has_returnnum() const;
  inline void clear_returnnum();
  static const int kReturnnumFieldNumber = 5;
  inline ::google::protobuf::int32 returnnum() const;
  inline void set_returnnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:comm.PkgTaskPageQueryReply)
 private:
  inline void set_has_issuccess();
  inline void clear_has_issuccess();
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_returnnum();
  inline void clear_has_returnnum();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  bool issuccess_;
  ::google::protobuf::int32 returnnum_;
  ::google::protobuf::RepeatedPtrField< ::comm::PkgTaskInfo > taskinfolist_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgTaskPageQueryReply* default_instance_;
};
// -------------------------------------------------------------------

class PkgTaskQueryReq : public ::google::protobuf::Message {
 public:
  PkgTaskQueryReq();
  virtual ~PkgTaskQueryReq();

  PkgTaskQueryReq(const PkgTaskQueryReq& from);

  inline PkgTaskQueryReq& operator=(const PkgTaskQueryReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgTaskQueryReq& default_instance();

  void Swap(PkgTaskQueryReq* other);

  // implements Message ----------------------------------------------

  inline PkgTaskQueryReq* New() const { return New(NULL); }

  PkgTaskQueryReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgTaskQueryReq& from);
  void MergeFrom(const PkgTaskQueryReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgTaskQueryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef PkgTaskQueryReq_EnQueryFlag EnQueryFlag;
  static const EnQueryFlag QF_TASKINFO = PkgTaskQueryReq_EnQueryFlag_QF_TASKINFO;
  static const EnQueryFlag QF_TASKWITHSUBTASK = PkgTaskQueryReq_EnQueryFlag_QF_TASKWITHSUBTASK;
  static const EnQueryFlag QF_TASKWITHASSGIN = PkgTaskQueryReq_EnQueryFlag_QF_TASKWITHASSGIN;
  static inline bool EnQueryFlag_IsValid(int value) {
    return PkgTaskQueryReq_EnQueryFlag_IsValid(value);
  }
  static const EnQueryFlag EnQueryFlag_MIN =
    PkgTaskQueryReq_EnQueryFlag_EnQueryFlag_MIN;
  static const EnQueryFlag EnQueryFlag_MAX =
    PkgTaskQueryReq_EnQueryFlag_EnQueryFlag_MAX;
  static const int EnQueryFlag_ARRAYSIZE =
    PkgTaskQueryReq_EnQueryFlag_EnQueryFlag_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EnQueryFlag_descriptor() {
    return PkgTaskQueryReq_EnQueryFlag_descriptor();
  }
  static inline const ::std::string& EnQueryFlag_Name(EnQueryFlag value) {
    return PkgTaskQueryReq_EnQueryFlag_Name(value);
  }
  static inline bool EnQueryFlag_Parse(const ::std::string& name,
      EnQueryFlag* value) {
    return PkgTaskQueryReq_EnQueryFlag_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .comm.PkgTaskQueryReq.EnQueryFlag queryflag = 1;
  inline bool has_queryflag() const;
  inline void clear_queryflag();
  static const int kQueryflagFieldNumber = 1;
  inline ::comm::PkgTaskQueryReq_EnQueryFlag queryflag() const;
  inline void set_queryflag(::comm::PkgTaskQueryReq_EnQueryFlag value);

  // required int32 taskid = 2;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskidFieldNumber = 2;
  inline ::google::protobuf::int32 taskid() const;
  inline void set_taskid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:comm.PkgTaskQueryReq)
 private:
  inline void set_has_queryflag();
  inline void clear_has_queryflag();
  inline void set_has_taskid();
  inline void clear_has_taskid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int queryflag_;
  ::google::protobuf::int32 taskid_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgTaskQueryReq* default_instance_;
};
// -------------------------------------------------------------------

class PkgTaskQueryReply : public ::google::protobuf::Message {
 public:
  PkgTaskQueryReply();
  virtual ~PkgTaskQueryReply();

  PkgTaskQueryReply(const PkgTaskQueryReply& from);

  inline PkgTaskQueryReply& operator=(const PkgTaskQueryReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgTaskQueryReply& default_instance();

  void Swap(PkgTaskQueryReply* other);

  // implements Message ----------------------------------------------

  inline PkgTaskQueryReply* New() const { return New(NULL); }

  PkgTaskQueryReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgTaskQueryReply& from);
  void MergeFrom(const PkgTaskQueryReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgTaskQueryReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool issuccess = 1;
  inline bool has_issuccess() const;
  inline void clear_issuccess();
  static const int kIssuccessFieldNumber = 1;
  inline bool issuccess() const;
  inline void set_issuccess(bool value);

  // optional string err = 2;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 2;
  inline const ::std::string& err() const;
  inline void set_err(const ::std::string& value);
  inline void set_err(const char* value);
  inline void set_err(const char* value, size_t size);
  inline ::std::string* mutable_err();
  inline ::std::string* release_err();
  inline void set_allocated_err(::std::string* err);

  // optional .comm.PkgTaskInfo taskinfo = 3;
  inline bool has_taskinfo() const;
  inline void clear_taskinfo();
  static const int kTaskinfoFieldNumber = 3;
  inline const ::comm::PkgTaskInfo& taskinfo() const;
  inline ::comm::PkgTaskInfo* mutable_taskinfo();
  inline ::comm::PkgTaskInfo* release_taskinfo();
  inline void set_allocated_taskinfo(::comm::PkgTaskInfo* taskinfo);

  // repeated .comm.PkgTaskInfo taskinfolist = 4;
  inline int taskinfolist_size() const;
  inline void clear_taskinfolist();
  static const int kTaskinfolistFieldNumber = 4;
  inline const ::comm::PkgTaskInfo& taskinfolist(int index) const;
  inline ::comm::PkgTaskInfo* mutable_taskinfolist(int index);
  inline ::comm::PkgTaskInfo* add_taskinfolist();
  inline const ::google::protobuf::RepeatedPtrField< ::comm::PkgTaskInfo >&
      taskinfolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::comm::PkgTaskInfo >*
      mutable_taskinfolist();

  // repeated int32 accepteduseridlist = 5;
  inline int accepteduseridlist_size() const;
  inline void clear_accepteduseridlist();
  static const int kAccepteduseridlistFieldNumber = 5;
  inline ::google::protobuf::int32 accepteduseridlist(int index) const;
  inline void set_accepteduseridlist(int index, ::google::protobuf::int32 value);
  inline void add_accepteduseridlist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      accepteduseridlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_accepteduseridlist();

  // @@protoc_insertion_point(class_scope:comm.PkgTaskQueryReply)
 private:
  inline void set_has_issuccess();
  inline void clear_has_issuccess();
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_taskinfo();
  inline void clear_has_taskinfo();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  ::comm::PkgTaskInfo* taskinfo_;
  ::google::protobuf::RepeatedPtrField< ::comm::PkgTaskInfo > taskinfolist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > accepteduseridlist_;
  bool issuccess_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgTaskQueryReply* default_instance_;
};
// -------------------------------------------------------------------

class PkgTaskSortFlag : public ::google::protobuf::Message {
 public:
  PkgTaskSortFlag();
  virtual ~PkgTaskSortFlag();

  PkgTaskSortFlag(const PkgTaskSortFlag& from);

  inline PkgTaskSortFlag& operator=(const PkgTaskSortFlag& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgTaskSortFlag& default_instance();

  void Swap(PkgTaskSortFlag* other);

  // implements Message ----------------------------------------------

  inline PkgTaskSortFlag* New() const { return New(NULL); }

  PkgTaskSortFlag* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgTaskSortFlag& from);
  void MergeFrom(const PkgTaskSortFlag& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgTaskSortFlag* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 taskid = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskidFieldNumber = 1;
  inline ::google::protobuf::int32 taskid() const;
  inline void set_taskid(::google::protobuf::int32 value);

  // required int32 sortflag = 2;
  inline bool has_sortflag() const;
  inline void clear_sortflag();
  static const int kSortflagFieldNumber = 2;
  inline ::google::protobuf::int32 sortflag() const;
  inline void set_sortflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:comm.PkgTaskSortFlag)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_sortflag();
  inline void clear_has_sortflag();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 taskid_;
  ::google::protobuf::int32 sortflag_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgTaskSortFlag* default_instance_;
};
// -------------------------------------------------------------------

class PkgTaskSetSortFlagReq : public ::google::protobuf::Message {
 public:
  PkgTaskSetSortFlagReq();
  virtual ~PkgTaskSetSortFlagReq();

  PkgTaskSetSortFlagReq(const PkgTaskSetSortFlagReq& from);

  inline PkgTaskSetSortFlagReq& operator=(const PkgTaskSetSortFlagReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgTaskSetSortFlagReq& default_instance();

  void Swap(PkgTaskSetSortFlagReq* other);

  // implements Message ----------------------------------------------

  inline PkgTaskSetSortFlagReq* New() const { return New(NULL); }

  PkgTaskSetSortFlagReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgTaskSetSortFlagReq& from);
  void MergeFrom(const PkgTaskSetSortFlagReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgTaskSetSortFlagReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .comm.PkgTaskSortFlag tasksortflaglist = 1;
  inline int tasksortflaglist_size() const;
  inline void clear_tasksortflaglist();
  static const int kTasksortflaglistFieldNumber = 1;
  inline const ::comm::PkgTaskSortFlag& tasksortflaglist(int index) const;
  inline ::comm::PkgTaskSortFlag* mutable_tasksortflaglist(int index);
  inline ::comm::PkgTaskSortFlag* add_tasksortflaglist();
  inline const ::google::protobuf::RepeatedPtrField< ::comm::PkgTaskSortFlag >&
      tasksortflaglist() const;
  inline ::google::protobuf::RepeatedPtrField< ::comm::PkgTaskSortFlag >*
      mutable_tasksortflaglist();

  // @@protoc_insertion_point(class_scope:comm.PkgTaskSetSortFlagReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::comm::PkgTaskSortFlag > tasksortflaglist_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgTaskSetSortFlagReq* default_instance_;
};
// -------------------------------------------------------------------

class PkgTaskSetSortFlagReply : public ::google::protobuf::Message {
 public:
  PkgTaskSetSortFlagReply();
  virtual ~PkgTaskSetSortFlagReply();

  PkgTaskSetSortFlagReply(const PkgTaskSetSortFlagReply& from);

  inline PkgTaskSetSortFlagReply& operator=(const PkgTaskSetSortFlagReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgTaskSetSortFlagReply& default_instance();

  void Swap(PkgTaskSetSortFlagReply* other);

  // implements Message ----------------------------------------------

  inline PkgTaskSetSortFlagReply* New() const { return New(NULL); }

  PkgTaskSetSortFlagReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgTaskSetSortFlagReply& from);
  void MergeFrom(const PkgTaskSetSortFlagReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgTaskSetSortFlagReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool issuccess = 1;
  inline bool has_issuccess() const;
  inline void clear_issuccess();
  static const int kIssuccessFieldNumber = 1;
  inline bool issuccess() const;
  inline void set_issuccess(bool value);

  // optional string err = 2;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 2;
  inline const ::std::string& err() const;
  inline void set_err(const ::std::string& value);
  inline void set_err(const char* value);
  inline void set_err(const char* value, size_t size);
  inline ::std::string* mutable_err();
  inline ::std::string* release_err();
  inline void set_allocated_err(::std::string* err);

  // @@protoc_insertion_point(class_scope:comm.PkgTaskSetSortFlagReply)
 private:
  inline void set_has_issuccess();
  inline void clear_has_issuccess();
  inline void set_has_err();
  inline void clear_has_err();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  bool issuccess_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgTaskSetSortFlagReply* default_instance_;
};
// -------------------------------------------------------------------

class PkgTaskOperationReq : public ::google::protobuf::Message {
 public:
  PkgTaskOperationReq();
  virtual ~PkgTaskOperationReq();

  PkgTaskOperationReq(const PkgTaskOperationReq& from);

  inline PkgTaskOperationReq& operator=(const PkgTaskOperationReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgTaskOperationReq& default_instance();

  void Swap(PkgTaskOperationReq* other);

  // implements Message ----------------------------------------------

  inline PkgTaskOperationReq* New() const { return New(NULL); }

  PkgTaskOperationReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgTaskOperationReq& from);
  void MergeFrom(const PkgTaskOperationReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgTaskOperationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef PkgTaskOperationReq_EnTaskOperation EnTaskOperation;
  static const EnTaskOperation TO_INSERT_INFO = PkgTaskOperationReq_EnTaskOperation_TO_INSERT_INFO;
  static const EnTaskOperation TO_INSERT_INFO_SUBTASKINFO = PkgTaskOperationReq_EnTaskOperation_TO_INSERT_INFO_SUBTASKINFO;
  static const EnTaskOperation TO_INSERT_INFO_COWORK = PkgTaskOperationReq_EnTaskOperation_TO_INSERT_INFO_COWORK;
  static const EnTaskOperation TO_UPDATE_INFO = PkgTaskOperationReq_EnTaskOperation_TO_UPDATE_INFO;
  static const EnTaskOperation TO_UPDATE_STATUS = PkgTaskOperationReq_EnTaskOperation_TO_UPDATE_STATUS;
  static const EnTaskOperation TO_DELETE_INFO = PkgTaskOperationReq_EnTaskOperation_TO_DELETE_INFO;
  static const EnTaskOperation TO_UPDATE_READED = PkgTaskOperationReq_EnTaskOperation_TO_UPDATE_READED;
  static inline bool EnTaskOperation_IsValid(int value) {
    return PkgTaskOperationReq_EnTaskOperation_IsValid(value);
  }
  static const EnTaskOperation EnTaskOperation_MIN =
    PkgTaskOperationReq_EnTaskOperation_EnTaskOperation_MIN;
  static const EnTaskOperation EnTaskOperation_MAX =
    PkgTaskOperationReq_EnTaskOperation_EnTaskOperation_MAX;
  static const int EnTaskOperation_ARRAYSIZE =
    PkgTaskOperationReq_EnTaskOperation_EnTaskOperation_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EnTaskOperation_descriptor() {
    return PkgTaskOperationReq_EnTaskOperation_descriptor();
  }
  static inline const ::std::string& EnTaskOperation_Name(EnTaskOperation value) {
    return PkgTaskOperationReq_EnTaskOperation_Name(value);
  }
  static inline bool EnTaskOperation_Parse(const ::std::string& name,
      EnTaskOperation* value) {
    return PkgTaskOperationReq_EnTaskOperation_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 taskoperation = 1;
  inline bool has_taskoperation() const;
  inline void clear_taskoperation();
  static const int kTaskoperationFieldNumber = 1;
  inline ::google::protobuf::int32 taskoperation() const;
  inline void set_taskoperation(::google::protobuf::int32 value);

  // optional .comm.PkgTaskInfo taskinfo = 3;
  inline bool has_taskinfo() const;
  inline void clear_taskinfo();
  static const int kTaskinfoFieldNumber = 3;
  inline const ::comm::PkgTaskInfo& taskinfo() const;
  inline ::comm::PkgTaskInfo* mutable_taskinfo();
  inline ::comm::PkgTaskInfo* release_taskinfo();
  inline void set_allocated_taskinfo(::comm::PkgTaskInfo* taskinfo);

  // repeated .comm.PkgTaskInfo taskinfolist = 4;
  inline int taskinfolist_size() const;
  inline void clear_taskinfolist();
  static const int kTaskinfolistFieldNumber = 4;
  inline const ::comm::PkgTaskInfo& taskinfolist(int index) const;
  inline ::comm::PkgTaskInfo* mutable_taskinfolist(int index);
  inline ::comm::PkgTaskInfo* add_taskinfolist();
  inline const ::google::protobuf::RepeatedPtrField< ::comm::PkgTaskInfo >&
      taskinfolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::comm::PkgTaskInfo >*
      mutable_taskinfolist();

  // repeated int32 accepteduseridlist = 5;
  inline int accepteduseridlist_size() const;
  inline void clear_accepteduseridlist();
  static const int kAccepteduseridlistFieldNumber = 5;
  inline ::google::protobuf::int32 accepteduseridlist(int index) const;
  inline void set_accepteduseridlist(int index, ::google::protobuf::int32 value);
  inline void add_accepteduseridlist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      accepteduseridlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_accepteduseridlist();

  // optional int32 taskid = 10;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskidFieldNumber = 10;
  inline ::google::protobuf::int32 taskid() const;
  inline void set_taskid(::google::protobuf::int32 value);

  // optional string reason = 11;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 11;
  inline const ::std::string& reason() const;
  inline void set_reason(const ::std::string& value);
  inline void set_reason(const char* value);
  inline void set_reason(const char* value, size_t size);
  inline ::std::string* mutable_reason();
  inline ::std::string* release_reason();
  inline void set_allocated_reason(::std::string* reason);

  // optional int32 updatestatus = 12;
  inline bool has_updatestatus() const;
  inline void clear_updatestatus();
  static const int kUpdatestatusFieldNumber = 12;
  inline ::google::protobuf::int32 updatestatus() const;
  inline void set_updatestatus(::google::protobuf::int32 value);

  // optional int32 updatereaded = 13;
  inline bool has_updatereaded() const;
  inline void clear_updatereaded();
  static const int kUpdatereadedFieldNumber = 13;
  inline ::google::protobuf::int32 updatereaded() const;
  inline void set_updatereaded(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:comm.PkgTaskOperationReq)
 private:
  inline void set_has_taskoperation();
  inline void clear_has_taskoperation();
  inline void set_has_taskinfo();
  inline void clear_has_taskinfo();
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_reason();
  inline void clear_has_reason();
  inline void set_has_updatestatus();
  inline void clear_has_updatestatus();
  inline void set_has_updatereaded();
  inline void clear_has_updatereaded();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::comm::PkgTaskInfo* taskinfo_;
  ::google::protobuf::RepeatedPtrField< ::comm::PkgTaskInfo > taskinfolist_;
  ::google::protobuf::int32 taskoperation_;
  ::google::protobuf::int32 taskid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > accepteduseridlist_;
  ::google::protobuf::internal::ArenaStringPtr reason_;
  ::google::protobuf::int32 updatestatus_;
  ::google::protobuf::int32 updatereaded_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgTaskOperationReq* default_instance_;
};
// -------------------------------------------------------------------

class PkgTaskOperationReply : public ::google::protobuf::Message {
 public:
  PkgTaskOperationReply();
  virtual ~PkgTaskOperationReply();

  PkgTaskOperationReply(const PkgTaskOperationReply& from);

  inline PkgTaskOperationReply& operator=(const PkgTaskOperationReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgTaskOperationReply& default_instance();

  void Swap(PkgTaskOperationReply* other);

  // implements Message ----------------------------------------------

  inline PkgTaskOperationReply* New() const { return New(NULL); }

  PkgTaskOperationReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgTaskOperationReply& from);
  void MergeFrom(const PkgTaskOperationReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgTaskOperationReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool issuccess = 1;
  inline bool has_issuccess() const;
  inline void clear_issuccess();
  static const int kIssuccessFieldNumber = 1;
  inline bool issuccess() const;
  inline void set_issuccess(bool value);

  // optional string err = 2;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 2;
  inline const ::std::string& err() const;
  inline void set_err(const ::std::string& value);
  inline void set_err(const char* value);
  inline void set_err(const char* value, size_t size);
  inline ::std::string* mutable_err();
  inline ::std::string* release_err();
  inline void set_allocated_err(::std::string* err);

  // optional int32 taskid = 5;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskidFieldNumber = 5;
  inline ::google::protobuf::int32 taskid() const;
  inline void set_taskid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:comm.PkgTaskOperationReply)
 private:
  inline void set_has_issuccess();
  inline void clear_has_issuccess();
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_taskid();
  inline void clear_has_taskid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  bool issuccess_;
  ::google::protobuf::int32 taskid_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgTaskOperationReply* default_instance_;
};
// -------------------------------------------------------------------

class PkgCompanyGroup : public ::google::protobuf::Message {
 public:
  PkgCompanyGroup();
  virtual ~PkgCompanyGroup();

  PkgCompanyGroup(const PkgCompanyGroup& from);

  inline PkgCompanyGroup& operator=(const PkgCompanyGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgCompanyGroup& default_instance();

  void Swap(PkgCompanyGroup* other);

  // implements Message ----------------------------------------------

  inline PkgCompanyGroup* New() const { return New(NULL); }

  PkgCompanyGroup* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgCompanyGroup& from);
  void MergeFrom(const PkgCompanyGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgCompanyGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 groupid = 1;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  inline ::google::protobuf::int32 groupid() const;
  inline void set_groupid(::google::protobuf::int32 value);

  // required int32 companyid = 2;
  inline bool has_companyid() const;
  inline void clear_companyid();
  static const int kCompanyidFieldNumber = 2;
  inline ::google::protobuf::int32 companyid() const;
  inline void set_companyid(::google::protobuf::int32 value);

  // required string groupname = 3;
  inline bool has_groupname() const;
  inline void clear_groupname();
  static const int kGroupnameFieldNumber = 3;
  inline const ::std::string& groupname() const;
  inline void set_groupname(const ::std::string& value);
  inline void set_groupname(const char* value);
  inline void set_groupname(const char* value, size_t size);
  inline ::std::string* mutable_groupname();
  inline ::std::string* release_groupname();
  inline void set_allocated_groupname(::std::string* groupname);

  // @@protoc_insertion_point(class_scope:comm.PkgCompanyGroup)
 private:
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_companyid();
  inline void clear_has_companyid();
  inline void set_has_groupname();
  inline void clear_has_groupname();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 groupid_;
  ::google::protobuf::int32 companyid_;
  ::google::protobuf::internal::ArenaStringPtr groupname_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgCompanyGroup* default_instance_;
};
// -------------------------------------------------------------------

class PkgGroupUser : public ::google::protobuf::Message {
 public:
  PkgGroupUser();
  virtual ~PkgGroupUser();

  PkgGroupUser(const PkgGroupUser& from);

  inline PkgGroupUser& operator=(const PkgGroupUser& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgGroupUser& default_instance();

  void Swap(PkgGroupUser* other);

  // implements Message ----------------------------------------------

  inline PkgGroupUser* New() const { return New(NULL); }

  PkgGroupUser* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgGroupUser& from);
  void MergeFrom(const PkgGroupUser& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgGroupUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 groupid = 1;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  inline ::google::protobuf::int32 groupid() const;
  inline void set_groupid(::google::protobuf::int32 value);

  // required int32 userid = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 2;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);

  // optional string realname = 3;
  inline bool has_realname() const;
  inline void clear_realname();
  static const int kRealnameFieldNumber = 3;
  inline const ::std::string& realname() const;
  inline void set_realname(const ::std::string& value);
  inline void set_realname(const char* value);
  inline void set_realname(const char* value, size_t size);
  inline ::std::string* mutable_realname();
  inline ::std::string* release_realname();
  inline void set_allocated_realname(::std::string* realname);

  // optional string phonenumber = 12;
  inline bool has_phonenumber() const;
  inline void clear_phonenumber();
  static const int kPhonenumberFieldNumber = 12;
  inline const ::std::string& phonenumber() const;
  inline void set_phonenumber(const ::std::string& value);
  inline void set_phonenumber(const char* value);
  inline void set_phonenumber(const char* value, size_t size);
  inline ::std::string* mutable_phonenumber();
  inline ::std::string* release_phonenumber();
  inline void set_allocated_phonenumber(::std::string* phonenumber);

  // optional string emailaddress = 13;
  inline bool has_emailaddress() const;
  inline void clear_emailaddress();
  static const int kEmailaddressFieldNumber = 13;
  inline const ::std::string& emailaddress() const;
  inline void set_emailaddress(const ::std::string& value);
  inline void set_emailaddress(const char* value);
  inline void set_emailaddress(const char* value, size_t size);
  inline ::std::string* mutable_emailaddress();
  inline ::std::string* release_emailaddress();
  inline void set_allocated_emailaddress(::std::string* emailaddress);

  // optional int32 permission = 15;
  inline bool has_permission() const;
  inline void clear_permission();
  static const int kPermissionFieldNumber = 15;
  inline ::google::protobuf::int32 permission() const;
  inline void set_permission(::google::protobuf::int32 value);

  // optional string createtime = 19;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreatetimeFieldNumber = 19;
  inline const ::std::string& createtime() const;
  inline void set_createtime(const ::std::string& value);
  inline void set_createtime(const char* value);
  inline void set_createtime(const char* value, size_t size);
  inline ::std::string* mutable_createtime();
  inline ::std::string* release_createtime();
  inline void set_allocated_createtime(::std::string* createtime);

  // optional string rolename = 20;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRolenameFieldNumber = 20;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // optional int32 permissionroleid = 22;
  inline bool has_permissionroleid() const;
  inline void clear_permissionroleid();
  static const int kPermissionroleidFieldNumber = 22;
  inline ::google::protobuf::int32 permissionroleid() const;
  inline void set_permissionroleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:comm.PkgGroupUser)
 private:
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_realname();
  inline void clear_has_realname();
  inline void set_has_phonenumber();
  inline void clear_has_phonenumber();
  inline void set_has_emailaddress();
  inline void clear_has_emailaddress();
  inline void set_has_permission();
  inline void clear_has_permission();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_rolename();
  inline void clear_has_rolename();
  inline void set_has_permissionroleid();
  inline void clear_has_permissionroleid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 groupid_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::internal::ArenaStringPtr realname_;
  ::google::protobuf::internal::ArenaStringPtr phonenumber_;
  ::google::protobuf::internal::ArenaStringPtr emailaddress_;
  ::google::protobuf::internal::ArenaStringPtr createtime_;
  ::google::protobuf::int32 permission_;
  ::google::protobuf::int32 permissionroleid_;
  ::google::protobuf::internal::ArenaStringPtr rolename_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgGroupUser* default_instance_;
};
// -------------------------------------------------------------------

class PkgCompanyGroupQueryReq : public ::google::protobuf::Message {
 public:
  PkgCompanyGroupQueryReq();
  virtual ~PkgCompanyGroupQueryReq();

  PkgCompanyGroupQueryReq(const PkgCompanyGroupQueryReq& from);

  inline PkgCompanyGroupQueryReq& operator=(const PkgCompanyGroupQueryReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgCompanyGroupQueryReq& default_instance();

  void Swap(PkgCompanyGroupQueryReq* other);

  // implements Message ----------------------------------------------

  inline PkgCompanyGroupQueryReq* New() const { return New(NULL); }

  PkgCompanyGroupQueryReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgCompanyGroupQueryReq& from);
  void MergeFrom(const PkgCompanyGroupQueryReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgCompanyGroupQueryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef PkgCompanyGroupQueryReq_EnQueryType EnQueryType;
  static const EnQueryType QT_ALL = PkgCompanyGroupQueryReq_EnQueryType_QT_ALL;
  static const EnQueryType QT_MINE = PkgCompanyGroupQueryReq_EnQueryType_QT_MINE;
  static inline bool EnQueryType_IsValid(int value) {
    return PkgCompanyGroupQueryReq_EnQueryType_IsValid(value);
  }
  static const EnQueryType EnQueryType_MIN =
    PkgCompanyGroupQueryReq_EnQueryType_EnQueryType_MIN;
  static const EnQueryType EnQueryType_MAX =
    PkgCompanyGroupQueryReq_EnQueryType_EnQueryType_MAX;
  static const int EnQueryType_ARRAYSIZE =
    PkgCompanyGroupQueryReq_EnQueryType_EnQueryType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EnQueryType_descriptor() {
    return PkgCompanyGroupQueryReq_EnQueryType_descriptor();
  }
  static inline const ::std::string& EnQueryType_Name(EnQueryType value) {
    return PkgCompanyGroupQueryReq_EnQueryType_Name(value);
  }
  static inline bool EnQueryType_Parse(const ::std::string& name,
      EnQueryType* value) {
    return PkgCompanyGroupQueryReq_EnQueryType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .comm.PkgCompanyGroupQueryReq.EnQueryType querytype = 1 [default = QT_ALL];
  inline bool has_querytype() const;
  inline void clear_querytype();
  static const int kQuerytypeFieldNumber = 1;
  inline ::comm::PkgCompanyGroupQueryReq_EnQueryType querytype() const;
  inline void set_querytype(::comm::PkgCompanyGroupQueryReq_EnQueryType value);

  // @@protoc_insertion_point(class_scope:comm.PkgCompanyGroupQueryReq)
 private:
  inline void set_has_querytype();
  inline void clear_has_querytype();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int querytype_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgCompanyGroupQueryReq* default_instance_;
};
// -------------------------------------------------------------------

class PkgCompanyGroupQueryReply : public ::google::protobuf::Message {
 public:
  PkgCompanyGroupQueryReply();
  virtual ~PkgCompanyGroupQueryReply();

  PkgCompanyGroupQueryReply(const PkgCompanyGroupQueryReply& from);

  inline PkgCompanyGroupQueryReply& operator=(const PkgCompanyGroupQueryReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgCompanyGroupQueryReply& default_instance();

  void Swap(PkgCompanyGroupQueryReply* other);

  // implements Message ----------------------------------------------

  inline PkgCompanyGroupQueryReply* New() const { return New(NULL); }

  PkgCompanyGroupQueryReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgCompanyGroupQueryReply& from);
  void MergeFrom(const PkgCompanyGroupQueryReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgCompanyGroupQueryReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool issuccess = 1;
  inline bool has_issuccess() const;
  inline void clear_issuccess();
  static const int kIssuccessFieldNumber = 1;
  inline bool issuccess() const;
  inline void set_issuccess(bool value);

  // optional string err = 2;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 2;
  inline const ::std::string& err() const;
  inline void set_err(const ::std::string& value);
  inline void set_err(const char* value);
  inline void set_err(const char* value, size_t size);
  inline ::std::string* mutable_err();
  inline ::std::string* release_err();
  inline void set_allocated_err(::std::string* err);

  // repeated .comm.PkgCompanyGroup companygrouplist = 4;
  inline int companygrouplist_size() const;
  inline void clear_companygrouplist();
  static const int kCompanygrouplistFieldNumber = 4;
  inline const ::comm::PkgCompanyGroup& companygrouplist(int index) const;
  inline ::comm::PkgCompanyGroup* mutable_companygrouplist(int index);
  inline ::comm::PkgCompanyGroup* add_companygrouplist();
  inline const ::google::protobuf::RepeatedPtrField< ::comm::PkgCompanyGroup >&
      companygrouplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::comm::PkgCompanyGroup >*
      mutable_companygrouplist();

  // repeated .comm.PkgGroupUser groupuserlist = 5;
  inline int groupuserlist_size() const;
  inline void clear_groupuserlist();
  static const int kGroupuserlistFieldNumber = 5;
  inline const ::comm::PkgGroupUser& groupuserlist(int index) const;
  inline ::comm::PkgGroupUser* mutable_groupuserlist(int index);
  inline ::comm::PkgGroupUser* add_groupuserlist();
  inline const ::google::protobuf::RepeatedPtrField< ::comm::PkgGroupUser >&
      groupuserlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::comm::PkgGroupUser >*
      mutable_groupuserlist();

  // @@protoc_insertion_point(class_scope:comm.PkgCompanyGroupQueryReply)
 private:
  inline void set_has_issuccess();
  inline void clear_has_issuccess();
  inline void set_has_err();
  inline void clear_has_err();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  ::google::protobuf::RepeatedPtrField< ::comm::PkgCompanyGroup > companygrouplist_;
  ::google::protobuf::RepeatedPtrField< ::comm::PkgGroupUser > groupuserlist_;
  bool issuccess_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgCompanyGroupQueryReply* default_instance_;
};
// -------------------------------------------------------------------

class PkgAdvInfo : public ::google::protobuf::Message {
 public:
  PkgAdvInfo();
  virtual ~PkgAdvInfo();

  PkgAdvInfo(const PkgAdvInfo& from);

  inline PkgAdvInfo& operator=(const PkgAdvInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgAdvInfo& default_instance();

  void Swap(PkgAdvInfo* other);

  // implements Message ----------------------------------------------

  inline PkgAdvInfo* New() const { return New(NULL); }

  PkgAdvInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgAdvInfo& from);
  void MergeFrom(const PkgAdvInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgAdvInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string urlpic = 3;
  inline bool has_urlpic() const;
  inline void clear_urlpic();
  static const int kUrlpicFieldNumber = 3;
  inline const ::std::string& urlpic() const;
  inline void set_urlpic(const ::std::string& value);
  inline void set_urlpic(const char* value);
  inline void set_urlpic(const char* value, size_t size);
  inline ::std::string* mutable_urlpic();
  inline ::std::string* release_urlpic();
  inline void set_allocated_urlpic(::std::string* urlpic);

  // optional string advtxt = 4;
  inline bool has_advtxt() const;
  inline void clear_advtxt();
  static const int kAdvtxtFieldNumber = 4;
  inline const ::std::string& advtxt() const;
  inline void set_advtxt(const ::std::string& value);
  inline void set_advtxt(const char* value);
  inline void set_advtxt(const char* value, size_t size);
  inline ::std::string* mutable_advtxt();
  inline ::std::string* release_advtxt();
  inline void set_allocated_advtxt(::std::string* advtxt);

  // optional string advdesc = 5;
  inline bool has_advdesc() const;
  inline void clear_advdesc();
  static const int kAdvdescFieldNumber = 5;
  inline const ::std::string& advdesc() const;
  inline void set_advdesc(const ::std::string& value);
  inline void set_advdesc(const char* value);
  inline void set_advdesc(const char* value, size_t size);
  inline ::std::string* mutable_advdesc();
  inline ::std::string* release_advdesc();
  inline void set_allocated_advdesc(::std::string* advdesc);

  // optional string createtime = 6;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreatetimeFieldNumber = 6;
  inline const ::std::string& createtime() const;
  inline void set_createtime(const ::std::string& value);
  inline void set_createtime(const char* value);
  inline void set_createtime(const char* value, size_t size);
  inline ::std::string* mutable_createtime();
  inline ::std::string* release_createtime();
  inline void set_allocated_createtime(::std::string* createtime);

  // optional string expiretime = 7;
  inline bool has_expiretime() const;
  inline void clear_expiretime();
  static const int kExpiretimeFieldNumber = 7;
  inline const ::std::string& expiretime() const;
  inline void set_expiretime(const ::std::string& value);
  inline void set_expiretime(const char* value);
  inline void set_expiretime(const char* value, size_t size);
  inline ::std::string* mutable_expiretime();
  inline ::std::string* release_expiretime();
  inline void set_allocated_expiretime(::std::string* expiretime);

  // @@protoc_insertion_point(class_scope:comm.PkgAdvInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_urlpic();
  inline void clear_has_urlpic();
  inline void set_has_advtxt();
  inline void clear_has_advtxt();
  inline void set_has_advdesc();
  inline void clear_has_advdesc();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_expiretime();
  inline void clear_has_expiretime();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr urlpic_;
  ::google::protobuf::internal::ArenaStringPtr advtxt_;
  ::google::protobuf::internal::ArenaStringPtr advdesc_;
  ::google::protobuf::internal::ArenaStringPtr createtime_;
  ::google::protobuf::internal::ArenaStringPtr expiretime_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgAdvInfo* default_instance_;
};
// -------------------------------------------------------------------

class PkgAdvQueryReq : public ::google::protobuf::Message {
 public:
  PkgAdvQueryReq();
  virtual ~PkgAdvQueryReq();

  PkgAdvQueryReq(const PkgAdvQueryReq& from);

  inline PkgAdvQueryReq& operator=(const PkgAdvQueryReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgAdvQueryReq& default_instance();

  void Swap(PkgAdvQueryReq* other);

  // implements Message ----------------------------------------------

  inline PkgAdvQueryReq* New() const { return New(NULL); }

  PkgAdvQueryReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgAdvQueryReq& from);
  void MergeFrom(const PkgAdvQueryReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgAdvQueryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef PkgAdvQueryReq_EnQueryType EnQueryType;
  static const EnQueryType QT_SPNUM = PkgAdvQueryReq_EnQueryType_QT_SPNUM;
  static const EnQueryType QT_VAILDTIME = PkgAdvQueryReq_EnQueryType_QT_VAILDTIME;
  static const EnQueryType QT_ADVID = PkgAdvQueryReq_EnQueryType_QT_ADVID;
  static inline bool EnQueryType_IsValid(int value) {
    return PkgAdvQueryReq_EnQueryType_IsValid(value);
  }
  static const EnQueryType EnQueryType_MIN =
    PkgAdvQueryReq_EnQueryType_EnQueryType_MIN;
  static const EnQueryType EnQueryType_MAX =
    PkgAdvQueryReq_EnQueryType_EnQueryType_MAX;
  static const int EnQueryType_ARRAYSIZE =
    PkgAdvQueryReq_EnQueryType_EnQueryType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EnQueryType_descriptor() {
    return PkgAdvQueryReq_EnQueryType_descriptor();
  }
  static inline const ::std::string& EnQueryType_Name(EnQueryType value) {
    return PkgAdvQueryReq_EnQueryType_Name(value);
  }
  static inline bool EnQueryType_Parse(const ::std::string& name,
      EnQueryType* value) {
    return PkgAdvQueryReq_EnQueryType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 queryflag = 1 [default = 1];
  inline bool has_queryflag() const;
  inline void clear_queryflag();
  static const int kQueryflagFieldNumber = 1;
  inline ::google::protobuf::int32 queryflag() const;
  inline void set_queryflag(::google::protobuf::int32 value);

  // optional int32 numreq = 2;
  inline bool has_numreq() const;
  inline void clear_numreq();
  static const int kNumreqFieldNumber = 2;
  inline ::google::protobuf::int32 numreq() const;
  inline void set_numreq(::google::protobuf::int32 value);

  // optional int32 advid = 3;
  inline bool has_advid() const;
  inline void clear_advid();
  static const int kAdvidFieldNumber = 3;
  inline ::google::protobuf::int32 advid() const;
  inline void set_advid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:comm.PkgAdvQueryReq)
 private:
  inline void set_has_queryflag();
  inline void clear_has_queryflag();
  inline void set_has_numreq();
  inline void clear_has_numreq();
  inline void set_has_advid();
  inline void clear_has_advid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 queryflag_;
  ::google::protobuf::int32 numreq_;
  ::google::protobuf::int32 advid_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgAdvQueryReq* default_instance_;
};
// -------------------------------------------------------------------

class PkgAdvQueryReply : public ::google::protobuf::Message {
 public:
  PkgAdvQueryReply();
  virtual ~PkgAdvQueryReply();

  PkgAdvQueryReply(const PkgAdvQueryReply& from);

  inline PkgAdvQueryReply& operator=(const PkgAdvQueryReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgAdvQueryReply& default_instance();

  void Swap(PkgAdvQueryReply* other);

  // implements Message ----------------------------------------------

  inline PkgAdvQueryReply* New() const { return New(NULL); }

  PkgAdvQueryReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgAdvQueryReply& from);
  void MergeFrom(const PkgAdvQueryReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgAdvQueryReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool issuccess = 1;
  inline bool has_issuccess() const;
  inline void clear_issuccess();
  static const int kIssuccessFieldNumber = 1;
  inline bool issuccess() const;
  inline void set_issuccess(bool value);

  // optional string err = 2;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 2;
  inline const ::std::string& err() const;
  inline void set_err(const ::std::string& value);
  inline void set_err(const char* value);
  inline void set_err(const char* value, size_t size);
  inline ::std::string* mutable_err();
  inline ::std::string* release_err();
  inline void set_allocated_err(::std::string* err);

  // repeated .comm.PkgAdvInfo advinfolist = 3;
  inline int advinfolist_size() const;
  inline void clear_advinfolist();
  static const int kAdvinfolistFieldNumber = 3;
  inline const ::comm::PkgAdvInfo& advinfolist(int index) const;
  inline ::comm::PkgAdvInfo* mutable_advinfolist(int index);
  inline ::comm::PkgAdvInfo* add_advinfolist();
  inline const ::google::protobuf::RepeatedPtrField< ::comm::PkgAdvInfo >&
      advinfolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::comm::PkgAdvInfo >*
      mutable_advinfolist();

  // @@protoc_insertion_point(class_scope:comm.PkgAdvQueryReply)
 private:
  inline void set_has_issuccess();
  inline void clear_has_issuccess();
  inline void set_has_err();
  inline void clear_has_err();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  ::google::protobuf::RepeatedPtrField< ::comm::PkgAdvInfo > advinfolist_;
  bool issuccess_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgAdvQueryReply* default_instance_;
};
// -------------------------------------------------------------------

class PkgQueryMyProfileReq : public ::google::protobuf::Message {
 public:
  PkgQueryMyProfileReq();
  virtual ~PkgQueryMyProfileReq();

  PkgQueryMyProfileReq(const PkgQueryMyProfileReq& from);

  inline PkgQueryMyProfileReq& operator=(const PkgQueryMyProfileReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgQueryMyProfileReq& default_instance();

  void Swap(PkgQueryMyProfileReq* other);

  // implements Message ----------------------------------------------

  inline PkgQueryMyProfileReq* New() const { return New(NULL); }

  PkgQueryMyProfileReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgQueryMyProfileReq& from);
  void MergeFrom(const PkgQueryMyProfileReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgQueryMyProfileReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string curversion = 1;
  inline bool has_curversion() const;
  inline void clear_curversion();
  static const int kCurversionFieldNumber = 1;
  inline const ::std::string& curversion() const;
  inline void set_curversion(const ::std::string& value);
  inline void set_curversion(const char* value);
  inline void set_curversion(const char* value, size_t size);
  inline ::std::string* mutable_curversion();
  inline ::std::string* release_curversion();
  inline void set_allocated_curversion(::std::string* curversion);

  // optional string platmform = 2;
  inline bool has_platmform() const;
  inline void clear_platmform();
  static const int kPlatmformFieldNumber = 2;
  inline const ::std::string& platmform() const;
  inline void set_platmform(const ::std::string& value);
  inline void set_platmform(const char* value);
  inline void set_platmform(const char* value, size_t size);
  inline ::std::string* mutable_platmform();
  inline ::std::string* release_platmform();
  inline void set_allocated_platmform(::std::string* platmform);

  // @@protoc_insertion_point(class_scope:comm.PkgQueryMyProfileReq)
 private:
  inline void set_has_curversion();
  inline void clear_has_curversion();
  inline void set_has_platmform();
  inline void clear_has_platmform();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr curversion_;
  ::google::protobuf::internal::ArenaStringPtr platmform_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgQueryMyProfileReq* default_instance_;
};
// -------------------------------------------------------------------

class PkgQueryMyProfileReply : public ::google::protobuf::Message {
 public:
  PkgQueryMyProfileReply();
  virtual ~PkgQueryMyProfileReply();

  PkgQueryMyProfileReply(const PkgQueryMyProfileReply& from);

  inline PkgQueryMyProfileReply& operator=(const PkgQueryMyProfileReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgQueryMyProfileReply& default_instance();

  void Swap(PkgQueryMyProfileReply* other);

  // implements Message ----------------------------------------------

  inline PkgQueryMyProfileReply* New() const { return New(NULL); }

  PkgQueryMyProfileReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgQueryMyProfileReply& from);
  void MergeFrom(const PkgQueryMyProfileReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgQueryMyProfileReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string versionlastest = 51;
  inline bool has_versionlastest() const;
  inline void clear_versionlastest();
  static const int kVersionlastestFieldNumber = 51;
  inline const ::std::string& versionlastest() const;
  inline void set_versionlastest(const ::std::string& value);
  inline void set_versionlastest(const char* value);
  inline void set_versionlastest(const char* value, size_t size);
  inline ::std::string* mutable_versionlastest();
  inline ::std::string* release_versionlastest();
  inline void set_allocated_versionlastest(::std::string* versionlastest);

  // optional string versiondownloadurl = 52;
  inline bool has_versiondownloadurl() const;
  inline void clear_versiondownloadurl();
  static const int kVersiondownloadurlFieldNumber = 52;
  inline const ::std::string& versiondownloadurl() const;
  inline void set_versiondownloadurl(const ::std::string& value);
  inline void set_versiondownloadurl(const char* value);
  inline void set_versiondownloadurl(const char* value, size_t size);
  inline ::std::string* mutable_versiondownloadurl();
  inline ::std::string* release_versiondownloadurl();
  inline void set_allocated_versiondownloadurl(::std::string* versiondownloadurl);

  // optional int32 tasknumbernotfinished = 100;
  inline bool has_tasknumbernotfinished() const;
  inline void clear_tasknumbernotfinished();
  static const int kTasknumbernotfinishedFieldNumber = 100;
  inline ::google::protobuf::int32 tasknumbernotfinished() const;
  inline void set_tasknumbernotfinished(::google::protobuf::int32 value);

  // optional int32 tasknumberfinshed = 101;
  inline bool has_tasknumberfinshed() const;
  inline void clear_tasknumberfinshed();
  static const int kTasknumberfinshedFieldNumber = 101;
  inline ::google::protobuf::int32 tasknumberfinshed() const;
  inline void set_tasknumberfinshed(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:comm.PkgQueryMyProfileReply)
 private:
  inline void set_has_versionlastest();
  inline void clear_has_versionlastest();
  inline void set_has_versiondownloadurl();
  inline void clear_has_versiondownloadurl();
  inline void set_has_tasknumbernotfinished();
  inline void clear_has_tasknumbernotfinished();
  inline void set_has_tasknumberfinshed();
  inline void clear_has_tasknumberfinshed();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr versionlastest_;
  ::google::protobuf::internal::ArenaStringPtr versiondownloadurl_;
  ::google::protobuf::int32 tasknumbernotfinished_;
  ::google::protobuf::int32 tasknumberfinshed_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgQueryMyProfileReply* default_instance_;
};
// -------------------------------------------------------------------

class PkgLogoutReq : public ::google::protobuf::Message {
 public:
  PkgLogoutReq();
  virtual ~PkgLogoutReq();

  PkgLogoutReq(const PkgLogoutReq& from);

  inline PkgLogoutReq& operator=(const PkgLogoutReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgLogoutReq& default_instance();

  void Swap(PkgLogoutReq* other);

  // implements Message ----------------------------------------------

  inline PkgLogoutReq* New() const { return New(NULL); }

  PkgLogoutReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgLogoutReq& from);
  void MergeFrom(const PkgLogoutReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgLogoutReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:comm.PkgLogoutReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgLogoutReq* default_instance_;
};
// -------------------------------------------------------------------

class PkgLogoutReply : public ::google::protobuf::Message {
 public:
  PkgLogoutReply();
  virtual ~PkgLogoutReply();

  PkgLogoutReply(const PkgLogoutReply& from);

  inline PkgLogoutReply& operator=(const PkgLogoutReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgLogoutReply& default_instance();

  void Swap(PkgLogoutReply* other);

  // implements Message ----------------------------------------------

  inline PkgLogoutReply* New() const { return New(NULL); }

  PkgLogoutReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgLogoutReply& from);
  void MergeFrom(const PkgLogoutReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgLogoutReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:comm.PkgLogoutReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgLogoutReply* default_instance_;
};
// -------------------------------------------------------------------

class PkgNotifyReq : public ::google::protobuf::Message {
 public:
  PkgNotifyReq();
  virtual ~PkgNotifyReq();

  PkgNotifyReq(const PkgNotifyReq& from);

  inline PkgNotifyReq& operator=(const PkgNotifyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgNotifyReq& default_instance();

  void Swap(PkgNotifyReq* other);

  // implements Message ----------------------------------------------

  inline PkgNotifyReq* New() const { return New(NULL); }

  PkgNotifyReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgNotifyReq& from);
  void MergeFrom(const PkgNotifyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgNotifyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string curversion = 1;
  inline bool has_curversion() const;
  inline void clear_curversion();
  static const int kCurversionFieldNumber = 1;
  inline const ::std::string& curversion() const;
  inline void set_curversion(const ::std::string& value);
  inline void set_curversion(const char* value);
  inline void set_curversion(const char* value, size_t size);
  inline ::std::string* mutable_curversion();
  inline ::std::string* release_curversion();
  inline void set_allocated_curversion(::std::string* curversion);

  // optional string platmform = 2;
  inline bool has_platmform() const;
  inline void clear_platmform();
  static const int kPlatmformFieldNumber = 2;
  inline const ::std::string& platmform() const;
  inline void set_platmform(const ::std::string& value);
  inline void set_platmform(const char* value);
  inline void set_platmform(const char* value, size_t size);
  inline ::std::string* mutable_platmform();
  inline ::std::string* release_platmform();
  inline void set_allocated_platmform(::std::string* platmform);

  // optional string dataupatedtime = 3;
  inline bool has_dataupatedtime() const;
  inline void clear_dataupatedtime();
  static const int kDataupatedtimeFieldNumber = 3;
  inline const ::std::string& dataupatedtime() const;
  inline void set_dataupatedtime(const ::std::string& value);
  inline void set_dataupatedtime(const char* value);
  inline void set_dataupatedtime(const char* value, size_t size);
  inline ::std::string* mutable_dataupatedtime();
  inline ::std::string* release_dataupatedtime();
  inline void set_allocated_dataupatedtime(::std::string* dataupatedtime);

  // optional int32 forceupdateflag = 100 [default = 0];
  inline bool has_forceupdateflag() const;
  inline void clear_forceupdateflag();
  static const int kForceupdateflagFieldNumber = 100;
  inline ::google::protobuf::int32 forceupdateflag() const;
  inline void set_forceupdateflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:comm.PkgNotifyReq)
 private:
  inline void set_has_curversion();
  inline void clear_has_curversion();
  inline void set_has_platmform();
  inline void clear_has_platmform();
  inline void set_has_dataupatedtime();
  inline void clear_has_dataupatedtime();
  inline void set_has_forceupdateflag();
  inline void clear_has_forceupdateflag();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr curversion_;
  ::google::protobuf::internal::ArenaStringPtr platmform_;
  ::google::protobuf::internal::ArenaStringPtr dataupatedtime_;
  ::google::protobuf::int32 forceupdateflag_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgNotifyReq* default_instance_;
};
// -------------------------------------------------------------------

class PkgNotifyReply : public ::google::protobuf::Message {
 public:
  PkgNotifyReply();
  virtual ~PkgNotifyReply();

  PkgNotifyReply(const PkgNotifyReply& from);

  inline PkgNotifyReply& operator=(const PkgNotifyReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgNotifyReply& default_instance();

  void Swap(PkgNotifyReply* other);

  // implements Message ----------------------------------------------

  inline PkgNotifyReply* New() const { return New(NULL); }

  PkgNotifyReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgNotifyReply& from);
  void MergeFrom(const PkgNotifyReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgNotifyReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string dataupatedtime = 100;
  inline bool has_dataupatedtime() const;
  inline void clear_dataupatedtime();
  static const int kDataupatedtimeFieldNumber = 100;
  inline const ::std::string& dataupatedtime() const;
  inline void set_dataupatedtime(const ::std::string& value);
  inline void set_dataupatedtime(const char* value);
  inline void set_dataupatedtime(const char* value, size_t size);
  inline ::std::string* mutable_dataupatedtime();
  inline ::std::string* release_dataupatedtime();
  inline void set_allocated_dataupatedtime(::std::string* dataupatedtime);

  // optional int32 notifyupdatedflag = 101;
  inline bool has_notifyupdatedflag() const;
  inline void clear_notifyupdatedflag();
  static const int kNotifyupdatedflagFieldNumber = 101;
  inline ::google::protobuf::int32 notifyupdatedflag() const;
  inline void set_notifyupdatedflag(::google::protobuf::int32 value);

  // optional .comm.PkgCompanyInfo companyinfo = 1000;
  inline bool has_companyinfo() const;
  inline void clear_companyinfo();
  static const int kCompanyinfoFieldNumber = 1000;
  inline const ::comm::PkgCompanyInfo& companyinfo() const;
  inline ::comm::PkgCompanyInfo* mutable_companyinfo();
  inline ::comm::PkgCompanyInfo* release_companyinfo();
  inline void set_allocated_companyinfo(::comm::PkgCompanyInfo* companyinfo);

  // optional int32 tasknumbernotfinished = 1011;
  inline bool has_tasknumbernotfinished() const;
  inline void clear_tasknumbernotfinished();
  static const int kTasknumbernotfinishedFieldNumber = 1011;
  inline ::google::protobuf::int32 tasknumbernotfinished() const;
  inline void set_tasknumbernotfinished(::google::protobuf::int32 value);

  // optional int32 tasknumberfinished = 1012;
  inline bool has_tasknumberfinished() const;
  inline void clear_tasknumberfinished();
  static const int kTasknumberfinishedFieldNumber = 1012;
  inline ::google::protobuf::int32 tasknumberfinished() const;
  inline void set_tasknumberfinished(::google::protobuf::int32 value);

  // optional string versionlastest = 1030;
  inline bool has_versionlastest() const;
  inline void clear_versionlastest();
  static const int kVersionlastestFieldNumber = 1030;
  inline const ::std::string& versionlastest() const;
  inline void set_versionlastest(const ::std::string& value);
  inline void set_versionlastest(const char* value);
  inline void set_versionlastest(const char* value, size_t size);
  inline ::std::string* mutable_versionlastest();
  inline ::std::string* release_versionlastest();
  inline void set_allocated_versionlastest(::std::string* versionlastest);

  // optional string versiondownloadurl = 1041;
  inline bool has_versiondownloadurl() const;
  inline void clear_versiondownloadurl();
  static const int kVersiondownloadurlFieldNumber = 1041;
  inline const ::std::string& versiondownloadurl() const;
  inline void set_versiondownloadurl(const ::std::string& value);
  inline void set_versiondownloadurl(const char* value);
  inline void set_versiondownloadurl(const char* value, size_t size);
  inline ::std::string* mutable_versiondownloadurl();
  inline ::std::string* release_versiondownloadurl();
  inline void set_allocated_versiondownloadurl(::std::string* versiondownloadurl);

  // optional int32 permission = 1051;
  inline bool has_permission() const;
  inline void clear_permission();
  static const int kPermissionFieldNumber = 1051;
  inline ::google::protobuf::int32 permission() const;
  inline void set_permission(::google::protobuf::int32 value);

  // optional string rolename = 1052;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRolenameFieldNumber = 1052;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // optional int32 permissionroleid = 1053;
  inline bool has_permissionroleid() const;
  inline void clear_permissionroleid();
  static const int kPermissionroleidFieldNumber = 1053;
  inline ::google::protobuf::int32 permissionroleid() const;
  inline void set_permissionroleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:comm.PkgNotifyReply)
 private:
  inline void set_has_dataupatedtime();
  inline void clear_has_dataupatedtime();
  inline void set_has_notifyupdatedflag();
  inline void clear_has_notifyupdatedflag();
  inline void set_has_companyinfo();
  inline void clear_has_companyinfo();
  inline void set_has_tasknumbernotfinished();
  inline void clear_has_tasknumbernotfinished();
  inline void set_has_tasknumberfinished();
  inline void clear_has_tasknumberfinished();
  inline void set_has_versionlastest();
  inline void clear_has_versionlastest();
  inline void set_has_versiondownloadurl();
  inline void clear_has_versiondownloadurl();
  inline void set_has_permission();
  inline void clear_has_permission();
  inline void set_has_rolename();
  inline void clear_has_rolename();
  inline void set_has_permissionroleid();
  inline void clear_has_permissionroleid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr dataupatedtime_;
  ::comm::PkgCompanyInfo* companyinfo_;
  ::google::protobuf::int32 notifyupdatedflag_;
  ::google::protobuf::int32 tasknumbernotfinished_;
  ::google::protobuf::internal::ArenaStringPtr versionlastest_;
  ::google::protobuf::int32 tasknumberfinished_;
  ::google::protobuf::int32 permission_;
  ::google::protobuf::internal::ArenaStringPtr versiondownloadurl_;
  ::google::protobuf::internal::ArenaStringPtr rolename_;
  ::google::protobuf::int32 permissionroleid_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgNotifyReply* default_instance_;
};
// -------------------------------------------------------------------

class PkgPhoneCppWrapReq : public ::google::protobuf::Message {
 public:
  PkgPhoneCppWrapReq();
  virtual ~PkgPhoneCppWrapReq();

  PkgPhoneCppWrapReq(const PkgPhoneCppWrapReq& from);

  inline PkgPhoneCppWrapReq& operator=(const PkgPhoneCppWrapReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgPhoneCppWrapReq& default_instance();

  void Swap(PkgPhoneCppWrapReq* other);

  // implements Message ----------------------------------------------

  inline PkgPhoneCppWrapReq* New() const { return New(NULL); }

  PkgPhoneCppWrapReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgPhoneCppWrapReq& from);
  void MergeFrom(const PkgPhoneCppWrapReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgPhoneCppWrapReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef PkgPhoneCppWrapReq_EnReqType EnReqType;
  static const EnReqType PONEWRAP_LOGINSUCCESS = PkgPhoneCppWrapReq_EnReqType_PONEWRAP_LOGINSUCCESS;
  static const EnReqType PONEWRAP_GETUSERTASKUPDATETIME = PkgPhoneCppWrapReq_EnReqType_PONEWRAP_GETUSERTASKUPDATETIME;
  static const EnReqType PONEWRAP_SETUSERTASKUPDATETIMEANDTASKS = PkgPhoneCppWrapReq_EnReqType_PONEWRAP_SETUSERTASKUPDATETIMEANDTASKS;
  static const EnReqType PONEWRAP_QUERYPAGETASKS = PkgPhoneCppWrapReq_EnReqType_PONEWRAP_QUERYPAGETASKS;
  static const EnReqType PONEWRAP_QUERYTASKDETAIL = PkgPhoneCppWrapReq_EnReqType_PONEWRAP_QUERYTASKDETAIL;
  static inline bool EnReqType_IsValid(int value) {
    return PkgPhoneCppWrapReq_EnReqType_IsValid(value);
  }
  static const EnReqType EnReqType_MIN =
    PkgPhoneCppWrapReq_EnReqType_EnReqType_MIN;
  static const EnReqType EnReqType_MAX =
    PkgPhoneCppWrapReq_EnReqType_EnReqType_MAX;
  static const int EnReqType_ARRAYSIZE =
    PkgPhoneCppWrapReq_EnReqType_EnReqType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EnReqType_descriptor() {
    return PkgPhoneCppWrapReq_EnReqType_descriptor();
  }
  static inline const ::std::string& EnReqType_Name(EnReqType value) {
    return PkgPhoneCppWrapReq_EnReqType_Name(value);
  }
  static inline bool EnReqType_Parse(const ::std::string& name,
      EnReqType* value) {
    return PkgPhoneCppWrapReq_EnReqType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);

  // required .comm.PkgPhoneCppWrapReq.EnReqType enreqtype = 2;
  inline bool has_enreqtype() const;
  inline void clear_enreqtype();
  static const int kEnreqtypeFieldNumber = 2;
  inline ::comm::PkgPhoneCppWrapReq_EnReqType enreqtype() const;
  inline void set_enreqtype(::comm::PkgPhoneCppWrapReq_EnReqType value);

  // optional string lasttaskupdatetime = 1000;
  inline bool has_lasttaskupdatetime() const;
  inline void clear_lasttaskupdatetime();
  static const int kLasttaskupdatetimeFieldNumber = 1000;
  inline const ::std::string& lasttaskupdatetime() const;
  inline void set_lasttaskupdatetime(const ::std::string& value);
  inline void set_lasttaskupdatetime(const char* value);
  inline void set_lasttaskupdatetime(const char* value, size_t size);
  inline ::std::string* mutable_lasttaskupdatetime();
  inline ::std::string* release_lasttaskupdatetime();
  inline void set_allocated_lasttaskupdatetime(::std::string* lasttaskupdatetime);

  // repeated .comm.PkgTaskInfo taskinfolist = 1001;
  inline int taskinfolist_size() const;
  inline void clear_taskinfolist();
  static const int kTaskinfolistFieldNumber = 1001;
  inline const ::comm::PkgTaskInfo& taskinfolist(int index) const;
  inline ::comm::PkgTaskInfo* mutable_taskinfolist(int index);
  inline ::comm::PkgTaskInfo* add_taskinfolist();
  inline const ::google::protobuf::RepeatedPtrField< ::comm::PkgTaskInfo >&
      taskinfolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::comm::PkgTaskInfo >*
      mutable_taskinfolist();

  // optional .comm.PkgTaskPageQueryReq taskpagequeryreq = 1011;
  inline bool has_taskpagequeryreq() const;
  inline void clear_taskpagequeryreq();
  static const int kTaskpagequeryreqFieldNumber = 1011;
  inline const ::comm::PkgTaskPageQueryReq& taskpagequeryreq() const;
  inline ::comm::PkgTaskPageQueryReq* mutable_taskpagequeryreq();
  inline ::comm::PkgTaskPageQueryReq* release_taskpagequeryreq();
  inline void set_allocated_taskpagequeryreq(::comm::PkgTaskPageQueryReq* taskpagequeryreq);

  // optional .comm.PkgTaskQueryReq taskqueryreq = 1021;
  inline bool has_taskqueryreq() const;
  inline void clear_taskqueryreq();
  static const int kTaskqueryreqFieldNumber = 1021;
  inline const ::comm::PkgTaskQueryReq& taskqueryreq() const;
  inline ::comm::PkgTaskQueryReq* mutable_taskqueryreq();
  inline ::comm::PkgTaskQueryReq* release_taskqueryreq();
  inline void set_allocated_taskqueryreq(::comm::PkgTaskQueryReq* taskqueryreq);

  // @@protoc_insertion_point(class_scope:comm.PkgPhoneCppWrapReq)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_enreqtype();
  inline void clear_has_enreqtype();
  inline void set_has_lasttaskupdatetime();
  inline void clear_has_lasttaskupdatetime();
  inline void set_has_taskpagequeryreq();
  inline void clear_has_taskpagequeryreq();
  inline void set_has_taskqueryreq();
  inline void clear_has_taskqueryreq();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 userid_;
  int enreqtype_;
  ::google::protobuf::internal::ArenaStringPtr lasttaskupdatetime_;
  ::google::protobuf::RepeatedPtrField< ::comm::PkgTaskInfo > taskinfolist_;
  ::comm::PkgTaskPageQueryReq* taskpagequeryreq_;
  ::comm::PkgTaskQueryReq* taskqueryreq_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgPhoneCppWrapReq* default_instance_;
};
// -------------------------------------------------------------------

class PkgPhoneCppWrapReply : public ::google::protobuf::Message {
 public:
  PkgPhoneCppWrapReply();
  virtual ~PkgPhoneCppWrapReply();

  PkgPhoneCppWrapReply(const PkgPhoneCppWrapReply& from);

  inline PkgPhoneCppWrapReply& operator=(const PkgPhoneCppWrapReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgPhoneCppWrapReply& default_instance();

  void Swap(PkgPhoneCppWrapReply* other);

  // implements Message ----------------------------------------------

  inline PkgPhoneCppWrapReply* New() const { return New(NULL); }

  PkgPhoneCppWrapReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgPhoneCppWrapReply& from);
  void MergeFrom(const PkgPhoneCppWrapReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgPhoneCppWrapReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool issuccess = 1;
  inline bool has_issuccess() const;
  inline void clear_issuccess();
  static const int kIssuccessFieldNumber = 1;
  inline bool issuccess() const;
  inline void set_issuccess(bool value);

  // optional string err = 2;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 2;
  inline const ::std::string& err() const;
  inline void set_err(const ::std::string& value);
  inline void set_err(const char* value);
  inline void set_err(const char* value, size_t size);
  inline ::std::string* mutable_err();
  inline ::std::string* release_err();
  inline void set_allocated_err(::std::string* err);

  // optional string lasttaskupdatetime = 1000;
  inline bool has_lasttaskupdatetime() const;
  inline void clear_lasttaskupdatetime();
  static const int kLasttaskupdatetimeFieldNumber = 1000;
  inline const ::std::string& lasttaskupdatetime() const;
  inline void set_lasttaskupdatetime(const ::std::string& value);
  inline void set_lasttaskupdatetime(const char* value);
  inline void set_lasttaskupdatetime(const char* value, size_t size);
  inline ::std::string* mutable_lasttaskupdatetime();
  inline ::std::string* release_lasttaskupdatetime();
  inline void set_allocated_lasttaskupdatetime(::std::string* lasttaskupdatetime);

  // optional .comm.PkgTaskPageQueryReply taskpagequeryreply = 1011;
  inline bool has_taskpagequeryreply() const;
  inline void clear_taskpagequeryreply();
  static const int kTaskpagequeryreplyFieldNumber = 1011;
  inline const ::comm::PkgTaskPageQueryReply& taskpagequeryreply() const;
  inline ::comm::PkgTaskPageQueryReply* mutable_taskpagequeryreply();
  inline ::comm::PkgTaskPageQueryReply* release_taskpagequeryreply();
  inline void set_allocated_taskpagequeryreply(::comm::PkgTaskPageQueryReply* taskpagequeryreply);

  // optional .comm.PkgTaskQueryReply taskqueryreply = 1021;
  inline bool has_taskqueryreply() const;
  inline void clear_taskqueryreply();
  static const int kTaskqueryreplyFieldNumber = 1021;
  inline const ::comm::PkgTaskQueryReply& taskqueryreply() const;
  inline ::comm::PkgTaskQueryReply* mutable_taskqueryreply();
  inline ::comm::PkgTaskQueryReply* release_taskqueryreply();
  inline void set_allocated_taskqueryreply(::comm::PkgTaskQueryReply* taskqueryreply);

  // @@protoc_insertion_point(class_scope:comm.PkgPhoneCppWrapReply)
 private:
  inline void set_has_issuccess();
  inline void clear_has_issuccess();
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_lasttaskupdatetime();
  inline void clear_has_lasttaskupdatetime();
  inline void set_has_taskpagequeryreply();
  inline void clear_has_taskpagequeryreply();
  inline void set_has_taskqueryreply();
  inline void clear_has_taskqueryreply();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  ::google::protobuf::internal::ArenaStringPtr lasttaskupdatetime_;
  ::comm::PkgTaskPageQueryReply* taskpagequeryreply_;
  ::comm::PkgTaskQueryReply* taskqueryreply_;
  bool issuccess_;
  friend void  protobuf_AddDesc_comm_2eproto();
  friend void protobuf_AssignDesc_comm_2eproto();
  friend void protobuf_ShutdownFile_comm_2eproto();

  void InitAsDefaultInstance();
  static PkgPhoneCppWrapReply* default_instance_;
};
// ===================================================================


// ===================================================================

// PkgConnectReq

// optional string apptype = 2;
inline bool PkgConnectReq::has_apptype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgConnectReq::set_has_apptype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgConnectReq::clear_has_apptype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgConnectReq::clear_apptype() {
  apptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_apptype();
}
inline const ::std::string& PkgConnectReq::apptype() const {
  // @@protoc_insertion_point(field_get:comm.PkgConnectReq.apptype)
  return apptype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgConnectReq::set_apptype(const ::std::string& value) {
  set_has_apptype();
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgConnectReq.apptype)
}
inline void PkgConnectReq::set_apptype(const char* value) {
  set_has_apptype();
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgConnectReq.apptype)
}
inline void PkgConnectReq::set_apptype(const char* value, size_t size) {
  set_has_apptype();
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgConnectReq.apptype)
}
inline ::std::string* PkgConnectReq::mutable_apptype() {
  set_has_apptype();
  // @@protoc_insertion_point(field_mutable:comm.PkgConnectReq.apptype)
  return apptype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgConnectReq::release_apptype() {
  clear_has_apptype();
  return apptype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgConnectReq::set_allocated_apptype(::std::string* apptype) {
  if (apptype != NULL) {
    set_has_apptype();
  } else {
    clear_has_apptype();
  }
  apptype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), apptype);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgConnectReq.apptype)
}

// optional string appversion = 3;
inline bool PkgConnectReq::has_appversion() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgConnectReq::set_has_appversion() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgConnectReq::clear_has_appversion() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgConnectReq::clear_appversion() {
  appversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appversion();
}
inline const ::std::string& PkgConnectReq::appversion() const {
  // @@protoc_insertion_point(field_get:comm.PkgConnectReq.appversion)
  return appversion_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgConnectReq::set_appversion(const ::std::string& value) {
  set_has_appversion();
  appversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgConnectReq.appversion)
}
inline void PkgConnectReq::set_appversion(const char* value) {
  set_has_appversion();
  appversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgConnectReq.appversion)
}
inline void PkgConnectReq::set_appversion(const char* value, size_t size) {
  set_has_appversion();
  appversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgConnectReq.appversion)
}
inline ::std::string* PkgConnectReq::mutable_appversion() {
  set_has_appversion();
  // @@protoc_insertion_point(field_mutable:comm.PkgConnectReq.appversion)
  return appversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgConnectReq::release_appversion() {
  clear_has_appversion();
  return appversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgConnectReq::set_allocated_appversion(::std::string* appversion) {
  if (appversion != NULL) {
    set_has_appversion();
  } else {
    clear_has_appversion();
  }
  appversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appversion);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgConnectReq.appversion)
}

// optional string applanguage = 4;
inline bool PkgConnectReq::has_applanguage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgConnectReq::set_has_applanguage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgConnectReq::clear_has_applanguage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgConnectReq::clear_applanguage() {
  applanguage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_applanguage();
}
inline const ::std::string& PkgConnectReq::applanguage() const {
  // @@protoc_insertion_point(field_get:comm.PkgConnectReq.applanguage)
  return applanguage_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgConnectReq::set_applanguage(const ::std::string& value) {
  set_has_applanguage();
  applanguage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgConnectReq.applanguage)
}
inline void PkgConnectReq::set_applanguage(const char* value) {
  set_has_applanguage();
  applanguage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgConnectReq.applanguage)
}
inline void PkgConnectReq::set_applanguage(const char* value, size_t size) {
  set_has_applanguage();
  applanguage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgConnectReq.applanguage)
}
inline ::std::string* PkgConnectReq::mutable_applanguage() {
  set_has_applanguage();
  // @@protoc_insertion_point(field_mutable:comm.PkgConnectReq.applanguage)
  return applanguage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgConnectReq::release_applanguage() {
  clear_has_applanguage();
  return applanguage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgConnectReq::set_allocated_applanguage(::std::string* applanguage) {
  if (applanguage != NULL) {
    set_has_applanguage();
  } else {
    clear_has_applanguage();
  }
  applanguage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), applanguage);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgConnectReq.applanguage)
}

// optional string ostype = 10;
inline bool PkgConnectReq::has_ostype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PkgConnectReq::set_has_ostype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PkgConnectReq::clear_has_ostype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PkgConnectReq::clear_ostype() {
  ostype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ostype();
}
inline const ::std::string& PkgConnectReq::ostype() const {
  // @@protoc_insertion_point(field_get:comm.PkgConnectReq.ostype)
  return ostype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgConnectReq::set_ostype(const ::std::string& value) {
  set_has_ostype();
  ostype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgConnectReq.ostype)
}
inline void PkgConnectReq::set_ostype(const char* value) {
  set_has_ostype();
  ostype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgConnectReq.ostype)
}
inline void PkgConnectReq::set_ostype(const char* value, size_t size) {
  set_has_ostype();
  ostype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgConnectReq.ostype)
}
inline ::std::string* PkgConnectReq::mutable_ostype() {
  set_has_ostype();
  // @@protoc_insertion_point(field_mutable:comm.PkgConnectReq.ostype)
  return ostype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgConnectReq::release_ostype() {
  clear_has_ostype();
  return ostype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgConnectReq::set_allocated_ostype(::std::string* ostype) {
  if (ostype != NULL) {
    set_has_ostype();
  } else {
    clear_has_ostype();
  }
  ostype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ostype);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgConnectReq.ostype)
}

// optional string osversion = 11;
inline bool PkgConnectReq::has_osversion() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PkgConnectReq::set_has_osversion() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PkgConnectReq::clear_has_osversion() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PkgConnectReq::clear_osversion() {
  osversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_osversion();
}
inline const ::std::string& PkgConnectReq::osversion() const {
  // @@protoc_insertion_point(field_get:comm.PkgConnectReq.osversion)
  return osversion_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgConnectReq::set_osversion(const ::std::string& value) {
  set_has_osversion();
  osversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgConnectReq.osversion)
}
inline void PkgConnectReq::set_osversion(const char* value) {
  set_has_osversion();
  osversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgConnectReq.osversion)
}
inline void PkgConnectReq::set_osversion(const char* value, size_t size) {
  set_has_osversion();
  osversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgConnectReq.osversion)
}
inline ::std::string* PkgConnectReq::mutable_osversion() {
  set_has_osversion();
  // @@protoc_insertion_point(field_mutable:comm.PkgConnectReq.osversion)
  return osversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgConnectReq::release_osversion() {
  clear_has_osversion();
  return osversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgConnectReq::set_allocated_osversion(::std::string* osversion) {
  if (osversion != NULL) {
    set_has_osversion();
  } else {
    clear_has_osversion();
  }
  osversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), osversion);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgConnectReq.osversion)
}

// optional string osrr = 12;
inline bool PkgConnectReq::has_osrr() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PkgConnectReq::set_has_osrr() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PkgConnectReq::clear_has_osrr() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PkgConnectReq::clear_osrr() {
  osrr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_osrr();
}
inline const ::std::string& PkgConnectReq::osrr() const {
  // @@protoc_insertion_point(field_get:comm.PkgConnectReq.osrr)
  return osrr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgConnectReq::set_osrr(const ::std::string& value) {
  set_has_osrr();
  osrr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgConnectReq.osrr)
}
inline void PkgConnectReq::set_osrr(const char* value) {
  set_has_osrr();
  osrr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgConnectReq.osrr)
}
inline void PkgConnectReq::set_osrr(const char* value, size_t size) {
  set_has_osrr();
  osrr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgConnectReq.osrr)
}
inline ::std::string* PkgConnectReq::mutable_osrr() {
  set_has_osrr();
  // @@protoc_insertion_point(field_mutable:comm.PkgConnectReq.osrr)
  return osrr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgConnectReq::release_osrr() {
  clear_has_osrr();
  return osrr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgConnectReq::set_allocated_osrr(::std::string* osrr) {
  if (osrr != NULL) {
    set_has_osrr();
  } else {
    clear_has_osrr();
  }
  osrr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), osrr);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgConnectReq.osrr)
}

// optional string clientsn = 101;
inline bool PkgConnectReq::has_clientsn() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PkgConnectReq::set_has_clientsn() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PkgConnectReq::clear_has_clientsn() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PkgConnectReq::clear_clientsn() {
  clientsn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clientsn();
}
inline const ::std::string& PkgConnectReq::clientsn() const {
  // @@protoc_insertion_point(field_get:comm.PkgConnectReq.clientsn)
  return clientsn_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgConnectReq::set_clientsn(const ::std::string& value) {
  set_has_clientsn();
  clientsn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgConnectReq.clientsn)
}
inline void PkgConnectReq::set_clientsn(const char* value) {
  set_has_clientsn();
  clientsn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgConnectReq.clientsn)
}
inline void PkgConnectReq::set_clientsn(const char* value, size_t size) {
  set_has_clientsn();
  clientsn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgConnectReq.clientsn)
}
inline ::std::string* PkgConnectReq::mutable_clientsn() {
  set_has_clientsn();
  // @@protoc_insertion_point(field_mutable:comm.PkgConnectReq.clientsn)
  return clientsn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgConnectReq::release_clientsn() {
  clear_has_clientsn();
  return clientsn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgConnectReq::set_allocated_clientsn(::std::string* clientsn) {
  if (clientsn != NULL) {
    set_has_clientsn();
  } else {
    clear_has_clientsn();
  }
  clientsn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientsn);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgConnectReq.clientsn)
}

// -------------------------------------------------------------------

// PkgConnectReply

// required bool issuccess = 1 [default = true];
inline bool PkgConnectReply::has_issuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgConnectReply::set_has_issuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgConnectReply::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgConnectReply::clear_issuccess() {
  issuccess_ = true;
  clear_has_issuccess();
}
inline bool PkgConnectReply::issuccess() const {
  // @@protoc_insertion_point(field_get:comm.PkgConnectReply.issuccess)
  return issuccess_;
}
inline void PkgConnectReply::set_issuccess(bool value) {
  set_has_issuccess();
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgConnectReply.issuccess)
}

// optional string err = 2;
inline bool PkgConnectReply::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgConnectReply::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgConnectReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgConnectReply::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
inline const ::std::string& PkgConnectReply::err() const {
  // @@protoc_insertion_point(field_get:comm.PkgConnectReply.err)
  return err_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgConnectReply::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgConnectReply.err)
}
inline void PkgConnectReply::set_err(const char* value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgConnectReply.err)
}
inline void PkgConnectReply::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgConnectReply.err)
}
inline ::std::string* PkgConnectReply::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:comm.PkgConnectReply.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgConnectReply::release_err() {
  clear_has_err();
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgConnectReply::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgConnectReply.err)
}

// repeated string urllist = 10;
inline int PkgConnectReply::urllist_size() const {
  return urllist_.size();
}
inline void PkgConnectReply::clear_urllist() {
  urllist_.Clear();
}
inline const ::std::string& PkgConnectReply::urllist(int index) const {
  // @@protoc_insertion_point(field_get:comm.PkgConnectReply.urllist)
  return urllist_.Get(index);
}
inline ::std::string* PkgConnectReply::mutable_urllist(int index) {
  // @@protoc_insertion_point(field_mutable:comm.PkgConnectReply.urllist)
  return urllist_.Mutable(index);
}
inline void PkgConnectReply::set_urllist(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:comm.PkgConnectReply.urllist)
  urllist_.Mutable(index)->assign(value);
}
inline void PkgConnectReply::set_urllist(int index, const char* value) {
  urllist_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:comm.PkgConnectReply.urllist)
}
inline void PkgConnectReply::set_urllist(int index, const char* value, size_t size) {
  urllist_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:comm.PkgConnectReply.urllist)
}
inline ::std::string* PkgConnectReply::add_urllist() {
  return urllist_.Add();
}
inline void PkgConnectReply::add_urllist(const ::std::string& value) {
  urllist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:comm.PkgConnectReply.urllist)
}
inline void PkgConnectReply::add_urllist(const char* value) {
  urllist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:comm.PkgConnectReply.urllist)
}
inline void PkgConnectReply::add_urllist(const char* value, size_t size) {
  urllist_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:comm.PkgConnectReply.urllist)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PkgConnectReply::urllist() const {
  // @@protoc_insertion_point(field_list:comm.PkgConnectReply.urllist)
  return urllist_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PkgConnectReply::mutable_urllist() {
  // @@protoc_insertion_point(field_mutable_list:comm.PkgConnectReply.urllist)
  return &urllist_;
}

// optional string encryptkey = 11;
inline bool PkgConnectReply::has_encryptkey() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PkgConnectReply::set_has_encryptkey() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PkgConnectReply::clear_has_encryptkey() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PkgConnectReply::clear_encryptkey() {
  encryptkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_encryptkey();
}
inline const ::std::string& PkgConnectReply::encryptkey() const {
  // @@protoc_insertion_point(field_get:comm.PkgConnectReply.encryptkey)
  return encryptkey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgConnectReply::set_encryptkey(const ::std::string& value) {
  set_has_encryptkey();
  encryptkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgConnectReply.encryptkey)
}
inline void PkgConnectReply::set_encryptkey(const char* value) {
  set_has_encryptkey();
  encryptkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgConnectReply.encryptkey)
}
inline void PkgConnectReply::set_encryptkey(const char* value, size_t size) {
  set_has_encryptkey();
  encryptkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgConnectReply.encryptkey)
}
inline ::std::string* PkgConnectReply::mutable_encryptkey() {
  set_has_encryptkey();
  // @@protoc_insertion_point(field_mutable:comm.PkgConnectReply.encryptkey)
  return encryptkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgConnectReply::release_encryptkey() {
  clear_has_encryptkey();
  return encryptkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgConnectReply::set_allocated_encryptkey(::std::string* encryptkey) {
  if (encryptkey != NULL) {
    set_has_encryptkey();
  } else {
    clear_has_encryptkey();
  }
  encryptkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), encryptkey);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgConnectReply.encryptkey)
}

// optional string hashedclientsn = 100;
inline bool PkgConnectReply::has_hashedclientsn() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PkgConnectReply::set_has_hashedclientsn() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PkgConnectReply::clear_has_hashedclientsn() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PkgConnectReply::clear_hashedclientsn() {
  hashedclientsn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hashedclientsn();
}
inline const ::std::string& PkgConnectReply::hashedclientsn() const {
  // @@protoc_insertion_point(field_get:comm.PkgConnectReply.hashedclientsn)
  return hashedclientsn_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgConnectReply::set_hashedclientsn(const ::std::string& value) {
  set_has_hashedclientsn();
  hashedclientsn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgConnectReply.hashedclientsn)
}
inline void PkgConnectReply::set_hashedclientsn(const char* value) {
  set_has_hashedclientsn();
  hashedclientsn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgConnectReply.hashedclientsn)
}
inline void PkgConnectReply::set_hashedclientsn(const char* value, size_t size) {
  set_has_hashedclientsn();
  hashedclientsn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgConnectReply.hashedclientsn)
}
inline ::std::string* PkgConnectReply::mutable_hashedclientsn() {
  set_has_hashedclientsn();
  // @@protoc_insertion_point(field_mutable:comm.PkgConnectReply.hashedclientsn)
  return hashedclientsn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgConnectReply::release_hashedclientsn() {
  clear_has_hashedclientsn();
  return hashedclientsn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgConnectReply::set_allocated_hashedclientsn(::std::string* hashedclientsn) {
  if (hashedclientsn != NULL) {
    set_has_hashedclientsn();
  } else {
    clear_has_hashedclientsn();
  }
  hashedclientsn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hashedclientsn);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgConnectReply.hashedclientsn)
}

// optional string serversn = 101;
inline bool PkgConnectReply::has_serversn() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PkgConnectReply::set_has_serversn() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PkgConnectReply::clear_has_serversn() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PkgConnectReply::clear_serversn() {
  serversn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_serversn();
}
inline const ::std::string& PkgConnectReply::serversn() const {
  // @@protoc_insertion_point(field_get:comm.PkgConnectReply.serversn)
  return serversn_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgConnectReply::set_serversn(const ::std::string& value) {
  set_has_serversn();
  serversn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgConnectReply.serversn)
}
inline void PkgConnectReply::set_serversn(const char* value) {
  set_has_serversn();
  serversn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgConnectReply.serversn)
}
inline void PkgConnectReply::set_serversn(const char* value, size_t size) {
  set_has_serversn();
  serversn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgConnectReply.serversn)
}
inline ::std::string* PkgConnectReply::mutable_serversn() {
  set_has_serversn();
  // @@protoc_insertion_point(field_mutable:comm.PkgConnectReply.serversn)
  return serversn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgConnectReply::release_serversn() {
  clear_has_serversn();
  return serversn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgConnectReply::set_allocated_serversn(::std::string* serversn) {
  if (serversn != NULL) {
    set_has_serversn();
  } else {
    clear_has_serversn();
  }
  serversn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serversn);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgConnectReply.serversn)
}

// -------------------------------------------------------------------

// PkgUserCheckReq

// required .comm.EnGetType gettype = 1 [default = GT_PHONE];
inline bool PkgUserCheckReq::has_gettype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgUserCheckReq::set_has_gettype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgUserCheckReq::clear_has_gettype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgUserCheckReq::clear_gettype() {
  gettype_ = 0;
  clear_has_gettype();
}
inline ::comm::EnGetType PkgUserCheckReq::gettype() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserCheckReq.gettype)
  return static_cast< ::comm::EnGetType >(gettype_);
}
inline void PkgUserCheckReq::set_gettype(::comm::EnGetType value) {
  assert(::comm::EnGetType_IsValid(value));
  set_has_gettype();
  gettype_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserCheckReq.gettype)
}

// optional string phonenumber = 3;
inline bool PkgUserCheckReq::has_phonenumber() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgUserCheckReq::set_has_phonenumber() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgUserCheckReq::clear_has_phonenumber() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgUserCheckReq::clear_phonenumber() {
  phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phonenumber();
}
inline const ::std::string& PkgUserCheckReq::phonenumber() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserCheckReq.phonenumber)
  return phonenumber_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCheckReq::set_phonenumber(const ::std::string& value) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserCheckReq.phonenumber)
}
inline void PkgUserCheckReq::set_phonenumber(const char* value) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserCheckReq.phonenumber)
}
inline void PkgUserCheckReq::set_phonenumber(const char* value, size_t size) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserCheckReq.phonenumber)
}
inline ::std::string* PkgUserCheckReq::mutable_phonenumber() {
  set_has_phonenumber();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserCheckReq.phonenumber)
  return phonenumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserCheckReq::release_phonenumber() {
  clear_has_phonenumber();
  return phonenumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCheckReq::set_allocated_phonenumber(::std::string* phonenumber) {
  if (phonenumber != NULL) {
    set_has_phonenumber();
  } else {
    clear_has_phonenumber();
  }
  phonenumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phonenumber);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserCheckReq.phonenumber)
}

// optional string emailaddress = 4;
inline bool PkgUserCheckReq::has_emailaddress() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgUserCheckReq::set_has_emailaddress() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgUserCheckReq::clear_has_emailaddress() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgUserCheckReq::clear_emailaddress() {
  emailaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_emailaddress();
}
inline const ::std::string& PkgUserCheckReq::emailaddress() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserCheckReq.emailaddress)
  return emailaddress_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCheckReq::set_emailaddress(const ::std::string& value) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserCheckReq.emailaddress)
}
inline void PkgUserCheckReq::set_emailaddress(const char* value) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserCheckReq.emailaddress)
}
inline void PkgUserCheckReq::set_emailaddress(const char* value, size_t size) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserCheckReq.emailaddress)
}
inline ::std::string* PkgUserCheckReq::mutable_emailaddress() {
  set_has_emailaddress();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserCheckReq.emailaddress)
  return emailaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserCheckReq::release_emailaddress() {
  clear_has_emailaddress();
  return emailaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCheckReq::set_allocated_emailaddress(::std::string* emailaddress) {
  if (emailaddress != NULL) {
    set_has_emailaddress();
  } else {
    clear_has_emailaddress();
  }
  emailaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), emailaddress);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserCheckReq.emailaddress)
}

// optional string username = 5;
inline bool PkgUserCheckReq::has_username() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PkgUserCheckReq::set_has_username() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PkgUserCheckReq::clear_has_username() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PkgUserCheckReq::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& PkgUserCheckReq::username() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserCheckReq.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCheckReq::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserCheckReq.username)
}
inline void PkgUserCheckReq::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserCheckReq.username)
}
inline void PkgUserCheckReq::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserCheckReq.username)
}
inline ::std::string* PkgUserCheckReq::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserCheckReq.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserCheckReq::release_username() {
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCheckReq::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserCheckReq.username)
}

// -------------------------------------------------------------------

// PkgUserCheckReply

// required bool issuccess = 1 [default = true];
inline bool PkgUserCheckReply::has_issuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgUserCheckReply::set_has_issuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgUserCheckReply::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgUserCheckReply::clear_issuccess() {
  issuccess_ = true;
  clear_has_issuccess();
}
inline bool PkgUserCheckReply::issuccess() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserCheckReply.issuccess)
  return issuccess_;
}
inline void PkgUserCheckReply::set_issuccess(bool value) {
  set_has_issuccess();
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserCheckReply.issuccess)
}

// optional string err = 2;
inline bool PkgUserCheckReply::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgUserCheckReply::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgUserCheckReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgUserCheckReply::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
inline const ::std::string& PkgUserCheckReply::err() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserCheckReply.err)
  return err_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCheckReply::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserCheckReply.err)
}
inline void PkgUserCheckReply::set_err(const char* value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserCheckReply.err)
}
inline void PkgUserCheckReply::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserCheckReply.err)
}
inline ::std::string* PkgUserCheckReply::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserCheckReply.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserCheckReply::release_err() {
  clear_has_err();
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCheckReply::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserCheckReply.err)
}

// optional int32 userid = 3;
inline bool PkgUserCheckReply::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgUserCheckReply::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgUserCheckReply::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgUserCheckReply::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 PkgUserCheckReply::userid() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserCheckReply.userid)
  return userid_;
}
inline void PkgUserCheckReply::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserCheckReply.userid)
}

// -------------------------------------------------------------------

// PkgUserCheckInvitionCodeReq

// required .comm.EnGetType gettype = 1 [default = GT_PHONE];
inline bool PkgUserCheckInvitionCodeReq::has_gettype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgUserCheckInvitionCodeReq::set_has_gettype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgUserCheckInvitionCodeReq::clear_has_gettype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgUserCheckInvitionCodeReq::clear_gettype() {
  gettype_ = 0;
  clear_has_gettype();
}
inline ::comm::EnGetType PkgUserCheckInvitionCodeReq::gettype() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserCheckInvitionCodeReq.gettype)
  return static_cast< ::comm::EnGetType >(gettype_);
}
inline void PkgUserCheckInvitionCodeReq::set_gettype(::comm::EnGetType value) {
  assert(::comm::EnGetType_IsValid(value));
  set_has_gettype();
  gettype_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserCheckInvitionCodeReq.gettype)
}

// optional string invitioncode = 2;
inline bool PkgUserCheckInvitionCodeReq::has_invitioncode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgUserCheckInvitionCodeReq::set_has_invitioncode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgUserCheckInvitionCodeReq::clear_has_invitioncode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgUserCheckInvitionCodeReq::clear_invitioncode() {
  invitioncode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_invitioncode();
}
inline const ::std::string& PkgUserCheckInvitionCodeReq::invitioncode() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserCheckInvitionCodeReq.invitioncode)
  return invitioncode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCheckInvitionCodeReq::set_invitioncode(const ::std::string& value) {
  set_has_invitioncode();
  invitioncode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserCheckInvitionCodeReq.invitioncode)
}
inline void PkgUserCheckInvitionCodeReq::set_invitioncode(const char* value) {
  set_has_invitioncode();
  invitioncode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserCheckInvitionCodeReq.invitioncode)
}
inline void PkgUserCheckInvitionCodeReq::set_invitioncode(const char* value, size_t size) {
  set_has_invitioncode();
  invitioncode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserCheckInvitionCodeReq.invitioncode)
}
inline ::std::string* PkgUserCheckInvitionCodeReq::mutable_invitioncode() {
  set_has_invitioncode();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserCheckInvitionCodeReq.invitioncode)
  return invitioncode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserCheckInvitionCodeReq::release_invitioncode() {
  clear_has_invitioncode();
  return invitioncode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCheckInvitionCodeReq::set_allocated_invitioncode(::std::string* invitioncode) {
  if (invitioncode != NULL) {
    set_has_invitioncode();
  } else {
    clear_has_invitioncode();
  }
  invitioncode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), invitioncode);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserCheckInvitionCodeReq.invitioncode)
}

// -------------------------------------------------------------------

// PkgUserCheckInvitionCodeReply

// required bool issuccess = 1 [default = true];
inline bool PkgUserCheckInvitionCodeReply::has_issuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgUserCheckInvitionCodeReply::set_has_issuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgUserCheckInvitionCodeReply::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgUserCheckInvitionCodeReply::clear_issuccess() {
  issuccess_ = true;
  clear_has_issuccess();
}
inline bool PkgUserCheckInvitionCodeReply::issuccess() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserCheckInvitionCodeReply.issuccess)
  return issuccess_;
}
inline void PkgUserCheckInvitionCodeReply::set_issuccess(bool value) {
  set_has_issuccess();
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserCheckInvitionCodeReply.issuccess)
}

// optional string err = 2;
inline bool PkgUserCheckInvitionCodeReply::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgUserCheckInvitionCodeReply::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgUserCheckInvitionCodeReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgUserCheckInvitionCodeReply::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
inline const ::std::string& PkgUserCheckInvitionCodeReply::err() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserCheckInvitionCodeReply.err)
  return err_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCheckInvitionCodeReply::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserCheckInvitionCodeReply.err)
}
inline void PkgUserCheckInvitionCodeReply::set_err(const char* value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserCheckInvitionCodeReply.err)
}
inline void PkgUserCheckInvitionCodeReply::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserCheckInvitionCodeReply.err)
}
inline ::std::string* PkgUserCheckInvitionCodeReply::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserCheckInvitionCodeReply.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserCheckInvitionCodeReply::release_err() {
  clear_has_err();
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCheckInvitionCodeReply::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserCheckInvitionCodeReply.err)
}

// optional string phonenumber = 3;
inline bool PkgUserCheckInvitionCodeReply::has_phonenumber() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgUserCheckInvitionCodeReply::set_has_phonenumber() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgUserCheckInvitionCodeReply::clear_has_phonenumber() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgUserCheckInvitionCodeReply::clear_phonenumber() {
  phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phonenumber();
}
inline const ::std::string& PkgUserCheckInvitionCodeReply::phonenumber() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserCheckInvitionCodeReply.phonenumber)
  return phonenumber_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCheckInvitionCodeReply::set_phonenumber(const ::std::string& value) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserCheckInvitionCodeReply.phonenumber)
}
inline void PkgUserCheckInvitionCodeReply::set_phonenumber(const char* value) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserCheckInvitionCodeReply.phonenumber)
}
inline void PkgUserCheckInvitionCodeReply::set_phonenumber(const char* value, size_t size) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserCheckInvitionCodeReply.phonenumber)
}
inline ::std::string* PkgUserCheckInvitionCodeReply::mutable_phonenumber() {
  set_has_phonenumber();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserCheckInvitionCodeReply.phonenumber)
  return phonenumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserCheckInvitionCodeReply::release_phonenumber() {
  clear_has_phonenumber();
  return phonenumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCheckInvitionCodeReply::set_allocated_phonenumber(::std::string* phonenumber) {
  if (phonenumber != NULL) {
    set_has_phonenumber();
  } else {
    clear_has_phonenumber();
  }
  phonenumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phonenumber);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserCheckInvitionCodeReply.phonenumber)
}

// optional string emailaddress = 4;
inline bool PkgUserCheckInvitionCodeReply::has_emailaddress() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PkgUserCheckInvitionCodeReply::set_has_emailaddress() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PkgUserCheckInvitionCodeReply::clear_has_emailaddress() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PkgUserCheckInvitionCodeReply::clear_emailaddress() {
  emailaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_emailaddress();
}
inline const ::std::string& PkgUserCheckInvitionCodeReply::emailaddress() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserCheckInvitionCodeReply.emailaddress)
  return emailaddress_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCheckInvitionCodeReply::set_emailaddress(const ::std::string& value) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserCheckInvitionCodeReply.emailaddress)
}
inline void PkgUserCheckInvitionCodeReply::set_emailaddress(const char* value) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserCheckInvitionCodeReply.emailaddress)
}
inline void PkgUserCheckInvitionCodeReply::set_emailaddress(const char* value, size_t size) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserCheckInvitionCodeReply.emailaddress)
}
inline ::std::string* PkgUserCheckInvitionCodeReply::mutable_emailaddress() {
  set_has_emailaddress();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserCheckInvitionCodeReply.emailaddress)
  return emailaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserCheckInvitionCodeReply::release_emailaddress() {
  clear_has_emailaddress();
  return emailaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCheckInvitionCodeReply::set_allocated_emailaddress(::std::string* emailaddress) {
  if (emailaddress != NULL) {
    set_has_emailaddress();
  } else {
    clear_has_emailaddress();
  }
  emailaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), emailaddress);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserCheckInvitionCodeReply.emailaddress)
}

// -------------------------------------------------------------------

// PkgUserGetAuthReq

// required .comm.EnGetType gettype = 1 [default = GT_PHONE];
inline bool PkgUserGetAuthReq::has_gettype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgUserGetAuthReq::set_has_gettype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgUserGetAuthReq::clear_has_gettype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgUserGetAuthReq::clear_gettype() {
  gettype_ = 0;
  clear_has_gettype();
}
inline ::comm::EnGetType PkgUserGetAuthReq::gettype() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserGetAuthReq.gettype)
  return static_cast< ::comm::EnGetType >(gettype_);
}
inline void PkgUserGetAuthReq::set_gettype(::comm::EnGetType value) {
  assert(::comm::EnGetType_IsValid(value));
  set_has_gettype();
  gettype_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserGetAuthReq.gettype)
}

// optional string phonenumber = 3;
inline bool PkgUserGetAuthReq::has_phonenumber() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgUserGetAuthReq::set_has_phonenumber() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgUserGetAuthReq::clear_has_phonenumber() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgUserGetAuthReq::clear_phonenumber() {
  phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phonenumber();
}
inline const ::std::string& PkgUserGetAuthReq::phonenumber() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserGetAuthReq.phonenumber)
  return phonenumber_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserGetAuthReq::set_phonenumber(const ::std::string& value) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserGetAuthReq.phonenumber)
}
inline void PkgUserGetAuthReq::set_phonenumber(const char* value) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserGetAuthReq.phonenumber)
}
inline void PkgUserGetAuthReq::set_phonenumber(const char* value, size_t size) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserGetAuthReq.phonenumber)
}
inline ::std::string* PkgUserGetAuthReq::mutable_phonenumber() {
  set_has_phonenumber();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserGetAuthReq.phonenumber)
  return phonenumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserGetAuthReq::release_phonenumber() {
  clear_has_phonenumber();
  return phonenumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserGetAuthReq::set_allocated_phonenumber(::std::string* phonenumber) {
  if (phonenumber != NULL) {
    set_has_phonenumber();
  } else {
    clear_has_phonenumber();
  }
  phonenumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phonenumber);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserGetAuthReq.phonenumber)
}

// optional string emailaddress = 4;
inline bool PkgUserGetAuthReq::has_emailaddress() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgUserGetAuthReq::set_has_emailaddress() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgUserGetAuthReq::clear_has_emailaddress() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgUserGetAuthReq::clear_emailaddress() {
  emailaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_emailaddress();
}
inline const ::std::string& PkgUserGetAuthReq::emailaddress() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserGetAuthReq.emailaddress)
  return emailaddress_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserGetAuthReq::set_emailaddress(const ::std::string& value) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserGetAuthReq.emailaddress)
}
inline void PkgUserGetAuthReq::set_emailaddress(const char* value) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserGetAuthReq.emailaddress)
}
inline void PkgUserGetAuthReq::set_emailaddress(const char* value, size_t size) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserGetAuthReq.emailaddress)
}
inline ::std::string* PkgUserGetAuthReq::mutable_emailaddress() {
  set_has_emailaddress();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserGetAuthReq.emailaddress)
  return emailaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserGetAuthReq::release_emailaddress() {
  clear_has_emailaddress();
  return emailaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserGetAuthReq::set_allocated_emailaddress(::std::string* emailaddress) {
  if (emailaddress != NULL) {
    set_has_emailaddress();
  } else {
    clear_has_emailaddress();
  }
  emailaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), emailaddress);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserGetAuthReq.emailaddress)
}

// -------------------------------------------------------------------

// PkgUserGetAuthReply

// required bool issuccess = 1 [default = true];
inline bool PkgUserGetAuthReply::has_issuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgUserGetAuthReply::set_has_issuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgUserGetAuthReply::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgUserGetAuthReply::clear_issuccess() {
  issuccess_ = true;
  clear_has_issuccess();
}
inline bool PkgUserGetAuthReply::issuccess() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserGetAuthReply.issuccess)
  return issuccess_;
}
inline void PkgUserGetAuthReply::set_issuccess(bool value) {
  set_has_issuccess();
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserGetAuthReply.issuccess)
}

// optional string err = 2;
inline bool PkgUserGetAuthReply::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgUserGetAuthReply::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgUserGetAuthReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgUserGetAuthReply::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
inline const ::std::string& PkgUserGetAuthReply::err() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserGetAuthReply.err)
  return err_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserGetAuthReply::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserGetAuthReply.err)
}
inline void PkgUserGetAuthReply::set_err(const char* value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserGetAuthReply.err)
}
inline void PkgUserGetAuthReply::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserGetAuthReply.err)
}
inline ::std::string* PkgUserGetAuthReply::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserGetAuthReply.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserGetAuthReply::release_err() {
  clear_has_err();
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserGetAuthReply::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserGetAuthReply.err)
}

// -------------------------------------------------------------------

// PkgUserCreateReq

// required .comm.EnGetType gettype = 1 [default = GT_PHONE];
inline bool PkgUserCreateReq::has_gettype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgUserCreateReq::set_has_gettype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgUserCreateReq::clear_has_gettype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgUserCreateReq::clear_gettype() {
  gettype_ = 0;
  clear_has_gettype();
}
inline ::comm::EnGetType PkgUserCreateReq::gettype() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserCreateReq.gettype)
  return static_cast< ::comm::EnGetType >(gettype_);
}
inline void PkgUserCreateReq::set_gettype(::comm::EnGetType value) {
  assert(::comm::EnGetType_IsValid(value));
  set_has_gettype();
  gettype_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserCreateReq.gettype)
}

// optional string phonenumber = 2;
inline bool PkgUserCreateReq::has_phonenumber() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgUserCreateReq::set_has_phonenumber() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgUserCreateReq::clear_has_phonenumber() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgUserCreateReq::clear_phonenumber() {
  phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phonenumber();
}
inline const ::std::string& PkgUserCreateReq::phonenumber() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserCreateReq.phonenumber)
  return phonenumber_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCreateReq::set_phonenumber(const ::std::string& value) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserCreateReq.phonenumber)
}
inline void PkgUserCreateReq::set_phonenumber(const char* value) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserCreateReq.phonenumber)
}
inline void PkgUserCreateReq::set_phonenumber(const char* value, size_t size) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserCreateReq.phonenumber)
}
inline ::std::string* PkgUserCreateReq::mutable_phonenumber() {
  set_has_phonenumber();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserCreateReq.phonenumber)
  return phonenumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserCreateReq::release_phonenumber() {
  clear_has_phonenumber();
  return phonenumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCreateReq::set_allocated_phonenumber(::std::string* phonenumber) {
  if (phonenumber != NULL) {
    set_has_phonenumber();
  } else {
    clear_has_phonenumber();
  }
  phonenumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phonenumber);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserCreateReq.phonenumber)
}

// optional string emailaddress = 3;
inline bool PkgUserCreateReq::has_emailaddress() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgUserCreateReq::set_has_emailaddress() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgUserCreateReq::clear_has_emailaddress() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgUserCreateReq::clear_emailaddress() {
  emailaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_emailaddress();
}
inline const ::std::string& PkgUserCreateReq::emailaddress() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserCreateReq.emailaddress)
  return emailaddress_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCreateReq::set_emailaddress(const ::std::string& value) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserCreateReq.emailaddress)
}
inline void PkgUserCreateReq::set_emailaddress(const char* value) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserCreateReq.emailaddress)
}
inline void PkgUserCreateReq::set_emailaddress(const char* value, size_t size) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserCreateReq.emailaddress)
}
inline ::std::string* PkgUserCreateReq::mutable_emailaddress() {
  set_has_emailaddress();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserCreateReq.emailaddress)
  return emailaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserCreateReq::release_emailaddress() {
  clear_has_emailaddress();
  return emailaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCreateReq::set_allocated_emailaddress(::std::string* emailaddress) {
  if (emailaddress != NULL) {
    set_has_emailaddress();
  } else {
    clear_has_emailaddress();
  }
  emailaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), emailaddress);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserCreateReq.emailaddress)
}

// optional string authcode = 4;
inline bool PkgUserCreateReq::has_authcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PkgUserCreateReq::set_has_authcode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PkgUserCreateReq::clear_has_authcode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PkgUserCreateReq::clear_authcode() {
  authcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_authcode();
}
inline const ::std::string& PkgUserCreateReq::authcode() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserCreateReq.authcode)
  return authcode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCreateReq::set_authcode(const ::std::string& value) {
  set_has_authcode();
  authcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserCreateReq.authcode)
}
inline void PkgUserCreateReq::set_authcode(const char* value) {
  set_has_authcode();
  authcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserCreateReq.authcode)
}
inline void PkgUserCreateReq::set_authcode(const char* value, size_t size) {
  set_has_authcode();
  authcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserCreateReq.authcode)
}
inline ::std::string* PkgUserCreateReq::mutable_authcode() {
  set_has_authcode();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserCreateReq.authcode)
  return authcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserCreateReq::release_authcode() {
  clear_has_authcode();
  return authcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCreateReq::set_allocated_authcode(::std::string* authcode) {
  if (authcode != NULL) {
    set_has_authcode();
  } else {
    clear_has_authcode();
  }
  authcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authcode);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserCreateReq.authcode)
}

// optional string invitioncode = 5;
inline bool PkgUserCreateReq::has_invitioncode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PkgUserCreateReq::set_has_invitioncode() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PkgUserCreateReq::clear_has_invitioncode() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PkgUserCreateReq::clear_invitioncode() {
  invitioncode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_invitioncode();
}
inline const ::std::string& PkgUserCreateReq::invitioncode() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserCreateReq.invitioncode)
  return invitioncode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCreateReq::set_invitioncode(const ::std::string& value) {
  set_has_invitioncode();
  invitioncode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserCreateReq.invitioncode)
}
inline void PkgUserCreateReq::set_invitioncode(const char* value) {
  set_has_invitioncode();
  invitioncode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserCreateReq.invitioncode)
}
inline void PkgUserCreateReq::set_invitioncode(const char* value, size_t size) {
  set_has_invitioncode();
  invitioncode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserCreateReq.invitioncode)
}
inline ::std::string* PkgUserCreateReq::mutable_invitioncode() {
  set_has_invitioncode();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserCreateReq.invitioncode)
  return invitioncode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserCreateReq::release_invitioncode() {
  clear_has_invitioncode();
  return invitioncode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCreateReq::set_allocated_invitioncode(::std::string* invitioncode) {
  if (invitioncode != NULL) {
    set_has_invitioncode();
  } else {
    clear_has_invitioncode();
  }
  invitioncode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), invitioncode);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserCreateReq.invitioncode)
}

// -------------------------------------------------------------------

// PkgUserCreateReply

// required bool issuccess = 1 [default = true];
inline bool PkgUserCreateReply::has_issuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgUserCreateReply::set_has_issuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgUserCreateReply::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgUserCreateReply::clear_issuccess() {
  issuccess_ = true;
  clear_has_issuccess();
}
inline bool PkgUserCreateReply::issuccess() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserCreateReply.issuccess)
  return issuccess_;
}
inline void PkgUserCreateReply::set_issuccess(bool value) {
  set_has_issuccess();
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserCreateReply.issuccess)
}

// optional string err = 2;
inline bool PkgUserCreateReply::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgUserCreateReply::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgUserCreateReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgUserCreateReply::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
inline const ::std::string& PkgUserCreateReply::err() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserCreateReply.err)
  return err_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCreateReply::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserCreateReply.err)
}
inline void PkgUserCreateReply::set_err(const char* value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserCreateReply.err)
}
inline void PkgUserCreateReply::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserCreateReply.err)
}
inline ::std::string* PkgUserCreateReply::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserCreateReply.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserCreateReply::release_err() {
  clear_has_err();
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCreateReply::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserCreateReply.err)
}

// optional int32 userid = 3;
inline bool PkgUserCreateReply::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgUserCreateReply::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgUserCreateReply::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgUserCreateReply::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 PkgUserCreateReply::userid() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserCreateReply.userid)
  return userid_;
}
inline void PkgUserCreateReply::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserCreateReply.userid)
}

// optional string realname = 11;
inline bool PkgUserCreateReply::has_realname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PkgUserCreateReply::set_has_realname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PkgUserCreateReply::clear_has_realname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PkgUserCreateReply::clear_realname() {
  realname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_realname();
}
inline const ::std::string& PkgUserCreateReply::realname() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserCreateReply.realname)
  return realname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCreateReply::set_realname(const ::std::string& value) {
  set_has_realname();
  realname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserCreateReply.realname)
}
inline void PkgUserCreateReply::set_realname(const char* value) {
  set_has_realname();
  realname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserCreateReply.realname)
}
inline void PkgUserCreateReply::set_realname(const char* value, size_t size) {
  set_has_realname();
  realname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserCreateReply.realname)
}
inline ::std::string* PkgUserCreateReply::mutable_realname() {
  set_has_realname();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserCreateReply.realname)
  return realname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserCreateReply::release_realname() {
  clear_has_realname();
  return realname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCreateReply::set_allocated_realname(::std::string* realname) {
  if (realname != NULL) {
    set_has_realname();
  } else {
    clear_has_realname();
  }
  realname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), realname);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserCreateReply.realname)
}

// -------------------------------------------------------------------

// PkgUserLoginReq

// required .comm.EnGetType gettype = 1 [default = GT_PHONE];
inline bool PkgUserLoginReq::has_gettype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgUserLoginReq::set_has_gettype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgUserLoginReq::clear_has_gettype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgUserLoginReq::clear_gettype() {
  gettype_ = 0;
  clear_has_gettype();
}
inline ::comm::EnGetType PkgUserLoginReq::gettype() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserLoginReq.gettype)
  return static_cast< ::comm::EnGetType >(gettype_);
}
inline void PkgUserLoginReq::set_gettype(::comm::EnGetType value) {
  assert(::comm::EnGetType_IsValid(value));
  set_has_gettype();
  gettype_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserLoginReq.gettype)
}

// optional int32 userid = 2;
inline bool PkgUserLoginReq::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgUserLoginReq::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgUserLoginReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgUserLoginReq::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 PkgUserLoginReq::userid() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserLoginReq.userid)
  return userid_;
}
inline void PkgUserLoginReq::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserLoginReq.userid)
}

// optional string phonenumber = 3;
inline bool PkgUserLoginReq::has_phonenumber() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgUserLoginReq::set_has_phonenumber() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgUserLoginReq::clear_has_phonenumber() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgUserLoginReq::clear_phonenumber() {
  phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phonenumber();
}
inline const ::std::string& PkgUserLoginReq::phonenumber() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserLoginReq.phonenumber)
  return phonenumber_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReq::set_phonenumber(const ::std::string& value) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserLoginReq.phonenumber)
}
inline void PkgUserLoginReq::set_phonenumber(const char* value) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserLoginReq.phonenumber)
}
inline void PkgUserLoginReq::set_phonenumber(const char* value, size_t size) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserLoginReq.phonenumber)
}
inline ::std::string* PkgUserLoginReq::mutable_phonenumber() {
  set_has_phonenumber();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserLoginReq.phonenumber)
  return phonenumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserLoginReq::release_phonenumber() {
  clear_has_phonenumber();
  return phonenumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReq::set_allocated_phonenumber(::std::string* phonenumber) {
  if (phonenumber != NULL) {
    set_has_phonenumber();
  } else {
    clear_has_phonenumber();
  }
  phonenumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phonenumber);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserLoginReq.phonenumber)
}

// optional string emailaddress = 4;
inline bool PkgUserLoginReq::has_emailaddress() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PkgUserLoginReq::set_has_emailaddress() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PkgUserLoginReq::clear_has_emailaddress() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PkgUserLoginReq::clear_emailaddress() {
  emailaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_emailaddress();
}
inline const ::std::string& PkgUserLoginReq::emailaddress() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserLoginReq.emailaddress)
  return emailaddress_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReq::set_emailaddress(const ::std::string& value) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserLoginReq.emailaddress)
}
inline void PkgUserLoginReq::set_emailaddress(const char* value) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserLoginReq.emailaddress)
}
inline void PkgUserLoginReq::set_emailaddress(const char* value, size_t size) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserLoginReq.emailaddress)
}
inline ::std::string* PkgUserLoginReq::mutable_emailaddress() {
  set_has_emailaddress();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserLoginReq.emailaddress)
  return emailaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserLoginReq::release_emailaddress() {
  clear_has_emailaddress();
  return emailaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReq::set_allocated_emailaddress(::std::string* emailaddress) {
  if (emailaddress != NULL) {
    set_has_emailaddress();
  } else {
    clear_has_emailaddress();
  }
  emailaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), emailaddress);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserLoginReq.emailaddress)
}

// optional string username = 5;
inline bool PkgUserLoginReq::has_username() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PkgUserLoginReq::set_has_username() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PkgUserLoginReq::clear_has_username() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PkgUserLoginReq::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& PkgUserLoginReq::username() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserLoginReq.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReq::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserLoginReq.username)
}
inline void PkgUserLoginReq::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserLoginReq.username)
}
inline void PkgUserLoginReq::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserLoginReq.username)
}
inline ::std::string* PkgUserLoginReq::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserLoginReq.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserLoginReq::release_username() {
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReq::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserLoginReq.username)
}

// required string password = 10;
inline bool PkgUserLoginReq::has_password() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PkgUserLoginReq::set_has_password() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PkgUserLoginReq::clear_has_password() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PkgUserLoginReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& PkgUserLoginReq::password() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserLoginReq.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReq::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserLoginReq.password)
}
inline void PkgUserLoginReq::set_password(const char* value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserLoginReq.password)
}
inline void PkgUserLoginReq::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserLoginReq.password)
}
inline ::std::string* PkgUserLoginReq::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserLoginReq.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserLoginReq::release_password() {
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserLoginReq.password)
}

// optional string hashedserversn = 100;
inline bool PkgUserLoginReq::has_hashedserversn() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PkgUserLoginReq::set_has_hashedserversn() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PkgUserLoginReq::clear_has_hashedserversn() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PkgUserLoginReq::clear_hashedserversn() {
  hashedserversn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hashedserversn();
}
inline const ::std::string& PkgUserLoginReq::hashedserversn() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserLoginReq.hashedserversn)
  return hashedserversn_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReq::set_hashedserversn(const ::std::string& value) {
  set_has_hashedserversn();
  hashedserversn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserLoginReq.hashedserversn)
}
inline void PkgUserLoginReq::set_hashedserversn(const char* value) {
  set_has_hashedserversn();
  hashedserversn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserLoginReq.hashedserversn)
}
inline void PkgUserLoginReq::set_hashedserversn(const char* value, size_t size) {
  set_has_hashedserversn();
  hashedserversn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserLoginReq.hashedserversn)
}
inline ::std::string* PkgUserLoginReq::mutable_hashedserversn() {
  set_has_hashedserversn();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserLoginReq.hashedserversn)
  return hashedserversn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserLoginReq::release_hashedserversn() {
  clear_has_hashedserversn();
  return hashedserversn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReq::set_allocated_hashedserversn(::std::string* hashedserversn) {
  if (hashedserversn != NULL) {
    set_has_hashedserversn();
  } else {
    clear_has_hashedserversn();
  }
  hashedserversn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hashedserversn);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserLoginReq.hashedserversn)
}

// -------------------------------------------------------------------

// PkgCompanyInfo

// optional int32 companyid = 16 [default = 0];
inline bool PkgCompanyInfo::has_companyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgCompanyInfo::set_has_companyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgCompanyInfo::clear_has_companyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgCompanyInfo::clear_companyid() {
  companyid_ = 0;
  clear_has_companyid();
}
inline ::google::protobuf::int32 PkgCompanyInfo::companyid() const {
  // @@protoc_insertion_point(field_get:comm.PkgCompanyInfo.companyid)
  return companyid_;
}
inline void PkgCompanyInfo::set_companyid(::google::protobuf::int32 value) {
  set_has_companyid();
  companyid_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgCompanyInfo.companyid)
}

// optional string companyname = 17;
inline bool PkgCompanyInfo::has_companyname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgCompanyInfo::set_has_companyname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgCompanyInfo::clear_has_companyname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgCompanyInfo::clear_companyname() {
  companyname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_companyname();
}
inline const ::std::string& PkgCompanyInfo::companyname() const {
  // @@protoc_insertion_point(field_get:comm.PkgCompanyInfo.companyname)
  return companyname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgCompanyInfo::set_companyname(const ::std::string& value) {
  set_has_companyname();
  companyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgCompanyInfo.companyname)
}
inline void PkgCompanyInfo::set_companyname(const char* value) {
  set_has_companyname();
  companyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgCompanyInfo.companyname)
}
inline void PkgCompanyInfo::set_companyname(const char* value, size_t size) {
  set_has_companyname();
  companyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgCompanyInfo.companyname)
}
inline ::std::string* PkgCompanyInfo::mutable_companyname() {
  set_has_companyname();
  // @@protoc_insertion_point(field_mutable:comm.PkgCompanyInfo.companyname)
  return companyname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgCompanyInfo::release_companyname() {
  clear_has_companyname();
  return companyname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgCompanyInfo::set_allocated_companyname(::std::string* companyname) {
  if (companyname != NULL) {
    set_has_companyname();
  } else {
    clear_has_companyname();
  }
  companyname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), companyname);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgCompanyInfo.companyname)
}

// optional int32 companyusernumber = 18;
inline bool PkgCompanyInfo::has_companyusernumber() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgCompanyInfo::set_has_companyusernumber() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgCompanyInfo::clear_has_companyusernumber() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgCompanyInfo::clear_companyusernumber() {
  companyusernumber_ = 0;
  clear_has_companyusernumber();
}
inline ::google::protobuf::int32 PkgCompanyInfo::companyusernumber() const {
  // @@protoc_insertion_point(field_get:comm.PkgCompanyInfo.companyusernumber)
  return companyusernumber_;
}
inline void PkgCompanyInfo::set_companyusernumber(::google::protobuf::int32 value) {
  set_has_companyusernumber();
  companyusernumber_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgCompanyInfo.companyusernumber)
}

// optional string companycreatetime = 21;
inline bool PkgCompanyInfo::has_companycreatetime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PkgCompanyInfo::set_has_companycreatetime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PkgCompanyInfo::clear_has_companycreatetime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PkgCompanyInfo::clear_companycreatetime() {
  companycreatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_companycreatetime();
}
inline const ::std::string& PkgCompanyInfo::companycreatetime() const {
  // @@protoc_insertion_point(field_get:comm.PkgCompanyInfo.companycreatetime)
  return companycreatetime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgCompanyInfo::set_companycreatetime(const ::std::string& value) {
  set_has_companycreatetime();
  companycreatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgCompanyInfo.companycreatetime)
}
inline void PkgCompanyInfo::set_companycreatetime(const char* value) {
  set_has_companycreatetime();
  companycreatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgCompanyInfo.companycreatetime)
}
inline void PkgCompanyInfo::set_companycreatetime(const char* value, size_t size) {
  set_has_companycreatetime();
  companycreatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgCompanyInfo.companycreatetime)
}
inline ::std::string* PkgCompanyInfo::mutable_companycreatetime() {
  set_has_companycreatetime();
  // @@protoc_insertion_point(field_mutable:comm.PkgCompanyInfo.companycreatetime)
  return companycreatetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgCompanyInfo::release_companycreatetime() {
  clear_has_companycreatetime();
  return companycreatetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgCompanyInfo::set_allocated_companycreatetime(::std::string* companycreatetime) {
  if (companycreatetime != NULL) {
    set_has_companycreatetime();
  } else {
    clear_has_companycreatetime();
  }
  companycreatetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), companycreatetime);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgCompanyInfo.companycreatetime)
}

// -------------------------------------------------------------------

// PkgUserLoginReply

// required bool issuccess = 1 [default = true];
inline bool PkgUserLoginReply::has_issuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgUserLoginReply::set_has_issuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgUserLoginReply::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgUserLoginReply::clear_issuccess() {
  issuccess_ = true;
  clear_has_issuccess();
}
inline bool PkgUserLoginReply::issuccess() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserLoginReply.issuccess)
  return issuccess_;
}
inline void PkgUserLoginReply::set_issuccess(bool value) {
  set_has_issuccess();
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserLoginReply.issuccess)
}

// optional string err = 2;
inline bool PkgUserLoginReply::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgUserLoginReply::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgUserLoginReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgUserLoginReply::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
inline const ::std::string& PkgUserLoginReply::err() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserLoginReply.err)
  return err_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReply::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserLoginReply.err)
}
inline void PkgUserLoginReply::set_err(const char* value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserLoginReply.err)
}
inline void PkgUserLoginReply::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserLoginReply.err)
}
inline ::std::string* PkgUserLoginReply::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserLoginReply.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserLoginReply::release_err() {
  clear_has_err();
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReply::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserLoginReply.err)
}

// optional int32 userid = 3;
inline bool PkgUserLoginReply::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgUserLoginReply::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgUserLoginReply::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgUserLoginReply::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 PkgUserLoginReply::userid() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserLoginReply.userid)
  return userid_;
}
inline void PkgUserLoginReply::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserLoginReply.userid)
}

// optional string username = 10;
inline bool PkgUserLoginReply::has_username() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PkgUserLoginReply::set_has_username() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PkgUserLoginReply::clear_has_username() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PkgUserLoginReply::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& PkgUserLoginReply::username() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserLoginReply.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReply::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserLoginReply.username)
}
inline void PkgUserLoginReply::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserLoginReply.username)
}
inline void PkgUserLoginReply::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserLoginReply.username)
}
inline ::std::string* PkgUserLoginReply::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserLoginReply.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserLoginReply::release_username() {
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReply::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserLoginReply.username)
}

// optional string realname = 11;
inline bool PkgUserLoginReply::has_realname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PkgUserLoginReply::set_has_realname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PkgUserLoginReply::clear_has_realname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PkgUserLoginReply::clear_realname() {
  realname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_realname();
}
inline const ::std::string& PkgUserLoginReply::realname() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserLoginReply.realname)
  return realname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReply::set_realname(const ::std::string& value) {
  set_has_realname();
  realname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserLoginReply.realname)
}
inline void PkgUserLoginReply::set_realname(const char* value) {
  set_has_realname();
  realname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserLoginReply.realname)
}
inline void PkgUserLoginReply::set_realname(const char* value, size_t size) {
  set_has_realname();
  realname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserLoginReply.realname)
}
inline ::std::string* PkgUserLoginReply::mutable_realname() {
  set_has_realname();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserLoginReply.realname)
  return realname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserLoginReply::release_realname() {
  clear_has_realname();
  return realname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReply::set_allocated_realname(::std::string* realname) {
  if (realname != NULL) {
    set_has_realname();
  } else {
    clear_has_realname();
  }
  realname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), realname);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserLoginReply.realname)
}

// optional string phonenumber = 12;
inline bool PkgUserLoginReply::has_phonenumber() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PkgUserLoginReply::set_has_phonenumber() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PkgUserLoginReply::clear_has_phonenumber() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PkgUserLoginReply::clear_phonenumber() {
  phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phonenumber();
}
inline const ::std::string& PkgUserLoginReply::phonenumber() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserLoginReply.phonenumber)
  return phonenumber_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReply::set_phonenumber(const ::std::string& value) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserLoginReply.phonenumber)
}
inline void PkgUserLoginReply::set_phonenumber(const char* value) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserLoginReply.phonenumber)
}
inline void PkgUserLoginReply::set_phonenumber(const char* value, size_t size) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserLoginReply.phonenumber)
}
inline ::std::string* PkgUserLoginReply::mutable_phonenumber() {
  set_has_phonenumber();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserLoginReply.phonenumber)
  return phonenumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserLoginReply::release_phonenumber() {
  clear_has_phonenumber();
  return phonenumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReply::set_allocated_phonenumber(::std::string* phonenumber) {
  if (phonenumber != NULL) {
    set_has_phonenumber();
  } else {
    clear_has_phonenumber();
  }
  phonenumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phonenumber);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserLoginReply.phonenumber)
}

// optional string emailaddress = 13;
inline bool PkgUserLoginReply::has_emailaddress() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PkgUserLoginReply::set_has_emailaddress() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PkgUserLoginReply::clear_has_emailaddress() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PkgUserLoginReply::clear_emailaddress() {
  emailaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_emailaddress();
}
inline const ::std::string& PkgUserLoginReply::emailaddress() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserLoginReply.emailaddress)
  return emailaddress_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReply::set_emailaddress(const ::std::string& value) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserLoginReply.emailaddress)
}
inline void PkgUserLoginReply::set_emailaddress(const char* value) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserLoginReply.emailaddress)
}
inline void PkgUserLoginReply::set_emailaddress(const char* value, size_t size) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserLoginReply.emailaddress)
}
inline ::std::string* PkgUserLoginReply::mutable_emailaddress() {
  set_has_emailaddress();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserLoginReply.emailaddress)
  return emailaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserLoginReply::release_emailaddress() {
  clear_has_emailaddress();
  return emailaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReply::set_allocated_emailaddress(::std::string* emailaddress) {
  if (emailaddress != NULL) {
    set_has_emailaddress();
  } else {
    clear_has_emailaddress();
  }
  emailaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), emailaddress);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserLoginReply.emailaddress)
}

// optional bool isloginsuccess = 14;
inline bool PkgUserLoginReply::has_isloginsuccess() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PkgUserLoginReply::set_has_isloginsuccess() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PkgUserLoginReply::clear_has_isloginsuccess() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PkgUserLoginReply::clear_isloginsuccess() {
  isloginsuccess_ = false;
  clear_has_isloginsuccess();
}
inline bool PkgUserLoginReply::isloginsuccess() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserLoginReply.isloginsuccess)
  return isloginsuccess_;
}
inline void PkgUserLoginReply::set_isloginsuccess(bool value) {
  set_has_isloginsuccess();
  isloginsuccess_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserLoginReply.isloginsuccess)
}

// optional int32 permission = 15;
inline bool PkgUserLoginReply::has_permission() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PkgUserLoginReply::set_has_permission() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PkgUserLoginReply::clear_has_permission() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PkgUserLoginReply::clear_permission() {
  permission_ = 0;
  clear_has_permission();
}
inline ::google::protobuf::int32 PkgUserLoginReply::permission() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserLoginReply.permission)
  return permission_;
}
inline void PkgUserLoginReply::set_permission(::google::protobuf::int32 value) {
  set_has_permission();
  permission_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserLoginReply.permission)
}

// optional int32 companyid = 16 [default = 0];
inline bool PkgUserLoginReply::has_companyid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PkgUserLoginReply::set_has_companyid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PkgUserLoginReply::clear_has_companyid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PkgUserLoginReply::clear_companyid() {
  companyid_ = 0;
  clear_has_companyid();
}
inline ::google::protobuf::int32 PkgUserLoginReply::companyid() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserLoginReply.companyid)
  return companyid_;
}
inline void PkgUserLoginReply::set_companyid(::google::protobuf::int32 value) {
  set_has_companyid();
  companyid_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserLoginReply.companyid)
}

// optional string companyname = 17;
inline bool PkgUserLoginReply::has_companyname() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PkgUserLoginReply::set_has_companyname() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PkgUserLoginReply::clear_has_companyname() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PkgUserLoginReply::clear_companyname() {
  companyname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_companyname();
}
inline const ::std::string& PkgUserLoginReply::companyname() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserLoginReply.companyname)
  return companyname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReply::set_companyname(const ::std::string& value) {
  set_has_companyname();
  companyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserLoginReply.companyname)
}
inline void PkgUserLoginReply::set_companyname(const char* value) {
  set_has_companyname();
  companyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserLoginReply.companyname)
}
inline void PkgUserLoginReply::set_companyname(const char* value, size_t size) {
  set_has_companyname();
  companyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserLoginReply.companyname)
}
inline ::std::string* PkgUserLoginReply::mutable_companyname() {
  set_has_companyname();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserLoginReply.companyname)
  return companyname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserLoginReply::release_companyname() {
  clear_has_companyname();
  return companyname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReply::set_allocated_companyname(::std::string* companyname) {
  if (companyname != NULL) {
    set_has_companyname();
  } else {
    clear_has_companyname();
  }
  companyname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), companyname);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserLoginReply.companyname)
}

// optional int32 companyusernumber = 18;
inline bool PkgUserLoginReply::has_companyusernumber() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PkgUserLoginReply::set_has_companyusernumber() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PkgUserLoginReply::clear_has_companyusernumber() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PkgUserLoginReply::clear_companyusernumber() {
  companyusernumber_ = 0;
  clear_has_companyusernumber();
}
inline ::google::protobuf::int32 PkgUserLoginReply::companyusernumber() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserLoginReply.companyusernumber)
  return companyusernumber_;
}
inline void PkgUserLoginReply::set_companyusernumber(::google::protobuf::int32 value) {
  set_has_companyusernumber();
  companyusernumber_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserLoginReply.companyusernumber)
}

// optional string createtime = 19;
inline bool PkgUserLoginReply::has_createtime() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PkgUserLoginReply::set_has_createtime() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PkgUserLoginReply::clear_has_createtime() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PkgUserLoginReply::clear_createtime() {
  createtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_createtime();
}
inline const ::std::string& PkgUserLoginReply::createtime() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserLoginReply.createtime)
  return createtime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReply::set_createtime(const ::std::string& value) {
  set_has_createtime();
  createtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserLoginReply.createtime)
}
inline void PkgUserLoginReply::set_createtime(const char* value) {
  set_has_createtime();
  createtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserLoginReply.createtime)
}
inline void PkgUserLoginReply::set_createtime(const char* value, size_t size) {
  set_has_createtime();
  createtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserLoginReply.createtime)
}
inline ::std::string* PkgUserLoginReply::mutable_createtime() {
  set_has_createtime();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserLoginReply.createtime)
  return createtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserLoginReply::release_createtime() {
  clear_has_createtime();
  return createtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReply::set_allocated_createtime(::std::string* createtime) {
  if (createtime != NULL) {
    set_has_createtime();
  } else {
    clear_has_createtime();
  }
  createtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), createtime);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserLoginReply.createtime)
}

// optional string rolename = 20;
inline bool PkgUserLoginReply::has_rolename() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PkgUserLoginReply::set_has_rolename() {
  _has_bits_[0] |= 0x00002000u;
}
inline void PkgUserLoginReply::clear_has_rolename() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void PkgUserLoginReply::clear_rolename() {
  rolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rolename();
}
inline const ::std::string& PkgUserLoginReply::rolename() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserLoginReply.rolename)
  return rolename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReply::set_rolename(const ::std::string& value) {
  set_has_rolename();
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserLoginReply.rolename)
}
inline void PkgUserLoginReply::set_rolename(const char* value) {
  set_has_rolename();
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserLoginReply.rolename)
}
inline void PkgUserLoginReply::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserLoginReply.rolename)
}
inline ::std::string* PkgUserLoginReply::mutable_rolename() {
  set_has_rolename();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserLoginReply.rolename)
  return rolename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserLoginReply::release_rolename() {
  clear_has_rolename();
  return rolename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReply::set_allocated_rolename(::std::string* rolename) {
  if (rolename != NULL) {
    set_has_rolename();
  } else {
    clear_has_rolename();
  }
  rolename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rolename);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserLoginReply.rolename)
}

// optional string companycreatetime = 21;
inline bool PkgUserLoginReply::has_companycreatetime() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void PkgUserLoginReply::set_has_companycreatetime() {
  _has_bits_[0] |= 0x00004000u;
}
inline void PkgUserLoginReply::clear_has_companycreatetime() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void PkgUserLoginReply::clear_companycreatetime() {
  companycreatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_companycreatetime();
}
inline const ::std::string& PkgUserLoginReply::companycreatetime() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserLoginReply.companycreatetime)
  return companycreatetime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReply::set_companycreatetime(const ::std::string& value) {
  set_has_companycreatetime();
  companycreatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserLoginReply.companycreatetime)
}
inline void PkgUserLoginReply::set_companycreatetime(const char* value) {
  set_has_companycreatetime();
  companycreatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserLoginReply.companycreatetime)
}
inline void PkgUserLoginReply::set_companycreatetime(const char* value, size_t size) {
  set_has_companycreatetime();
  companycreatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserLoginReply.companycreatetime)
}
inline ::std::string* PkgUserLoginReply::mutable_companycreatetime() {
  set_has_companycreatetime();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserLoginReply.companycreatetime)
  return companycreatetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserLoginReply::release_companycreatetime() {
  clear_has_companycreatetime();
  return companycreatetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReply::set_allocated_companycreatetime(::std::string* companycreatetime) {
  if (companycreatetime != NULL) {
    set_has_companycreatetime();
  } else {
    clear_has_companycreatetime();
  }
  companycreatetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), companycreatetime);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserLoginReply.companycreatetime)
}

// optional int32 permissionroleid = 22;
inline bool PkgUserLoginReply::has_permissionroleid() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void PkgUserLoginReply::set_has_permissionroleid() {
  _has_bits_[0] |= 0x00008000u;
}
inline void PkgUserLoginReply::clear_has_permissionroleid() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void PkgUserLoginReply::clear_permissionroleid() {
  permissionroleid_ = 0;
  clear_has_permissionroleid();
}
inline ::google::protobuf::int32 PkgUserLoginReply::permissionroleid() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserLoginReply.permissionroleid)
  return permissionroleid_;
}
inline void PkgUserLoginReply::set_permissionroleid(::google::protobuf::int32 value) {
  set_has_permissionroleid();
  permissionroleid_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserLoginReply.permissionroleid)
}

// optional .comm.PkgCompanyInfo companyinfo = 100;
inline bool PkgUserLoginReply::has_companyinfo() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void PkgUserLoginReply::set_has_companyinfo() {
  _has_bits_[0] |= 0x00010000u;
}
inline void PkgUserLoginReply::clear_has_companyinfo() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void PkgUserLoginReply::clear_companyinfo() {
  if (companyinfo_ != NULL) companyinfo_->::comm::PkgCompanyInfo::Clear();
  clear_has_companyinfo();
}
inline const ::comm::PkgCompanyInfo& PkgUserLoginReply::companyinfo() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserLoginReply.companyinfo)
  return companyinfo_ != NULL ? *companyinfo_ : *default_instance_->companyinfo_;
}
inline ::comm::PkgCompanyInfo* PkgUserLoginReply::mutable_companyinfo() {
  set_has_companyinfo();
  if (companyinfo_ == NULL) {
    companyinfo_ = new ::comm::PkgCompanyInfo;
  }
  // @@protoc_insertion_point(field_mutable:comm.PkgUserLoginReply.companyinfo)
  return companyinfo_;
}
inline ::comm::PkgCompanyInfo* PkgUserLoginReply::release_companyinfo() {
  clear_has_companyinfo();
  ::comm::PkgCompanyInfo* temp = companyinfo_;
  companyinfo_ = NULL;
  return temp;
}
inline void PkgUserLoginReply::set_allocated_companyinfo(::comm::PkgCompanyInfo* companyinfo) {
  delete companyinfo_;
  companyinfo_ = companyinfo;
  if (companyinfo) {
    set_has_companyinfo();
  } else {
    clear_has_companyinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserLoginReply.companyinfo)
}

// -------------------------------------------------------------------

// PkgUserGetPasswordReq

// required .comm.EnGetType gettype = 1 [default = GT_PHONE];
inline bool PkgUserGetPasswordReq::has_gettype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgUserGetPasswordReq::set_has_gettype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgUserGetPasswordReq::clear_has_gettype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgUserGetPasswordReq::clear_gettype() {
  gettype_ = 0;
  clear_has_gettype();
}
inline ::comm::EnGetType PkgUserGetPasswordReq::gettype() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserGetPasswordReq.gettype)
  return static_cast< ::comm::EnGetType >(gettype_);
}
inline void PkgUserGetPasswordReq::set_gettype(::comm::EnGetType value) {
  assert(::comm::EnGetType_IsValid(value));
  set_has_gettype();
  gettype_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserGetPasswordReq.gettype)
}

// optional string phonenumber = 2;
inline bool PkgUserGetPasswordReq::has_phonenumber() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgUserGetPasswordReq::set_has_phonenumber() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgUserGetPasswordReq::clear_has_phonenumber() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgUserGetPasswordReq::clear_phonenumber() {
  phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phonenumber();
}
inline const ::std::string& PkgUserGetPasswordReq::phonenumber() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserGetPasswordReq.phonenumber)
  return phonenumber_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserGetPasswordReq::set_phonenumber(const ::std::string& value) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserGetPasswordReq.phonenumber)
}
inline void PkgUserGetPasswordReq::set_phonenumber(const char* value) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserGetPasswordReq.phonenumber)
}
inline void PkgUserGetPasswordReq::set_phonenumber(const char* value, size_t size) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserGetPasswordReq.phonenumber)
}
inline ::std::string* PkgUserGetPasswordReq::mutable_phonenumber() {
  set_has_phonenumber();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserGetPasswordReq.phonenumber)
  return phonenumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserGetPasswordReq::release_phonenumber() {
  clear_has_phonenumber();
  return phonenumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserGetPasswordReq::set_allocated_phonenumber(::std::string* phonenumber) {
  if (phonenumber != NULL) {
    set_has_phonenumber();
  } else {
    clear_has_phonenumber();
  }
  phonenumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phonenumber);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserGetPasswordReq.phonenumber)
}

// optional string emailaddress = 3;
inline bool PkgUserGetPasswordReq::has_emailaddress() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgUserGetPasswordReq::set_has_emailaddress() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgUserGetPasswordReq::clear_has_emailaddress() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgUserGetPasswordReq::clear_emailaddress() {
  emailaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_emailaddress();
}
inline const ::std::string& PkgUserGetPasswordReq::emailaddress() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserGetPasswordReq.emailaddress)
  return emailaddress_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserGetPasswordReq::set_emailaddress(const ::std::string& value) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserGetPasswordReq.emailaddress)
}
inline void PkgUserGetPasswordReq::set_emailaddress(const char* value) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserGetPasswordReq.emailaddress)
}
inline void PkgUserGetPasswordReq::set_emailaddress(const char* value, size_t size) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserGetPasswordReq.emailaddress)
}
inline ::std::string* PkgUserGetPasswordReq::mutable_emailaddress() {
  set_has_emailaddress();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserGetPasswordReq.emailaddress)
  return emailaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserGetPasswordReq::release_emailaddress() {
  clear_has_emailaddress();
  return emailaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserGetPasswordReq::set_allocated_emailaddress(::std::string* emailaddress) {
  if (emailaddress != NULL) {
    set_has_emailaddress();
  } else {
    clear_has_emailaddress();
  }
  emailaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), emailaddress);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserGetPasswordReq.emailaddress)
}

// -------------------------------------------------------------------

// PkgUserGetPasswordReply

// required bool issuccess = 1 [default = true];
inline bool PkgUserGetPasswordReply::has_issuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgUserGetPasswordReply::set_has_issuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgUserGetPasswordReply::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgUserGetPasswordReply::clear_issuccess() {
  issuccess_ = true;
  clear_has_issuccess();
}
inline bool PkgUserGetPasswordReply::issuccess() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserGetPasswordReply.issuccess)
  return issuccess_;
}
inline void PkgUserGetPasswordReply::set_issuccess(bool value) {
  set_has_issuccess();
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserGetPasswordReply.issuccess)
}

// optional string err = 2;
inline bool PkgUserGetPasswordReply::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgUserGetPasswordReply::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgUserGetPasswordReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgUserGetPasswordReply::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
inline const ::std::string& PkgUserGetPasswordReply::err() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserGetPasswordReply.err)
  return err_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserGetPasswordReply::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserGetPasswordReply.err)
}
inline void PkgUserGetPasswordReply::set_err(const char* value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserGetPasswordReply.err)
}
inline void PkgUserGetPasswordReply::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserGetPasswordReply.err)
}
inline ::std::string* PkgUserGetPasswordReply::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserGetPasswordReply.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserGetPasswordReply::release_err() {
  clear_has_err();
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserGetPasswordReply::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserGetPasswordReply.err)
}

// -------------------------------------------------------------------

// PkgUserResetPasswordReq

// required .comm.EnGetType gettype = 1 [default = GT_PHONE];
inline bool PkgUserResetPasswordReq::has_gettype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgUserResetPasswordReq::set_has_gettype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgUserResetPasswordReq::clear_has_gettype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgUserResetPasswordReq::clear_gettype() {
  gettype_ = 0;
  clear_has_gettype();
}
inline ::comm::EnGetType PkgUserResetPasswordReq::gettype() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserResetPasswordReq.gettype)
  return static_cast< ::comm::EnGetType >(gettype_);
}
inline void PkgUserResetPasswordReq::set_gettype(::comm::EnGetType value) {
  assert(::comm::EnGetType_IsValid(value));
  set_has_gettype();
  gettype_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserResetPasswordReq.gettype)
}

// optional int32 userid = 2;
inline bool PkgUserResetPasswordReq::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgUserResetPasswordReq::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgUserResetPasswordReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgUserResetPasswordReq::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 PkgUserResetPasswordReq::userid() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserResetPasswordReq.userid)
  return userid_;
}
inline void PkgUserResetPasswordReq::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserResetPasswordReq.userid)
}

// optional string phonenumber = 3;
inline bool PkgUserResetPasswordReq::has_phonenumber() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgUserResetPasswordReq::set_has_phonenumber() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgUserResetPasswordReq::clear_has_phonenumber() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgUserResetPasswordReq::clear_phonenumber() {
  phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phonenumber();
}
inline const ::std::string& PkgUserResetPasswordReq::phonenumber() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserResetPasswordReq.phonenumber)
  return phonenumber_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserResetPasswordReq::set_phonenumber(const ::std::string& value) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserResetPasswordReq.phonenumber)
}
inline void PkgUserResetPasswordReq::set_phonenumber(const char* value) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserResetPasswordReq.phonenumber)
}
inline void PkgUserResetPasswordReq::set_phonenumber(const char* value, size_t size) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserResetPasswordReq.phonenumber)
}
inline ::std::string* PkgUserResetPasswordReq::mutable_phonenumber() {
  set_has_phonenumber();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserResetPasswordReq.phonenumber)
  return phonenumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserResetPasswordReq::release_phonenumber() {
  clear_has_phonenumber();
  return phonenumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserResetPasswordReq::set_allocated_phonenumber(::std::string* phonenumber) {
  if (phonenumber != NULL) {
    set_has_phonenumber();
  } else {
    clear_has_phonenumber();
  }
  phonenumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phonenumber);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserResetPasswordReq.phonenumber)
}

// optional string emailaddress = 4;
inline bool PkgUserResetPasswordReq::has_emailaddress() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PkgUserResetPasswordReq::set_has_emailaddress() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PkgUserResetPasswordReq::clear_has_emailaddress() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PkgUserResetPasswordReq::clear_emailaddress() {
  emailaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_emailaddress();
}
inline const ::std::string& PkgUserResetPasswordReq::emailaddress() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserResetPasswordReq.emailaddress)
  return emailaddress_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserResetPasswordReq::set_emailaddress(const ::std::string& value) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserResetPasswordReq.emailaddress)
}
inline void PkgUserResetPasswordReq::set_emailaddress(const char* value) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserResetPasswordReq.emailaddress)
}
inline void PkgUserResetPasswordReq::set_emailaddress(const char* value, size_t size) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserResetPasswordReq.emailaddress)
}
inline ::std::string* PkgUserResetPasswordReq::mutable_emailaddress() {
  set_has_emailaddress();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserResetPasswordReq.emailaddress)
  return emailaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserResetPasswordReq::release_emailaddress() {
  clear_has_emailaddress();
  return emailaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserResetPasswordReq::set_allocated_emailaddress(::std::string* emailaddress) {
  if (emailaddress != NULL) {
    set_has_emailaddress();
  } else {
    clear_has_emailaddress();
  }
  emailaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), emailaddress);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserResetPasswordReq.emailaddress)
}

// optional string username = 5;
inline bool PkgUserResetPasswordReq::has_username() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PkgUserResetPasswordReq::set_has_username() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PkgUserResetPasswordReq::clear_has_username() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PkgUserResetPasswordReq::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& PkgUserResetPasswordReq::username() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserResetPasswordReq.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserResetPasswordReq::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserResetPasswordReq.username)
}
inline void PkgUserResetPasswordReq::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserResetPasswordReq.username)
}
inline void PkgUserResetPasswordReq::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserResetPasswordReq.username)
}
inline ::std::string* PkgUserResetPasswordReq::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserResetPasswordReq.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserResetPasswordReq::release_username() {
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserResetPasswordReq::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserResetPasswordReq.username)
}

// required string authcode = 10;
inline bool PkgUserResetPasswordReq::has_authcode() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PkgUserResetPasswordReq::set_has_authcode() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PkgUserResetPasswordReq::clear_has_authcode() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PkgUserResetPasswordReq::clear_authcode() {
  authcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_authcode();
}
inline const ::std::string& PkgUserResetPasswordReq::authcode() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserResetPasswordReq.authcode)
  return authcode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserResetPasswordReq::set_authcode(const ::std::string& value) {
  set_has_authcode();
  authcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserResetPasswordReq.authcode)
}
inline void PkgUserResetPasswordReq::set_authcode(const char* value) {
  set_has_authcode();
  authcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserResetPasswordReq.authcode)
}
inline void PkgUserResetPasswordReq::set_authcode(const char* value, size_t size) {
  set_has_authcode();
  authcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserResetPasswordReq.authcode)
}
inline ::std::string* PkgUserResetPasswordReq::mutable_authcode() {
  set_has_authcode();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserResetPasswordReq.authcode)
  return authcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserResetPasswordReq::release_authcode() {
  clear_has_authcode();
  return authcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserResetPasswordReq::set_allocated_authcode(::std::string* authcode) {
  if (authcode != NULL) {
    set_has_authcode();
  } else {
    clear_has_authcode();
  }
  authcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authcode);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserResetPasswordReq.authcode)
}

// -------------------------------------------------------------------

// PkgUserResetPasswordReply

// required bool issuccess = 1 [default = true];
inline bool PkgUserResetPasswordReply::has_issuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgUserResetPasswordReply::set_has_issuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgUserResetPasswordReply::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgUserResetPasswordReply::clear_issuccess() {
  issuccess_ = true;
  clear_has_issuccess();
}
inline bool PkgUserResetPasswordReply::issuccess() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserResetPasswordReply.issuccess)
  return issuccess_;
}
inline void PkgUserResetPasswordReply::set_issuccess(bool value) {
  set_has_issuccess();
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserResetPasswordReply.issuccess)
}

// optional string err = 2;
inline bool PkgUserResetPasswordReply::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgUserResetPasswordReply::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgUserResetPasswordReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgUserResetPasswordReply::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
inline const ::std::string& PkgUserResetPasswordReply::err() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserResetPasswordReply.err)
  return err_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserResetPasswordReply::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserResetPasswordReply.err)
}
inline void PkgUserResetPasswordReply::set_err(const char* value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserResetPasswordReply.err)
}
inline void PkgUserResetPasswordReply::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserResetPasswordReply.err)
}
inline ::std::string* PkgUserResetPasswordReply::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserResetPasswordReply.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserResetPasswordReply::release_err() {
  clear_has_err();
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserResetPasswordReply::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserResetPasswordReply.err)
}

// optional string oldpassword = 3;
inline bool PkgUserResetPasswordReply::has_oldpassword() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgUserResetPasswordReply::set_has_oldpassword() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgUserResetPasswordReply::clear_has_oldpassword() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgUserResetPasswordReply::clear_oldpassword() {
  oldpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_oldpassword();
}
inline const ::std::string& PkgUserResetPasswordReply::oldpassword() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserResetPasswordReply.oldpassword)
  return oldpassword_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserResetPasswordReply::set_oldpassword(const ::std::string& value) {
  set_has_oldpassword();
  oldpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserResetPasswordReply.oldpassword)
}
inline void PkgUserResetPasswordReply::set_oldpassword(const char* value) {
  set_has_oldpassword();
  oldpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserResetPasswordReply.oldpassword)
}
inline void PkgUserResetPasswordReply::set_oldpassword(const char* value, size_t size) {
  set_has_oldpassword();
  oldpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserResetPasswordReply.oldpassword)
}
inline ::std::string* PkgUserResetPasswordReply::mutable_oldpassword() {
  set_has_oldpassword();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserResetPasswordReply.oldpassword)
  return oldpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserResetPasswordReply::release_oldpassword() {
  clear_has_oldpassword();
  return oldpassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserResetPasswordReply::set_allocated_oldpassword(::std::string* oldpassword) {
  if (oldpassword != NULL) {
    set_has_oldpassword();
  } else {
    clear_has_oldpassword();
  }
  oldpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oldpassword);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserResetPasswordReply.oldpassword)
}

// -------------------------------------------------------------------

// PkgUserSetReq

// required .comm.EnGetType gettype = 1 [default = GT_PHONE];
inline bool PkgUserSetReq::has_gettype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgUserSetReq::set_has_gettype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgUserSetReq::clear_has_gettype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgUserSetReq::clear_gettype() {
  gettype_ = 0;
  clear_has_gettype();
}
inline ::comm::EnGetType PkgUserSetReq::gettype() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserSetReq.gettype)
  return static_cast< ::comm::EnGetType >(gettype_);
}
inline void PkgUserSetReq::set_gettype(::comm::EnGetType value) {
  assert(::comm::EnGetType_IsValid(value));
  set_has_gettype();
  gettype_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserSetReq.gettype)
}

// required int32 settype = 2;
inline bool PkgUserSetReq::has_settype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgUserSetReq::set_has_settype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgUserSetReq::clear_has_settype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgUserSetReq::clear_settype() {
  settype_ = 0;
  clear_has_settype();
}
inline ::google::protobuf::int32 PkgUserSetReq::settype() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserSetReq.settype)
  return settype_;
}
inline void PkgUserSetReq::set_settype(::google::protobuf::int32 value) {
  set_has_settype();
  settype_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserSetReq.settype)
}

// optional int32 userid = 3;
inline bool PkgUserSetReq::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgUserSetReq::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgUserSetReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgUserSetReq::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 PkgUserSetReq::userid() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserSetReq.userid)
  return userid_;
}
inline void PkgUserSetReq::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserSetReq.userid)
}

// required string password = 4;
inline bool PkgUserSetReq::has_password() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PkgUserSetReq::set_has_password() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PkgUserSetReq::clear_has_password() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PkgUserSetReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& PkgUserSetReq::password() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserSetReq.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserSetReq::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserSetReq.password)
}
inline void PkgUserSetReq::set_password(const char* value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserSetReq.password)
}
inline void PkgUserSetReq::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserSetReq.password)
}
inline ::std::string* PkgUserSetReq::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserSetReq.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserSetReq::release_password() {
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserSetReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserSetReq.password)
}

// optional string phonenumber = 5;
inline bool PkgUserSetReq::has_phonenumber() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PkgUserSetReq::set_has_phonenumber() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PkgUserSetReq::clear_has_phonenumber() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PkgUserSetReq::clear_phonenumber() {
  phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phonenumber();
}
inline const ::std::string& PkgUserSetReq::phonenumber() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserSetReq.phonenumber)
  return phonenumber_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserSetReq::set_phonenumber(const ::std::string& value) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserSetReq.phonenumber)
}
inline void PkgUserSetReq::set_phonenumber(const char* value) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserSetReq.phonenumber)
}
inline void PkgUserSetReq::set_phonenumber(const char* value, size_t size) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserSetReq.phonenumber)
}
inline ::std::string* PkgUserSetReq::mutable_phonenumber() {
  set_has_phonenumber();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserSetReq.phonenumber)
  return phonenumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserSetReq::release_phonenumber() {
  clear_has_phonenumber();
  return phonenumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserSetReq::set_allocated_phonenumber(::std::string* phonenumber) {
  if (phonenumber != NULL) {
    set_has_phonenumber();
  } else {
    clear_has_phonenumber();
  }
  phonenumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phonenumber);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserSetReq.phonenumber)
}

// optional string emailaddress = 6;
inline bool PkgUserSetReq::has_emailaddress() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PkgUserSetReq::set_has_emailaddress() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PkgUserSetReq::clear_has_emailaddress() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PkgUserSetReq::clear_emailaddress() {
  emailaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_emailaddress();
}
inline const ::std::string& PkgUserSetReq::emailaddress() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserSetReq.emailaddress)
  return emailaddress_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserSetReq::set_emailaddress(const ::std::string& value) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserSetReq.emailaddress)
}
inline void PkgUserSetReq::set_emailaddress(const char* value) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserSetReq.emailaddress)
}
inline void PkgUserSetReq::set_emailaddress(const char* value, size_t size) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserSetReq.emailaddress)
}
inline ::std::string* PkgUserSetReq::mutable_emailaddress() {
  set_has_emailaddress();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserSetReq.emailaddress)
  return emailaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserSetReq::release_emailaddress() {
  clear_has_emailaddress();
  return emailaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserSetReq::set_allocated_emailaddress(::std::string* emailaddress) {
  if (emailaddress != NULL) {
    set_has_emailaddress();
  } else {
    clear_has_emailaddress();
  }
  emailaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), emailaddress);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserSetReq.emailaddress)
}

// optional string username = 7;
inline bool PkgUserSetReq::has_username() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PkgUserSetReq::set_has_username() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PkgUserSetReq::clear_has_username() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PkgUserSetReq::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& PkgUserSetReq::username() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserSetReq.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserSetReq::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserSetReq.username)
}
inline void PkgUserSetReq::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserSetReq.username)
}
inline void PkgUserSetReq::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserSetReq.username)
}
inline ::std::string* PkgUserSetReq::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserSetReq.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserSetReq::release_username() {
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserSetReq::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserSetReq.username)
}

// required string newpassword = 8;
inline bool PkgUserSetReq::has_newpassword() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PkgUserSetReq::set_has_newpassword() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PkgUserSetReq::clear_has_newpassword() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PkgUserSetReq::clear_newpassword() {
  newpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_newpassword();
}
inline const ::std::string& PkgUserSetReq::newpassword() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserSetReq.newpassword)
  return newpassword_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserSetReq::set_newpassword(const ::std::string& value) {
  set_has_newpassword();
  newpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserSetReq.newpassword)
}
inline void PkgUserSetReq::set_newpassword(const char* value) {
  set_has_newpassword();
  newpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserSetReq.newpassword)
}
inline void PkgUserSetReq::set_newpassword(const char* value, size_t size) {
  set_has_newpassword();
  newpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserSetReq.newpassword)
}
inline ::std::string* PkgUserSetReq::mutable_newpassword() {
  set_has_newpassword();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserSetReq.newpassword)
  return newpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserSetReq::release_newpassword() {
  clear_has_newpassword();
  return newpassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserSetReq::set_allocated_newpassword(::std::string* newpassword) {
  if (newpassword != NULL) {
    set_has_newpassword();
  } else {
    clear_has_newpassword();
  }
  newpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), newpassword);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserSetReq.newpassword)
}

// optional string realname = 9;
inline bool PkgUserSetReq::has_realname() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PkgUserSetReq::set_has_realname() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PkgUserSetReq::clear_has_realname() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PkgUserSetReq::clear_realname() {
  realname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_realname();
}
inline const ::std::string& PkgUserSetReq::realname() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserSetReq.realname)
  return realname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserSetReq::set_realname(const ::std::string& value) {
  set_has_realname();
  realname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserSetReq.realname)
}
inline void PkgUserSetReq::set_realname(const char* value) {
  set_has_realname();
  realname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserSetReq.realname)
}
inline void PkgUserSetReq::set_realname(const char* value, size_t size) {
  set_has_realname();
  realname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserSetReq.realname)
}
inline ::std::string* PkgUserSetReq::mutable_realname() {
  set_has_realname();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserSetReq.realname)
  return realname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserSetReq::release_realname() {
  clear_has_realname();
  return realname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserSetReq::set_allocated_realname(::std::string* realname) {
  if (realname != NULL) {
    set_has_realname();
  } else {
    clear_has_realname();
  }
  realname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), realname);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserSetReq.realname)
}

// -------------------------------------------------------------------

// PkgUserSetReply

// required bool issuccess = 1 [default = true];
inline bool PkgUserSetReply::has_issuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgUserSetReply::set_has_issuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgUserSetReply::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgUserSetReply::clear_issuccess() {
  issuccess_ = true;
  clear_has_issuccess();
}
inline bool PkgUserSetReply::issuccess() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserSetReply.issuccess)
  return issuccess_;
}
inline void PkgUserSetReply::set_issuccess(bool value) {
  set_has_issuccess();
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserSetReply.issuccess)
}

// optional string err = 2;
inline bool PkgUserSetReply::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgUserSetReply::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgUserSetReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgUserSetReply::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
inline const ::std::string& PkgUserSetReply::err() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserSetReply.err)
  return err_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserSetReply::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserSetReply.err)
}
inline void PkgUserSetReply::set_err(const char* value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserSetReply.err)
}
inline void PkgUserSetReply::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserSetReply.err)
}
inline ::std::string* PkgUserSetReply::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserSetReply.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserSetReply::release_err() {
  clear_has_err();
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserSetReply::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserSetReply.err)
}

// -------------------------------------------------------------------

// PkgUserInvitionUserReq

// required .comm.EnGetType gettype = 1 [default = GT_PHONE];
inline bool PkgUserInvitionUserReq::has_gettype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgUserInvitionUserReq::set_has_gettype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgUserInvitionUserReq::clear_has_gettype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgUserInvitionUserReq::clear_gettype() {
  gettype_ = 0;
  clear_has_gettype();
}
inline ::comm::EnGetType PkgUserInvitionUserReq::gettype() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserInvitionUserReq.gettype)
  return static_cast< ::comm::EnGetType >(gettype_);
}
inline void PkgUserInvitionUserReq::set_gettype(::comm::EnGetType value) {
  assert(::comm::EnGetType_IsValid(value));
  set_has_gettype();
  gettype_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserInvitionUserReq.gettype)
}

// optional string phonenumber = 3;
inline bool PkgUserInvitionUserReq::has_phonenumber() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgUserInvitionUserReq::set_has_phonenumber() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgUserInvitionUserReq::clear_has_phonenumber() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgUserInvitionUserReq::clear_phonenumber() {
  phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phonenumber();
}
inline const ::std::string& PkgUserInvitionUserReq::phonenumber() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserInvitionUserReq.phonenumber)
  return phonenumber_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserInvitionUserReq::set_phonenumber(const ::std::string& value) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserInvitionUserReq.phonenumber)
}
inline void PkgUserInvitionUserReq::set_phonenumber(const char* value) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserInvitionUserReq.phonenumber)
}
inline void PkgUserInvitionUserReq::set_phonenumber(const char* value, size_t size) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserInvitionUserReq.phonenumber)
}
inline ::std::string* PkgUserInvitionUserReq::mutable_phonenumber() {
  set_has_phonenumber();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserInvitionUserReq.phonenumber)
  return phonenumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserInvitionUserReq::release_phonenumber() {
  clear_has_phonenumber();
  return phonenumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserInvitionUserReq::set_allocated_phonenumber(::std::string* phonenumber) {
  if (phonenumber != NULL) {
    set_has_phonenumber();
  } else {
    clear_has_phonenumber();
  }
  phonenumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phonenumber);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserInvitionUserReq.phonenumber)
}

// optional string emailaddress = 4;
inline bool PkgUserInvitionUserReq::has_emailaddress() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgUserInvitionUserReq::set_has_emailaddress() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgUserInvitionUserReq::clear_has_emailaddress() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgUserInvitionUserReq::clear_emailaddress() {
  emailaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_emailaddress();
}
inline const ::std::string& PkgUserInvitionUserReq::emailaddress() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserInvitionUserReq.emailaddress)
  return emailaddress_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserInvitionUserReq::set_emailaddress(const ::std::string& value) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserInvitionUserReq.emailaddress)
}
inline void PkgUserInvitionUserReq::set_emailaddress(const char* value) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserInvitionUserReq.emailaddress)
}
inline void PkgUserInvitionUserReq::set_emailaddress(const char* value, size_t size) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserInvitionUserReq.emailaddress)
}
inline ::std::string* PkgUserInvitionUserReq::mutable_emailaddress() {
  set_has_emailaddress();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserInvitionUserReq.emailaddress)
  return emailaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserInvitionUserReq::release_emailaddress() {
  clear_has_emailaddress();
  return emailaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserInvitionUserReq::set_allocated_emailaddress(::std::string* emailaddress) {
  if (emailaddress != NULL) {
    set_has_emailaddress();
  } else {
    clear_has_emailaddress();
  }
  emailaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), emailaddress);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserInvitionUserReq.emailaddress)
}

// optional string realname = 5;
inline bool PkgUserInvitionUserReq::has_realname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PkgUserInvitionUserReq::set_has_realname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PkgUserInvitionUserReq::clear_has_realname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PkgUserInvitionUserReq::clear_realname() {
  realname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_realname();
}
inline const ::std::string& PkgUserInvitionUserReq::realname() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserInvitionUserReq.realname)
  return realname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserInvitionUserReq::set_realname(const ::std::string& value) {
  set_has_realname();
  realname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserInvitionUserReq.realname)
}
inline void PkgUserInvitionUserReq::set_realname(const char* value) {
  set_has_realname();
  realname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserInvitionUserReq.realname)
}
inline void PkgUserInvitionUserReq::set_realname(const char* value, size_t size) {
  set_has_realname();
  realname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserInvitionUserReq.realname)
}
inline ::std::string* PkgUserInvitionUserReq::mutable_realname() {
  set_has_realname();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserInvitionUserReq.realname)
  return realname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserInvitionUserReq::release_realname() {
  clear_has_realname();
  return realname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserInvitionUserReq::set_allocated_realname(::std::string* realname) {
  if (realname != NULL) {
    set_has_realname();
  } else {
    clear_has_realname();
  }
  realname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), realname);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserInvitionUserReq.realname)
}

// -------------------------------------------------------------------

// PkgUserInvitionUserReply

// required bool issuccess = 1 [default = true];
inline bool PkgUserInvitionUserReply::has_issuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgUserInvitionUserReply::set_has_issuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgUserInvitionUserReply::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgUserInvitionUserReply::clear_issuccess() {
  issuccess_ = true;
  clear_has_issuccess();
}
inline bool PkgUserInvitionUserReply::issuccess() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserInvitionUserReply.issuccess)
  return issuccess_;
}
inline void PkgUserInvitionUserReply::set_issuccess(bool value) {
  set_has_issuccess();
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserInvitionUserReply.issuccess)
}

// optional string err = 2;
inline bool PkgUserInvitionUserReply::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgUserInvitionUserReply::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgUserInvitionUserReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgUserInvitionUserReply::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
inline const ::std::string& PkgUserInvitionUserReply::err() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserInvitionUserReply.err)
  return err_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserInvitionUserReply::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserInvitionUserReply.err)
}
inline void PkgUserInvitionUserReply::set_err(const char* value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserInvitionUserReply.err)
}
inline void PkgUserInvitionUserReply::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserInvitionUserReply.err)
}
inline ::std::string* PkgUserInvitionUserReply::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserInvitionUserReply.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserInvitionUserReply::release_err() {
  clear_has_err();
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserInvitionUserReply::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserInvitionUserReply.err)
}

// optional string invitioncode = 3;
inline bool PkgUserInvitionUserReply::has_invitioncode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgUserInvitionUserReply::set_has_invitioncode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgUserInvitionUserReply::clear_has_invitioncode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgUserInvitionUserReply::clear_invitioncode() {
  invitioncode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_invitioncode();
}
inline const ::std::string& PkgUserInvitionUserReply::invitioncode() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserInvitionUserReply.invitioncode)
  return invitioncode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserInvitionUserReply::set_invitioncode(const ::std::string& value) {
  set_has_invitioncode();
  invitioncode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserInvitionUserReply.invitioncode)
}
inline void PkgUserInvitionUserReply::set_invitioncode(const char* value) {
  set_has_invitioncode();
  invitioncode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserInvitionUserReply.invitioncode)
}
inline void PkgUserInvitionUserReply::set_invitioncode(const char* value, size_t size) {
  set_has_invitioncode();
  invitioncode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserInvitionUserReply.invitioncode)
}
inline ::std::string* PkgUserInvitionUserReply::mutable_invitioncode() {
  set_has_invitioncode();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserInvitionUserReply.invitioncode)
  return invitioncode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserInvitionUserReply::release_invitioncode() {
  clear_has_invitioncode();
  return invitioncode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserInvitionUserReply::set_allocated_invitioncode(::std::string* invitioncode) {
  if (invitioncode != NULL) {
    set_has_invitioncode();
  } else {
    clear_has_invitioncode();
  }
  invitioncode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), invitioncode);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserInvitionUserReply.invitioncode)
}

// -------------------------------------------------------------------

// PkgUserInvitionCheckReq

// optional string invitioncode = 1;
inline bool PkgUserInvitionCheckReq::has_invitioncode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgUserInvitionCheckReq::set_has_invitioncode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgUserInvitionCheckReq::clear_has_invitioncode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgUserInvitionCheckReq::clear_invitioncode() {
  invitioncode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_invitioncode();
}
inline const ::std::string& PkgUserInvitionCheckReq::invitioncode() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserInvitionCheckReq.invitioncode)
  return invitioncode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserInvitionCheckReq::set_invitioncode(const ::std::string& value) {
  set_has_invitioncode();
  invitioncode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserInvitionCheckReq.invitioncode)
}
inline void PkgUserInvitionCheckReq::set_invitioncode(const char* value) {
  set_has_invitioncode();
  invitioncode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserInvitionCheckReq.invitioncode)
}
inline void PkgUserInvitionCheckReq::set_invitioncode(const char* value, size_t size) {
  set_has_invitioncode();
  invitioncode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserInvitionCheckReq.invitioncode)
}
inline ::std::string* PkgUserInvitionCheckReq::mutable_invitioncode() {
  set_has_invitioncode();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserInvitionCheckReq.invitioncode)
  return invitioncode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserInvitionCheckReq::release_invitioncode() {
  clear_has_invitioncode();
  return invitioncode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserInvitionCheckReq::set_allocated_invitioncode(::std::string* invitioncode) {
  if (invitioncode != NULL) {
    set_has_invitioncode();
  } else {
    clear_has_invitioncode();
  }
  invitioncode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), invitioncode);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserInvitionCheckReq.invitioncode)
}

// -------------------------------------------------------------------

// PkgUserInvitionCheckReply

// required bool issuccess = 1 [default = true];
inline bool PkgUserInvitionCheckReply::has_issuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgUserInvitionCheckReply::set_has_issuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgUserInvitionCheckReply::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgUserInvitionCheckReply::clear_issuccess() {
  issuccess_ = true;
  clear_has_issuccess();
}
inline bool PkgUserInvitionCheckReply::issuccess() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserInvitionCheckReply.issuccess)
  return issuccess_;
}
inline void PkgUserInvitionCheckReply::set_issuccess(bool value) {
  set_has_issuccess();
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserInvitionCheckReply.issuccess)
}

// optional string err = 2;
inline bool PkgUserInvitionCheckReply::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgUserInvitionCheckReply::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgUserInvitionCheckReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgUserInvitionCheckReply::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
inline const ::std::string& PkgUserInvitionCheckReply::err() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserInvitionCheckReply.err)
  return err_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserInvitionCheckReply::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserInvitionCheckReply.err)
}
inline void PkgUserInvitionCheckReply::set_err(const char* value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserInvitionCheckReply.err)
}
inline void PkgUserInvitionCheckReply::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserInvitionCheckReply.err)
}
inline ::std::string* PkgUserInvitionCheckReply::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserInvitionCheckReply.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserInvitionCheckReply::release_err() {
  clear_has_err();
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserInvitionCheckReply::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserInvitionCheckReply.err)
}

// optional int32 permission = 15;
inline bool PkgUserInvitionCheckReply::has_permission() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgUserInvitionCheckReply::set_has_permission() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgUserInvitionCheckReply::clear_has_permission() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgUserInvitionCheckReply::clear_permission() {
  permission_ = 0;
  clear_has_permission();
}
inline ::google::protobuf::int32 PkgUserInvitionCheckReply::permission() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserInvitionCheckReply.permission)
  return permission_;
}
inline void PkgUserInvitionCheckReply::set_permission(::google::protobuf::int32 value) {
  set_has_permission();
  permission_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserInvitionCheckReply.permission)
}

// optional int32 companyid = 16 [default = 0];
inline bool PkgUserInvitionCheckReply::has_companyid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PkgUserInvitionCheckReply::set_has_companyid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PkgUserInvitionCheckReply::clear_has_companyid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PkgUserInvitionCheckReply::clear_companyid() {
  companyid_ = 0;
  clear_has_companyid();
}
inline ::google::protobuf::int32 PkgUserInvitionCheckReply::companyid() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserInvitionCheckReply.companyid)
  return companyid_;
}
inline void PkgUserInvitionCheckReply::set_companyid(::google::protobuf::int32 value) {
  set_has_companyid();
  companyid_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserInvitionCheckReply.companyid)
}

// optional string companyname = 17;
inline bool PkgUserInvitionCheckReply::has_companyname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PkgUserInvitionCheckReply::set_has_companyname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PkgUserInvitionCheckReply::clear_has_companyname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PkgUserInvitionCheckReply::clear_companyname() {
  companyname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_companyname();
}
inline const ::std::string& PkgUserInvitionCheckReply::companyname() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserInvitionCheckReply.companyname)
  return companyname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserInvitionCheckReply::set_companyname(const ::std::string& value) {
  set_has_companyname();
  companyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserInvitionCheckReply.companyname)
}
inline void PkgUserInvitionCheckReply::set_companyname(const char* value) {
  set_has_companyname();
  companyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserInvitionCheckReply.companyname)
}
inline void PkgUserInvitionCheckReply::set_companyname(const char* value, size_t size) {
  set_has_companyname();
  companyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserInvitionCheckReply.companyname)
}
inline ::std::string* PkgUserInvitionCheckReply::mutable_companyname() {
  set_has_companyname();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserInvitionCheckReply.companyname)
  return companyname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserInvitionCheckReply::release_companyname() {
  clear_has_companyname();
  return companyname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserInvitionCheckReply::set_allocated_companyname(::std::string* companyname) {
  if (companyname != NULL) {
    set_has_companyname();
  } else {
    clear_has_companyname();
  }
  companyname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), companyname);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserInvitionCheckReply.companyname)
}

// optional int32 companyusernumber = 18;
inline bool PkgUserInvitionCheckReply::has_companyusernumber() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PkgUserInvitionCheckReply::set_has_companyusernumber() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PkgUserInvitionCheckReply::clear_has_companyusernumber() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PkgUserInvitionCheckReply::clear_companyusernumber() {
  companyusernumber_ = 0;
  clear_has_companyusernumber();
}
inline ::google::protobuf::int32 PkgUserInvitionCheckReply::companyusernumber() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserInvitionCheckReply.companyusernumber)
  return companyusernumber_;
}
inline void PkgUserInvitionCheckReply::set_companyusernumber(::google::protobuf::int32 value) {
  set_has_companyusernumber();
  companyusernumber_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserInvitionCheckReply.companyusernumber)
}

// optional string rolename = 20;
inline bool PkgUserInvitionCheckReply::has_rolename() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PkgUserInvitionCheckReply::set_has_rolename() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PkgUserInvitionCheckReply::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PkgUserInvitionCheckReply::clear_rolename() {
  rolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rolename();
}
inline const ::std::string& PkgUserInvitionCheckReply::rolename() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserInvitionCheckReply.rolename)
  return rolename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserInvitionCheckReply::set_rolename(const ::std::string& value) {
  set_has_rolename();
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserInvitionCheckReply.rolename)
}
inline void PkgUserInvitionCheckReply::set_rolename(const char* value) {
  set_has_rolename();
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserInvitionCheckReply.rolename)
}
inline void PkgUserInvitionCheckReply::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserInvitionCheckReply.rolename)
}
inline ::std::string* PkgUserInvitionCheckReply::mutable_rolename() {
  set_has_rolename();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserInvitionCheckReply.rolename)
  return rolename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserInvitionCheckReply::release_rolename() {
  clear_has_rolename();
  return rolename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserInvitionCheckReply::set_allocated_rolename(::std::string* rolename) {
  if (rolename != NULL) {
    set_has_rolename();
  } else {
    clear_has_rolename();
  }
  rolename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rolename);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserInvitionCheckReply.rolename)
}

// optional string companycreatetime = 21;
inline bool PkgUserInvitionCheckReply::has_companycreatetime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PkgUserInvitionCheckReply::set_has_companycreatetime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PkgUserInvitionCheckReply::clear_has_companycreatetime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PkgUserInvitionCheckReply::clear_companycreatetime() {
  companycreatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_companycreatetime();
}
inline const ::std::string& PkgUserInvitionCheckReply::companycreatetime() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserInvitionCheckReply.companycreatetime)
  return companycreatetime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserInvitionCheckReply::set_companycreatetime(const ::std::string& value) {
  set_has_companycreatetime();
  companycreatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserInvitionCheckReply.companycreatetime)
}
inline void PkgUserInvitionCheckReply::set_companycreatetime(const char* value) {
  set_has_companycreatetime();
  companycreatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserInvitionCheckReply.companycreatetime)
}
inline void PkgUserInvitionCheckReply::set_companycreatetime(const char* value, size_t size) {
  set_has_companycreatetime();
  companycreatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserInvitionCheckReply.companycreatetime)
}
inline ::std::string* PkgUserInvitionCheckReply::mutable_companycreatetime() {
  set_has_companycreatetime();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserInvitionCheckReply.companycreatetime)
  return companycreatetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserInvitionCheckReply::release_companycreatetime() {
  clear_has_companycreatetime();
  return companycreatetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserInvitionCheckReply::set_allocated_companycreatetime(::std::string* companycreatetime) {
  if (companycreatetime != NULL) {
    set_has_companycreatetime();
  } else {
    clear_has_companycreatetime();
  }
  companycreatetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), companycreatetime);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserInvitionCheckReply.companycreatetime)
}

// optional int32 permissionroleid = 22;
inline bool PkgUserInvitionCheckReply::has_permissionroleid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PkgUserInvitionCheckReply::set_has_permissionroleid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PkgUserInvitionCheckReply::clear_has_permissionroleid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PkgUserInvitionCheckReply::clear_permissionroleid() {
  permissionroleid_ = 0;
  clear_has_permissionroleid();
}
inline ::google::protobuf::int32 PkgUserInvitionCheckReply::permissionroleid() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserInvitionCheckReply.permissionroleid)
  return permissionroleid_;
}
inline void PkgUserInvitionCheckReply::set_permissionroleid(::google::protobuf::int32 value) {
  set_has_permissionroleid();
  permissionroleid_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserInvitionCheckReply.permissionroleid)
}

// optional .comm.PkgCompanyInfo companyinfo = 100;
inline bool PkgUserInvitionCheckReply::has_companyinfo() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PkgUserInvitionCheckReply::set_has_companyinfo() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PkgUserInvitionCheckReply::clear_has_companyinfo() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PkgUserInvitionCheckReply::clear_companyinfo() {
  if (companyinfo_ != NULL) companyinfo_->::comm::PkgCompanyInfo::Clear();
  clear_has_companyinfo();
}
inline const ::comm::PkgCompanyInfo& PkgUserInvitionCheckReply::companyinfo() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserInvitionCheckReply.companyinfo)
  return companyinfo_ != NULL ? *companyinfo_ : *default_instance_->companyinfo_;
}
inline ::comm::PkgCompanyInfo* PkgUserInvitionCheckReply::mutable_companyinfo() {
  set_has_companyinfo();
  if (companyinfo_ == NULL) {
    companyinfo_ = new ::comm::PkgCompanyInfo;
  }
  // @@protoc_insertion_point(field_mutable:comm.PkgUserInvitionCheckReply.companyinfo)
  return companyinfo_;
}
inline ::comm::PkgCompanyInfo* PkgUserInvitionCheckReply::release_companyinfo() {
  clear_has_companyinfo();
  ::comm::PkgCompanyInfo* temp = companyinfo_;
  companyinfo_ = NULL;
  return temp;
}
inline void PkgUserInvitionCheckReply::set_allocated_companyinfo(::comm::PkgCompanyInfo* companyinfo) {
  delete companyinfo_;
  companyinfo_ = companyinfo;
  if (companyinfo) {
    set_has_companyinfo();
  } else {
    clear_has_companyinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserInvitionCheckReply.companyinfo)
}

// -------------------------------------------------------------------

// PkgUserCreateCompanyReq

// optional string companyname = 1;
inline bool PkgUserCreateCompanyReq::has_companyname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgUserCreateCompanyReq::set_has_companyname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgUserCreateCompanyReq::clear_has_companyname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgUserCreateCompanyReq::clear_companyname() {
  companyname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_companyname();
}
inline const ::std::string& PkgUserCreateCompanyReq::companyname() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserCreateCompanyReq.companyname)
  return companyname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCreateCompanyReq::set_companyname(const ::std::string& value) {
  set_has_companyname();
  companyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserCreateCompanyReq.companyname)
}
inline void PkgUserCreateCompanyReq::set_companyname(const char* value) {
  set_has_companyname();
  companyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserCreateCompanyReq.companyname)
}
inline void PkgUserCreateCompanyReq::set_companyname(const char* value, size_t size) {
  set_has_companyname();
  companyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserCreateCompanyReq.companyname)
}
inline ::std::string* PkgUserCreateCompanyReq::mutable_companyname() {
  set_has_companyname();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserCreateCompanyReq.companyname)
  return companyname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserCreateCompanyReq::release_companyname() {
  clear_has_companyname();
  return companyname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCreateCompanyReq::set_allocated_companyname(::std::string* companyname) {
  if (companyname != NULL) {
    set_has_companyname();
  } else {
    clear_has_companyname();
  }
  companyname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), companyname);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserCreateCompanyReq.companyname)
}

// -------------------------------------------------------------------

// PkgUserCreateCompanyReply

// required bool issuccess = 1 [default = true];
inline bool PkgUserCreateCompanyReply::has_issuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgUserCreateCompanyReply::set_has_issuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgUserCreateCompanyReply::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgUserCreateCompanyReply::clear_issuccess() {
  issuccess_ = true;
  clear_has_issuccess();
}
inline bool PkgUserCreateCompanyReply::issuccess() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserCreateCompanyReply.issuccess)
  return issuccess_;
}
inline void PkgUserCreateCompanyReply::set_issuccess(bool value) {
  set_has_issuccess();
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserCreateCompanyReply.issuccess)
}

// optional string err = 2;
inline bool PkgUserCreateCompanyReply::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgUserCreateCompanyReply::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgUserCreateCompanyReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgUserCreateCompanyReply::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
inline const ::std::string& PkgUserCreateCompanyReply::err() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserCreateCompanyReply.err)
  return err_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCreateCompanyReply::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserCreateCompanyReply.err)
}
inline void PkgUserCreateCompanyReply::set_err(const char* value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserCreateCompanyReply.err)
}
inline void PkgUserCreateCompanyReply::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserCreateCompanyReply.err)
}
inline ::std::string* PkgUserCreateCompanyReply::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserCreateCompanyReply.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserCreateCompanyReply::release_err() {
  clear_has_err();
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCreateCompanyReply::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserCreateCompanyReply.err)
}

// optional int32 companyid = 16 [default = 0];
inline bool PkgUserCreateCompanyReply::has_companyid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgUserCreateCompanyReply::set_has_companyid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgUserCreateCompanyReply::clear_has_companyid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgUserCreateCompanyReply::clear_companyid() {
  companyid_ = 0;
  clear_has_companyid();
}
inline ::google::protobuf::int32 PkgUserCreateCompanyReply::companyid() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserCreateCompanyReply.companyid)
  return companyid_;
}
inline void PkgUserCreateCompanyReply::set_companyid(::google::protobuf::int32 value) {
  set_has_companyid();
  companyid_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserCreateCompanyReply.companyid)
}

// optional string companyname = 17;
inline bool PkgUserCreateCompanyReply::has_companyname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PkgUserCreateCompanyReply::set_has_companyname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PkgUserCreateCompanyReply::clear_has_companyname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PkgUserCreateCompanyReply::clear_companyname() {
  companyname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_companyname();
}
inline const ::std::string& PkgUserCreateCompanyReply::companyname() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserCreateCompanyReply.companyname)
  return companyname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCreateCompanyReply::set_companyname(const ::std::string& value) {
  set_has_companyname();
  companyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserCreateCompanyReply.companyname)
}
inline void PkgUserCreateCompanyReply::set_companyname(const char* value) {
  set_has_companyname();
  companyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserCreateCompanyReply.companyname)
}
inline void PkgUserCreateCompanyReply::set_companyname(const char* value, size_t size) {
  set_has_companyname();
  companyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserCreateCompanyReply.companyname)
}
inline ::std::string* PkgUserCreateCompanyReply::mutable_companyname() {
  set_has_companyname();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserCreateCompanyReply.companyname)
  return companyname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserCreateCompanyReply::release_companyname() {
  clear_has_companyname();
  return companyname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCreateCompanyReply::set_allocated_companyname(::std::string* companyname) {
  if (companyname != NULL) {
    set_has_companyname();
  } else {
    clear_has_companyname();
  }
  companyname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), companyname);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserCreateCompanyReply.companyname)
}

// optional int32 companyusernumber = 18;
inline bool PkgUserCreateCompanyReply::has_companyusernumber() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PkgUserCreateCompanyReply::set_has_companyusernumber() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PkgUserCreateCompanyReply::clear_has_companyusernumber() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PkgUserCreateCompanyReply::clear_companyusernumber() {
  companyusernumber_ = 0;
  clear_has_companyusernumber();
}
inline ::google::protobuf::int32 PkgUserCreateCompanyReply::companyusernumber() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserCreateCompanyReply.companyusernumber)
  return companyusernumber_;
}
inline void PkgUserCreateCompanyReply::set_companyusernumber(::google::protobuf::int32 value) {
  set_has_companyusernumber();
  companyusernumber_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserCreateCompanyReply.companyusernumber)
}

// optional string rolename = 20;
inline bool PkgUserCreateCompanyReply::has_rolename() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PkgUserCreateCompanyReply::set_has_rolename() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PkgUserCreateCompanyReply::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PkgUserCreateCompanyReply::clear_rolename() {
  rolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rolename();
}
inline const ::std::string& PkgUserCreateCompanyReply::rolename() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserCreateCompanyReply.rolename)
  return rolename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCreateCompanyReply::set_rolename(const ::std::string& value) {
  set_has_rolename();
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserCreateCompanyReply.rolename)
}
inline void PkgUserCreateCompanyReply::set_rolename(const char* value) {
  set_has_rolename();
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserCreateCompanyReply.rolename)
}
inline void PkgUserCreateCompanyReply::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserCreateCompanyReply.rolename)
}
inline ::std::string* PkgUserCreateCompanyReply::mutable_rolename() {
  set_has_rolename();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserCreateCompanyReply.rolename)
  return rolename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserCreateCompanyReply::release_rolename() {
  clear_has_rolename();
  return rolename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCreateCompanyReply::set_allocated_rolename(::std::string* rolename) {
  if (rolename != NULL) {
    set_has_rolename();
  } else {
    clear_has_rolename();
  }
  rolename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rolename);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserCreateCompanyReply.rolename)
}

// optional string companycreatetime = 21;
inline bool PkgUserCreateCompanyReply::has_companycreatetime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PkgUserCreateCompanyReply::set_has_companycreatetime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PkgUserCreateCompanyReply::clear_has_companycreatetime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PkgUserCreateCompanyReply::clear_companycreatetime() {
  companycreatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_companycreatetime();
}
inline const ::std::string& PkgUserCreateCompanyReply::companycreatetime() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserCreateCompanyReply.companycreatetime)
  return companycreatetime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCreateCompanyReply::set_companycreatetime(const ::std::string& value) {
  set_has_companycreatetime();
  companycreatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserCreateCompanyReply.companycreatetime)
}
inline void PkgUserCreateCompanyReply::set_companycreatetime(const char* value) {
  set_has_companycreatetime();
  companycreatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserCreateCompanyReply.companycreatetime)
}
inline void PkgUserCreateCompanyReply::set_companycreatetime(const char* value, size_t size) {
  set_has_companycreatetime();
  companycreatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserCreateCompanyReply.companycreatetime)
}
inline ::std::string* PkgUserCreateCompanyReply::mutable_companycreatetime() {
  set_has_companycreatetime();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserCreateCompanyReply.companycreatetime)
  return companycreatetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserCreateCompanyReply::release_companycreatetime() {
  clear_has_companycreatetime();
  return companycreatetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserCreateCompanyReply::set_allocated_companycreatetime(::std::string* companycreatetime) {
  if (companycreatetime != NULL) {
    set_has_companycreatetime();
  } else {
    clear_has_companycreatetime();
  }
  companycreatetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), companycreatetime);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserCreateCompanyReply.companycreatetime)
}

// optional int32 permissionroleid = 22;
inline bool PkgUserCreateCompanyReply::has_permissionroleid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PkgUserCreateCompanyReply::set_has_permissionroleid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PkgUserCreateCompanyReply::clear_has_permissionroleid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PkgUserCreateCompanyReply::clear_permissionroleid() {
  permissionroleid_ = 0;
  clear_has_permissionroleid();
}
inline ::google::protobuf::int32 PkgUserCreateCompanyReply::permissionroleid() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserCreateCompanyReply.permissionroleid)
  return permissionroleid_;
}
inline void PkgUserCreateCompanyReply::set_permissionroleid(::google::protobuf::int32 value) {
  set_has_permissionroleid();
  permissionroleid_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserCreateCompanyReply.permissionroleid)
}

// optional .comm.PkgCompanyInfo companyinfo = 100;
inline bool PkgUserCreateCompanyReply::has_companyinfo() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PkgUserCreateCompanyReply::set_has_companyinfo() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PkgUserCreateCompanyReply::clear_has_companyinfo() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PkgUserCreateCompanyReply::clear_companyinfo() {
  if (companyinfo_ != NULL) companyinfo_->::comm::PkgCompanyInfo::Clear();
  clear_has_companyinfo();
}
inline const ::comm::PkgCompanyInfo& PkgUserCreateCompanyReply::companyinfo() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserCreateCompanyReply.companyinfo)
  return companyinfo_ != NULL ? *companyinfo_ : *default_instance_->companyinfo_;
}
inline ::comm::PkgCompanyInfo* PkgUserCreateCompanyReply::mutable_companyinfo() {
  set_has_companyinfo();
  if (companyinfo_ == NULL) {
    companyinfo_ = new ::comm::PkgCompanyInfo;
  }
  // @@protoc_insertion_point(field_mutable:comm.PkgUserCreateCompanyReply.companyinfo)
  return companyinfo_;
}
inline ::comm::PkgCompanyInfo* PkgUserCreateCompanyReply::release_companyinfo() {
  clear_has_companyinfo();
  ::comm::PkgCompanyInfo* temp = companyinfo_;
  companyinfo_ = NULL;
  return temp;
}
inline void PkgUserCreateCompanyReply::set_allocated_companyinfo(::comm::PkgCompanyInfo* companyinfo) {
  delete companyinfo_;
  companyinfo_ = companyinfo;
  if (companyinfo) {
    set_has_companyinfo();
  } else {
    clear_has_companyinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserCreateCompanyReply.companyinfo)
}

// -------------------------------------------------------------------

// PkgUserReassignAdminReq

// optional int32 adminuserid = 2;
inline bool PkgUserReassignAdminReq::has_adminuserid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgUserReassignAdminReq::set_has_adminuserid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgUserReassignAdminReq::clear_has_adminuserid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgUserReassignAdminReq::clear_adminuserid() {
  adminuserid_ = 0;
  clear_has_adminuserid();
}
inline ::google::protobuf::int32 PkgUserReassignAdminReq::adminuserid() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserReassignAdminReq.adminuserid)
  return adminuserid_;
}
inline void PkgUserReassignAdminReq::set_adminuserid(::google::protobuf::int32 value) {
  set_has_adminuserid();
  adminuserid_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserReassignAdminReq.adminuserid)
}

// -------------------------------------------------------------------

// PkgUserReassignAdminReply

// required bool issuccess = 1 [default = true];
inline bool PkgUserReassignAdminReply::has_issuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgUserReassignAdminReply::set_has_issuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgUserReassignAdminReply::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgUserReassignAdminReply::clear_issuccess() {
  issuccess_ = true;
  clear_has_issuccess();
}
inline bool PkgUserReassignAdminReply::issuccess() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserReassignAdminReply.issuccess)
  return issuccess_;
}
inline void PkgUserReassignAdminReply::set_issuccess(bool value) {
  set_has_issuccess();
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserReassignAdminReply.issuccess)
}

// optional string err = 2;
inline bool PkgUserReassignAdminReply::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgUserReassignAdminReply::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgUserReassignAdminReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgUserReassignAdminReply::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
inline const ::std::string& PkgUserReassignAdminReply::err() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserReassignAdminReply.err)
  return err_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserReassignAdminReply::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserReassignAdminReply.err)
}
inline void PkgUserReassignAdminReply::set_err(const char* value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserReassignAdminReply.err)
}
inline void PkgUserReassignAdminReply::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserReassignAdminReply.err)
}
inline ::std::string* PkgUserReassignAdminReply::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserReassignAdminReply.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserReassignAdminReply::release_err() {
  clear_has_err();
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserReassignAdminReply::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserReassignAdminReply.err)
}

// optional int32 permission = 15;
inline bool PkgUserReassignAdminReply::has_permission() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgUserReassignAdminReply::set_has_permission() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgUserReassignAdminReply::clear_has_permission() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgUserReassignAdminReply::clear_permission() {
  permission_ = 0;
  clear_has_permission();
}
inline ::google::protobuf::int32 PkgUserReassignAdminReply::permission() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserReassignAdminReply.permission)
  return permission_;
}
inline void PkgUserReassignAdminReply::set_permission(::google::protobuf::int32 value) {
  set_has_permission();
  permission_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserReassignAdminReply.permission)
}

// optional string rolename = 20;
inline bool PkgUserReassignAdminReply::has_rolename() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PkgUserReassignAdminReply::set_has_rolename() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PkgUserReassignAdminReply::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PkgUserReassignAdminReply::clear_rolename() {
  rolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rolename();
}
inline const ::std::string& PkgUserReassignAdminReply::rolename() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserReassignAdminReply.rolename)
  return rolename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserReassignAdminReply::set_rolename(const ::std::string& value) {
  set_has_rolename();
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserReassignAdminReply.rolename)
}
inline void PkgUserReassignAdminReply::set_rolename(const char* value) {
  set_has_rolename();
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserReassignAdminReply.rolename)
}
inline void PkgUserReassignAdminReply::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserReassignAdminReply.rolename)
}
inline ::std::string* PkgUserReassignAdminReply::mutable_rolename() {
  set_has_rolename();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserReassignAdminReply.rolename)
  return rolename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserReassignAdminReply::release_rolename() {
  clear_has_rolename();
  return rolename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserReassignAdminReply::set_allocated_rolename(::std::string* rolename) {
  if (rolename != NULL) {
    set_has_rolename();
  } else {
    clear_has_rolename();
  }
  rolename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rolename);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserReassignAdminReply.rolename)
}

// optional int32 permissionroleid = 22;
inline bool PkgUserReassignAdminReply::has_permissionroleid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PkgUserReassignAdminReply::set_has_permissionroleid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PkgUserReassignAdminReply::clear_has_permissionroleid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PkgUserReassignAdminReply::clear_permissionroleid() {
  permissionroleid_ = 0;
  clear_has_permissionroleid();
}
inline ::google::protobuf::int32 PkgUserReassignAdminReply::permissionroleid() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserReassignAdminReply.permissionroleid)
  return permissionroleid_;
}
inline void PkgUserReassignAdminReply::set_permissionroleid(::google::protobuf::int32 value) {
  set_has_permissionroleid();
  permissionroleid_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserReassignAdminReply.permissionroleid)
}

// -------------------------------------------------------------------

// PkgUserDeleteFromCompanyReq

// repeated int32 useridlist = 1;
inline int PkgUserDeleteFromCompanyReq::useridlist_size() const {
  return useridlist_.size();
}
inline void PkgUserDeleteFromCompanyReq::clear_useridlist() {
  useridlist_.Clear();
}
inline ::google::protobuf::int32 PkgUserDeleteFromCompanyReq::useridlist(int index) const {
  // @@protoc_insertion_point(field_get:comm.PkgUserDeleteFromCompanyReq.useridlist)
  return useridlist_.Get(index);
}
inline void PkgUserDeleteFromCompanyReq::set_useridlist(int index, ::google::protobuf::int32 value) {
  useridlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:comm.PkgUserDeleteFromCompanyReq.useridlist)
}
inline void PkgUserDeleteFromCompanyReq::add_useridlist(::google::protobuf::int32 value) {
  useridlist_.Add(value);
  // @@protoc_insertion_point(field_add:comm.PkgUserDeleteFromCompanyReq.useridlist)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PkgUserDeleteFromCompanyReq::useridlist() const {
  // @@protoc_insertion_point(field_list:comm.PkgUserDeleteFromCompanyReq.useridlist)
  return useridlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PkgUserDeleteFromCompanyReq::mutable_useridlist() {
  // @@protoc_insertion_point(field_mutable_list:comm.PkgUserDeleteFromCompanyReq.useridlist)
  return &useridlist_;
}

// -------------------------------------------------------------------

// PkgUserDeleteFromCompanyReply

// required bool issuccess = 1 [default = true];
inline bool PkgUserDeleteFromCompanyReply::has_issuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgUserDeleteFromCompanyReply::set_has_issuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgUserDeleteFromCompanyReply::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgUserDeleteFromCompanyReply::clear_issuccess() {
  issuccess_ = true;
  clear_has_issuccess();
}
inline bool PkgUserDeleteFromCompanyReply::issuccess() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserDeleteFromCompanyReply.issuccess)
  return issuccess_;
}
inline void PkgUserDeleteFromCompanyReply::set_issuccess(bool value) {
  set_has_issuccess();
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserDeleteFromCompanyReply.issuccess)
}

// optional string err = 2;
inline bool PkgUserDeleteFromCompanyReply::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgUserDeleteFromCompanyReply::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgUserDeleteFromCompanyReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgUserDeleteFromCompanyReply::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
inline const ::std::string& PkgUserDeleteFromCompanyReply::err() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserDeleteFromCompanyReply.err)
  return err_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserDeleteFromCompanyReply::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserDeleteFromCompanyReply.err)
}
inline void PkgUserDeleteFromCompanyReply::set_err(const char* value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserDeleteFromCompanyReply.err)
}
inline void PkgUserDeleteFromCompanyReply::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserDeleteFromCompanyReply.err)
}
inline ::std::string* PkgUserDeleteFromCompanyReply::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserDeleteFromCompanyReply.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserDeleteFromCompanyReply::release_err() {
  clear_has_err();
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserDeleteFromCompanyReply::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserDeleteFromCompanyReply.err)
}

// optional int32 companyusernumber = 18;
inline bool PkgUserDeleteFromCompanyReply::has_companyusernumber() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgUserDeleteFromCompanyReply::set_has_companyusernumber() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgUserDeleteFromCompanyReply::clear_has_companyusernumber() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgUserDeleteFromCompanyReply::clear_companyusernumber() {
  companyusernumber_ = 0;
  clear_has_companyusernumber();
}
inline ::google::protobuf::int32 PkgUserDeleteFromCompanyReply::companyusernumber() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserDeleteFromCompanyReply.companyusernumber)
  return companyusernumber_;
}
inline void PkgUserDeleteFromCompanyReply::set_companyusernumber(::google::protobuf::int32 value) {
  set_has_companyusernumber();
  companyusernumber_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserDeleteFromCompanyReply.companyusernumber)
}

// -------------------------------------------------------------------

// PkgUserExitCompanyReq

// required .comm.PkgUserExitCompanyReq.EnCmd encmd = 1 [default = CMD_EXIT];
inline bool PkgUserExitCompanyReq::has_encmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgUserExitCompanyReq::set_has_encmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgUserExitCompanyReq::clear_has_encmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgUserExitCompanyReq::clear_encmd() {
  encmd_ = 1;
  clear_has_encmd();
}
inline ::comm::PkgUserExitCompanyReq_EnCmd PkgUserExitCompanyReq::encmd() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserExitCompanyReq.encmd)
  return static_cast< ::comm::PkgUserExitCompanyReq_EnCmd >(encmd_);
}
inline void PkgUserExitCompanyReq::set_encmd(::comm::PkgUserExitCompanyReq_EnCmd value) {
  assert(::comm::PkgUserExitCompanyReq_EnCmd_IsValid(value));
  set_has_encmd();
  encmd_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserExitCompanyReq.encmd)
}

// -------------------------------------------------------------------

// PkgUserExitCompanyReply

// required bool issuccess = 1 [default = true];
inline bool PkgUserExitCompanyReply::has_issuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgUserExitCompanyReply::set_has_issuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgUserExitCompanyReply::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgUserExitCompanyReply::clear_issuccess() {
  issuccess_ = true;
  clear_has_issuccess();
}
inline bool PkgUserExitCompanyReply::issuccess() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserExitCompanyReply.issuccess)
  return issuccess_;
}
inline void PkgUserExitCompanyReply::set_issuccess(bool value) {
  set_has_issuccess();
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgUserExitCompanyReply.issuccess)
}

// optional string err = 2;
inline bool PkgUserExitCompanyReply::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgUserExitCompanyReply::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgUserExitCompanyReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgUserExitCompanyReply::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
inline const ::std::string& PkgUserExitCompanyReply::err() const {
  // @@protoc_insertion_point(field_get:comm.PkgUserExitCompanyReply.err)
  return err_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserExitCompanyReply::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgUserExitCompanyReply.err)
}
inline void PkgUserExitCompanyReply::set_err(const char* value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgUserExitCompanyReply.err)
}
inline void PkgUserExitCompanyReply::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgUserExitCompanyReply.err)
}
inline ::std::string* PkgUserExitCompanyReply::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:comm.PkgUserExitCompanyReply.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserExitCompanyReply::release_err() {
  clear_has_err();
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserExitCompanyReply::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgUserExitCompanyReply.err)
}

// -------------------------------------------------------------------

// PkgTaskInfo

// optional int32 id = 1 [default = 0];
inline bool PkgTaskInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgTaskInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgTaskInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgTaskInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 PkgTaskInfo::id() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskInfo.id)
  return id_;
}
inline void PkgTaskInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgTaskInfo.id)
}

// optional int32 parentid = 2 [default = 0];
inline bool PkgTaskInfo::has_parentid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgTaskInfo::set_has_parentid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgTaskInfo::clear_has_parentid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgTaskInfo::clear_parentid() {
  parentid_ = 0;
  clear_has_parentid();
}
inline ::google::protobuf::int32 PkgTaskInfo::parentid() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskInfo.parentid)
  return parentid_;
}
inline void PkgTaskInfo::set_parentid(::google::protobuf::int32 value) {
  set_has_parentid();
  parentid_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgTaskInfo.parentid)
}

// optional string name = 3;
inline bool PkgTaskInfo::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgTaskInfo::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgTaskInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgTaskInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& PkgTaskInfo::name() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgTaskInfo.name)
}
inline void PkgTaskInfo::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgTaskInfo.name)
}
inline void PkgTaskInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgTaskInfo.name)
}
inline ::std::string* PkgTaskInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:comm.PkgTaskInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgTaskInfo::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgTaskInfo.name)
}

// optional string taskdate = 4;
inline bool PkgTaskInfo::has_taskdate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PkgTaskInfo::set_has_taskdate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PkgTaskInfo::clear_has_taskdate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PkgTaskInfo::clear_taskdate() {
  taskdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_taskdate();
}
inline const ::std::string& PkgTaskInfo::taskdate() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskInfo.taskdate)
  return taskdate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskInfo::set_taskdate(const ::std::string& value) {
  set_has_taskdate();
  taskdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgTaskInfo.taskdate)
}
inline void PkgTaskInfo::set_taskdate(const char* value) {
  set_has_taskdate();
  taskdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgTaskInfo.taskdate)
}
inline void PkgTaskInfo::set_taskdate(const char* value, size_t size) {
  set_has_taskdate();
  taskdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgTaskInfo.taskdate)
}
inline ::std::string* PkgTaskInfo::mutable_taskdate() {
  set_has_taskdate();
  // @@protoc_insertion_point(field_mutable:comm.PkgTaskInfo.taskdate)
  return taskdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgTaskInfo::release_taskdate() {
  clear_has_taskdate();
  return taskdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskInfo::set_allocated_taskdate(::std::string* taskdate) {
  if (taskdate != NULL) {
    set_has_taskdate();
  } else {
    clear_has_taskdate();
  }
  taskdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), taskdate);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgTaskInfo.taskdate)
}

// optional string content = 5;
inline bool PkgTaskInfo::has_content() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PkgTaskInfo::set_has_content() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PkgTaskInfo::clear_has_content() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PkgTaskInfo::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& PkgTaskInfo::content() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskInfo.content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskInfo::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgTaskInfo.content)
}
inline void PkgTaskInfo::set_content(const char* value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgTaskInfo.content)
}
inline void PkgTaskInfo::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgTaskInfo.content)
}
inline ::std::string* PkgTaskInfo::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:comm.PkgTaskInfo.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgTaskInfo::release_content() {
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskInfo::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgTaskInfo.content)
}

// optional string remark = 6;
inline bool PkgTaskInfo::has_remark() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PkgTaskInfo::set_has_remark() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PkgTaskInfo::clear_has_remark() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PkgTaskInfo::clear_remark() {
  remark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_remark();
}
inline const ::std::string& PkgTaskInfo::remark() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskInfo.remark)
  return remark_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskInfo::set_remark(const ::std::string& value) {
  set_has_remark();
  remark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgTaskInfo.remark)
}
inline void PkgTaskInfo::set_remark(const char* value) {
  set_has_remark();
  remark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgTaskInfo.remark)
}
inline void PkgTaskInfo::set_remark(const char* value, size_t size) {
  set_has_remark();
  remark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgTaskInfo.remark)
}
inline ::std::string* PkgTaskInfo::mutable_remark() {
  set_has_remark();
  // @@protoc_insertion_point(field_mutable:comm.PkgTaskInfo.remark)
  return remark_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgTaskInfo::release_remark() {
  clear_has_remark();
  return remark_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskInfo::set_allocated_remark(::std::string* remark) {
  if (remark != NULL) {
    set_has_remark();
  } else {
    clear_has_remark();
  }
  remark_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), remark);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgTaskInfo.remark)
}

// optional .comm.PkgTaskInfo.EnTaskLevel tasklevel = 7 [default = TL_IMPORTANCE_NOTARGENCY];
inline bool PkgTaskInfo::has_tasklevel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PkgTaskInfo::set_has_tasklevel() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PkgTaskInfo::clear_has_tasklevel() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PkgTaskInfo::clear_tasklevel() {
  tasklevel_ = 1;
  clear_has_tasklevel();
}
inline ::comm::PkgTaskInfo_EnTaskLevel PkgTaskInfo::tasklevel() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskInfo.tasklevel)
  return static_cast< ::comm::PkgTaskInfo_EnTaskLevel >(tasklevel_);
}
inline void PkgTaskInfo::set_tasklevel(::comm::PkgTaskInfo_EnTaskLevel value) {
  assert(::comm::PkgTaskInfo_EnTaskLevel_IsValid(value));
  set_has_tasklevel();
  tasklevel_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgTaskInfo.tasklevel)
}

// optional int32 createuserid = 8;
inline bool PkgTaskInfo::has_createuserid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PkgTaskInfo::set_has_createuserid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PkgTaskInfo::clear_has_createuserid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PkgTaskInfo::clear_createuserid() {
  createuserid_ = 0;
  clear_has_createuserid();
}
inline ::google::protobuf::int32 PkgTaskInfo::createuserid() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskInfo.createuserid)
  return createuserid_;
}
inline void PkgTaskInfo::set_createuserid(::google::protobuf::int32 value) {
  set_has_createuserid();
  createuserid_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgTaskInfo.createuserid)
}

// optional .comm.PkgTaskInfo.EnTaskStatus status = 9 [default = TS_NEW];
inline bool PkgTaskInfo::has_status() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PkgTaskInfo::set_has_status() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PkgTaskInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PkgTaskInfo::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::comm::PkgTaskInfo_EnTaskStatus PkgTaskInfo::status() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskInfo.status)
  return static_cast< ::comm::PkgTaskInfo_EnTaskStatus >(status_);
}
inline void PkgTaskInfo::set_status(::comm::PkgTaskInfo_EnTaskStatus value) {
  assert(::comm::PkgTaskInfo_EnTaskStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgTaskInfo.status)
}

// optional string createtime = 10;
inline bool PkgTaskInfo::has_createtime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PkgTaskInfo::set_has_createtime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PkgTaskInfo::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PkgTaskInfo::clear_createtime() {
  createtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_createtime();
}
inline const ::std::string& PkgTaskInfo::createtime() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskInfo.createtime)
  return createtime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskInfo::set_createtime(const ::std::string& value) {
  set_has_createtime();
  createtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgTaskInfo.createtime)
}
inline void PkgTaskInfo::set_createtime(const char* value) {
  set_has_createtime();
  createtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgTaskInfo.createtime)
}
inline void PkgTaskInfo::set_createtime(const char* value, size_t size) {
  set_has_createtime();
  createtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgTaskInfo.createtime)
}
inline ::std::string* PkgTaskInfo::mutable_createtime() {
  set_has_createtime();
  // @@protoc_insertion_point(field_mutable:comm.PkgTaskInfo.createtime)
  return createtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgTaskInfo::release_createtime() {
  clear_has_createtime();
  return createtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskInfo::set_allocated_createtime(::std::string* createtime) {
  if (createtime != NULL) {
    set_has_createtime();
  } else {
    clear_has_createtime();
  }
  createtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), createtime);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgTaskInfo.createtime)
}

// optional string finishtime = 11;
inline bool PkgTaskInfo::has_finishtime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PkgTaskInfo::set_has_finishtime() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PkgTaskInfo::clear_has_finishtime() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PkgTaskInfo::clear_finishtime() {
  finishtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_finishtime();
}
inline const ::std::string& PkgTaskInfo::finishtime() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskInfo.finishtime)
  return finishtime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskInfo::set_finishtime(const ::std::string& value) {
  set_has_finishtime();
  finishtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgTaskInfo.finishtime)
}
inline void PkgTaskInfo::set_finishtime(const char* value) {
  set_has_finishtime();
  finishtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgTaskInfo.finishtime)
}
inline void PkgTaskInfo::set_finishtime(const char* value, size_t size) {
  set_has_finishtime();
  finishtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgTaskInfo.finishtime)
}
inline ::std::string* PkgTaskInfo::mutable_finishtime() {
  set_has_finishtime();
  // @@protoc_insertion_point(field_mutable:comm.PkgTaskInfo.finishtime)
  return finishtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgTaskInfo::release_finishtime() {
  clear_has_finishtime();
  return finishtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskInfo::set_allocated_finishtime(::std::string* finishtime) {
  if (finishtime != NULL) {
    set_has_finishtime();
  } else {
    clear_has_finishtime();
  }
  finishtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), finishtime);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgTaskInfo.finishtime)
}

// optional int32 accepteduserid = 13 [default = 0];
inline bool PkgTaskInfo::has_accepteduserid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PkgTaskInfo::set_has_accepteduserid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PkgTaskInfo::clear_has_accepteduserid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PkgTaskInfo::clear_accepteduserid() {
  accepteduserid_ = 0;
  clear_has_accepteduserid();
}
inline ::google::protobuf::int32 PkgTaskInfo::accepteduserid() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskInfo.accepteduserid)
  return accepteduserid_;
}
inline void PkgTaskInfo::set_accepteduserid(::google::protobuf::int32 value) {
  set_has_accepteduserid();
  accepteduserid_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgTaskInfo.accepteduserid)
}

// optional int32 coworkid = 14 [default = 0];
inline bool PkgTaskInfo::has_coworkid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PkgTaskInfo::set_has_coworkid() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PkgTaskInfo::clear_has_coworkid() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PkgTaskInfo::clear_coworkid() {
  coworkid_ = 0;
  clear_has_coworkid();
}
inline ::google::protobuf::int32 PkgTaskInfo::coworkid() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskInfo.coworkid)
  return coworkid_;
}
inline void PkgTaskInfo::set_coworkid(::google::protobuf::int32 value) {
  set_has_coworkid();
  coworkid_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgTaskInfo.coworkid)
}

// optional string updatetime = 15;
inline bool PkgTaskInfo::has_updatetime() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PkgTaskInfo::set_has_updatetime() {
  _has_bits_[0] |= 0x00002000u;
}
inline void PkgTaskInfo::clear_has_updatetime() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void PkgTaskInfo::clear_updatetime() {
  updatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_updatetime();
}
inline const ::std::string& PkgTaskInfo::updatetime() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskInfo.updatetime)
  return updatetime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskInfo::set_updatetime(const ::std::string& value) {
  set_has_updatetime();
  updatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgTaskInfo.updatetime)
}
inline void PkgTaskInfo::set_updatetime(const char* value) {
  set_has_updatetime();
  updatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgTaskInfo.updatetime)
}
inline void PkgTaskInfo::set_updatetime(const char* value, size_t size) {
  set_has_updatetime();
  updatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgTaskInfo.updatetime)
}
inline ::std::string* PkgTaskInfo::mutable_updatetime() {
  set_has_updatetime();
  // @@protoc_insertion_point(field_mutable:comm.PkgTaskInfo.updatetime)
  return updatetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgTaskInfo::release_updatetime() {
  clear_has_updatetime();
  return updatetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskInfo::set_allocated_updatetime(::std::string* updatetime) {
  if (updatetime != NULL) {
    set_has_updatetime();
  } else {
    clear_has_updatetime();
  }
  updatetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), updatetime);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgTaskInfo.updatetime)
}

// optional int32 isreaded = 16 [default = 0];
inline bool PkgTaskInfo::has_isreaded() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void PkgTaskInfo::set_has_isreaded() {
  _has_bits_[0] |= 0x00004000u;
}
inline void PkgTaskInfo::clear_has_isreaded() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void PkgTaskInfo::clear_isreaded() {
  isreaded_ = 0;
  clear_has_isreaded();
}
inline ::google::protobuf::int32 PkgTaskInfo::isreaded() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskInfo.isreaded)
  return isreaded_;
}
inline void PkgTaskInfo::set_isreaded(::google::protobuf::int32 value) {
  set_has_isreaded();
  isreaded_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgTaskInfo.isreaded)
}

// optional int32 sortflag = 17 [default = 0];
inline bool PkgTaskInfo::has_sortflag() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void PkgTaskInfo::set_has_sortflag() {
  _has_bits_[0] |= 0x00008000u;
}
inline void PkgTaskInfo::clear_has_sortflag() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void PkgTaskInfo::clear_sortflag() {
  sortflag_ = 0;
  clear_has_sortflag();
}
inline ::google::protobuf::int32 PkgTaskInfo::sortflag() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskInfo.sortflag)
  return sortflag_;
}
inline void PkgTaskInfo::set_sortflag(::google::protobuf::int32 value) {
  set_has_sortflag();
  sortflag_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgTaskInfo.sortflag)
}

// optional string createdrealname = 30;
inline bool PkgTaskInfo::has_createdrealname() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void PkgTaskInfo::set_has_createdrealname() {
  _has_bits_[0] |= 0x00010000u;
}
inline void PkgTaskInfo::clear_has_createdrealname() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void PkgTaskInfo::clear_createdrealname() {
  createdrealname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_createdrealname();
}
inline const ::std::string& PkgTaskInfo::createdrealname() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskInfo.createdrealname)
  return createdrealname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskInfo::set_createdrealname(const ::std::string& value) {
  set_has_createdrealname();
  createdrealname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgTaskInfo.createdrealname)
}
inline void PkgTaskInfo::set_createdrealname(const char* value) {
  set_has_createdrealname();
  createdrealname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgTaskInfo.createdrealname)
}
inline void PkgTaskInfo::set_createdrealname(const char* value, size_t size) {
  set_has_createdrealname();
  createdrealname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgTaskInfo.createdrealname)
}
inline ::std::string* PkgTaskInfo::mutable_createdrealname() {
  set_has_createdrealname();
  // @@protoc_insertion_point(field_mutable:comm.PkgTaskInfo.createdrealname)
  return createdrealname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgTaskInfo::release_createdrealname() {
  clear_has_createdrealname();
  return createdrealname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskInfo::set_allocated_createdrealname(::std::string* createdrealname) {
  if (createdrealname != NULL) {
    set_has_createdrealname();
  } else {
    clear_has_createdrealname();
  }
  createdrealname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), createdrealname);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgTaskInfo.createdrealname)
}

// optional string acceptedrealname = 31;
inline bool PkgTaskInfo::has_acceptedrealname() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void PkgTaskInfo::set_has_acceptedrealname() {
  _has_bits_[0] |= 0x00020000u;
}
inline void PkgTaskInfo::clear_has_acceptedrealname() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void PkgTaskInfo::clear_acceptedrealname() {
  acceptedrealname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_acceptedrealname();
}
inline const ::std::string& PkgTaskInfo::acceptedrealname() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskInfo.acceptedrealname)
  return acceptedrealname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskInfo::set_acceptedrealname(const ::std::string& value) {
  set_has_acceptedrealname();
  acceptedrealname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgTaskInfo.acceptedrealname)
}
inline void PkgTaskInfo::set_acceptedrealname(const char* value) {
  set_has_acceptedrealname();
  acceptedrealname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgTaskInfo.acceptedrealname)
}
inline void PkgTaskInfo::set_acceptedrealname(const char* value, size_t size) {
  set_has_acceptedrealname();
  acceptedrealname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgTaskInfo.acceptedrealname)
}
inline ::std::string* PkgTaskInfo::mutable_acceptedrealname() {
  set_has_acceptedrealname();
  // @@protoc_insertion_point(field_mutable:comm.PkgTaskInfo.acceptedrealname)
  return acceptedrealname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgTaskInfo::release_acceptedrealname() {
  clear_has_acceptedrealname();
  return acceptedrealname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskInfo::set_allocated_acceptedrealname(::std::string* acceptedrealname) {
  if (acceptedrealname != NULL) {
    set_has_acceptedrealname();
  } else {
    clear_has_acceptedrealname();
  }
  acceptedrealname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), acceptedrealname);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgTaskInfo.acceptedrealname)
}

// -------------------------------------------------------------------

// PkgTaskPageQueryReq_PkgTaskQueryCondition

// optional string taskdatestart = 2;
inline bool PkgTaskPageQueryReq_PkgTaskQueryCondition::has_taskdatestart() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::set_has_taskdatestart() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::clear_has_taskdatestart() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::clear_taskdatestart() {
  taskdatestart_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_taskdatestart();
}
inline const ::std::string& PkgTaskPageQueryReq_PkgTaskQueryCondition::taskdatestart() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.taskdatestart)
  return taskdatestart_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::set_taskdatestart(const ::std::string& value) {
  set_has_taskdatestart();
  taskdatestart_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.taskdatestart)
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::set_taskdatestart(const char* value) {
  set_has_taskdatestart();
  taskdatestart_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.taskdatestart)
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::set_taskdatestart(const char* value, size_t size) {
  set_has_taskdatestart();
  taskdatestart_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.taskdatestart)
}
inline ::std::string* PkgTaskPageQueryReq_PkgTaskQueryCondition::mutable_taskdatestart() {
  set_has_taskdatestart();
  // @@protoc_insertion_point(field_mutable:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.taskdatestart)
  return taskdatestart_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgTaskPageQueryReq_PkgTaskQueryCondition::release_taskdatestart() {
  clear_has_taskdatestart();
  return taskdatestart_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::set_allocated_taskdatestart(::std::string* taskdatestart) {
  if (taskdatestart != NULL) {
    set_has_taskdatestart();
  } else {
    clear_has_taskdatestart();
  }
  taskdatestart_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), taskdatestart);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.taskdatestart)
}

// optional string taskdateend = 3;
inline bool PkgTaskPageQueryReq_PkgTaskQueryCondition::has_taskdateend() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::set_has_taskdateend() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::clear_has_taskdateend() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::clear_taskdateend() {
  taskdateend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_taskdateend();
}
inline const ::std::string& PkgTaskPageQueryReq_PkgTaskQueryCondition::taskdateend() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.taskdateend)
  return taskdateend_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::set_taskdateend(const ::std::string& value) {
  set_has_taskdateend();
  taskdateend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.taskdateend)
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::set_taskdateend(const char* value) {
  set_has_taskdateend();
  taskdateend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.taskdateend)
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::set_taskdateend(const char* value, size_t size) {
  set_has_taskdateend();
  taskdateend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.taskdateend)
}
inline ::std::string* PkgTaskPageQueryReq_PkgTaskQueryCondition::mutable_taskdateend() {
  set_has_taskdateend();
  // @@protoc_insertion_point(field_mutable:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.taskdateend)
  return taskdateend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgTaskPageQueryReq_PkgTaskQueryCondition::release_taskdateend() {
  clear_has_taskdateend();
  return taskdateend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::set_allocated_taskdateend(::std::string* taskdateend) {
  if (taskdateend != NULL) {
    set_has_taskdateend();
  } else {
    clear_has_taskdateend();
  }
  taskdateend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), taskdateend);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.taskdateend)
}

// optional string keyforname = 4;
inline bool PkgTaskPageQueryReq_PkgTaskQueryCondition::has_keyforname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::set_has_keyforname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::clear_has_keyforname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::clear_keyforname() {
  keyforname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_keyforname();
}
inline const ::std::string& PkgTaskPageQueryReq_PkgTaskQueryCondition::keyforname() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.keyforname)
  return keyforname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::set_keyforname(const ::std::string& value) {
  set_has_keyforname();
  keyforname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.keyforname)
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::set_keyforname(const char* value) {
  set_has_keyforname();
  keyforname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.keyforname)
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::set_keyforname(const char* value, size_t size) {
  set_has_keyforname();
  keyforname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.keyforname)
}
inline ::std::string* PkgTaskPageQueryReq_PkgTaskQueryCondition::mutable_keyforname() {
  set_has_keyforname();
  // @@protoc_insertion_point(field_mutable:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.keyforname)
  return keyforname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgTaskPageQueryReq_PkgTaskQueryCondition::release_keyforname() {
  clear_has_keyforname();
  return keyforname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::set_allocated_keyforname(::std::string* keyforname) {
  if (keyforname != NULL) {
    set_has_keyforname();
  } else {
    clear_has_keyforname();
  }
  keyforname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keyforname);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.keyforname)
}

// optional string keyforcontent = 5;
inline bool PkgTaskPageQueryReq_PkgTaskQueryCondition::has_keyforcontent() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::set_has_keyforcontent() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::clear_has_keyforcontent() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::clear_keyforcontent() {
  keyforcontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_keyforcontent();
}
inline const ::std::string& PkgTaskPageQueryReq_PkgTaskQueryCondition::keyforcontent() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.keyforcontent)
  return keyforcontent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::set_keyforcontent(const ::std::string& value) {
  set_has_keyforcontent();
  keyforcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.keyforcontent)
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::set_keyforcontent(const char* value) {
  set_has_keyforcontent();
  keyforcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.keyforcontent)
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::set_keyforcontent(const char* value, size_t size) {
  set_has_keyforcontent();
  keyforcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.keyforcontent)
}
inline ::std::string* PkgTaskPageQueryReq_PkgTaskQueryCondition::mutable_keyforcontent() {
  set_has_keyforcontent();
  // @@protoc_insertion_point(field_mutable:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.keyforcontent)
  return keyforcontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgTaskPageQueryReq_PkgTaskQueryCondition::release_keyforcontent() {
  clear_has_keyforcontent();
  return keyforcontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::set_allocated_keyforcontent(::std::string* keyforcontent) {
  if (keyforcontent != NULL) {
    set_has_keyforcontent();
  } else {
    clear_has_keyforcontent();
  }
  keyforcontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keyforcontent);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.keyforcontent)
}

// repeated int32 taskstatuslist = 6;
inline int PkgTaskPageQueryReq_PkgTaskQueryCondition::taskstatuslist_size() const {
  return taskstatuslist_.size();
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::clear_taskstatuslist() {
  taskstatuslist_.Clear();
}
inline ::google::protobuf::int32 PkgTaskPageQueryReq_PkgTaskQueryCondition::taskstatuslist(int index) const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.taskstatuslist)
  return taskstatuslist_.Get(index);
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::set_taskstatuslist(int index, ::google::protobuf::int32 value) {
  taskstatuslist_.Set(index, value);
  // @@protoc_insertion_point(field_set:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.taskstatuslist)
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::add_taskstatuslist(::google::protobuf::int32 value) {
  taskstatuslist_.Add(value);
  // @@protoc_insertion_point(field_add:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.taskstatuslist)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PkgTaskPageQueryReq_PkgTaskQueryCondition::taskstatuslist() const {
  // @@protoc_insertion_point(field_list:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.taskstatuslist)
  return taskstatuslist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PkgTaskPageQueryReq_PkgTaskQueryCondition::mutable_taskstatuslist() {
  // @@protoc_insertion_point(field_mutable_list:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.taskstatuslist)
  return &taskstatuslist_;
}

// optional .comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.EnReadedFlag enreadedflag = 7 [default = PR_ALL];
inline bool PkgTaskPageQueryReq_PkgTaskQueryCondition::has_enreadedflag() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::set_has_enreadedflag() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::clear_has_enreadedflag() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::clear_enreadedflag() {
  enreadedflag_ = 1;
  clear_has_enreadedflag();
}
inline ::comm::PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag PkgTaskPageQueryReq_PkgTaskQueryCondition::enreadedflag() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.enreadedflag)
  return static_cast< ::comm::PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag >(enreadedflag_);
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::set_enreadedflag(::comm::PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag value) {
  assert(::comm::PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_IsValid(value));
  set_has_enreadedflag();
  enreadedflag_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.enreadedflag)
}

// optional string lastupdatetime = 100;
inline bool PkgTaskPageQueryReq_PkgTaskQueryCondition::has_lastupdatetime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::set_has_lastupdatetime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::clear_has_lastupdatetime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::clear_lastupdatetime() {
  lastupdatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lastupdatetime();
}
inline const ::std::string& PkgTaskPageQueryReq_PkgTaskQueryCondition::lastupdatetime() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.lastupdatetime)
  return lastupdatetime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::set_lastupdatetime(const ::std::string& value) {
  set_has_lastupdatetime();
  lastupdatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.lastupdatetime)
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::set_lastupdatetime(const char* value) {
  set_has_lastupdatetime();
  lastupdatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.lastupdatetime)
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::set_lastupdatetime(const char* value, size_t size) {
  set_has_lastupdatetime();
  lastupdatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.lastupdatetime)
}
inline ::std::string* PkgTaskPageQueryReq_PkgTaskQueryCondition::mutable_lastupdatetime() {
  set_has_lastupdatetime();
  // @@protoc_insertion_point(field_mutable:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.lastupdatetime)
  return lastupdatetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgTaskPageQueryReq_PkgTaskQueryCondition::release_lastupdatetime() {
  clear_has_lastupdatetime();
  return lastupdatetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskPageQueryReq_PkgTaskQueryCondition::set_allocated_lastupdatetime(::std::string* lastupdatetime) {
  if (lastupdatetime != NULL) {
    set_has_lastupdatetime();
  } else {
    clear_has_lastupdatetime();
  }
  lastupdatetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lastupdatetime);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.lastupdatetime)
}

// -------------------------------------------------------------------

// PkgTaskPageQueryReq

// required .comm.PkgTaskPageQueryReq.EnTaskFlag taskflag = 1 [default = TF_MYTASK];
inline bool PkgTaskPageQueryReq::has_taskflag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgTaskPageQueryReq::set_has_taskflag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgTaskPageQueryReq::clear_has_taskflag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgTaskPageQueryReq::clear_taskflag() {
  taskflag_ = 0;
  clear_has_taskflag();
}
inline ::comm::PkgTaskPageQueryReq_EnTaskFlag PkgTaskPageQueryReq::taskflag() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskPageQueryReq.taskflag)
  return static_cast< ::comm::PkgTaskPageQueryReq_EnTaskFlag >(taskflag_);
}
inline void PkgTaskPageQueryReq::set_taskflag(::comm::PkgTaskPageQueryReq_EnTaskFlag value) {
  assert(::comm::PkgTaskPageQueryReq_EnTaskFlag_IsValid(value));
  set_has_taskflag();
  taskflag_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgTaskPageQueryReq.taskflag)
}

// optional int32 enconditon = 2 [default = 0];
inline bool PkgTaskPageQueryReq::has_enconditon() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgTaskPageQueryReq::set_has_enconditon() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgTaskPageQueryReq::clear_has_enconditon() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgTaskPageQueryReq::clear_enconditon() {
  enconditon_ = 0;
  clear_has_enconditon();
}
inline ::google::protobuf::int32 PkgTaskPageQueryReq::enconditon() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskPageQueryReq.enconditon)
  return enconditon_;
}
inline void PkgTaskPageQueryReq::set_enconditon(::google::protobuf::int32 value) {
  set_has_enconditon();
  enconditon_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgTaskPageQueryReq.enconditon)
}

// optional .comm.PkgTaskPageQueryReq.PkgTaskQueryCondition pkgtaskquerycondition = 3;
inline bool PkgTaskPageQueryReq::has_pkgtaskquerycondition() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgTaskPageQueryReq::set_has_pkgtaskquerycondition() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgTaskPageQueryReq::clear_has_pkgtaskquerycondition() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgTaskPageQueryReq::clear_pkgtaskquerycondition() {
  if (pkgtaskquerycondition_ != NULL) pkgtaskquerycondition_->::comm::PkgTaskPageQueryReq_PkgTaskQueryCondition::Clear();
  clear_has_pkgtaskquerycondition();
}
inline const ::comm::PkgTaskPageQueryReq_PkgTaskQueryCondition& PkgTaskPageQueryReq::pkgtaskquerycondition() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskPageQueryReq.pkgtaskquerycondition)
  return pkgtaskquerycondition_ != NULL ? *pkgtaskquerycondition_ : *default_instance_->pkgtaskquerycondition_;
}
inline ::comm::PkgTaskPageQueryReq_PkgTaskQueryCondition* PkgTaskPageQueryReq::mutable_pkgtaskquerycondition() {
  set_has_pkgtaskquerycondition();
  if (pkgtaskquerycondition_ == NULL) {
    pkgtaskquerycondition_ = new ::comm::PkgTaskPageQueryReq_PkgTaskQueryCondition;
  }
  // @@protoc_insertion_point(field_mutable:comm.PkgTaskPageQueryReq.pkgtaskquerycondition)
  return pkgtaskquerycondition_;
}
inline ::comm::PkgTaskPageQueryReq_PkgTaskQueryCondition* PkgTaskPageQueryReq::release_pkgtaskquerycondition() {
  clear_has_pkgtaskquerycondition();
  ::comm::PkgTaskPageQueryReq_PkgTaskQueryCondition* temp = pkgtaskquerycondition_;
  pkgtaskquerycondition_ = NULL;
  return temp;
}
inline void PkgTaskPageQueryReq::set_allocated_pkgtaskquerycondition(::comm::PkgTaskPageQueryReq_PkgTaskQueryCondition* pkgtaskquerycondition) {
  delete pkgtaskquerycondition_;
  pkgtaskquerycondition_ = pkgtaskquerycondition;
  if (pkgtaskquerycondition) {
    set_has_pkgtaskquerycondition();
  } else {
    clear_has_pkgtaskquerycondition();
  }
  // @@protoc_insertion_point(field_set_allocated:comm.PkgTaskPageQueryReq.pkgtaskquerycondition)
}

// optional .comm.PkgTaskPageQueryReq.EnPageFlag pageflag = 4 [default = P_RETURNALL];
inline bool PkgTaskPageQueryReq::has_pageflag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PkgTaskPageQueryReq::set_has_pageflag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PkgTaskPageQueryReq::clear_has_pageflag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PkgTaskPageQueryReq::clear_pageflag() {
  pageflag_ = 2;
  clear_has_pageflag();
}
inline ::comm::PkgTaskPageQueryReq_EnPageFlag PkgTaskPageQueryReq::pageflag() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskPageQueryReq.pageflag)
  return static_cast< ::comm::PkgTaskPageQueryReq_EnPageFlag >(pageflag_);
}
inline void PkgTaskPageQueryReq::set_pageflag(::comm::PkgTaskPageQueryReq_EnPageFlag value) {
  assert(::comm::PkgTaskPageQueryReq_EnPageFlag_IsValid(value));
  set_has_pageflag();
  pageflag_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgTaskPageQueryReq.pageflag)
}

// optional int32 indexstart = 5;
inline bool PkgTaskPageQueryReq::has_indexstart() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PkgTaskPageQueryReq::set_has_indexstart() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PkgTaskPageQueryReq::clear_has_indexstart() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PkgTaskPageQueryReq::clear_indexstart() {
  indexstart_ = 0;
  clear_has_indexstart();
}
inline ::google::protobuf::int32 PkgTaskPageQueryReq::indexstart() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskPageQueryReq.indexstart)
  return indexstart_;
}
inline void PkgTaskPageQueryReq::set_indexstart(::google::protobuf::int32 value) {
  set_has_indexstart();
  indexstart_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgTaskPageQueryReq.indexstart)
}

// optional int32 indexend = 6;
inline bool PkgTaskPageQueryReq::has_indexend() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PkgTaskPageQueryReq::set_has_indexend() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PkgTaskPageQueryReq::clear_has_indexend() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PkgTaskPageQueryReq::clear_indexend() {
  indexend_ = 0;
  clear_has_indexend();
}
inline ::google::protobuf::int32 PkgTaskPageQueryReq::indexend() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskPageQueryReq.indexend)
  return indexend_;
}
inline void PkgTaskPageQueryReq::set_indexend(::google::protobuf::int32 value) {
  set_has_indexend();
  indexend_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgTaskPageQueryReq.indexend)
}

// -------------------------------------------------------------------

// PkgTaskPageQueryReply

// required bool issuccess = 1;
inline bool PkgTaskPageQueryReply::has_issuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgTaskPageQueryReply::set_has_issuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgTaskPageQueryReply::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgTaskPageQueryReply::clear_issuccess() {
  issuccess_ = false;
  clear_has_issuccess();
}
inline bool PkgTaskPageQueryReply::issuccess() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskPageQueryReply.issuccess)
  return issuccess_;
}
inline void PkgTaskPageQueryReply::set_issuccess(bool value) {
  set_has_issuccess();
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgTaskPageQueryReply.issuccess)
}

// optional string err = 2;
inline bool PkgTaskPageQueryReply::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgTaskPageQueryReply::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgTaskPageQueryReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgTaskPageQueryReply::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
inline const ::std::string& PkgTaskPageQueryReply::err() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskPageQueryReply.err)
  return err_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskPageQueryReply::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgTaskPageQueryReply.err)
}
inline void PkgTaskPageQueryReply::set_err(const char* value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgTaskPageQueryReply.err)
}
inline void PkgTaskPageQueryReply::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgTaskPageQueryReply.err)
}
inline ::std::string* PkgTaskPageQueryReply::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:comm.PkgTaskPageQueryReply.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgTaskPageQueryReply::release_err() {
  clear_has_err();
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskPageQueryReply::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgTaskPageQueryReply.err)
}

// repeated .comm.PkgTaskInfo taskinfolist = 3;
inline int PkgTaskPageQueryReply::taskinfolist_size() const {
  return taskinfolist_.size();
}
inline void PkgTaskPageQueryReply::clear_taskinfolist() {
  taskinfolist_.Clear();
}
inline const ::comm::PkgTaskInfo& PkgTaskPageQueryReply::taskinfolist(int index) const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskPageQueryReply.taskinfolist)
  return taskinfolist_.Get(index);
}
inline ::comm::PkgTaskInfo* PkgTaskPageQueryReply::mutable_taskinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:comm.PkgTaskPageQueryReply.taskinfolist)
  return taskinfolist_.Mutable(index);
}
inline ::comm::PkgTaskInfo* PkgTaskPageQueryReply::add_taskinfolist() {
  // @@protoc_insertion_point(field_add:comm.PkgTaskPageQueryReply.taskinfolist)
  return taskinfolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::comm::PkgTaskInfo >&
PkgTaskPageQueryReply::taskinfolist() const {
  // @@protoc_insertion_point(field_list:comm.PkgTaskPageQueryReply.taskinfolist)
  return taskinfolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::comm::PkgTaskInfo >*
PkgTaskPageQueryReply::mutable_taskinfolist() {
  // @@protoc_insertion_point(field_mutable_list:comm.PkgTaskPageQueryReply.taskinfolist)
  return &taskinfolist_;
}

// optional int32 returnnum = 5;
inline bool PkgTaskPageQueryReply::has_returnnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PkgTaskPageQueryReply::set_has_returnnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PkgTaskPageQueryReply::clear_has_returnnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PkgTaskPageQueryReply::clear_returnnum() {
  returnnum_ = 0;
  clear_has_returnnum();
}
inline ::google::protobuf::int32 PkgTaskPageQueryReply::returnnum() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskPageQueryReply.returnnum)
  return returnnum_;
}
inline void PkgTaskPageQueryReply::set_returnnum(::google::protobuf::int32 value) {
  set_has_returnnum();
  returnnum_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgTaskPageQueryReply.returnnum)
}

// -------------------------------------------------------------------

// PkgTaskQueryReq

// required .comm.PkgTaskQueryReq.EnQueryFlag queryflag = 1;
inline bool PkgTaskQueryReq::has_queryflag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgTaskQueryReq::set_has_queryflag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgTaskQueryReq::clear_has_queryflag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgTaskQueryReq::clear_queryflag() {
  queryflag_ = 1;
  clear_has_queryflag();
}
inline ::comm::PkgTaskQueryReq_EnQueryFlag PkgTaskQueryReq::queryflag() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskQueryReq.queryflag)
  return static_cast< ::comm::PkgTaskQueryReq_EnQueryFlag >(queryflag_);
}
inline void PkgTaskQueryReq::set_queryflag(::comm::PkgTaskQueryReq_EnQueryFlag value) {
  assert(::comm::PkgTaskQueryReq_EnQueryFlag_IsValid(value));
  set_has_queryflag();
  queryflag_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgTaskQueryReq.queryflag)
}

// required int32 taskid = 2;
inline bool PkgTaskQueryReq::has_taskid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgTaskQueryReq::set_has_taskid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgTaskQueryReq::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgTaskQueryReq::clear_taskid() {
  taskid_ = 0;
  clear_has_taskid();
}
inline ::google::protobuf::int32 PkgTaskQueryReq::taskid() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskQueryReq.taskid)
  return taskid_;
}
inline void PkgTaskQueryReq::set_taskid(::google::protobuf::int32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgTaskQueryReq.taskid)
}

// -------------------------------------------------------------------

// PkgTaskQueryReply

// required bool issuccess = 1;
inline bool PkgTaskQueryReply::has_issuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgTaskQueryReply::set_has_issuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgTaskQueryReply::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgTaskQueryReply::clear_issuccess() {
  issuccess_ = false;
  clear_has_issuccess();
}
inline bool PkgTaskQueryReply::issuccess() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskQueryReply.issuccess)
  return issuccess_;
}
inline void PkgTaskQueryReply::set_issuccess(bool value) {
  set_has_issuccess();
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgTaskQueryReply.issuccess)
}

// optional string err = 2;
inline bool PkgTaskQueryReply::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgTaskQueryReply::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgTaskQueryReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgTaskQueryReply::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
inline const ::std::string& PkgTaskQueryReply::err() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskQueryReply.err)
  return err_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskQueryReply::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgTaskQueryReply.err)
}
inline void PkgTaskQueryReply::set_err(const char* value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgTaskQueryReply.err)
}
inline void PkgTaskQueryReply::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgTaskQueryReply.err)
}
inline ::std::string* PkgTaskQueryReply::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:comm.PkgTaskQueryReply.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgTaskQueryReply::release_err() {
  clear_has_err();
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskQueryReply::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgTaskQueryReply.err)
}

// optional .comm.PkgTaskInfo taskinfo = 3;
inline bool PkgTaskQueryReply::has_taskinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgTaskQueryReply::set_has_taskinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgTaskQueryReply::clear_has_taskinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgTaskQueryReply::clear_taskinfo() {
  if (taskinfo_ != NULL) taskinfo_->::comm::PkgTaskInfo::Clear();
  clear_has_taskinfo();
}
inline const ::comm::PkgTaskInfo& PkgTaskQueryReply::taskinfo() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskQueryReply.taskinfo)
  return taskinfo_ != NULL ? *taskinfo_ : *default_instance_->taskinfo_;
}
inline ::comm::PkgTaskInfo* PkgTaskQueryReply::mutable_taskinfo() {
  set_has_taskinfo();
  if (taskinfo_ == NULL) {
    taskinfo_ = new ::comm::PkgTaskInfo;
  }
  // @@protoc_insertion_point(field_mutable:comm.PkgTaskQueryReply.taskinfo)
  return taskinfo_;
}
inline ::comm::PkgTaskInfo* PkgTaskQueryReply::release_taskinfo() {
  clear_has_taskinfo();
  ::comm::PkgTaskInfo* temp = taskinfo_;
  taskinfo_ = NULL;
  return temp;
}
inline void PkgTaskQueryReply::set_allocated_taskinfo(::comm::PkgTaskInfo* taskinfo) {
  delete taskinfo_;
  taskinfo_ = taskinfo;
  if (taskinfo) {
    set_has_taskinfo();
  } else {
    clear_has_taskinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:comm.PkgTaskQueryReply.taskinfo)
}

// repeated .comm.PkgTaskInfo taskinfolist = 4;
inline int PkgTaskQueryReply::taskinfolist_size() const {
  return taskinfolist_.size();
}
inline void PkgTaskQueryReply::clear_taskinfolist() {
  taskinfolist_.Clear();
}
inline const ::comm::PkgTaskInfo& PkgTaskQueryReply::taskinfolist(int index) const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskQueryReply.taskinfolist)
  return taskinfolist_.Get(index);
}
inline ::comm::PkgTaskInfo* PkgTaskQueryReply::mutable_taskinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:comm.PkgTaskQueryReply.taskinfolist)
  return taskinfolist_.Mutable(index);
}
inline ::comm::PkgTaskInfo* PkgTaskQueryReply::add_taskinfolist() {
  // @@protoc_insertion_point(field_add:comm.PkgTaskQueryReply.taskinfolist)
  return taskinfolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::comm::PkgTaskInfo >&
PkgTaskQueryReply::taskinfolist() const {
  // @@protoc_insertion_point(field_list:comm.PkgTaskQueryReply.taskinfolist)
  return taskinfolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::comm::PkgTaskInfo >*
PkgTaskQueryReply::mutable_taskinfolist() {
  // @@protoc_insertion_point(field_mutable_list:comm.PkgTaskQueryReply.taskinfolist)
  return &taskinfolist_;
}

// repeated int32 accepteduseridlist = 5;
inline int PkgTaskQueryReply::accepteduseridlist_size() const {
  return accepteduseridlist_.size();
}
inline void PkgTaskQueryReply::clear_accepteduseridlist() {
  accepteduseridlist_.Clear();
}
inline ::google::protobuf::int32 PkgTaskQueryReply::accepteduseridlist(int index) const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskQueryReply.accepteduseridlist)
  return accepteduseridlist_.Get(index);
}
inline void PkgTaskQueryReply::set_accepteduseridlist(int index, ::google::protobuf::int32 value) {
  accepteduseridlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:comm.PkgTaskQueryReply.accepteduseridlist)
}
inline void PkgTaskQueryReply::add_accepteduseridlist(::google::protobuf::int32 value) {
  accepteduseridlist_.Add(value);
  // @@protoc_insertion_point(field_add:comm.PkgTaskQueryReply.accepteduseridlist)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PkgTaskQueryReply::accepteduseridlist() const {
  // @@protoc_insertion_point(field_list:comm.PkgTaskQueryReply.accepteduseridlist)
  return accepteduseridlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PkgTaskQueryReply::mutable_accepteduseridlist() {
  // @@protoc_insertion_point(field_mutable_list:comm.PkgTaskQueryReply.accepteduseridlist)
  return &accepteduseridlist_;
}

// -------------------------------------------------------------------

// PkgTaskSortFlag

// required int32 taskid = 1;
inline bool PkgTaskSortFlag::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgTaskSortFlag::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgTaskSortFlag::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgTaskSortFlag::clear_taskid() {
  taskid_ = 0;
  clear_has_taskid();
}
inline ::google::protobuf::int32 PkgTaskSortFlag::taskid() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskSortFlag.taskid)
  return taskid_;
}
inline void PkgTaskSortFlag::set_taskid(::google::protobuf::int32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgTaskSortFlag.taskid)
}

// required int32 sortflag = 2;
inline bool PkgTaskSortFlag::has_sortflag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgTaskSortFlag::set_has_sortflag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgTaskSortFlag::clear_has_sortflag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgTaskSortFlag::clear_sortflag() {
  sortflag_ = 0;
  clear_has_sortflag();
}
inline ::google::protobuf::int32 PkgTaskSortFlag::sortflag() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskSortFlag.sortflag)
  return sortflag_;
}
inline void PkgTaskSortFlag::set_sortflag(::google::protobuf::int32 value) {
  set_has_sortflag();
  sortflag_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgTaskSortFlag.sortflag)
}

// -------------------------------------------------------------------

// PkgTaskSetSortFlagReq

// repeated .comm.PkgTaskSortFlag tasksortflaglist = 1;
inline int PkgTaskSetSortFlagReq::tasksortflaglist_size() const {
  return tasksortflaglist_.size();
}
inline void PkgTaskSetSortFlagReq::clear_tasksortflaglist() {
  tasksortflaglist_.Clear();
}
inline const ::comm::PkgTaskSortFlag& PkgTaskSetSortFlagReq::tasksortflaglist(int index) const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskSetSortFlagReq.tasksortflaglist)
  return tasksortflaglist_.Get(index);
}
inline ::comm::PkgTaskSortFlag* PkgTaskSetSortFlagReq::mutable_tasksortflaglist(int index) {
  // @@protoc_insertion_point(field_mutable:comm.PkgTaskSetSortFlagReq.tasksortflaglist)
  return tasksortflaglist_.Mutable(index);
}
inline ::comm::PkgTaskSortFlag* PkgTaskSetSortFlagReq::add_tasksortflaglist() {
  // @@protoc_insertion_point(field_add:comm.PkgTaskSetSortFlagReq.tasksortflaglist)
  return tasksortflaglist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::comm::PkgTaskSortFlag >&
PkgTaskSetSortFlagReq::tasksortflaglist() const {
  // @@protoc_insertion_point(field_list:comm.PkgTaskSetSortFlagReq.tasksortflaglist)
  return tasksortflaglist_;
}
inline ::google::protobuf::RepeatedPtrField< ::comm::PkgTaskSortFlag >*
PkgTaskSetSortFlagReq::mutable_tasksortflaglist() {
  // @@protoc_insertion_point(field_mutable_list:comm.PkgTaskSetSortFlagReq.tasksortflaglist)
  return &tasksortflaglist_;
}

// -------------------------------------------------------------------

// PkgTaskSetSortFlagReply

// required bool issuccess = 1;
inline bool PkgTaskSetSortFlagReply::has_issuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgTaskSetSortFlagReply::set_has_issuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgTaskSetSortFlagReply::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgTaskSetSortFlagReply::clear_issuccess() {
  issuccess_ = false;
  clear_has_issuccess();
}
inline bool PkgTaskSetSortFlagReply::issuccess() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskSetSortFlagReply.issuccess)
  return issuccess_;
}
inline void PkgTaskSetSortFlagReply::set_issuccess(bool value) {
  set_has_issuccess();
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgTaskSetSortFlagReply.issuccess)
}

// optional string err = 2;
inline bool PkgTaskSetSortFlagReply::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgTaskSetSortFlagReply::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgTaskSetSortFlagReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgTaskSetSortFlagReply::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
inline const ::std::string& PkgTaskSetSortFlagReply::err() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskSetSortFlagReply.err)
  return err_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskSetSortFlagReply::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgTaskSetSortFlagReply.err)
}
inline void PkgTaskSetSortFlagReply::set_err(const char* value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgTaskSetSortFlagReply.err)
}
inline void PkgTaskSetSortFlagReply::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgTaskSetSortFlagReply.err)
}
inline ::std::string* PkgTaskSetSortFlagReply::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:comm.PkgTaskSetSortFlagReply.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgTaskSetSortFlagReply::release_err() {
  clear_has_err();
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskSetSortFlagReply::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgTaskSetSortFlagReply.err)
}

// -------------------------------------------------------------------

// PkgTaskOperationReq

// required int32 taskoperation = 1;
inline bool PkgTaskOperationReq::has_taskoperation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgTaskOperationReq::set_has_taskoperation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgTaskOperationReq::clear_has_taskoperation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgTaskOperationReq::clear_taskoperation() {
  taskoperation_ = 0;
  clear_has_taskoperation();
}
inline ::google::protobuf::int32 PkgTaskOperationReq::taskoperation() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskOperationReq.taskoperation)
  return taskoperation_;
}
inline void PkgTaskOperationReq::set_taskoperation(::google::protobuf::int32 value) {
  set_has_taskoperation();
  taskoperation_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgTaskOperationReq.taskoperation)
}

// optional .comm.PkgTaskInfo taskinfo = 3;
inline bool PkgTaskOperationReq::has_taskinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgTaskOperationReq::set_has_taskinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgTaskOperationReq::clear_has_taskinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgTaskOperationReq::clear_taskinfo() {
  if (taskinfo_ != NULL) taskinfo_->::comm::PkgTaskInfo::Clear();
  clear_has_taskinfo();
}
inline const ::comm::PkgTaskInfo& PkgTaskOperationReq::taskinfo() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskOperationReq.taskinfo)
  return taskinfo_ != NULL ? *taskinfo_ : *default_instance_->taskinfo_;
}
inline ::comm::PkgTaskInfo* PkgTaskOperationReq::mutable_taskinfo() {
  set_has_taskinfo();
  if (taskinfo_ == NULL) {
    taskinfo_ = new ::comm::PkgTaskInfo;
  }
  // @@protoc_insertion_point(field_mutable:comm.PkgTaskOperationReq.taskinfo)
  return taskinfo_;
}
inline ::comm::PkgTaskInfo* PkgTaskOperationReq::release_taskinfo() {
  clear_has_taskinfo();
  ::comm::PkgTaskInfo* temp = taskinfo_;
  taskinfo_ = NULL;
  return temp;
}
inline void PkgTaskOperationReq::set_allocated_taskinfo(::comm::PkgTaskInfo* taskinfo) {
  delete taskinfo_;
  taskinfo_ = taskinfo;
  if (taskinfo) {
    set_has_taskinfo();
  } else {
    clear_has_taskinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:comm.PkgTaskOperationReq.taskinfo)
}

// repeated .comm.PkgTaskInfo taskinfolist = 4;
inline int PkgTaskOperationReq::taskinfolist_size() const {
  return taskinfolist_.size();
}
inline void PkgTaskOperationReq::clear_taskinfolist() {
  taskinfolist_.Clear();
}
inline const ::comm::PkgTaskInfo& PkgTaskOperationReq::taskinfolist(int index) const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskOperationReq.taskinfolist)
  return taskinfolist_.Get(index);
}
inline ::comm::PkgTaskInfo* PkgTaskOperationReq::mutable_taskinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:comm.PkgTaskOperationReq.taskinfolist)
  return taskinfolist_.Mutable(index);
}
inline ::comm::PkgTaskInfo* PkgTaskOperationReq::add_taskinfolist() {
  // @@protoc_insertion_point(field_add:comm.PkgTaskOperationReq.taskinfolist)
  return taskinfolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::comm::PkgTaskInfo >&
PkgTaskOperationReq::taskinfolist() const {
  // @@protoc_insertion_point(field_list:comm.PkgTaskOperationReq.taskinfolist)
  return taskinfolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::comm::PkgTaskInfo >*
PkgTaskOperationReq::mutable_taskinfolist() {
  // @@protoc_insertion_point(field_mutable_list:comm.PkgTaskOperationReq.taskinfolist)
  return &taskinfolist_;
}

// repeated int32 accepteduseridlist = 5;
inline int PkgTaskOperationReq::accepteduseridlist_size() const {
  return accepteduseridlist_.size();
}
inline void PkgTaskOperationReq::clear_accepteduseridlist() {
  accepteduseridlist_.Clear();
}
inline ::google::protobuf::int32 PkgTaskOperationReq::accepteduseridlist(int index) const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskOperationReq.accepteduseridlist)
  return accepteduseridlist_.Get(index);
}
inline void PkgTaskOperationReq::set_accepteduseridlist(int index, ::google::protobuf::int32 value) {
  accepteduseridlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:comm.PkgTaskOperationReq.accepteduseridlist)
}
inline void PkgTaskOperationReq::add_accepteduseridlist(::google::protobuf::int32 value) {
  accepteduseridlist_.Add(value);
  // @@protoc_insertion_point(field_add:comm.PkgTaskOperationReq.accepteduseridlist)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PkgTaskOperationReq::accepteduseridlist() const {
  // @@protoc_insertion_point(field_list:comm.PkgTaskOperationReq.accepteduseridlist)
  return accepteduseridlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PkgTaskOperationReq::mutable_accepteduseridlist() {
  // @@protoc_insertion_point(field_mutable_list:comm.PkgTaskOperationReq.accepteduseridlist)
  return &accepteduseridlist_;
}

// optional int32 taskid = 10;
inline bool PkgTaskOperationReq::has_taskid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PkgTaskOperationReq::set_has_taskid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PkgTaskOperationReq::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PkgTaskOperationReq::clear_taskid() {
  taskid_ = 0;
  clear_has_taskid();
}
inline ::google::protobuf::int32 PkgTaskOperationReq::taskid() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskOperationReq.taskid)
  return taskid_;
}
inline void PkgTaskOperationReq::set_taskid(::google::protobuf::int32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgTaskOperationReq.taskid)
}

// optional string reason = 11;
inline bool PkgTaskOperationReq::has_reason() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PkgTaskOperationReq::set_has_reason() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PkgTaskOperationReq::clear_has_reason() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PkgTaskOperationReq::clear_reason() {
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reason();
}
inline const ::std::string& PkgTaskOperationReq::reason() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskOperationReq.reason)
  return reason_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskOperationReq::set_reason(const ::std::string& value) {
  set_has_reason();
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgTaskOperationReq.reason)
}
inline void PkgTaskOperationReq::set_reason(const char* value) {
  set_has_reason();
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgTaskOperationReq.reason)
}
inline void PkgTaskOperationReq::set_reason(const char* value, size_t size) {
  set_has_reason();
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgTaskOperationReq.reason)
}
inline ::std::string* PkgTaskOperationReq::mutable_reason() {
  set_has_reason();
  // @@protoc_insertion_point(field_mutable:comm.PkgTaskOperationReq.reason)
  return reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgTaskOperationReq::release_reason() {
  clear_has_reason();
  return reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskOperationReq::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    set_has_reason();
  } else {
    clear_has_reason();
  }
  reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgTaskOperationReq.reason)
}

// optional int32 updatestatus = 12;
inline bool PkgTaskOperationReq::has_updatestatus() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PkgTaskOperationReq::set_has_updatestatus() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PkgTaskOperationReq::clear_has_updatestatus() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PkgTaskOperationReq::clear_updatestatus() {
  updatestatus_ = 0;
  clear_has_updatestatus();
}
inline ::google::protobuf::int32 PkgTaskOperationReq::updatestatus() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskOperationReq.updatestatus)
  return updatestatus_;
}
inline void PkgTaskOperationReq::set_updatestatus(::google::protobuf::int32 value) {
  set_has_updatestatus();
  updatestatus_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgTaskOperationReq.updatestatus)
}

// optional int32 updatereaded = 13;
inline bool PkgTaskOperationReq::has_updatereaded() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PkgTaskOperationReq::set_has_updatereaded() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PkgTaskOperationReq::clear_has_updatereaded() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PkgTaskOperationReq::clear_updatereaded() {
  updatereaded_ = 0;
  clear_has_updatereaded();
}
inline ::google::protobuf::int32 PkgTaskOperationReq::updatereaded() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskOperationReq.updatereaded)
  return updatereaded_;
}
inline void PkgTaskOperationReq::set_updatereaded(::google::protobuf::int32 value) {
  set_has_updatereaded();
  updatereaded_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgTaskOperationReq.updatereaded)
}

// -------------------------------------------------------------------

// PkgTaskOperationReply

// required bool issuccess = 1;
inline bool PkgTaskOperationReply::has_issuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgTaskOperationReply::set_has_issuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgTaskOperationReply::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgTaskOperationReply::clear_issuccess() {
  issuccess_ = false;
  clear_has_issuccess();
}
inline bool PkgTaskOperationReply::issuccess() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskOperationReply.issuccess)
  return issuccess_;
}
inline void PkgTaskOperationReply::set_issuccess(bool value) {
  set_has_issuccess();
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgTaskOperationReply.issuccess)
}

// optional string err = 2;
inline bool PkgTaskOperationReply::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgTaskOperationReply::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgTaskOperationReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgTaskOperationReply::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
inline const ::std::string& PkgTaskOperationReply::err() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskOperationReply.err)
  return err_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskOperationReply::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgTaskOperationReply.err)
}
inline void PkgTaskOperationReply::set_err(const char* value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgTaskOperationReply.err)
}
inline void PkgTaskOperationReply::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgTaskOperationReply.err)
}
inline ::std::string* PkgTaskOperationReply::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:comm.PkgTaskOperationReply.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgTaskOperationReply::release_err() {
  clear_has_err();
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgTaskOperationReply::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgTaskOperationReply.err)
}

// optional int32 taskid = 5;
inline bool PkgTaskOperationReply::has_taskid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgTaskOperationReply::set_has_taskid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgTaskOperationReply::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgTaskOperationReply::clear_taskid() {
  taskid_ = 0;
  clear_has_taskid();
}
inline ::google::protobuf::int32 PkgTaskOperationReply::taskid() const {
  // @@protoc_insertion_point(field_get:comm.PkgTaskOperationReply.taskid)
  return taskid_;
}
inline void PkgTaskOperationReply::set_taskid(::google::protobuf::int32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgTaskOperationReply.taskid)
}

// -------------------------------------------------------------------

// PkgCompanyGroup

// required int32 groupid = 1;
inline bool PkgCompanyGroup::has_groupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgCompanyGroup::set_has_groupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgCompanyGroup::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgCompanyGroup::clear_groupid() {
  groupid_ = 0;
  clear_has_groupid();
}
inline ::google::protobuf::int32 PkgCompanyGroup::groupid() const {
  // @@protoc_insertion_point(field_get:comm.PkgCompanyGroup.groupid)
  return groupid_;
}
inline void PkgCompanyGroup::set_groupid(::google::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgCompanyGroup.groupid)
}

// required int32 companyid = 2;
inline bool PkgCompanyGroup::has_companyid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgCompanyGroup::set_has_companyid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgCompanyGroup::clear_has_companyid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgCompanyGroup::clear_companyid() {
  companyid_ = 0;
  clear_has_companyid();
}
inline ::google::protobuf::int32 PkgCompanyGroup::companyid() const {
  // @@protoc_insertion_point(field_get:comm.PkgCompanyGroup.companyid)
  return companyid_;
}
inline void PkgCompanyGroup::set_companyid(::google::protobuf::int32 value) {
  set_has_companyid();
  companyid_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgCompanyGroup.companyid)
}

// required string groupname = 3;
inline bool PkgCompanyGroup::has_groupname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgCompanyGroup::set_has_groupname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgCompanyGroup::clear_has_groupname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgCompanyGroup::clear_groupname() {
  groupname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupname();
}
inline const ::std::string& PkgCompanyGroup::groupname() const {
  // @@protoc_insertion_point(field_get:comm.PkgCompanyGroup.groupname)
  return groupname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgCompanyGroup::set_groupname(const ::std::string& value) {
  set_has_groupname();
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgCompanyGroup.groupname)
}
inline void PkgCompanyGroup::set_groupname(const char* value) {
  set_has_groupname();
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgCompanyGroup.groupname)
}
inline void PkgCompanyGroup::set_groupname(const char* value, size_t size) {
  set_has_groupname();
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgCompanyGroup.groupname)
}
inline ::std::string* PkgCompanyGroup::mutable_groupname() {
  set_has_groupname();
  // @@protoc_insertion_point(field_mutable:comm.PkgCompanyGroup.groupname)
  return groupname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgCompanyGroup::release_groupname() {
  clear_has_groupname();
  return groupname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgCompanyGroup::set_allocated_groupname(::std::string* groupname) {
  if (groupname != NULL) {
    set_has_groupname();
  } else {
    clear_has_groupname();
  }
  groupname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), groupname);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgCompanyGroup.groupname)
}

// -------------------------------------------------------------------

// PkgGroupUser

// required int32 groupid = 1;
inline bool PkgGroupUser::has_groupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgGroupUser::set_has_groupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgGroupUser::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgGroupUser::clear_groupid() {
  groupid_ = 0;
  clear_has_groupid();
}
inline ::google::protobuf::int32 PkgGroupUser::groupid() const {
  // @@protoc_insertion_point(field_get:comm.PkgGroupUser.groupid)
  return groupid_;
}
inline void PkgGroupUser::set_groupid(::google::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgGroupUser.groupid)
}

// required int32 userid = 2;
inline bool PkgGroupUser::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgGroupUser::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgGroupUser::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgGroupUser::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 PkgGroupUser::userid() const {
  // @@protoc_insertion_point(field_get:comm.PkgGroupUser.userid)
  return userid_;
}
inline void PkgGroupUser::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgGroupUser.userid)
}

// optional string realname = 3;
inline bool PkgGroupUser::has_realname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgGroupUser::set_has_realname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgGroupUser::clear_has_realname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgGroupUser::clear_realname() {
  realname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_realname();
}
inline const ::std::string& PkgGroupUser::realname() const {
  // @@protoc_insertion_point(field_get:comm.PkgGroupUser.realname)
  return realname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgGroupUser::set_realname(const ::std::string& value) {
  set_has_realname();
  realname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgGroupUser.realname)
}
inline void PkgGroupUser::set_realname(const char* value) {
  set_has_realname();
  realname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgGroupUser.realname)
}
inline void PkgGroupUser::set_realname(const char* value, size_t size) {
  set_has_realname();
  realname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgGroupUser.realname)
}
inline ::std::string* PkgGroupUser::mutable_realname() {
  set_has_realname();
  // @@protoc_insertion_point(field_mutable:comm.PkgGroupUser.realname)
  return realname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgGroupUser::release_realname() {
  clear_has_realname();
  return realname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgGroupUser::set_allocated_realname(::std::string* realname) {
  if (realname != NULL) {
    set_has_realname();
  } else {
    clear_has_realname();
  }
  realname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), realname);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgGroupUser.realname)
}

// optional string phonenumber = 12;
inline bool PkgGroupUser::has_phonenumber() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PkgGroupUser::set_has_phonenumber() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PkgGroupUser::clear_has_phonenumber() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PkgGroupUser::clear_phonenumber() {
  phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phonenumber();
}
inline const ::std::string& PkgGroupUser::phonenumber() const {
  // @@protoc_insertion_point(field_get:comm.PkgGroupUser.phonenumber)
  return phonenumber_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgGroupUser::set_phonenumber(const ::std::string& value) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgGroupUser.phonenumber)
}
inline void PkgGroupUser::set_phonenumber(const char* value) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgGroupUser.phonenumber)
}
inline void PkgGroupUser::set_phonenumber(const char* value, size_t size) {
  set_has_phonenumber();
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgGroupUser.phonenumber)
}
inline ::std::string* PkgGroupUser::mutable_phonenumber() {
  set_has_phonenumber();
  // @@protoc_insertion_point(field_mutable:comm.PkgGroupUser.phonenumber)
  return phonenumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgGroupUser::release_phonenumber() {
  clear_has_phonenumber();
  return phonenumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgGroupUser::set_allocated_phonenumber(::std::string* phonenumber) {
  if (phonenumber != NULL) {
    set_has_phonenumber();
  } else {
    clear_has_phonenumber();
  }
  phonenumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phonenumber);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgGroupUser.phonenumber)
}

// optional string emailaddress = 13;
inline bool PkgGroupUser::has_emailaddress() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PkgGroupUser::set_has_emailaddress() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PkgGroupUser::clear_has_emailaddress() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PkgGroupUser::clear_emailaddress() {
  emailaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_emailaddress();
}
inline const ::std::string& PkgGroupUser::emailaddress() const {
  // @@protoc_insertion_point(field_get:comm.PkgGroupUser.emailaddress)
  return emailaddress_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgGroupUser::set_emailaddress(const ::std::string& value) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgGroupUser.emailaddress)
}
inline void PkgGroupUser::set_emailaddress(const char* value) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgGroupUser.emailaddress)
}
inline void PkgGroupUser::set_emailaddress(const char* value, size_t size) {
  set_has_emailaddress();
  emailaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgGroupUser.emailaddress)
}
inline ::std::string* PkgGroupUser::mutable_emailaddress() {
  set_has_emailaddress();
  // @@protoc_insertion_point(field_mutable:comm.PkgGroupUser.emailaddress)
  return emailaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgGroupUser::release_emailaddress() {
  clear_has_emailaddress();
  return emailaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgGroupUser::set_allocated_emailaddress(::std::string* emailaddress) {
  if (emailaddress != NULL) {
    set_has_emailaddress();
  } else {
    clear_has_emailaddress();
  }
  emailaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), emailaddress);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgGroupUser.emailaddress)
}

// optional int32 permission = 15;
inline bool PkgGroupUser::has_permission() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PkgGroupUser::set_has_permission() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PkgGroupUser::clear_has_permission() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PkgGroupUser::clear_permission() {
  permission_ = 0;
  clear_has_permission();
}
inline ::google::protobuf::int32 PkgGroupUser::permission() const {
  // @@protoc_insertion_point(field_get:comm.PkgGroupUser.permission)
  return permission_;
}
inline void PkgGroupUser::set_permission(::google::protobuf::int32 value) {
  set_has_permission();
  permission_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgGroupUser.permission)
}

// optional string createtime = 19;
inline bool PkgGroupUser::has_createtime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PkgGroupUser::set_has_createtime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PkgGroupUser::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PkgGroupUser::clear_createtime() {
  createtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_createtime();
}
inline const ::std::string& PkgGroupUser::createtime() const {
  // @@protoc_insertion_point(field_get:comm.PkgGroupUser.createtime)
  return createtime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgGroupUser::set_createtime(const ::std::string& value) {
  set_has_createtime();
  createtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgGroupUser.createtime)
}
inline void PkgGroupUser::set_createtime(const char* value) {
  set_has_createtime();
  createtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgGroupUser.createtime)
}
inline void PkgGroupUser::set_createtime(const char* value, size_t size) {
  set_has_createtime();
  createtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgGroupUser.createtime)
}
inline ::std::string* PkgGroupUser::mutable_createtime() {
  set_has_createtime();
  // @@protoc_insertion_point(field_mutable:comm.PkgGroupUser.createtime)
  return createtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgGroupUser::release_createtime() {
  clear_has_createtime();
  return createtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgGroupUser::set_allocated_createtime(::std::string* createtime) {
  if (createtime != NULL) {
    set_has_createtime();
  } else {
    clear_has_createtime();
  }
  createtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), createtime);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgGroupUser.createtime)
}

// optional string rolename = 20;
inline bool PkgGroupUser::has_rolename() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PkgGroupUser::set_has_rolename() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PkgGroupUser::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PkgGroupUser::clear_rolename() {
  rolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rolename();
}
inline const ::std::string& PkgGroupUser::rolename() const {
  // @@protoc_insertion_point(field_get:comm.PkgGroupUser.rolename)
  return rolename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgGroupUser::set_rolename(const ::std::string& value) {
  set_has_rolename();
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgGroupUser.rolename)
}
inline void PkgGroupUser::set_rolename(const char* value) {
  set_has_rolename();
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgGroupUser.rolename)
}
inline void PkgGroupUser::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgGroupUser.rolename)
}
inline ::std::string* PkgGroupUser::mutable_rolename() {
  set_has_rolename();
  // @@protoc_insertion_point(field_mutable:comm.PkgGroupUser.rolename)
  return rolename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgGroupUser::release_rolename() {
  clear_has_rolename();
  return rolename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgGroupUser::set_allocated_rolename(::std::string* rolename) {
  if (rolename != NULL) {
    set_has_rolename();
  } else {
    clear_has_rolename();
  }
  rolename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rolename);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgGroupUser.rolename)
}

// optional int32 permissionroleid = 22;
inline bool PkgGroupUser::has_permissionroleid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PkgGroupUser::set_has_permissionroleid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PkgGroupUser::clear_has_permissionroleid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PkgGroupUser::clear_permissionroleid() {
  permissionroleid_ = 0;
  clear_has_permissionroleid();
}
inline ::google::protobuf::int32 PkgGroupUser::permissionroleid() const {
  // @@protoc_insertion_point(field_get:comm.PkgGroupUser.permissionroleid)
  return permissionroleid_;
}
inline void PkgGroupUser::set_permissionroleid(::google::protobuf::int32 value) {
  set_has_permissionroleid();
  permissionroleid_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgGroupUser.permissionroleid)
}

// -------------------------------------------------------------------

// PkgCompanyGroupQueryReq

// required .comm.PkgCompanyGroupQueryReq.EnQueryType querytype = 1 [default = QT_ALL];
inline bool PkgCompanyGroupQueryReq::has_querytype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgCompanyGroupQueryReq::set_has_querytype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgCompanyGroupQueryReq::clear_has_querytype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgCompanyGroupQueryReq::clear_querytype() {
  querytype_ = 0;
  clear_has_querytype();
}
inline ::comm::PkgCompanyGroupQueryReq_EnQueryType PkgCompanyGroupQueryReq::querytype() const {
  // @@protoc_insertion_point(field_get:comm.PkgCompanyGroupQueryReq.querytype)
  return static_cast< ::comm::PkgCompanyGroupQueryReq_EnQueryType >(querytype_);
}
inline void PkgCompanyGroupQueryReq::set_querytype(::comm::PkgCompanyGroupQueryReq_EnQueryType value) {
  assert(::comm::PkgCompanyGroupQueryReq_EnQueryType_IsValid(value));
  set_has_querytype();
  querytype_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgCompanyGroupQueryReq.querytype)
}

// -------------------------------------------------------------------

// PkgCompanyGroupQueryReply

// required bool issuccess = 1;
inline bool PkgCompanyGroupQueryReply::has_issuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgCompanyGroupQueryReply::set_has_issuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgCompanyGroupQueryReply::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgCompanyGroupQueryReply::clear_issuccess() {
  issuccess_ = false;
  clear_has_issuccess();
}
inline bool PkgCompanyGroupQueryReply::issuccess() const {
  // @@protoc_insertion_point(field_get:comm.PkgCompanyGroupQueryReply.issuccess)
  return issuccess_;
}
inline void PkgCompanyGroupQueryReply::set_issuccess(bool value) {
  set_has_issuccess();
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgCompanyGroupQueryReply.issuccess)
}

// optional string err = 2;
inline bool PkgCompanyGroupQueryReply::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgCompanyGroupQueryReply::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgCompanyGroupQueryReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgCompanyGroupQueryReply::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
inline const ::std::string& PkgCompanyGroupQueryReply::err() const {
  // @@protoc_insertion_point(field_get:comm.PkgCompanyGroupQueryReply.err)
  return err_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgCompanyGroupQueryReply::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgCompanyGroupQueryReply.err)
}
inline void PkgCompanyGroupQueryReply::set_err(const char* value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgCompanyGroupQueryReply.err)
}
inline void PkgCompanyGroupQueryReply::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgCompanyGroupQueryReply.err)
}
inline ::std::string* PkgCompanyGroupQueryReply::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:comm.PkgCompanyGroupQueryReply.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgCompanyGroupQueryReply::release_err() {
  clear_has_err();
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgCompanyGroupQueryReply::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgCompanyGroupQueryReply.err)
}

// repeated .comm.PkgCompanyGroup companygrouplist = 4;
inline int PkgCompanyGroupQueryReply::companygrouplist_size() const {
  return companygrouplist_.size();
}
inline void PkgCompanyGroupQueryReply::clear_companygrouplist() {
  companygrouplist_.Clear();
}
inline const ::comm::PkgCompanyGroup& PkgCompanyGroupQueryReply::companygrouplist(int index) const {
  // @@protoc_insertion_point(field_get:comm.PkgCompanyGroupQueryReply.companygrouplist)
  return companygrouplist_.Get(index);
}
inline ::comm::PkgCompanyGroup* PkgCompanyGroupQueryReply::mutable_companygrouplist(int index) {
  // @@protoc_insertion_point(field_mutable:comm.PkgCompanyGroupQueryReply.companygrouplist)
  return companygrouplist_.Mutable(index);
}
inline ::comm::PkgCompanyGroup* PkgCompanyGroupQueryReply::add_companygrouplist() {
  // @@protoc_insertion_point(field_add:comm.PkgCompanyGroupQueryReply.companygrouplist)
  return companygrouplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::comm::PkgCompanyGroup >&
PkgCompanyGroupQueryReply::companygrouplist() const {
  // @@protoc_insertion_point(field_list:comm.PkgCompanyGroupQueryReply.companygrouplist)
  return companygrouplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::comm::PkgCompanyGroup >*
PkgCompanyGroupQueryReply::mutable_companygrouplist() {
  // @@protoc_insertion_point(field_mutable_list:comm.PkgCompanyGroupQueryReply.companygrouplist)
  return &companygrouplist_;
}

// repeated .comm.PkgGroupUser groupuserlist = 5;
inline int PkgCompanyGroupQueryReply::groupuserlist_size() const {
  return groupuserlist_.size();
}
inline void PkgCompanyGroupQueryReply::clear_groupuserlist() {
  groupuserlist_.Clear();
}
inline const ::comm::PkgGroupUser& PkgCompanyGroupQueryReply::groupuserlist(int index) const {
  // @@protoc_insertion_point(field_get:comm.PkgCompanyGroupQueryReply.groupuserlist)
  return groupuserlist_.Get(index);
}
inline ::comm::PkgGroupUser* PkgCompanyGroupQueryReply::mutable_groupuserlist(int index) {
  // @@protoc_insertion_point(field_mutable:comm.PkgCompanyGroupQueryReply.groupuserlist)
  return groupuserlist_.Mutable(index);
}
inline ::comm::PkgGroupUser* PkgCompanyGroupQueryReply::add_groupuserlist() {
  // @@protoc_insertion_point(field_add:comm.PkgCompanyGroupQueryReply.groupuserlist)
  return groupuserlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::comm::PkgGroupUser >&
PkgCompanyGroupQueryReply::groupuserlist() const {
  // @@protoc_insertion_point(field_list:comm.PkgCompanyGroupQueryReply.groupuserlist)
  return groupuserlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::comm::PkgGroupUser >*
PkgCompanyGroupQueryReply::mutable_groupuserlist() {
  // @@protoc_insertion_point(field_mutable_list:comm.PkgCompanyGroupQueryReply.groupuserlist)
  return &groupuserlist_;
}

// -------------------------------------------------------------------

// PkgAdvInfo

// optional int32 id = 1 [default = 0];
inline bool PkgAdvInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgAdvInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgAdvInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgAdvInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 PkgAdvInfo::id() const {
  // @@protoc_insertion_point(field_get:comm.PkgAdvInfo.id)
  return id_;
}
inline void PkgAdvInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgAdvInfo.id)
}

// optional string name = 2;
inline bool PkgAdvInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgAdvInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgAdvInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgAdvInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& PkgAdvInfo::name() const {
  // @@protoc_insertion_point(field_get:comm.PkgAdvInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgAdvInfo.name)
}
inline void PkgAdvInfo::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgAdvInfo.name)
}
inline void PkgAdvInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgAdvInfo.name)
}
inline ::std::string* PkgAdvInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:comm.PkgAdvInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgAdvInfo::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgAdvInfo.name)
}

// optional string urlpic = 3;
inline bool PkgAdvInfo::has_urlpic() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgAdvInfo::set_has_urlpic() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgAdvInfo::clear_has_urlpic() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgAdvInfo::clear_urlpic() {
  urlpic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_urlpic();
}
inline const ::std::string& PkgAdvInfo::urlpic() const {
  // @@protoc_insertion_point(field_get:comm.PkgAdvInfo.urlpic)
  return urlpic_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvInfo::set_urlpic(const ::std::string& value) {
  set_has_urlpic();
  urlpic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgAdvInfo.urlpic)
}
inline void PkgAdvInfo::set_urlpic(const char* value) {
  set_has_urlpic();
  urlpic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgAdvInfo.urlpic)
}
inline void PkgAdvInfo::set_urlpic(const char* value, size_t size) {
  set_has_urlpic();
  urlpic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgAdvInfo.urlpic)
}
inline ::std::string* PkgAdvInfo::mutable_urlpic() {
  set_has_urlpic();
  // @@protoc_insertion_point(field_mutable:comm.PkgAdvInfo.urlpic)
  return urlpic_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgAdvInfo::release_urlpic() {
  clear_has_urlpic();
  return urlpic_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvInfo::set_allocated_urlpic(::std::string* urlpic) {
  if (urlpic != NULL) {
    set_has_urlpic();
  } else {
    clear_has_urlpic();
  }
  urlpic_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), urlpic);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgAdvInfo.urlpic)
}

// optional string advtxt = 4;
inline bool PkgAdvInfo::has_advtxt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PkgAdvInfo::set_has_advtxt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PkgAdvInfo::clear_has_advtxt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PkgAdvInfo::clear_advtxt() {
  advtxt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_advtxt();
}
inline const ::std::string& PkgAdvInfo::advtxt() const {
  // @@protoc_insertion_point(field_get:comm.PkgAdvInfo.advtxt)
  return advtxt_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvInfo::set_advtxt(const ::std::string& value) {
  set_has_advtxt();
  advtxt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgAdvInfo.advtxt)
}
inline void PkgAdvInfo::set_advtxt(const char* value) {
  set_has_advtxt();
  advtxt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgAdvInfo.advtxt)
}
inline void PkgAdvInfo::set_advtxt(const char* value, size_t size) {
  set_has_advtxt();
  advtxt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgAdvInfo.advtxt)
}
inline ::std::string* PkgAdvInfo::mutable_advtxt() {
  set_has_advtxt();
  // @@protoc_insertion_point(field_mutable:comm.PkgAdvInfo.advtxt)
  return advtxt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgAdvInfo::release_advtxt() {
  clear_has_advtxt();
  return advtxt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvInfo::set_allocated_advtxt(::std::string* advtxt) {
  if (advtxt != NULL) {
    set_has_advtxt();
  } else {
    clear_has_advtxt();
  }
  advtxt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), advtxt);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgAdvInfo.advtxt)
}

// optional string advdesc = 5;
inline bool PkgAdvInfo::has_advdesc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PkgAdvInfo::set_has_advdesc() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PkgAdvInfo::clear_has_advdesc() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PkgAdvInfo::clear_advdesc() {
  advdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_advdesc();
}
inline const ::std::string& PkgAdvInfo::advdesc() const {
  // @@protoc_insertion_point(field_get:comm.PkgAdvInfo.advdesc)
  return advdesc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvInfo::set_advdesc(const ::std::string& value) {
  set_has_advdesc();
  advdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgAdvInfo.advdesc)
}
inline void PkgAdvInfo::set_advdesc(const char* value) {
  set_has_advdesc();
  advdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgAdvInfo.advdesc)
}
inline void PkgAdvInfo::set_advdesc(const char* value, size_t size) {
  set_has_advdesc();
  advdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgAdvInfo.advdesc)
}
inline ::std::string* PkgAdvInfo::mutable_advdesc() {
  set_has_advdesc();
  // @@protoc_insertion_point(field_mutable:comm.PkgAdvInfo.advdesc)
  return advdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgAdvInfo::release_advdesc() {
  clear_has_advdesc();
  return advdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvInfo::set_allocated_advdesc(::std::string* advdesc) {
  if (advdesc != NULL) {
    set_has_advdesc();
  } else {
    clear_has_advdesc();
  }
  advdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), advdesc);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgAdvInfo.advdesc)
}

// optional string createtime = 6;
inline bool PkgAdvInfo::has_createtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PkgAdvInfo::set_has_createtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PkgAdvInfo::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PkgAdvInfo::clear_createtime() {
  createtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_createtime();
}
inline const ::std::string& PkgAdvInfo::createtime() const {
  // @@protoc_insertion_point(field_get:comm.PkgAdvInfo.createtime)
  return createtime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvInfo::set_createtime(const ::std::string& value) {
  set_has_createtime();
  createtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgAdvInfo.createtime)
}
inline void PkgAdvInfo::set_createtime(const char* value) {
  set_has_createtime();
  createtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgAdvInfo.createtime)
}
inline void PkgAdvInfo::set_createtime(const char* value, size_t size) {
  set_has_createtime();
  createtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgAdvInfo.createtime)
}
inline ::std::string* PkgAdvInfo::mutable_createtime() {
  set_has_createtime();
  // @@protoc_insertion_point(field_mutable:comm.PkgAdvInfo.createtime)
  return createtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgAdvInfo::release_createtime() {
  clear_has_createtime();
  return createtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvInfo::set_allocated_createtime(::std::string* createtime) {
  if (createtime != NULL) {
    set_has_createtime();
  } else {
    clear_has_createtime();
  }
  createtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), createtime);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgAdvInfo.createtime)
}

// optional string expiretime = 7;
inline bool PkgAdvInfo::has_expiretime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PkgAdvInfo::set_has_expiretime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PkgAdvInfo::clear_has_expiretime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PkgAdvInfo::clear_expiretime() {
  expiretime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_expiretime();
}
inline const ::std::string& PkgAdvInfo::expiretime() const {
  // @@protoc_insertion_point(field_get:comm.PkgAdvInfo.expiretime)
  return expiretime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvInfo::set_expiretime(const ::std::string& value) {
  set_has_expiretime();
  expiretime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgAdvInfo.expiretime)
}
inline void PkgAdvInfo::set_expiretime(const char* value) {
  set_has_expiretime();
  expiretime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgAdvInfo.expiretime)
}
inline void PkgAdvInfo::set_expiretime(const char* value, size_t size) {
  set_has_expiretime();
  expiretime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgAdvInfo.expiretime)
}
inline ::std::string* PkgAdvInfo::mutable_expiretime() {
  set_has_expiretime();
  // @@protoc_insertion_point(field_mutable:comm.PkgAdvInfo.expiretime)
  return expiretime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgAdvInfo::release_expiretime() {
  clear_has_expiretime();
  return expiretime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvInfo::set_allocated_expiretime(::std::string* expiretime) {
  if (expiretime != NULL) {
    set_has_expiretime();
  } else {
    clear_has_expiretime();
  }
  expiretime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), expiretime);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgAdvInfo.expiretime)
}

// -------------------------------------------------------------------

// PkgAdvQueryReq

// required int32 queryflag = 1 [default = 1];
inline bool PkgAdvQueryReq::has_queryflag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgAdvQueryReq::set_has_queryflag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgAdvQueryReq::clear_has_queryflag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgAdvQueryReq::clear_queryflag() {
  queryflag_ = 1;
  clear_has_queryflag();
}
inline ::google::protobuf::int32 PkgAdvQueryReq::queryflag() const {
  // @@protoc_insertion_point(field_get:comm.PkgAdvQueryReq.queryflag)
  return queryflag_;
}
inline void PkgAdvQueryReq::set_queryflag(::google::protobuf::int32 value) {
  set_has_queryflag();
  queryflag_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgAdvQueryReq.queryflag)
}

// optional int32 numreq = 2;
inline bool PkgAdvQueryReq::has_numreq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgAdvQueryReq::set_has_numreq() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgAdvQueryReq::clear_has_numreq() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgAdvQueryReq::clear_numreq() {
  numreq_ = 0;
  clear_has_numreq();
}
inline ::google::protobuf::int32 PkgAdvQueryReq::numreq() const {
  // @@protoc_insertion_point(field_get:comm.PkgAdvQueryReq.numreq)
  return numreq_;
}
inline void PkgAdvQueryReq::set_numreq(::google::protobuf::int32 value) {
  set_has_numreq();
  numreq_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgAdvQueryReq.numreq)
}

// optional int32 advid = 3;
inline bool PkgAdvQueryReq::has_advid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgAdvQueryReq::set_has_advid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgAdvQueryReq::clear_has_advid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgAdvQueryReq::clear_advid() {
  advid_ = 0;
  clear_has_advid();
}
inline ::google::protobuf::int32 PkgAdvQueryReq::advid() const {
  // @@protoc_insertion_point(field_get:comm.PkgAdvQueryReq.advid)
  return advid_;
}
inline void PkgAdvQueryReq::set_advid(::google::protobuf::int32 value) {
  set_has_advid();
  advid_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgAdvQueryReq.advid)
}

// -------------------------------------------------------------------

// PkgAdvQueryReply

// required bool issuccess = 1;
inline bool PkgAdvQueryReply::has_issuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgAdvQueryReply::set_has_issuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgAdvQueryReply::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgAdvQueryReply::clear_issuccess() {
  issuccess_ = false;
  clear_has_issuccess();
}
inline bool PkgAdvQueryReply::issuccess() const {
  // @@protoc_insertion_point(field_get:comm.PkgAdvQueryReply.issuccess)
  return issuccess_;
}
inline void PkgAdvQueryReply::set_issuccess(bool value) {
  set_has_issuccess();
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgAdvQueryReply.issuccess)
}

// optional string err = 2;
inline bool PkgAdvQueryReply::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgAdvQueryReply::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgAdvQueryReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgAdvQueryReply::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
inline const ::std::string& PkgAdvQueryReply::err() const {
  // @@protoc_insertion_point(field_get:comm.PkgAdvQueryReply.err)
  return err_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvQueryReply::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgAdvQueryReply.err)
}
inline void PkgAdvQueryReply::set_err(const char* value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgAdvQueryReply.err)
}
inline void PkgAdvQueryReply::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgAdvQueryReply.err)
}
inline ::std::string* PkgAdvQueryReply::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:comm.PkgAdvQueryReply.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgAdvQueryReply::release_err() {
  clear_has_err();
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvQueryReply::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgAdvQueryReply.err)
}

// repeated .comm.PkgAdvInfo advinfolist = 3;
inline int PkgAdvQueryReply::advinfolist_size() const {
  return advinfolist_.size();
}
inline void PkgAdvQueryReply::clear_advinfolist() {
  advinfolist_.Clear();
}
inline const ::comm::PkgAdvInfo& PkgAdvQueryReply::advinfolist(int index) const {
  // @@protoc_insertion_point(field_get:comm.PkgAdvQueryReply.advinfolist)
  return advinfolist_.Get(index);
}
inline ::comm::PkgAdvInfo* PkgAdvQueryReply::mutable_advinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:comm.PkgAdvQueryReply.advinfolist)
  return advinfolist_.Mutable(index);
}
inline ::comm::PkgAdvInfo* PkgAdvQueryReply::add_advinfolist() {
  // @@protoc_insertion_point(field_add:comm.PkgAdvQueryReply.advinfolist)
  return advinfolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::comm::PkgAdvInfo >&
PkgAdvQueryReply::advinfolist() const {
  // @@protoc_insertion_point(field_list:comm.PkgAdvQueryReply.advinfolist)
  return advinfolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::comm::PkgAdvInfo >*
PkgAdvQueryReply::mutable_advinfolist() {
  // @@protoc_insertion_point(field_mutable_list:comm.PkgAdvQueryReply.advinfolist)
  return &advinfolist_;
}

// -------------------------------------------------------------------

// PkgQueryMyProfileReq

// optional string curversion = 1;
inline bool PkgQueryMyProfileReq::has_curversion() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgQueryMyProfileReq::set_has_curversion() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgQueryMyProfileReq::clear_has_curversion() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgQueryMyProfileReq::clear_curversion() {
  curversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_curversion();
}
inline const ::std::string& PkgQueryMyProfileReq::curversion() const {
  // @@protoc_insertion_point(field_get:comm.PkgQueryMyProfileReq.curversion)
  return curversion_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgQueryMyProfileReq::set_curversion(const ::std::string& value) {
  set_has_curversion();
  curversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgQueryMyProfileReq.curversion)
}
inline void PkgQueryMyProfileReq::set_curversion(const char* value) {
  set_has_curversion();
  curversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgQueryMyProfileReq.curversion)
}
inline void PkgQueryMyProfileReq::set_curversion(const char* value, size_t size) {
  set_has_curversion();
  curversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgQueryMyProfileReq.curversion)
}
inline ::std::string* PkgQueryMyProfileReq::mutable_curversion() {
  set_has_curversion();
  // @@protoc_insertion_point(field_mutable:comm.PkgQueryMyProfileReq.curversion)
  return curversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgQueryMyProfileReq::release_curversion() {
  clear_has_curversion();
  return curversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgQueryMyProfileReq::set_allocated_curversion(::std::string* curversion) {
  if (curversion != NULL) {
    set_has_curversion();
  } else {
    clear_has_curversion();
  }
  curversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), curversion);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgQueryMyProfileReq.curversion)
}

// optional string platmform = 2;
inline bool PkgQueryMyProfileReq::has_platmform() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgQueryMyProfileReq::set_has_platmform() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgQueryMyProfileReq::clear_has_platmform() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgQueryMyProfileReq::clear_platmform() {
  platmform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_platmform();
}
inline const ::std::string& PkgQueryMyProfileReq::platmform() const {
  // @@protoc_insertion_point(field_get:comm.PkgQueryMyProfileReq.platmform)
  return platmform_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgQueryMyProfileReq::set_platmform(const ::std::string& value) {
  set_has_platmform();
  platmform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgQueryMyProfileReq.platmform)
}
inline void PkgQueryMyProfileReq::set_platmform(const char* value) {
  set_has_platmform();
  platmform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgQueryMyProfileReq.platmform)
}
inline void PkgQueryMyProfileReq::set_platmform(const char* value, size_t size) {
  set_has_platmform();
  platmform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgQueryMyProfileReq.platmform)
}
inline ::std::string* PkgQueryMyProfileReq::mutable_platmform() {
  set_has_platmform();
  // @@protoc_insertion_point(field_mutable:comm.PkgQueryMyProfileReq.platmform)
  return platmform_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgQueryMyProfileReq::release_platmform() {
  clear_has_platmform();
  return platmform_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgQueryMyProfileReq::set_allocated_platmform(::std::string* platmform) {
  if (platmform != NULL) {
    set_has_platmform();
  } else {
    clear_has_platmform();
  }
  platmform_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platmform);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgQueryMyProfileReq.platmform)
}

// -------------------------------------------------------------------

// PkgQueryMyProfileReply

// optional string versionlastest = 51;
inline bool PkgQueryMyProfileReply::has_versionlastest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgQueryMyProfileReply::set_has_versionlastest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgQueryMyProfileReply::clear_has_versionlastest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgQueryMyProfileReply::clear_versionlastest() {
  versionlastest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_versionlastest();
}
inline const ::std::string& PkgQueryMyProfileReply::versionlastest() const {
  // @@protoc_insertion_point(field_get:comm.PkgQueryMyProfileReply.versionlastest)
  return versionlastest_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgQueryMyProfileReply::set_versionlastest(const ::std::string& value) {
  set_has_versionlastest();
  versionlastest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgQueryMyProfileReply.versionlastest)
}
inline void PkgQueryMyProfileReply::set_versionlastest(const char* value) {
  set_has_versionlastest();
  versionlastest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgQueryMyProfileReply.versionlastest)
}
inline void PkgQueryMyProfileReply::set_versionlastest(const char* value, size_t size) {
  set_has_versionlastest();
  versionlastest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgQueryMyProfileReply.versionlastest)
}
inline ::std::string* PkgQueryMyProfileReply::mutable_versionlastest() {
  set_has_versionlastest();
  // @@protoc_insertion_point(field_mutable:comm.PkgQueryMyProfileReply.versionlastest)
  return versionlastest_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgQueryMyProfileReply::release_versionlastest() {
  clear_has_versionlastest();
  return versionlastest_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgQueryMyProfileReply::set_allocated_versionlastest(::std::string* versionlastest) {
  if (versionlastest != NULL) {
    set_has_versionlastest();
  } else {
    clear_has_versionlastest();
  }
  versionlastest_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), versionlastest);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgQueryMyProfileReply.versionlastest)
}

// optional string versiondownloadurl = 52;
inline bool PkgQueryMyProfileReply::has_versiondownloadurl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgQueryMyProfileReply::set_has_versiondownloadurl() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgQueryMyProfileReply::clear_has_versiondownloadurl() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgQueryMyProfileReply::clear_versiondownloadurl() {
  versiondownloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_versiondownloadurl();
}
inline const ::std::string& PkgQueryMyProfileReply::versiondownloadurl() const {
  // @@protoc_insertion_point(field_get:comm.PkgQueryMyProfileReply.versiondownloadurl)
  return versiondownloadurl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgQueryMyProfileReply::set_versiondownloadurl(const ::std::string& value) {
  set_has_versiondownloadurl();
  versiondownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgQueryMyProfileReply.versiondownloadurl)
}
inline void PkgQueryMyProfileReply::set_versiondownloadurl(const char* value) {
  set_has_versiondownloadurl();
  versiondownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgQueryMyProfileReply.versiondownloadurl)
}
inline void PkgQueryMyProfileReply::set_versiondownloadurl(const char* value, size_t size) {
  set_has_versiondownloadurl();
  versiondownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgQueryMyProfileReply.versiondownloadurl)
}
inline ::std::string* PkgQueryMyProfileReply::mutable_versiondownloadurl() {
  set_has_versiondownloadurl();
  // @@protoc_insertion_point(field_mutable:comm.PkgQueryMyProfileReply.versiondownloadurl)
  return versiondownloadurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgQueryMyProfileReply::release_versiondownloadurl() {
  clear_has_versiondownloadurl();
  return versiondownloadurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgQueryMyProfileReply::set_allocated_versiondownloadurl(::std::string* versiondownloadurl) {
  if (versiondownloadurl != NULL) {
    set_has_versiondownloadurl();
  } else {
    clear_has_versiondownloadurl();
  }
  versiondownloadurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), versiondownloadurl);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgQueryMyProfileReply.versiondownloadurl)
}

// optional int32 tasknumbernotfinished = 100;
inline bool PkgQueryMyProfileReply::has_tasknumbernotfinished() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgQueryMyProfileReply::set_has_tasknumbernotfinished() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgQueryMyProfileReply::clear_has_tasknumbernotfinished() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgQueryMyProfileReply::clear_tasknumbernotfinished() {
  tasknumbernotfinished_ = 0;
  clear_has_tasknumbernotfinished();
}
inline ::google::protobuf::int32 PkgQueryMyProfileReply::tasknumbernotfinished() const {
  // @@protoc_insertion_point(field_get:comm.PkgQueryMyProfileReply.tasknumbernotfinished)
  return tasknumbernotfinished_;
}
inline void PkgQueryMyProfileReply::set_tasknumbernotfinished(::google::protobuf::int32 value) {
  set_has_tasknumbernotfinished();
  tasknumbernotfinished_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgQueryMyProfileReply.tasknumbernotfinished)
}

// optional int32 tasknumberfinshed = 101;
inline bool PkgQueryMyProfileReply::has_tasknumberfinshed() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PkgQueryMyProfileReply::set_has_tasknumberfinshed() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PkgQueryMyProfileReply::clear_has_tasknumberfinshed() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PkgQueryMyProfileReply::clear_tasknumberfinshed() {
  tasknumberfinshed_ = 0;
  clear_has_tasknumberfinshed();
}
inline ::google::protobuf::int32 PkgQueryMyProfileReply::tasknumberfinshed() const {
  // @@protoc_insertion_point(field_get:comm.PkgQueryMyProfileReply.tasknumberfinshed)
  return tasknumberfinshed_;
}
inline void PkgQueryMyProfileReply::set_tasknumberfinshed(::google::protobuf::int32 value) {
  set_has_tasknumberfinshed();
  tasknumberfinshed_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgQueryMyProfileReply.tasknumberfinshed)
}

// -------------------------------------------------------------------

// PkgLogoutReq

// -------------------------------------------------------------------

// PkgLogoutReply

// -------------------------------------------------------------------

// PkgNotifyReq

// optional string curversion = 1;
inline bool PkgNotifyReq::has_curversion() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgNotifyReq::set_has_curversion() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgNotifyReq::clear_has_curversion() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgNotifyReq::clear_curversion() {
  curversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_curversion();
}
inline const ::std::string& PkgNotifyReq::curversion() const {
  // @@protoc_insertion_point(field_get:comm.PkgNotifyReq.curversion)
  return curversion_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgNotifyReq::set_curversion(const ::std::string& value) {
  set_has_curversion();
  curversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgNotifyReq.curversion)
}
inline void PkgNotifyReq::set_curversion(const char* value) {
  set_has_curversion();
  curversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgNotifyReq.curversion)
}
inline void PkgNotifyReq::set_curversion(const char* value, size_t size) {
  set_has_curversion();
  curversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgNotifyReq.curversion)
}
inline ::std::string* PkgNotifyReq::mutable_curversion() {
  set_has_curversion();
  // @@protoc_insertion_point(field_mutable:comm.PkgNotifyReq.curversion)
  return curversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgNotifyReq::release_curversion() {
  clear_has_curversion();
  return curversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgNotifyReq::set_allocated_curversion(::std::string* curversion) {
  if (curversion != NULL) {
    set_has_curversion();
  } else {
    clear_has_curversion();
  }
  curversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), curversion);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgNotifyReq.curversion)
}

// optional string platmform = 2;
inline bool PkgNotifyReq::has_platmform() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgNotifyReq::set_has_platmform() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgNotifyReq::clear_has_platmform() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgNotifyReq::clear_platmform() {
  platmform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_platmform();
}
inline const ::std::string& PkgNotifyReq::platmform() const {
  // @@protoc_insertion_point(field_get:comm.PkgNotifyReq.platmform)
  return platmform_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgNotifyReq::set_platmform(const ::std::string& value) {
  set_has_platmform();
  platmform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgNotifyReq.platmform)
}
inline void PkgNotifyReq::set_platmform(const char* value) {
  set_has_platmform();
  platmform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgNotifyReq.platmform)
}
inline void PkgNotifyReq::set_platmform(const char* value, size_t size) {
  set_has_platmform();
  platmform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgNotifyReq.platmform)
}
inline ::std::string* PkgNotifyReq::mutable_platmform() {
  set_has_platmform();
  // @@protoc_insertion_point(field_mutable:comm.PkgNotifyReq.platmform)
  return platmform_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgNotifyReq::release_platmform() {
  clear_has_platmform();
  return platmform_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgNotifyReq::set_allocated_platmform(::std::string* platmform) {
  if (platmform != NULL) {
    set_has_platmform();
  } else {
    clear_has_platmform();
  }
  platmform_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platmform);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgNotifyReq.platmform)
}

// optional string dataupatedtime = 3;
inline bool PkgNotifyReq::has_dataupatedtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgNotifyReq::set_has_dataupatedtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgNotifyReq::clear_has_dataupatedtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgNotifyReq::clear_dataupatedtime() {
  dataupatedtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dataupatedtime();
}
inline const ::std::string& PkgNotifyReq::dataupatedtime() const {
  // @@protoc_insertion_point(field_get:comm.PkgNotifyReq.dataupatedtime)
  return dataupatedtime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgNotifyReq::set_dataupatedtime(const ::std::string& value) {
  set_has_dataupatedtime();
  dataupatedtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgNotifyReq.dataupatedtime)
}
inline void PkgNotifyReq::set_dataupatedtime(const char* value) {
  set_has_dataupatedtime();
  dataupatedtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgNotifyReq.dataupatedtime)
}
inline void PkgNotifyReq::set_dataupatedtime(const char* value, size_t size) {
  set_has_dataupatedtime();
  dataupatedtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgNotifyReq.dataupatedtime)
}
inline ::std::string* PkgNotifyReq::mutable_dataupatedtime() {
  set_has_dataupatedtime();
  // @@protoc_insertion_point(field_mutable:comm.PkgNotifyReq.dataupatedtime)
  return dataupatedtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgNotifyReq::release_dataupatedtime() {
  clear_has_dataupatedtime();
  return dataupatedtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgNotifyReq::set_allocated_dataupatedtime(::std::string* dataupatedtime) {
  if (dataupatedtime != NULL) {
    set_has_dataupatedtime();
  } else {
    clear_has_dataupatedtime();
  }
  dataupatedtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dataupatedtime);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgNotifyReq.dataupatedtime)
}

// optional int32 forceupdateflag = 100 [default = 0];
inline bool PkgNotifyReq::has_forceupdateflag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PkgNotifyReq::set_has_forceupdateflag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PkgNotifyReq::clear_has_forceupdateflag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PkgNotifyReq::clear_forceupdateflag() {
  forceupdateflag_ = 0;
  clear_has_forceupdateflag();
}
inline ::google::protobuf::int32 PkgNotifyReq::forceupdateflag() const {
  // @@protoc_insertion_point(field_get:comm.PkgNotifyReq.forceupdateflag)
  return forceupdateflag_;
}
inline void PkgNotifyReq::set_forceupdateflag(::google::protobuf::int32 value) {
  set_has_forceupdateflag();
  forceupdateflag_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgNotifyReq.forceupdateflag)
}

// -------------------------------------------------------------------

// PkgNotifyReply

// optional string dataupatedtime = 100;
inline bool PkgNotifyReply::has_dataupatedtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgNotifyReply::set_has_dataupatedtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgNotifyReply::clear_has_dataupatedtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgNotifyReply::clear_dataupatedtime() {
  dataupatedtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dataupatedtime();
}
inline const ::std::string& PkgNotifyReply::dataupatedtime() const {
  // @@protoc_insertion_point(field_get:comm.PkgNotifyReply.dataupatedtime)
  return dataupatedtime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgNotifyReply::set_dataupatedtime(const ::std::string& value) {
  set_has_dataupatedtime();
  dataupatedtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgNotifyReply.dataupatedtime)
}
inline void PkgNotifyReply::set_dataupatedtime(const char* value) {
  set_has_dataupatedtime();
  dataupatedtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgNotifyReply.dataupatedtime)
}
inline void PkgNotifyReply::set_dataupatedtime(const char* value, size_t size) {
  set_has_dataupatedtime();
  dataupatedtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgNotifyReply.dataupatedtime)
}
inline ::std::string* PkgNotifyReply::mutable_dataupatedtime() {
  set_has_dataupatedtime();
  // @@protoc_insertion_point(field_mutable:comm.PkgNotifyReply.dataupatedtime)
  return dataupatedtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgNotifyReply::release_dataupatedtime() {
  clear_has_dataupatedtime();
  return dataupatedtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgNotifyReply::set_allocated_dataupatedtime(::std::string* dataupatedtime) {
  if (dataupatedtime != NULL) {
    set_has_dataupatedtime();
  } else {
    clear_has_dataupatedtime();
  }
  dataupatedtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dataupatedtime);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgNotifyReply.dataupatedtime)
}

// optional int32 notifyupdatedflag = 101;
inline bool PkgNotifyReply::has_notifyupdatedflag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgNotifyReply::set_has_notifyupdatedflag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgNotifyReply::clear_has_notifyupdatedflag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgNotifyReply::clear_notifyupdatedflag() {
  notifyupdatedflag_ = 0;
  clear_has_notifyupdatedflag();
}
inline ::google::protobuf::int32 PkgNotifyReply::notifyupdatedflag() const {
  // @@protoc_insertion_point(field_get:comm.PkgNotifyReply.notifyupdatedflag)
  return notifyupdatedflag_;
}
inline void PkgNotifyReply::set_notifyupdatedflag(::google::protobuf::int32 value) {
  set_has_notifyupdatedflag();
  notifyupdatedflag_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgNotifyReply.notifyupdatedflag)
}

// optional .comm.PkgCompanyInfo companyinfo = 1000;
inline bool PkgNotifyReply::has_companyinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgNotifyReply::set_has_companyinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgNotifyReply::clear_has_companyinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgNotifyReply::clear_companyinfo() {
  if (companyinfo_ != NULL) companyinfo_->::comm::PkgCompanyInfo::Clear();
  clear_has_companyinfo();
}
inline const ::comm::PkgCompanyInfo& PkgNotifyReply::companyinfo() const {
  // @@protoc_insertion_point(field_get:comm.PkgNotifyReply.companyinfo)
  return companyinfo_ != NULL ? *companyinfo_ : *default_instance_->companyinfo_;
}
inline ::comm::PkgCompanyInfo* PkgNotifyReply::mutable_companyinfo() {
  set_has_companyinfo();
  if (companyinfo_ == NULL) {
    companyinfo_ = new ::comm::PkgCompanyInfo;
  }
  // @@protoc_insertion_point(field_mutable:comm.PkgNotifyReply.companyinfo)
  return companyinfo_;
}
inline ::comm::PkgCompanyInfo* PkgNotifyReply::release_companyinfo() {
  clear_has_companyinfo();
  ::comm::PkgCompanyInfo* temp = companyinfo_;
  companyinfo_ = NULL;
  return temp;
}
inline void PkgNotifyReply::set_allocated_companyinfo(::comm::PkgCompanyInfo* companyinfo) {
  delete companyinfo_;
  companyinfo_ = companyinfo;
  if (companyinfo) {
    set_has_companyinfo();
  } else {
    clear_has_companyinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:comm.PkgNotifyReply.companyinfo)
}

// optional int32 tasknumbernotfinished = 1011;
inline bool PkgNotifyReply::has_tasknumbernotfinished() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PkgNotifyReply::set_has_tasknumbernotfinished() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PkgNotifyReply::clear_has_tasknumbernotfinished() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PkgNotifyReply::clear_tasknumbernotfinished() {
  tasknumbernotfinished_ = 0;
  clear_has_tasknumbernotfinished();
}
inline ::google::protobuf::int32 PkgNotifyReply::tasknumbernotfinished() const {
  // @@protoc_insertion_point(field_get:comm.PkgNotifyReply.tasknumbernotfinished)
  return tasknumbernotfinished_;
}
inline void PkgNotifyReply::set_tasknumbernotfinished(::google::protobuf::int32 value) {
  set_has_tasknumbernotfinished();
  tasknumbernotfinished_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgNotifyReply.tasknumbernotfinished)
}

// optional int32 tasknumberfinished = 1012;
inline bool PkgNotifyReply::has_tasknumberfinished() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PkgNotifyReply::set_has_tasknumberfinished() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PkgNotifyReply::clear_has_tasknumberfinished() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PkgNotifyReply::clear_tasknumberfinished() {
  tasknumberfinished_ = 0;
  clear_has_tasknumberfinished();
}
inline ::google::protobuf::int32 PkgNotifyReply::tasknumberfinished() const {
  // @@protoc_insertion_point(field_get:comm.PkgNotifyReply.tasknumberfinished)
  return tasknumberfinished_;
}
inline void PkgNotifyReply::set_tasknumberfinished(::google::protobuf::int32 value) {
  set_has_tasknumberfinished();
  tasknumberfinished_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgNotifyReply.tasknumberfinished)
}

// optional string versionlastest = 1030;
inline bool PkgNotifyReply::has_versionlastest() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PkgNotifyReply::set_has_versionlastest() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PkgNotifyReply::clear_has_versionlastest() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PkgNotifyReply::clear_versionlastest() {
  versionlastest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_versionlastest();
}
inline const ::std::string& PkgNotifyReply::versionlastest() const {
  // @@protoc_insertion_point(field_get:comm.PkgNotifyReply.versionlastest)
  return versionlastest_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgNotifyReply::set_versionlastest(const ::std::string& value) {
  set_has_versionlastest();
  versionlastest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgNotifyReply.versionlastest)
}
inline void PkgNotifyReply::set_versionlastest(const char* value) {
  set_has_versionlastest();
  versionlastest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgNotifyReply.versionlastest)
}
inline void PkgNotifyReply::set_versionlastest(const char* value, size_t size) {
  set_has_versionlastest();
  versionlastest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgNotifyReply.versionlastest)
}
inline ::std::string* PkgNotifyReply::mutable_versionlastest() {
  set_has_versionlastest();
  // @@protoc_insertion_point(field_mutable:comm.PkgNotifyReply.versionlastest)
  return versionlastest_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgNotifyReply::release_versionlastest() {
  clear_has_versionlastest();
  return versionlastest_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgNotifyReply::set_allocated_versionlastest(::std::string* versionlastest) {
  if (versionlastest != NULL) {
    set_has_versionlastest();
  } else {
    clear_has_versionlastest();
  }
  versionlastest_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), versionlastest);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgNotifyReply.versionlastest)
}

// optional string versiondownloadurl = 1041;
inline bool PkgNotifyReply::has_versiondownloadurl() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PkgNotifyReply::set_has_versiondownloadurl() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PkgNotifyReply::clear_has_versiondownloadurl() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PkgNotifyReply::clear_versiondownloadurl() {
  versiondownloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_versiondownloadurl();
}
inline const ::std::string& PkgNotifyReply::versiondownloadurl() const {
  // @@protoc_insertion_point(field_get:comm.PkgNotifyReply.versiondownloadurl)
  return versiondownloadurl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgNotifyReply::set_versiondownloadurl(const ::std::string& value) {
  set_has_versiondownloadurl();
  versiondownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgNotifyReply.versiondownloadurl)
}
inline void PkgNotifyReply::set_versiondownloadurl(const char* value) {
  set_has_versiondownloadurl();
  versiondownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgNotifyReply.versiondownloadurl)
}
inline void PkgNotifyReply::set_versiondownloadurl(const char* value, size_t size) {
  set_has_versiondownloadurl();
  versiondownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgNotifyReply.versiondownloadurl)
}
inline ::std::string* PkgNotifyReply::mutable_versiondownloadurl() {
  set_has_versiondownloadurl();
  // @@protoc_insertion_point(field_mutable:comm.PkgNotifyReply.versiondownloadurl)
  return versiondownloadurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgNotifyReply::release_versiondownloadurl() {
  clear_has_versiondownloadurl();
  return versiondownloadurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgNotifyReply::set_allocated_versiondownloadurl(::std::string* versiondownloadurl) {
  if (versiondownloadurl != NULL) {
    set_has_versiondownloadurl();
  } else {
    clear_has_versiondownloadurl();
  }
  versiondownloadurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), versiondownloadurl);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgNotifyReply.versiondownloadurl)
}

// optional int32 permission = 1051;
inline bool PkgNotifyReply::has_permission() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PkgNotifyReply::set_has_permission() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PkgNotifyReply::clear_has_permission() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PkgNotifyReply::clear_permission() {
  permission_ = 0;
  clear_has_permission();
}
inline ::google::protobuf::int32 PkgNotifyReply::permission() const {
  // @@protoc_insertion_point(field_get:comm.PkgNotifyReply.permission)
  return permission_;
}
inline void PkgNotifyReply::set_permission(::google::protobuf::int32 value) {
  set_has_permission();
  permission_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgNotifyReply.permission)
}

// optional string rolename = 1052;
inline bool PkgNotifyReply::has_rolename() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PkgNotifyReply::set_has_rolename() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PkgNotifyReply::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PkgNotifyReply::clear_rolename() {
  rolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rolename();
}
inline const ::std::string& PkgNotifyReply::rolename() const {
  // @@protoc_insertion_point(field_get:comm.PkgNotifyReply.rolename)
  return rolename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgNotifyReply::set_rolename(const ::std::string& value) {
  set_has_rolename();
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgNotifyReply.rolename)
}
inline void PkgNotifyReply::set_rolename(const char* value) {
  set_has_rolename();
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgNotifyReply.rolename)
}
inline void PkgNotifyReply::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgNotifyReply.rolename)
}
inline ::std::string* PkgNotifyReply::mutable_rolename() {
  set_has_rolename();
  // @@protoc_insertion_point(field_mutable:comm.PkgNotifyReply.rolename)
  return rolename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgNotifyReply::release_rolename() {
  clear_has_rolename();
  return rolename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgNotifyReply::set_allocated_rolename(::std::string* rolename) {
  if (rolename != NULL) {
    set_has_rolename();
  } else {
    clear_has_rolename();
  }
  rolename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rolename);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgNotifyReply.rolename)
}

// optional int32 permissionroleid = 1053;
inline bool PkgNotifyReply::has_permissionroleid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PkgNotifyReply::set_has_permissionroleid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PkgNotifyReply::clear_has_permissionroleid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PkgNotifyReply::clear_permissionroleid() {
  permissionroleid_ = 0;
  clear_has_permissionroleid();
}
inline ::google::protobuf::int32 PkgNotifyReply::permissionroleid() const {
  // @@protoc_insertion_point(field_get:comm.PkgNotifyReply.permissionroleid)
  return permissionroleid_;
}
inline void PkgNotifyReply::set_permissionroleid(::google::protobuf::int32 value) {
  set_has_permissionroleid();
  permissionroleid_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgNotifyReply.permissionroleid)
}

// -------------------------------------------------------------------

// PkgPhoneCppWrapReq

// required int32 userid = 1;
inline bool PkgPhoneCppWrapReq::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgPhoneCppWrapReq::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgPhoneCppWrapReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgPhoneCppWrapReq::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 PkgPhoneCppWrapReq::userid() const {
  // @@protoc_insertion_point(field_get:comm.PkgPhoneCppWrapReq.userid)
  return userid_;
}
inline void PkgPhoneCppWrapReq::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgPhoneCppWrapReq.userid)
}

// required .comm.PkgPhoneCppWrapReq.EnReqType enreqtype = 2;
inline bool PkgPhoneCppWrapReq::has_enreqtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgPhoneCppWrapReq::set_has_enreqtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgPhoneCppWrapReq::clear_has_enreqtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgPhoneCppWrapReq::clear_enreqtype() {
  enreqtype_ = 0;
  clear_has_enreqtype();
}
inline ::comm::PkgPhoneCppWrapReq_EnReqType PkgPhoneCppWrapReq::enreqtype() const {
  // @@protoc_insertion_point(field_get:comm.PkgPhoneCppWrapReq.enreqtype)
  return static_cast< ::comm::PkgPhoneCppWrapReq_EnReqType >(enreqtype_);
}
inline void PkgPhoneCppWrapReq::set_enreqtype(::comm::PkgPhoneCppWrapReq_EnReqType value) {
  assert(::comm::PkgPhoneCppWrapReq_EnReqType_IsValid(value));
  set_has_enreqtype();
  enreqtype_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgPhoneCppWrapReq.enreqtype)
}

// optional string lasttaskupdatetime = 1000;
inline bool PkgPhoneCppWrapReq::has_lasttaskupdatetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgPhoneCppWrapReq::set_has_lasttaskupdatetime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgPhoneCppWrapReq::clear_has_lasttaskupdatetime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgPhoneCppWrapReq::clear_lasttaskupdatetime() {
  lasttaskupdatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lasttaskupdatetime();
}
inline const ::std::string& PkgPhoneCppWrapReq::lasttaskupdatetime() const {
  // @@protoc_insertion_point(field_get:comm.PkgPhoneCppWrapReq.lasttaskupdatetime)
  return lasttaskupdatetime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgPhoneCppWrapReq::set_lasttaskupdatetime(const ::std::string& value) {
  set_has_lasttaskupdatetime();
  lasttaskupdatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgPhoneCppWrapReq.lasttaskupdatetime)
}
inline void PkgPhoneCppWrapReq::set_lasttaskupdatetime(const char* value) {
  set_has_lasttaskupdatetime();
  lasttaskupdatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgPhoneCppWrapReq.lasttaskupdatetime)
}
inline void PkgPhoneCppWrapReq::set_lasttaskupdatetime(const char* value, size_t size) {
  set_has_lasttaskupdatetime();
  lasttaskupdatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgPhoneCppWrapReq.lasttaskupdatetime)
}
inline ::std::string* PkgPhoneCppWrapReq::mutable_lasttaskupdatetime() {
  set_has_lasttaskupdatetime();
  // @@protoc_insertion_point(field_mutable:comm.PkgPhoneCppWrapReq.lasttaskupdatetime)
  return lasttaskupdatetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgPhoneCppWrapReq::release_lasttaskupdatetime() {
  clear_has_lasttaskupdatetime();
  return lasttaskupdatetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgPhoneCppWrapReq::set_allocated_lasttaskupdatetime(::std::string* lasttaskupdatetime) {
  if (lasttaskupdatetime != NULL) {
    set_has_lasttaskupdatetime();
  } else {
    clear_has_lasttaskupdatetime();
  }
  lasttaskupdatetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lasttaskupdatetime);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgPhoneCppWrapReq.lasttaskupdatetime)
}

// repeated .comm.PkgTaskInfo taskinfolist = 1001;
inline int PkgPhoneCppWrapReq::taskinfolist_size() const {
  return taskinfolist_.size();
}
inline void PkgPhoneCppWrapReq::clear_taskinfolist() {
  taskinfolist_.Clear();
}
inline const ::comm::PkgTaskInfo& PkgPhoneCppWrapReq::taskinfolist(int index) const {
  // @@protoc_insertion_point(field_get:comm.PkgPhoneCppWrapReq.taskinfolist)
  return taskinfolist_.Get(index);
}
inline ::comm::PkgTaskInfo* PkgPhoneCppWrapReq::mutable_taskinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:comm.PkgPhoneCppWrapReq.taskinfolist)
  return taskinfolist_.Mutable(index);
}
inline ::comm::PkgTaskInfo* PkgPhoneCppWrapReq::add_taskinfolist() {
  // @@protoc_insertion_point(field_add:comm.PkgPhoneCppWrapReq.taskinfolist)
  return taskinfolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::comm::PkgTaskInfo >&
PkgPhoneCppWrapReq::taskinfolist() const {
  // @@protoc_insertion_point(field_list:comm.PkgPhoneCppWrapReq.taskinfolist)
  return taskinfolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::comm::PkgTaskInfo >*
PkgPhoneCppWrapReq::mutable_taskinfolist() {
  // @@protoc_insertion_point(field_mutable_list:comm.PkgPhoneCppWrapReq.taskinfolist)
  return &taskinfolist_;
}

// optional .comm.PkgTaskPageQueryReq taskpagequeryreq = 1011;
inline bool PkgPhoneCppWrapReq::has_taskpagequeryreq() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PkgPhoneCppWrapReq::set_has_taskpagequeryreq() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PkgPhoneCppWrapReq::clear_has_taskpagequeryreq() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PkgPhoneCppWrapReq::clear_taskpagequeryreq() {
  if (taskpagequeryreq_ != NULL) taskpagequeryreq_->::comm::PkgTaskPageQueryReq::Clear();
  clear_has_taskpagequeryreq();
}
inline const ::comm::PkgTaskPageQueryReq& PkgPhoneCppWrapReq::taskpagequeryreq() const {
  // @@protoc_insertion_point(field_get:comm.PkgPhoneCppWrapReq.taskpagequeryreq)
  return taskpagequeryreq_ != NULL ? *taskpagequeryreq_ : *default_instance_->taskpagequeryreq_;
}
inline ::comm::PkgTaskPageQueryReq* PkgPhoneCppWrapReq::mutable_taskpagequeryreq() {
  set_has_taskpagequeryreq();
  if (taskpagequeryreq_ == NULL) {
    taskpagequeryreq_ = new ::comm::PkgTaskPageQueryReq;
  }
  // @@protoc_insertion_point(field_mutable:comm.PkgPhoneCppWrapReq.taskpagequeryreq)
  return taskpagequeryreq_;
}
inline ::comm::PkgTaskPageQueryReq* PkgPhoneCppWrapReq::release_taskpagequeryreq() {
  clear_has_taskpagequeryreq();
  ::comm::PkgTaskPageQueryReq* temp = taskpagequeryreq_;
  taskpagequeryreq_ = NULL;
  return temp;
}
inline void PkgPhoneCppWrapReq::set_allocated_taskpagequeryreq(::comm::PkgTaskPageQueryReq* taskpagequeryreq) {
  delete taskpagequeryreq_;
  taskpagequeryreq_ = taskpagequeryreq;
  if (taskpagequeryreq) {
    set_has_taskpagequeryreq();
  } else {
    clear_has_taskpagequeryreq();
  }
  // @@protoc_insertion_point(field_set_allocated:comm.PkgPhoneCppWrapReq.taskpagequeryreq)
}

// optional .comm.PkgTaskQueryReq taskqueryreq = 1021;
inline bool PkgPhoneCppWrapReq::has_taskqueryreq() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PkgPhoneCppWrapReq::set_has_taskqueryreq() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PkgPhoneCppWrapReq::clear_has_taskqueryreq() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PkgPhoneCppWrapReq::clear_taskqueryreq() {
  if (taskqueryreq_ != NULL) taskqueryreq_->::comm::PkgTaskQueryReq::Clear();
  clear_has_taskqueryreq();
}
inline const ::comm::PkgTaskQueryReq& PkgPhoneCppWrapReq::taskqueryreq() const {
  // @@protoc_insertion_point(field_get:comm.PkgPhoneCppWrapReq.taskqueryreq)
  return taskqueryreq_ != NULL ? *taskqueryreq_ : *default_instance_->taskqueryreq_;
}
inline ::comm::PkgTaskQueryReq* PkgPhoneCppWrapReq::mutable_taskqueryreq() {
  set_has_taskqueryreq();
  if (taskqueryreq_ == NULL) {
    taskqueryreq_ = new ::comm::PkgTaskQueryReq;
  }
  // @@protoc_insertion_point(field_mutable:comm.PkgPhoneCppWrapReq.taskqueryreq)
  return taskqueryreq_;
}
inline ::comm::PkgTaskQueryReq* PkgPhoneCppWrapReq::release_taskqueryreq() {
  clear_has_taskqueryreq();
  ::comm::PkgTaskQueryReq* temp = taskqueryreq_;
  taskqueryreq_ = NULL;
  return temp;
}
inline void PkgPhoneCppWrapReq::set_allocated_taskqueryreq(::comm::PkgTaskQueryReq* taskqueryreq) {
  delete taskqueryreq_;
  taskqueryreq_ = taskqueryreq;
  if (taskqueryreq) {
    set_has_taskqueryreq();
  } else {
    clear_has_taskqueryreq();
  }
  // @@protoc_insertion_point(field_set_allocated:comm.PkgPhoneCppWrapReq.taskqueryreq)
}

// -------------------------------------------------------------------

// PkgPhoneCppWrapReply

// required bool issuccess = 1;
inline bool PkgPhoneCppWrapReply::has_issuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgPhoneCppWrapReply::set_has_issuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgPhoneCppWrapReply::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgPhoneCppWrapReply::clear_issuccess() {
  issuccess_ = false;
  clear_has_issuccess();
}
inline bool PkgPhoneCppWrapReply::issuccess() const {
  // @@protoc_insertion_point(field_get:comm.PkgPhoneCppWrapReply.issuccess)
  return issuccess_;
}
inline void PkgPhoneCppWrapReply::set_issuccess(bool value) {
  set_has_issuccess();
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:comm.PkgPhoneCppWrapReply.issuccess)
}

// optional string err = 2;
inline bool PkgPhoneCppWrapReply::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgPhoneCppWrapReply::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgPhoneCppWrapReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgPhoneCppWrapReply::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
inline const ::std::string& PkgPhoneCppWrapReply::err() const {
  // @@protoc_insertion_point(field_get:comm.PkgPhoneCppWrapReply.err)
  return err_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgPhoneCppWrapReply::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgPhoneCppWrapReply.err)
}
inline void PkgPhoneCppWrapReply::set_err(const char* value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgPhoneCppWrapReply.err)
}
inline void PkgPhoneCppWrapReply::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgPhoneCppWrapReply.err)
}
inline ::std::string* PkgPhoneCppWrapReply::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:comm.PkgPhoneCppWrapReply.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgPhoneCppWrapReply::release_err() {
  clear_has_err();
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgPhoneCppWrapReply::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgPhoneCppWrapReply.err)
}

// optional string lasttaskupdatetime = 1000;
inline bool PkgPhoneCppWrapReply::has_lasttaskupdatetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgPhoneCppWrapReply::set_has_lasttaskupdatetime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgPhoneCppWrapReply::clear_has_lasttaskupdatetime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgPhoneCppWrapReply::clear_lasttaskupdatetime() {
  lasttaskupdatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lasttaskupdatetime();
}
inline const ::std::string& PkgPhoneCppWrapReply::lasttaskupdatetime() const {
  // @@protoc_insertion_point(field_get:comm.PkgPhoneCppWrapReply.lasttaskupdatetime)
  return lasttaskupdatetime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgPhoneCppWrapReply::set_lasttaskupdatetime(const ::std::string& value) {
  set_has_lasttaskupdatetime();
  lasttaskupdatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comm.PkgPhoneCppWrapReply.lasttaskupdatetime)
}
inline void PkgPhoneCppWrapReply::set_lasttaskupdatetime(const char* value) {
  set_has_lasttaskupdatetime();
  lasttaskupdatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comm.PkgPhoneCppWrapReply.lasttaskupdatetime)
}
inline void PkgPhoneCppWrapReply::set_lasttaskupdatetime(const char* value, size_t size) {
  set_has_lasttaskupdatetime();
  lasttaskupdatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comm.PkgPhoneCppWrapReply.lasttaskupdatetime)
}
inline ::std::string* PkgPhoneCppWrapReply::mutable_lasttaskupdatetime() {
  set_has_lasttaskupdatetime();
  // @@protoc_insertion_point(field_mutable:comm.PkgPhoneCppWrapReply.lasttaskupdatetime)
  return lasttaskupdatetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgPhoneCppWrapReply::release_lasttaskupdatetime() {
  clear_has_lasttaskupdatetime();
  return lasttaskupdatetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgPhoneCppWrapReply::set_allocated_lasttaskupdatetime(::std::string* lasttaskupdatetime) {
  if (lasttaskupdatetime != NULL) {
    set_has_lasttaskupdatetime();
  } else {
    clear_has_lasttaskupdatetime();
  }
  lasttaskupdatetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lasttaskupdatetime);
  // @@protoc_insertion_point(field_set_allocated:comm.PkgPhoneCppWrapReply.lasttaskupdatetime)
}

// optional .comm.PkgTaskPageQueryReply taskpagequeryreply = 1011;
inline bool PkgPhoneCppWrapReply::has_taskpagequeryreply() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PkgPhoneCppWrapReply::set_has_taskpagequeryreply() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PkgPhoneCppWrapReply::clear_has_taskpagequeryreply() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PkgPhoneCppWrapReply::clear_taskpagequeryreply() {
  if (taskpagequeryreply_ != NULL) taskpagequeryreply_->::comm::PkgTaskPageQueryReply::Clear();
  clear_has_taskpagequeryreply();
}
inline const ::comm::PkgTaskPageQueryReply& PkgPhoneCppWrapReply::taskpagequeryreply() const {
  // @@protoc_insertion_point(field_get:comm.PkgPhoneCppWrapReply.taskpagequeryreply)
  return taskpagequeryreply_ != NULL ? *taskpagequeryreply_ : *default_instance_->taskpagequeryreply_;
}
inline ::comm::PkgTaskPageQueryReply* PkgPhoneCppWrapReply::mutable_taskpagequeryreply() {
  set_has_taskpagequeryreply();
  if (taskpagequeryreply_ == NULL) {
    taskpagequeryreply_ = new ::comm::PkgTaskPageQueryReply;
  }
  // @@protoc_insertion_point(field_mutable:comm.PkgPhoneCppWrapReply.taskpagequeryreply)
  return taskpagequeryreply_;
}
inline ::comm::PkgTaskPageQueryReply* PkgPhoneCppWrapReply::release_taskpagequeryreply() {
  clear_has_taskpagequeryreply();
  ::comm::PkgTaskPageQueryReply* temp = taskpagequeryreply_;
  taskpagequeryreply_ = NULL;
  return temp;
}
inline void PkgPhoneCppWrapReply::set_allocated_taskpagequeryreply(::comm::PkgTaskPageQueryReply* taskpagequeryreply) {
  delete taskpagequeryreply_;
  taskpagequeryreply_ = taskpagequeryreply;
  if (taskpagequeryreply) {
    set_has_taskpagequeryreply();
  } else {
    clear_has_taskpagequeryreply();
  }
  // @@protoc_insertion_point(field_set_allocated:comm.PkgPhoneCppWrapReply.taskpagequeryreply)
}

// optional .comm.PkgTaskQueryReply taskqueryreply = 1021;
inline bool PkgPhoneCppWrapReply::has_taskqueryreply() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PkgPhoneCppWrapReply::set_has_taskqueryreply() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PkgPhoneCppWrapReply::clear_has_taskqueryreply() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PkgPhoneCppWrapReply::clear_taskqueryreply() {
  if (taskqueryreply_ != NULL) taskqueryreply_->::comm::PkgTaskQueryReply::Clear();
  clear_has_taskqueryreply();
}
inline const ::comm::PkgTaskQueryReply& PkgPhoneCppWrapReply::taskqueryreply() const {
  // @@protoc_insertion_point(field_get:comm.PkgPhoneCppWrapReply.taskqueryreply)
  return taskqueryreply_ != NULL ? *taskqueryreply_ : *default_instance_->taskqueryreply_;
}
inline ::comm::PkgTaskQueryReply* PkgPhoneCppWrapReply::mutable_taskqueryreply() {
  set_has_taskqueryreply();
  if (taskqueryreply_ == NULL) {
    taskqueryreply_ = new ::comm::PkgTaskQueryReply;
  }
  // @@protoc_insertion_point(field_mutable:comm.PkgPhoneCppWrapReply.taskqueryreply)
  return taskqueryreply_;
}
inline ::comm::PkgTaskQueryReply* PkgPhoneCppWrapReply::release_taskqueryreply() {
  clear_has_taskqueryreply();
  ::comm::PkgTaskQueryReply* temp = taskqueryreply_;
  taskqueryreply_ = NULL;
  return temp;
}
inline void PkgPhoneCppWrapReply::set_allocated_taskqueryreply(::comm::PkgTaskQueryReply* taskqueryreply) {
  delete taskqueryreply_;
  taskqueryreply_ = taskqueryreply;
  if (taskqueryreply) {
    set_has_taskqueryreply();
  } else {
    clear_has_taskqueryreply();
  }
  // @@protoc_insertion_point(field_set_allocated:comm.PkgPhoneCppWrapReply.taskqueryreply)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace comm

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::comm::PkgUserSetReq_EnSetType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::comm::PkgUserSetReq_EnSetType>() {
  return ::comm::PkgUserSetReq_EnSetType_descriptor();
}
template <> struct is_proto_enum< ::comm::PkgUserExitCompanyReq_EnCmd> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::comm::PkgUserExitCompanyReq_EnCmd>() {
  return ::comm::PkgUserExitCompanyReq_EnCmd_descriptor();
}
template <> struct is_proto_enum< ::comm::PkgTaskInfo_EnTaskLevel> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::comm::PkgTaskInfo_EnTaskLevel>() {
  return ::comm::PkgTaskInfo_EnTaskLevel_descriptor();
}
template <> struct is_proto_enum< ::comm::PkgTaskInfo_EnTaskStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::comm::PkgTaskInfo_EnTaskStatus>() {
  return ::comm::PkgTaskInfo_EnTaskStatus_descriptor();
}
template <> struct is_proto_enum< ::comm::PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::comm::PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag>() {
  return ::comm::PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_descriptor();
}
template <> struct is_proto_enum< ::comm::PkgTaskPageQueryReq_EnTaskFlag> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::comm::PkgTaskPageQueryReq_EnTaskFlag>() {
  return ::comm::PkgTaskPageQueryReq_EnTaskFlag_descriptor();
}
template <> struct is_proto_enum< ::comm::PkgTaskPageQueryReq_EnTaskQueryCondition> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::comm::PkgTaskPageQueryReq_EnTaskQueryCondition>() {
  return ::comm::PkgTaskPageQueryReq_EnTaskQueryCondition_descriptor();
}
template <> struct is_proto_enum< ::comm::PkgTaskPageQueryReq_EnPageFlag> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::comm::PkgTaskPageQueryReq_EnPageFlag>() {
  return ::comm::PkgTaskPageQueryReq_EnPageFlag_descriptor();
}
template <> struct is_proto_enum< ::comm::PkgTaskQueryReq_EnQueryFlag> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::comm::PkgTaskQueryReq_EnQueryFlag>() {
  return ::comm::PkgTaskQueryReq_EnQueryFlag_descriptor();
}
template <> struct is_proto_enum< ::comm::PkgTaskOperationReq_EnTaskOperation> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::comm::PkgTaskOperationReq_EnTaskOperation>() {
  return ::comm::PkgTaskOperationReq_EnTaskOperation_descriptor();
}
template <> struct is_proto_enum< ::comm::PkgCompanyGroupQueryReq_EnQueryType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::comm::PkgCompanyGroupQueryReq_EnQueryType>() {
  return ::comm::PkgCompanyGroupQueryReq_EnQueryType_descriptor();
}
template <> struct is_proto_enum< ::comm::PkgAdvQueryReq_EnQueryType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::comm::PkgAdvQueryReq_EnQueryType>() {
  return ::comm::PkgAdvQueryReq_EnQueryType_descriptor();
}
template <> struct is_proto_enum< ::comm::PkgPhoneCppWrapReq_EnReqType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::comm::PkgPhoneCppWrapReq_EnReqType>() {
  return ::comm::PkgPhoneCppWrapReq_EnReqType_descriptor();
}
template <> struct is_proto_enum< ::comm::EnGetType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::comm::EnGetType>() {
  return ::comm::EnGetType_descriptor();
}
template <> struct is_proto_enum< ::comm::EnUpdatedFlag> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::comm::EnUpdatedFlag>() {
  return ::comm::EnUpdatedFlag_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_comm_2eproto__INCLUDED
