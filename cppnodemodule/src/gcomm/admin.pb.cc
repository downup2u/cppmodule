// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: admin.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "admin.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace admin {

namespace {

const ::google::protobuf::Descriptor* PkgUserInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgUserLoginReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserLoginReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgUserLoginReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserLoginReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgUserOperationReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserOperationReq_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PkgUserOperationReq_EnUserOperation_descriptor_ = NULL;
const ::google::protobuf::Descriptor* PkgUserOperationReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserOperationReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgAdvQueryReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgAdvQueryReq_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PkgAdvQueryReq_EnQueryType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* PkgAdvQueryReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgAdvQueryReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgAdvInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgAdvInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgAdvOperationReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgAdvOperationReq_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PkgAdvOperationReq_EnAdvOperation_descriptor_ = NULL;
const ::google::protobuf::Descriptor* PkgAdvOperationReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgAdvOperationReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgSysInfoSetReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgSysInfoSetReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgSysInfoSetReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgSysInfoSetReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgSysInfoGetReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgSysInfoGetReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgSysInfoGetReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgSysInfoGetReply_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_admin_2eproto() {
  protobuf_AddDesc_admin_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "admin.proto");
  GOOGLE_CHECK(file != NULL);
  PkgUserInfo_descriptor_ = file->message_type(0);
  static const int PkgUserInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserInfo, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserInfo, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserInfo, permission_),
  };
  PkgUserInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserInfo_descriptor_,
      PkgUserInfo::default_instance_,
      PkgUserInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserInfo, _internal_metadata_),
      -1);
  PkgUserLoginReq_descriptor_ = file->message_type(1);
  static const int PkgUserLoginReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReq, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReq, password_),
  };
  PkgUserLoginReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserLoginReq_descriptor_,
      PkgUserLoginReq::default_instance_,
      PkgUserLoginReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserLoginReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReq, _internal_metadata_),
      -1);
  PkgUserLoginReply_descriptor_ = file->message_type(2);
  static const int PkgUserLoginReply_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, permission_),
  };
  PkgUserLoginReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserLoginReply_descriptor_,
      PkgUserLoginReply::default_instance_,
      PkgUserLoginReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserLoginReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, _internal_metadata_),
      -1);
  PkgUserOperationReq_descriptor_ = file->message_type(3);
  static const int PkgUserOperationReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserOperationReq, useroperation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserOperationReq, userinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserOperationReq, userid_),
  };
  PkgUserOperationReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserOperationReq_descriptor_,
      PkgUserOperationReq::default_instance_,
      PkgUserOperationReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserOperationReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserOperationReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserOperationReq, _internal_metadata_),
      -1);
  PkgUserOperationReq_EnUserOperation_descriptor_ = PkgUserOperationReq_descriptor_->enum_type(0);
  PkgUserOperationReply_descriptor_ = file->message_type(4);
  static const int PkgUserOperationReply_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserOperationReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserOperationReply, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserOperationReply, userid_),
  };
  PkgUserOperationReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserOperationReply_descriptor_,
      PkgUserOperationReply::default_instance_,
      PkgUserOperationReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserOperationReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserOperationReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserOperationReply, _internal_metadata_),
      -1);
  PkgAdvQueryReq_descriptor_ = file->message_type(5);
  static const int PkgAdvQueryReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvQueryReq, queryflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvQueryReq, advid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvQueryReq, keyname_),
  };
  PkgAdvQueryReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgAdvQueryReq_descriptor_,
      PkgAdvQueryReq::default_instance_,
      PkgAdvQueryReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvQueryReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgAdvQueryReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvQueryReq, _internal_metadata_),
      -1);
  PkgAdvQueryReq_EnQueryType_descriptor_ = PkgAdvQueryReq_descriptor_->enum_type(0);
  PkgAdvQueryReply_descriptor_ = file->message_type(6);
  static const int PkgAdvQueryReply_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvQueryReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvQueryReply, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvQueryReply, advinfolist_),
  };
  PkgAdvQueryReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgAdvQueryReply_descriptor_,
      PkgAdvQueryReply::default_instance_,
      PkgAdvQueryReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvQueryReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgAdvQueryReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvQueryReply, _internal_metadata_),
      -1);
  PkgAdvInfo_descriptor_ = file->message_type(7);
  static const int PkgAdvInfo_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvInfo, urlpic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvInfo, advtxt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvInfo, advdesc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvInfo, createtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvInfo, expiretime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvInfo, picpath_),
  };
  PkgAdvInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgAdvInfo_descriptor_,
      PkgAdvInfo::default_instance_,
      PkgAdvInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgAdvInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvInfo, _internal_metadata_),
      -1);
  PkgAdvOperationReq_descriptor_ = file->message_type(8);
  static const int PkgAdvOperationReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvOperationReq, advoperation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvOperationReq, advinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvOperationReq, advid_),
  };
  PkgAdvOperationReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgAdvOperationReq_descriptor_,
      PkgAdvOperationReq::default_instance_,
      PkgAdvOperationReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvOperationReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgAdvOperationReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvOperationReq, _internal_metadata_),
      -1);
  PkgAdvOperationReq_EnAdvOperation_descriptor_ = PkgAdvOperationReq_descriptor_->enum_type(0);
  PkgAdvOperationReply_descriptor_ = file->message_type(9);
  static const int PkgAdvOperationReply_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvOperationReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvOperationReply, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvOperationReply, advid_),
  };
  PkgAdvOperationReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgAdvOperationReply_descriptor_,
      PkgAdvOperationReply::default_instance_,
      PkgAdvOperationReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvOperationReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgAdvOperationReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvOperationReply, _internal_metadata_),
      -1);
  PkgSysInfoSetReq_descriptor_ = file->message_type(10);
  static const int PkgSysInfoSetReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSysInfoSetReq, keystring_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSysInfoSetReq, valuestring_),
  };
  PkgSysInfoSetReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgSysInfoSetReq_descriptor_,
      PkgSysInfoSetReq::default_instance_,
      PkgSysInfoSetReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSysInfoSetReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgSysInfoSetReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSysInfoSetReq, _internal_metadata_),
      -1);
  PkgSysInfoSetReply_descriptor_ = file->message_type(11);
  static const int PkgSysInfoSetReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSysInfoSetReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSysInfoSetReply, err_),
  };
  PkgSysInfoSetReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgSysInfoSetReply_descriptor_,
      PkgSysInfoSetReply::default_instance_,
      PkgSysInfoSetReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSysInfoSetReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgSysInfoSetReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSysInfoSetReply, _internal_metadata_),
      -1);
  PkgSysInfoGetReq_descriptor_ = file->message_type(12);
  static const int PkgSysInfoGetReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSysInfoGetReq, keystring_),
  };
  PkgSysInfoGetReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgSysInfoGetReq_descriptor_,
      PkgSysInfoGetReq::default_instance_,
      PkgSysInfoGetReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSysInfoGetReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgSysInfoGetReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSysInfoGetReq, _internal_metadata_),
      -1);
  PkgSysInfoGetReply_descriptor_ = file->message_type(13);
  static const int PkgSysInfoGetReply_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSysInfoGetReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSysInfoGetReply, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSysInfoGetReply, valuestring_),
  };
  PkgSysInfoGetReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgSysInfoGetReply_descriptor_,
      PkgSysInfoGetReply::default_instance_,
      PkgSysInfoGetReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSysInfoGetReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgSysInfoGetReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSysInfoGetReply, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_admin_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserInfo_descriptor_, &PkgUserInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserLoginReq_descriptor_, &PkgUserLoginReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserLoginReply_descriptor_, &PkgUserLoginReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserOperationReq_descriptor_, &PkgUserOperationReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserOperationReply_descriptor_, &PkgUserOperationReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgAdvQueryReq_descriptor_, &PkgAdvQueryReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgAdvQueryReply_descriptor_, &PkgAdvQueryReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgAdvInfo_descriptor_, &PkgAdvInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgAdvOperationReq_descriptor_, &PkgAdvOperationReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgAdvOperationReply_descriptor_, &PkgAdvOperationReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgSysInfoSetReq_descriptor_, &PkgSysInfoSetReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgSysInfoSetReply_descriptor_, &PkgSysInfoSetReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgSysInfoGetReq_descriptor_, &PkgSysInfoGetReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgSysInfoGetReply_descriptor_, &PkgSysInfoGetReply::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_admin_2eproto() {
  delete PkgUserInfo::default_instance_;
  delete PkgUserInfo_reflection_;
  delete PkgUserLoginReq::default_instance_;
  delete PkgUserLoginReq_reflection_;
  delete PkgUserLoginReply::default_instance_;
  delete PkgUserLoginReply_reflection_;
  delete PkgUserOperationReq::default_instance_;
  delete PkgUserOperationReq_reflection_;
  delete PkgUserOperationReply::default_instance_;
  delete PkgUserOperationReply_reflection_;
  delete PkgAdvQueryReq::default_instance_;
  delete PkgAdvQueryReq_reflection_;
  delete PkgAdvQueryReply::default_instance_;
  delete PkgAdvQueryReply_reflection_;
  delete PkgAdvInfo::default_instance_;
  delete PkgAdvInfo_reflection_;
  delete PkgAdvOperationReq::default_instance_;
  delete PkgAdvOperationReq_reflection_;
  delete PkgAdvOperationReply::default_instance_;
  delete PkgAdvOperationReply_reflection_;
  delete PkgSysInfoSetReq::default_instance_;
  delete PkgSysInfoSetReq_reflection_;
  delete PkgSysInfoSetReply::default_instance_;
  delete PkgSysInfoSetReply_reflection_;
  delete PkgSysInfoGetReq::default_instance_;
  delete PkgSysInfoGetReq_reflection_;
  delete PkgSysInfoGetReply::default_instance_;
  delete PkgSysInfoGetReply_reflection_;
}

void protobuf_AddDesc_admin_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013admin.proto\022\005admin\"Q\n\013PkgUserInfo\022\n\n\002i"
    "d\030\001 \001(\005\022\020\n\010username\030\002 \001(\t\022\020\n\010password\030\003 "
    "\001(\t\022\022\n\npermission\030\n \001(\005\"5\n\017PkgUserLoginR"
    "eq\022\020\n\010username\030\001 \001(\t\022\020\n\010password\030\002 \002(\t\"]"
    "\n\021PkgUserLoginReply\022\027\n\tissuccess\030\001 \002(\010:\004"
    "true\022\013\n\003err\030\002 \001(\t\022\016\n\006userid\030\003 \001(\005\022\022\n\nper"
    "mission\030\004 \001(\005\"\261\001\n\023PkgUserOperationReq\022\025\n"
    "\ruseroperation\030\001 \002(\005\022$\n\010userinfo\030\002 \001(\0132\022"
    ".admin.PkgUserInfo\022\016\n\006userid\030\n \001(\005\"M\n\017En"
    "UserOperation\022\022\n\016TO_INSERT_INFO\020\001\022\022\n\016TO_"
    "UPDATE_INFO\020\020\022\022\n\016TO_DELETE_INFO\020@\"G\n\025Pkg"
    "UserOperationReply\022\021\n\tissuccess\030\001 \002(\010\022\013\n"
    "\003err\030\002 \001(\t\022\016\n\006userid\030\005 \001(\005\"\177\n\016PkgAdvQuer"
    "yReq\022\024\n\tqueryflag\030\001 \002(\005:\0011\022\r\n\005advid\030\003 \001("
    "\005\022\017\n\007keyname\030\004 \001(\t\"7\n\013EnQueryType\022\n\n\006QT_"
    "ALL\020\000\022\014\n\010QT_ADVID\020\004\022\016\n\nQT_KEYNAME\020\010\"Z\n\020P"
    "kgAdvQueryReply\022\021\n\tissuccess\030\001 \002(\010\022\013\n\003er"
    "r\030\002 \001(\t\022&\n\013advinfolist\030\003 \003(\0132\021.admin.Pkg"
    "AdvInfo\"\223\001\n\nPkgAdvInfo\022\r\n\002id\030\001 \001(\005:\0010\022\014\n"
    "\004name\030\002 \001(\t\022\016\n\006urlpic\030\003 \001(\t\022\016\n\006advtxt\030\004 "
    "\001(\t\022\017\n\007advdesc\030\005 \001(\t\022\022\n\ncreatetime\030\006 \001(\t"
    "\022\022\n\nexpiretime\030\007 \001(\t\022\017\n\007picpath\030\010 \001(\t\"\253\001"
    "\n\022PkgAdvOperationReq\022\024\n\014advoperation\030\001 \002"
    "(\005\022\"\n\007advinfo\030\002 \001(\0132\021.admin.PkgAdvInfo\022\r"
    "\n\005advid\030\n \001(\005\"L\n\016EnAdvOperation\022\022\n\016TO_IN"
    "SERT_INFO\020\001\022\022\n\016TO_UPDATE_INFO\020\020\022\022\n\016TO_DE"
    "LETE_INFO\020@\"E\n\024PkgAdvOperationReply\022\021\n\ti"
    "ssuccess\030\001 \002(\010\022\013\n\003err\030\002 \001(\t\022\r\n\005advid\030\005 \001"
    "(\005\":\n\020PkgSysInfoSetReq\022\021\n\tkeystring\030\n \001("
    "\t\022\023\n\013valuestring\030\013 \001(\t\"4\n\022PkgSysInfoSetR"
    "eply\022\021\n\tissuccess\030\001 \002(\010\022\013\n\003err\030\002 \001(\t\"%\n\020"
    "PkgSysInfoGetReq\022\021\n\tkeystring\030\001 \001(\t\"I\n\022P"
    "kgSysInfoGetReply\022\021\n\tissuccess\030\001 \002(\010\022\013\n\003"
    "err\030\002 \001(\t\022\023\n\013valuestring\030\n \001(\t", 1350);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "admin.proto", &protobuf_RegisterTypes);
  PkgUserInfo::default_instance_ = new PkgUserInfo();
  PkgUserLoginReq::default_instance_ = new PkgUserLoginReq();
  PkgUserLoginReply::default_instance_ = new PkgUserLoginReply();
  PkgUserOperationReq::default_instance_ = new PkgUserOperationReq();
  PkgUserOperationReply::default_instance_ = new PkgUserOperationReply();
  PkgAdvQueryReq::default_instance_ = new PkgAdvQueryReq();
  PkgAdvQueryReply::default_instance_ = new PkgAdvQueryReply();
  PkgAdvInfo::default_instance_ = new PkgAdvInfo();
  PkgAdvOperationReq::default_instance_ = new PkgAdvOperationReq();
  PkgAdvOperationReply::default_instance_ = new PkgAdvOperationReply();
  PkgSysInfoSetReq::default_instance_ = new PkgSysInfoSetReq();
  PkgSysInfoSetReply::default_instance_ = new PkgSysInfoSetReply();
  PkgSysInfoGetReq::default_instance_ = new PkgSysInfoGetReq();
  PkgSysInfoGetReply::default_instance_ = new PkgSysInfoGetReply();
  PkgUserInfo::default_instance_->InitAsDefaultInstance();
  PkgUserLoginReq::default_instance_->InitAsDefaultInstance();
  PkgUserLoginReply::default_instance_->InitAsDefaultInstance();
  PkgUserOperationReq::default_instance_->InitAsDefaultInstance();
  PkgUserOperationReply::default_instance_->InitAsDefaultInstance();
  PkgAdvQueryReq::default_instance_->InitAsDefaultInstance();
  PkgAdvQueryReply::default_instance_->InitAsDefaultInstance();
  PkgAdvInfo::default_instance_->InitAsDefaultInstance();
  PkgAdvOperationReq::default_instance_->InitAsDefaultInstance();
  PkgAdvOperationReply::default_instance_->InitAsDefaultInstance();
  PkgSysInfoSetReq::default_instance_->InitAsDefaultInstance();
  PkgSysInfoSetReply::default_instance_->InitAsDefaultInstance();
  PkgSysInfoGetReq::default_instance_->InitAsDefaultInstance();
  PkgSysInfoGetReply::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_admin_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_admin_2eproto {
  StaticDescriptorInitializer_admin_2eproto() {
    protobuf_AddDesc_admin_2eproto();
  }
} static_descriptor_initializer_admin_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int PkgUserInfo::kIdFieldNumber;
const int PkgUserInfo::kUsernameFieldNumber;
const int PkgUserInfo::kPasswordFieldNumber;
const int PkgUserInfo::kPermissionFieldNumber;
#endif  // !_MSC_VER

PkgUserInfo::PkgUserInfo()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:admin.PkgUserInfo)
}

void PkgUserInfo::InitAsDefaultInstance() {
}

PkgUserInfo::PkgUserInfo(const PkgUserInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:admin.PkgUserInfo)
}

void PkgUserInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permission_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserInfo::~PkgUserInfo() {
  // @@protoc_insertion_point(destructor:admin.PkgUserInfo)
  SharedDtor();
}

void PkgUserInfo::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgUserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserInfo_descriptor_;
}

const PkgUserInfo& PkgUserInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_admin_2eproto();
  return *default_instance_;
}

PkgUserInfo* PkgUserInfo::default_instance_ = NULL;

PkgUserInfo* PkgUserInfo::New(::google::protobuf::Arena* arena) const {
  PkgUserInfo* n = new PkgUserInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgUserInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(id_, permission_);
    if (has_username()) {
      username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_password()) {
      password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:admin.PkgUserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_username;
        break;
      }

      // optional string username = 2;
      case 2: {
        if (tag == 18) {
         parse_username:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "admin.PkgUserInfo.username");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_password;
        break;
      }

      // optional string password = 3;
      case 3: {
        if (tag == 26) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "admin.PkgUserInfo.password");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_permission;
        break;
      }

      // optional int32 permission = 10;
      case 10: {
        if (tag == 80) {
         parse_permission:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &permission_)));
          set_has_permission();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:admin.PkgUserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:admin.PkgUserInfo)
  return false;
#undef DO_
}

void PkgUserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:admin.PkgUserInfo)
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string username = 2;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgUserInfo.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // optional string password = 3;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgUserInfo.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->password(), output);
  }

  // optional int32 permission = 10;
  if (has_permission()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->permission(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:admin.PkgUserInfo)
}

::google::protobuf::uint8* PkgUserInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:admin.PkgUserInfo)
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string username = 2;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgUserInfo.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // optional string password = 3;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgUserInfo.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->password(), target);
  }

  // optional int32 permission = 10;
  if (has_permission()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->permission(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:admin.PkgUserInfo)
  return target;
}

int PkgUserInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional string username = 2;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional string password = 3;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional int32 permission = 10;
    if (has_permission()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->permission());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserInfo::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserInfo::MergeFrom(const PkgUserInfo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_username()) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (from.has_password()) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (from.has_permission()) {
      set_permission(from.permission());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserInfo::CopyFrom(const PkgUserInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserInfo::IsInitialized() const {

  return true;
}

void PkgUserInfo::Swap(PkgUserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserInfo::InternalSwap(PkgUserInfo* other) {
  std::swap(id_, other->id_);
  username_.Swap(&other->username_);
  password_.Swap(&other->password_);
  std::swap(permission_, other->permission_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserInfo_descriptor_;
  metadata.reflection = PkgUserInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgUserLoginReq::kUsernameFieldNumber;
const int PkgUserLoginReq::kPasswordFieldNumber;
#endif  // !_MSC_VER

PkgUserLoginReq::PkgUserLoginReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:admin.PkgUserLoginReq)
}

void PkgUserLoginReq::InitAsDefaultInstance() {
}

PkgUserLoginReq::PkgUserLoginReq(const PkgUserLoginReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:admin.PkgUserLoginReq)
}

void PkgUserLoginReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserLoginReq::~PkgUserLoginReq() {
  // @@protoc_insertion_point(destructor:admin.PkgUserLoginReq)
  SharedDtor();
}

void PkgUserLoginReq::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgUserLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserLoginReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserLoginReq_descriptor_;
}

const PkgUserLoginReq& PkgUserLoginReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_admin_2eproto();
  return *default_instance_;
}

PkgUserLoginReq* PkgUserLoginReq::default_instance_ = NULL;

PkgUserLoginReq* PkgUserLoginReq::New(::google::protobuf::Arena* arena) const {
  PkgUserLoginReq* n = new PkgUserLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserLoginReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_username()) {
      username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_password()) {
      password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:admin.PkgUserLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string username = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "admin.PkgUserLoginReq.username");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_password;
        break;
      }

      // required string password = 2;
      case 2: {
        if (tag == 18) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "admin.PkgUserLoginReq.password");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:admin.PkgUserLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:admin.PkgUserLoginReq)
  return false;
#undef DO_
}

void PkgUserLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:admin.PkgUserLoginReq)
  // optional string username = 1;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgUserLoginReq.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // required string password = 2;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgUserLoginReq.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:admin.PkgUserLoginReq)
}

::google::protobuf::uint8* PkgUserLoginReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:admin.PkgUserLoginReq)
  // optional string username = 1;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgUserLoginReq.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // required string password = 2;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgUserLoginReq.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:admin.PkgUserLoginReq)
  return target;
}

int PkgUserLoginReq::ByteSize() const {
  int total_size = 0;

  // required string password = 2;
  if (has_password()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }
  // optional string username = 1;
  if (has_username()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserLoginReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserLoginReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserLoginReq::MergeFrom(const PkgUserLoginReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_username()) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (from.has_password()) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserLoginReq::CopyFrom(const PkgUserLoginReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserLoginReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  return true;
}

void PkgUserLoginReq::Swap(PkgUserLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserLoginReq::InternalSwap(PkgUserLoginReq* other) {
  username_.Swap(&other->username_);
  password_.Swap(&other->password_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserLoginReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserLoginReq_descriptor_;
  metadata.reflection = PkgUserLoginReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgUserLoginReply::kIssuccessFieldNumber;
const int PkgUserLoginReply::kErrFieldNumber;
const int PkgUserLoginReply::kUseridFieldNumber;
const int PkgUserLoginReply::kPermissionFieldNumber;
#endif  // !_MSC_VER

PkgUserLoginReply::PkgUserLoginReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:admin.PkgUserLoginReply)
}

void PkgUserLoginReply::InitAsDefaultInstance() {
}

PkgUserLoginReply::PkgUserLoginReply(const PkgUserLoginReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:admin.PkgUserLoginReply)
}

void PkgUserLoginReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = true;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = 0;
  permission_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserLoginReply::~PkgUserLoginReply() {
  // @@protoc_insertion_point(destructor:admin.PkgUserLoginReply)
  SharedDtor();
}

void PkgUserLoginReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgUserLoginReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserLoginReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserLoginReply_descriptor_;
}

const PkgUserLoginReply& PkgUserLoginReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_admin_2eproto();
  return *default_instance_;
}

PkgUserLoginReply* PkgUserLoginReply::default_instance_ = NULL;

PkgUserLoginReply* PkgUserLoginReply::New(::google::protobuf::Arena* arena) const {
  PkgUserLoginReply* n = new PkgUserLoginReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserLoginReply::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgUserLoginReply*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(userid_, permission_);
    issuccess_ = true;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserLoginReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:admin.PkgUserLoginReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1 [default = true];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "admin.PkgUserLoginReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_userid;
        break;
      }

      // optional int32 userid = 3;
      case 3: {
        if (tag == 24) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
          set_has_userid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_permission;
        break;
      }

      // optional int32 permission = 4;
      case 4: {
        if (tag == 32) {
         parse_permission:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &permission_)));
          set_has_permission();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:admin.PkgUserLoginReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:admin.PkgUserLoginReply)
  return false;
#undef DO_
}

void PkgUserLoginReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:admin.PkgUserLoginReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgUserLoginReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  // optional int32 userid = 3;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->userid(), output);
  }

  // optional int32 permission = 4;
  if (has_permission()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->permission(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:admin.PkgUserLoginReply)
}

::google::protobuf::uint8* PkgUserLoginReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:admin.PkgUserLoginReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgUserLoginReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  // optional int32 userid = 3;
  if (has_userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->userid(), target);
  }

  // optional int32 permission = 4;
  if (has_permission()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->permission(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:admin.PkgUserLoginReply)
  return target;
}

int PkgUserLoginReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  if (_has_bits_[1 / 32] & 14) {
    // optional string err = 2;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->err());
    }

    // optional int32 userid = 3;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional int32 permission = 4;
    if (has_permission()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->permission());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserLoginReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserLoginReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserLoginReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserLoginReply::MergeFrom(const PkgUserLoginReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
    if (from.has_userid()) {
      set_userid(from.userid());
    }
    if (from.has_permission()) {
      set_permission(from.permission());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserLoginReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserLoginReply::CopyFrom(const PkgUserLoginReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserLoginReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgUserLoginReply::Swap(PkgUserLoginReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserLoginReply::InternalSwap(PkgUserLoginReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  std::swap(userid_, other->userid_);
  std::swap(permission_, other->permission_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserLoginReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserLoginReply_descriptor_;
  metadata.reflection = PkgUserLoginReply_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* PkgUserOperationReq_EnUserOperation_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserOperationReq_EnUserOperation_descriptor_;
}
bool PkgUserOperationReq_EnUserOperation_IsValid(int value) {
  switch(value) {
    case 1:
    case 16:
    case 64:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PkgUserOperationReq_EnUserOperation PkgUserOperationReq::TO_INSERT_INFO;
const PkgUserOperationReq_EnUserOperation PkgUserOperationReq::TO_UPDATE_INFO;
const PkgUserOperationReq_EnUserOperation PkgUserOperationReq::TO_DELETE_INFO;
const PkgUserOperationReq_EnUserOperation PkgUserOperationReq::EnUserOperation_MIN;
const PkgUserOperationReq_EnUserOperation PkgUserOperationReq::EnUserOperation_MAX;
const int PkgUserOperationReq::EnUserOperation_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int PkgUserOperationReq::kUseroperationFieldNumber;
const int PkgUserOperationReq::kUserinfoFieldNumber;
const int PkgUserOperationReq::kUseridFieldNumber;
#endif  // !_MSC_VER

PkgUserOperationReq::PkgUserOperationReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:admin.PkgUserOperationReq)
}

void PkgUserOperationReq::InitAsDefaultInstance() {
  userinfo_ = const_cast< ::admin::PkgUserInfo*>(&::admin::PkgUserInfo::default_instance());
}

PkgUserOperationReq::PkgUserOperationReq(const PkgUserOperationReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:admin.PkgUserOperationReq)
}

void PkgUserOperationReq::SharedCtor() {
  _cached_size_ = 0;
  useroperation_ = 0;
  userinfo_ = NULL;
  userid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserOperationReq::~PkgUserOperationReq() {
  // @@protoc_insertion_point(destructor:admin.PkgUserOperationReq)
  SharedDtor();
}

void PkgUserOperationReq::SharedDtor() {
  if (this != default_instance_) {
    delete userinfo_;
  }
}

void PkgUserOperationReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserOperationReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserOperationReq_descriptor_;
}

const PkgUserOperationReq& PkgUserOperationReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_admin_2eproto();
  return *default_instance_;
}

PkgUserOperationReq* PkgUserOperationReq::default_instance_ = NULL;

PkgUserOperationReq* PkgUserOperationReq::New(::google::protobuf::Arena* arena) const {
  PkgUserOperationReq* n = new PkgUserOperationReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserOperationReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgUserOperationReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(useroperation_, userid_);
    if (has_userinfo()) {
      if (userinfo_ != NULL) userinfo_->::admin::PkgUserInfo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserOperationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:admin.PkgUserOperationReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 useroperation = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &useroperation_)));
          set_has_useroperation();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_userinfo;
        break;
      }

      // optional .admin.PkgUserInfo userinfo = 2;
      case 2: {
        if (tag == 18) {
         parse_userinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_userid;
        break;
      }

      // optional int32 userid = 10;
      case 10: {
        if (tag == 80) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
          set_has_userid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:admin.PkgUserOperationReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:admin.PkgUserOperationReq)
  return false;
#undef DO_
}

void PkgUserOperationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:admin.PkgUserOperationReq)
  // required int32 useroperation = 1;
  if (has_useroperation()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->useroperation(), output);
  }

  // optional .admin.PkgUserInfo userinfo = 2;
  if (has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->userinfo_, output);
  }

  // optional int32 userid = 10;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:admin.PkgUserOperationReq)
}

::google::protobuf::uint8* PkgUserOperationReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:admin.PkgUserOperationReq)
  // required int32 useroperation = 1;
  if (has_useroperation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->useroperation(), target);
  }

  // optional .admin.PkgUserInfo userinfo = 2;
  if (has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->userinfo_, target);
  }

  // optional int32 userid = 10;
  if (has_userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:admin.PkgUserOperationReq)
  return target;
}

int PkgUserOperationReq::ByteSize() const {
  int total_size = 0;

  // required int32 useroperation = 1;
  if (has_useroperation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->useroperation());
  }
  if (_has_bits_[1 / 32] & 6) {
    // optional .admin.PkgUserInfo userinfo = 2;
    if (has_userinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->userinfo_);
    }

    // optional int32 userid = 10;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserOperationReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserOperationReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserOperationReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserOperationReq::MergeFrom(const PkgUserOperationReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_useroperation()) {
      set_useroperation(from.useroperation());
    }
    if (from.has_userinfo()) {
      mutable_userinfo()->::admin::PkgUserInfo::MergeFrom(from.userinfo());
    }
    if (from.has_userid()) {
      set_userid(from.userid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserOperationReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserOperationReq::CopyFrom(const PkgUserOperationReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserOperationReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgUserOperationReq::Swap(PkgUserOperationReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserOperationReq::InternalSwap(PkgUserOperationReq* other) {
  std::swap(useroperation_, other->useroperation_);
  std::swap(userinfo_, other->userinfo_);
  std::swap(userid_, other->userid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserOperationReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserOperationReq_descriptor_;
  metadata.reflection = PkgUserOperationReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgUserOperationReply::kIssuccessFieldNumber;
const int PkgUserOperationReply::kErrFieldNumber;
const int PkgUserOperationReply::kUseridFieldNumber;
#endif  // !_MSC_VER

PkgUserOperationReply::PkgUserOperationReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:admin.PkgUserOperationReply)
}

void PkgUserOperationReply::InitAsDefaultInstance() {
}

PkgUserOperationReply::PkgUserOperationReply(const PkgUserOperationReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:admin.PkgUserOperationReply)
}

void PkgUserOperationReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = false;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserOperationReply::~PkgUserOperationReply() {
  // @@protoc_insertion_point(destructor:admin.PkgUserOperationReply)
  SharedDtor();
}

void PkgUserOperationReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgUserOperationReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserOperationReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserOperationReply_descriptor_;
}

const PkgUserOperationReply& PkgUserOperationReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_admin_2eproto();
  return *default_instance_;
}

PkgUserOperationReply* PkgUserOperationReply::default_instance_ = NULL;

PkgUserOperationReply* PkgUserOperationReply::New(::google::protobuf::Arena* arena) const {
  PkgUserOperationReply* n = new PkgUserOperationReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserOperationReply::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgUserOperationReply*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(issuccess_, userid_);
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserOperationReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:admin.PkgUserOperationReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "admin.PkgUserOperationReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_userid;
        break;
      }

      // optional int32 userid = 5;
      case 5: {
        if (tag == 40) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
          set_has_userid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:admin.PkgUserOperationReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:admin.PkgUserOperationReply)
  return false;
#undef DO_
}

void PkgUserOperationReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:admin.PkgUserOperationReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgUserOperationReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  // optional int32 userid = 5;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:admin.PkgUserOperationReply)
}

::google::protobuf::uint8* PkgUserOperationReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:admin.PkgUserOperationReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgUserOperationReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  // optional int32 userid = 5;
  if (has_userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:admin.PkgUserOperationReply)
  return target;
}

int PkgUserOperationReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1;
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  if (_has_bits_[1 / 32] & 6) {
    // optional string err = 2;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->err());
    }

    // optional int32 userid = 5;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserOperationReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserOperationReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserOperationReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserOperationReply::MergeFrom(const PkgUserOperationReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
    if (from.has_userid()) {
      set_userid(from.userid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserOperationReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserOperationReply::CopyFrom(const PkgUserOperationReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserOperationReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgUserOperationReply::Swap(PkgUserOperationReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserOperationReply::InternalSwap(PkgUserOperationReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  std::swap(userid_, other->userid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserOperationReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserOperationReply_descriptor_;
  metadata.reflection = PkgUserOperationReply_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* PkgAdvQueryReq_EnQueryType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgAdvQueryReq_EnQueryType_descriptor_;
}
bool PkgAdvQueryReq_EnQueryType_IsValid(int value) {
  switch(value) {
    case 0:
    case 4:
    case 8:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PkgAdvQueryReq_EnQueryType PkgAdvQueryReq::QT_ALL;
const PkgAdvQueryReq_EnQueryType PkgAdvQueryReq::QT_ADVID;
const PkgAdvQueryReq_EnQueryType PkgAdvQueryReq::QT_KEYNAME;
const PkgAdvQueryReq_EnQueryType PkgAdvQueryReq::EnQueryType_MIN;
const PkgAdvQueryReq_EnQueryType PkgAdvQueryReq::EnQueryType_MAX;
const int PkgAdvQueryReq::EnQueryType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int PkgAdvQueryReq::kQueryflagFieldNumber;
const int PkgAdvQueryReq::kAdvidFieldNumber;
const int PkgAdvQueryReq::kKeynameFieldNumber;
#endif  // !_MSC_VER

PkgAdvQueryReq::PkgAdvQueryReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:admin.PkgAdvQueryReq)
}

void PkgAdvQueryReq::InitAsDefaultInstance() {
}

PkgAdvQueryReq::PkgAdvQueryReq(const PkgAdvQueryReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:admin.PkgAdvQueryReq)
}

void PkgAdvQueryReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  queryflag_ = 1;
  advid_ = 0;
  keyname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgAdvQueryReq::~PkgAdvQueryReq() {
  // @@protoc_insertion_point(destructor:admin.PkgAdvQueryReq)
  SharedDtor();
}

void PkgAdvQueryReq::SharedDtor() {
  keyname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgAdvQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgAdvQueryReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgAdvQueryReq_descriptor_;
}

const PkgAdvQueryReq& PkgAdvQueryReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_admin_2eproto();
  return *default_instance_;
}

PkgAdvQueryReq* PkgAdvQueryReq::default_instance_ = NULL;

PkgAdvQueryReq* PkgAdvQueryReq::New(::google::protobuf::Arena* arena) const {
  PkgAdvQueryReq* n = new PkgAdvQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgAdvQueryReq::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    queryflag_ = 1;
    advid_ = 0;
    if (has_keyname()) {
      keyname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgAdvQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:admin.PkgAdvQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 queryflag = 1 [default = 1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &queryflag_)));
          set_has_queryflag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_advid;
        break;
      }

      // optional int32 advid = 3;
      case 3: {
        if (tag == 24) {
         parse_advid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &advid_)));
          set_has_advid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_keyname;
        break;
      }

      // optional string keyname = 4;
      case 4: {
        if (tag == 34) {
         parse_keyname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_keyname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->keyname().data(), this->keyname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "admin.PkgAdvQueryReq.keyname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:admin.PkgAdvQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:admin.PkgAdvQueryReq)
  return false;
#undef DO_
}

void PkgAdvQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:admin.PkgAdvQueryReq)
  // required int32 queryflag = 1 [default = 1];
  if (has_queryflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->queryflag(), output);
  }

  // optional int32 advid = 3;
  if (has_advid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->advid(), output);
  }

  // optional string keyname = 4;
  if (has_keyname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keyname().data(), this->keyname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgAdvQueryReq.keyname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->keyname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:admin.PkgAdvQueryReq)
}

::google::protobuf::uint8* PkgAdvQueryReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:admin.PkgAdvQueryReq)
  // required int32 queryflag = 1 [default = 1];
  if (has_queryflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->queryflag(), target);
  }

  // optional int32 advid = 3;
  if (has_advid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->advid(), target);
  }

  // optional string keyname = 4;
  if (has_keyname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keyname().data(), this->keyname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgAdvQueryReq.keyname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->keyname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:admin.PkgAdvQueryReq)
  return target;
}

int PkgAdvQueryReq::ByteSize() const {
  int total_size = 0;

  // required int32 queryflag = 1 [default = 1];
  if (has_queryflag()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->queryflag());
  }
  if (_has_bits_[1 / 32] & 6) {
    // optional int32 advid = 3;
    if (has_advid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->advid());
    }

    // optional string keyname = 4;
    if (has_keyname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->keyname());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgAdvQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgAdvQueryReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgAdvQueryReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgAdvQueryReq::MergeFrom(const PkgAdvQueryReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_queryflag()) {
      set_queryflag(from.queryflag());
    }
    if (from.has_advid()) {
      set_advid(from.advid());
    }
    if (from.has_keyname()) {
      set_has_keyname();
      keyname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyname_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgAdvQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgAdvQueryReq::CopyFrom(const PkgAdvQueryReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgAdvQueryReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgAdvQueryReq::Swap(PkgAdvQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgAdvQueryReq::InternalSwap(PkgAdvQueryReq* other) {
  std::swap(queryflag_, other->queryflag_);
  std::swap(advid_, other->advid_);
  keyname_.Swap(&other->keyname_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgAdvQueryReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgAdvQueryReq_descriptor_;
  metadata.reflection = PkgAdvQueryReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgAdvQueryReply::kIssuccessFieldNumber;
const int PkgAdvQueryReply::kErrFieldNumber;
const int PkgAdvQueryReply::kAdvinfolistFieldNumber;
#endif  // !_MSC_VER

PkgAdvQueryReply::PkgAdvQueryReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:admin.PkgAdvQueryReply)
}

void PkgAdvQueryReply::InitAsDefaultInstance() {
}

PkgAdvQueryReply::PkgAdvQueryReply(const PkgAdvQueryReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:admin.PkgAdvQueryReply)
}

void PkgAdvQueryReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = false;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgAdvQueryReply::~PkgAdvQueryReply() {
  // @@protoc_insertion_point(destructor:admin.PkgAdvQueryReply)
  SharedDtor();
}

void PkgAdvQueryReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgAdvQueryReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgAdvQueryReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgAdvQueryReply_descriptor_;
}

const PkgAdvQueryReply& PkgAdvQueryReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_admin_2eproto();
  return *default_instance_;
}

PkgAdvQueryReply* PkgAdvQueryReply::default_instance_ = NULL;

PkgAdvQueryReply* PkgAdvQueryReply::New(::google::protobuf::Arena* arena) const {
  PkgAdvQueryReply* n = new PkgAdvQueryReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgAdvQueryReply::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    issuccess_ = false;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  advinfolist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgAdvQueryReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:admin.PkgAdvQueryReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "admin.PkgAdvQueryReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_advinfolist;
        break;
      }

      // repeated .admin.PkgAdvInfo advinfolist = 3;
      case 3: {
        if (tag == 26) {
         parse_advinfolist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_advinfolist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_advinfolist;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:admin.PkgAdvQueryReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:admin.PkgAdvQueryReply)
  return false;
#undef DO_
}

void PkgAdvQueryReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:admin.PkgAdvQueryReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgAdvQueryReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  // repeated .admin.PkgAdvInfo advinfolist = 3;
  for (unsigned int i = 0, n = this->advinfolist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->advinfolist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:admin.PkgAdvQueryReply)
}

::google::protobuf::uint8* PkgAdvQueryReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:admin.PkgAdvQueryReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgAdvQueryReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  // repeated .admin.PkgAdvInfo advinfolist = 3;
  for (unsigned int i = 0, n = this->advinfolist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->advinfolist(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:admin.PkgAdvQueryReply)
  return target;
}

int PkgAdvQueryReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1;
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  // optional string err = 2;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  // repeated .admin.PkgAdvInfo advinfolist = 3;
  total_size += 1 * this->advinfolist_size();
  for (int i = 0; i < this->advinfolist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->advinfolist(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgAdvQueryReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgAdvQueryReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgAdvQueryReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgAdvQueryReply::MergeFrom(const PkgAdvQueryReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  advinfolist_.MergeFrom(from.advinfolist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgAdvQueryReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgAdvQueryReply::CopyFrom(const PkgAdvQueryReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgAdvQueryReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgAdvQueryReply::Swap(PkgAdvQueryReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgAdvQueryReply::InternalSwap(PkgAdvQueryReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  advinfolist_.UnsafeArenaSwap(&other->advinfolist_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgAdvQueryReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgAdvQueryReply_descriptor_;
  metadata.reflection = PkgAdvQueryReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgAdvInfo::kIdFieldNumber;
const int PkgAdvInfo::kNameFieldNumber;
const int PkgAdvInfo::kUrlpicFieldNumber;
const int PkgAdvInfo::kAdvtxtFieldNumber;
const int PkgAdvInfo::kAdvdescFieldNumber;
const int PkgAdvInfo::kCreatetimeFieldNumber;
const int PkgAdvInfo::kExpiretimeFieldNumber;
const int PkgAdvInfo::kPicpathFieldNumber;
#endif  // !_MSC_VER

PkgAdvInfo::PkgAdvInfo()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:admin.PkgAdvInfo)
}

void PkgAdvInfo::InitAsDefaultInstance() {
}

PkgAdvInfo::PkgAdvInfo(const PkgAdvInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:admin.PkgAdvInfo)
}

void PkgAdvInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  urlpic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  advtxt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  advdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiretime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  picpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgAdvInfo::~PkgAdvInfo() {
  // @@protoc_insertion_point(destructor:admin.PkgAdvInfo)
  SharedDtor();
}

void PkgAdvInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  urlpic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  advtxt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  advdesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiretime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  picpath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgAdvInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgAdvInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgAdvInfo_descriptor_;
}

const PkgAdvInfo& PkgAdvInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_admin_2eproto();
  return *default_instance_;
}

PkgAdvInfo* PkgAdvInfo::default_instance_ = NULL;

PkgAdvInfo* PkgAdvInfo::New(::google::protobuf::Arena* arena) const {
  PkgAdvInfo* n = new PkgAdvInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgAdvInfo::Clear() {
  if (_has_bits_[0 / 32] & 255) {
    id_ = 0;
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_urlpic()) {
      urlpic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_advtxt()) {
      advtxt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_advdesc()) {
      advdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_createtime()) {
      createtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_expiretime()) {
      expiretime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_picpath()) {
      picpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgAdvInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:admin.PkgAdvInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "admin.PkgAdvInfo.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_urlpic;
        break;
      }

      // optional string urlpic = 3;
      case 3: {
        if (tag == 26) {
         parse_urlpic:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_urlpic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->urlpic().data(), this->urlpic().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "admin.PkgAdvInfo.urlpic");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_advtxt;
        break;
      }

      // optional string advtxt = 4;
      case 4: {
        if (tag == 34) {
         parse_advtxt:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_advtxt()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->advtxt().data(), this->advtxt().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "admin.PkgAdvInfo.advtxt");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_advdesc;
        break;
      }

      // optional string advdesc = 5;
      case 5: {
        if (tag == 42) {
         parse_advdesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_advdesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->advdesc().data(), this->advdesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "admin.PkgAdvInfo.advdesc");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_createtime;
        break;
      }

      // optional string createtime = 6;
      case 6: {
        if (tag == 50) {
         parse_createtime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_createtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->createtime().data(), this->createtime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "admin.PkgAdvInfo.createtime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_expiretime;
        break;
      }

      // optional string expiretime = 7;
      case 7: {
        if (tag == 58) {
         parse_expiretime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_expiretime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->expiretime().data(), this->expiretime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "admin.PkgAdvInfo.expiretime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_picpath;
        break;
      }

      // optional string picpath = 8;
      case 8: {
        if (tag == 66) {
         parse_picpath:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_picpath()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->picpath().data(), this->picpath().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "admin.PkgAdvInfo.picpath");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:admin.PkgAdvInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:admin.PkgAdvInfo)
  return false;
#undef DO_
}

void PkgAdvInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:admin.PkgAdvInfo)
  // optional int32 id = 1 [default = 0];
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgAdvInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string urlpic = 3;
  if (has_urlpic()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->urlpic().data(), this->urlpic().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgAdvInfo.urlpic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->urlpic(), output);
  }

  // optional string advtxt = 4;
  if (has_advtxt()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->advtxt().data(), this->advtxt().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgAdvInfo.advtxt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->advtxt(), output);
  }

  // optional string advdesc = 5;
  if (has_advdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->advdesc().data(), this->advdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgAdvInfo.advdesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->advdesc(), output);
  }

  // optional string createtime = 6;
  if (has_createtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createtime().data(), this->createtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgAdvInfo.createtime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->createtime(), output);
  }

  // optional string expiretime = 7;
  if (has_expiretime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->expiretime().data(), this->expiretime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgAdvInfo.expiretime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->expiretime(), output);
  }

  // optional string picpath = 8;
  if (has_picpath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->picpath().data(), this->picpath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgAdvInfo.picpath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->picpath(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:admin.PkgAdvInfo)
}

::google::protobuf::uint8* PkgAdvInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:admin.PkgAdvInfo)
  // optional int32 id = 1 [default = 0];
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgAdvInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string urlpic = 3;
  if (has_urlpic()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->urlpic().data(), this->urlpic().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgAdvInfo.urlpic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->urlpic(), target);
  }

  // optional string advtxt = 4;
  if (has_advtxt()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->advtxt().data(), this->advtxt().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgAdvInfo.advtxt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->advtxt(), target);
  }

  // optional string advdesc = 5;
  if (has_advdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->advdesc().data(), this->advdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgAdvInfo.advdesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->advdesc(), target);
  }

  // optional string createtime = 6;
  if (has_createtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createtime().data(), this->createtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgAdvInfo.createtime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->createtime(), target);
  }

  // optional string expiretime = 7;
  if (has_expiretime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->expiretime().data(), this->expiretime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgAdvInfo.expiretime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->expiretime(), target);
  }

  // optional string picpath = 8;
  if (has_picpath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->picpath().data(), this->picpath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgAdvInfo.picpath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->picpath(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:admin.PkgAdvInfo)
  return target;
}

int PkgAdvInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255) {
    // optional int32 id = 1 [default = 0];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string urlpic = 3;
    if (has_urlpic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->urlpic());
    }

    // optional string advtxt = 4;
    if (has_advtxt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->advtxt());
    }

    // optional string advdesc = 5;
    if (has_advdesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->advdesc());
    }

    // optional string createtime = 6;
    if (has_createtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->createtime());
    }

    // optional string expiretime = 7;
    if (has_expiretime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->expiretime());
    }

    // optional string picpath = 8;
    if (has_picpath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->picpath());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgAdvInfo::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgAdvInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgAdvInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgAdvInfo::MergeFrom(const PkgAdvInfo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_urlpic()) {
      set_has_urlpic();
      urlpic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.urlpic_);
    }
    if (from.has_advtxt()) {
      set_has_advtxt();
      advtxt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.advtxt_);
    }
    if (from.has_advdesc()) {
      set_has_advdesc();
      advdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.advdesc_);
    }
    if (from.has_createtime()) {
      set_has_createtime();
      createtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.createtime_);
    }
    if (from.has_expiretime()) {
      set_has_expiretime();
      expiretime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.expiretime_);
    }
    if (from.has_picpath()) {
      set_has_picpath();
      picpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.picpath_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgAdvInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgAdvInfo::CopyFrom(const PkgAdvInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgAdvInfo::IsInitialized() const {

  return true;
}

void PkgAdvInfo::Swap(PkgAdvInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgAdvInfo::InternalSwap(PkgAdvInfo* other) {
  std::swap(id_, other->id_);
  name_.Swap(&other->name_);
  urlpic_.Swap(&other->urlpic_);
  advtxt_.Swap(&other->advtxt_);
  advdesc_.Swap(&other->advdesc_);
  createtime_.Swap(&other->createtime_);
  expiretime_.Swap(&other->expiretime_);
  picpath_.Swap(&other->picpath_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgAdvInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgAdvInfo_descriptor_;
  metadata.reflection = PkgAdvInfo_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* PkgAdvOperationReq_EnAdvOperation_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgAdvOperationReq_EnAdvOperation_descriptor_;
}
bool PkgAdvOperationReq_EnAdvOperation_IsValid(int value) {
  switch(value) {
    case 1:
    case 16:
    case 64:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PkgAdvOperationReq_EnAdvOperation PkgAdvOperationReq::TO_INSERT_INFO;
const PkgAdvOperationReq_EnAdvOperation PkgAdvOperationReq::TO_UPDATE_INFO;
const PkgAdvOperationReq_EnAdvOperation PkgAdvOperationReq::TO_DELETE_INFO;
const PkgAdvOperationReq_EnAdvOperation PkgAdvOperationReq::EnAdvOperation_MIN;
const PkgAdvOperationReq_EnAdvOperation PkgAdvOperationReq::EnAdvOperation_MAX;
const int PkgAdvOperationReq::EnAdvOperation_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int PkgAdvOperationReq::kAdvoperationFieldNumber;
const int PkgAdvOperationReq::kAdvinfoFieldNumber;
const int PkgAdvOperationReq::kAdvidFieldNumber;
#endif  // !_MSC_VER

PkgAdvOperationReq::PkgAdvOperationReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:admin.PkgAdvOperationReq)
}

void PkgAdvOperationReq::InitAsDefaultInstance() {
  advinfo_ = const_cast< ::admin::PkgAdvInfo*>(&::admin::PkgAdvInfo::default_instance());
}

PkgAdvOperationReq::PkgAdvOperationReq(const PkgAdvOperationReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:admin.PkgAdvOperationReq)
}

void PkgAdvOperationReq::SharedCtor() {
  _cached_size_ = 0;
  advoperation_ = 0;
  advinfo_ = NULL;
  advid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgAdvOperationReq::~PkgAdvOperationReq() {
  // @@protoc_insertion_point(destructor:admin.PkgAdvOperationReq)
  SharedDtor();
}

void PkgAdvOperationReq::SharedDtor() {
  if (this != default_instance_) {
    delete advinfo_;
  }
}

void PkgAdvOperationReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgAdvOperationReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgAdvOperationReq_descriptor_;
}

const PkgAdvOperationReq& PkgAdvOperationReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_admin_2eproto();
  return *default_instance_;
}

PkgAdvOperationReq* PkgAdvOperationReq::default_instance_ = NULL;

PkgAdvOperationReq* PkgAdvOperationReq::New(::google::protobuf::Arena* arena) const {
  PkgAdvOperationReq* n = new PkgAdvOperationReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgAdvOperationReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgAdvOperationReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(advoperation_, advid_);
    if (has_advinfo()) {
      if (advinfo_ != NULL) advinfo_->::admin::PkgAdvInfo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgAdvOperationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:admin.PkgAdvOperationReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 advoperation = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &advoperation_)));
          set_has_advoperation();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_advinfo;
        break;
      }

      // optional .admin.PkgAdvInfo advinfo = 2;
      case 2: {
        if (tag == 18) {
         parse_advinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_advinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_advid;
        break;
      }

      // optional int32 advid = 10;
      case 10: {
        if (tag == 80) {
         parse_advid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &advid_)));
          set_has_advid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:admin.PkgAdvOperationReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:admin.PkgAdvOperationReq)
  return false;
#undef DO_
}

void PkgAdvOperationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:admin.PkgAdvOperationReq)
  // required int32 advoperation = 1;
  if (has_advoperation()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->advoperation(), output);
  }

  // optional .admin.PkgAdvInfo advinfo = 2;
  if (has_advinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->advinfo_, output);
  }

  // optional int32 advid = 10;
  if (has_advid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->advid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:admin.PkgAdvOperationReq)
}

::google::protobuf::uint8* PkgAdvOperationReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:admin.PkgAdvOperationReq)
  // required int32 advoperation = 1;
  if (has_advoperation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->advoperation(), target);
  }

  // optional .admin.PkgAdvInfo advinfo = 2;
  if (has_advinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->advinfo_, target);
  }

  // optional int32 advid = 10;
  if (has_advid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->advid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:admin.PkgAdvOperationReq)
  return target;
}

int PkgAdvOperationReq::ByteSize() const {
  int total_size = 0;

  // required int32 advoperation = 1;
  if (has_advoperation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->advoperation());
  }
  if (_has_bits_[1 / 32] & 6) {
    // optional .admin.PkgAdvInfo advinfo = 2;
    if (has_advinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->advinfo_);
    }

    // optional int32 advid = 10;
    if (has_advid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->advid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgAdvOperationReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgAdvOperationReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgAdvOperationReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgAdvOperationReq::MergeFrom(const PkgAdvOperationReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_advoperation()) {
      set_advoperation(from.advoperation());
    }
    if (from.has_advinfo()) {
      mutable_advinfo()->::admin::PkgAdvInfo::MergeFrom(from.advinfo());
    }
    if (from.has_advid()) {
      set_advid(from.advid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgAdvOperationReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgAdvOperationReq::CopyFrom(const PkgAdvOperationReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgAdvOperationReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgAdvOperationReq::Swap(PkgAdvOperationReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgAdvOperationReq::InternalSwap(PkgAdvOperationReq* other) {
  std::swap(advoperation_, other->advoperation_);
  std::swap(advinfo_, other->advinfo_);
  std::swap(advid_, other->advid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgAdvOperationReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgAdvOperationReq_descriptor_;
  metadata.reflection = PkgAdvOperationReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgAdvOperationReply::kIssuccessFieldNumber;
const int PkgAdvOperationReply::kErrFieldNumber;
const int PkgAdvOperationReply::kAdvidFieldNumber;
#endif  // !_MSC_VER

PkgAdvOperationReply::PkgAdvOperationReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:admin.PkgAdvOperationReply)
}

void PkgAdvOperationReply::InitAsDefaultInstance() {
}

PkgAdvOperationReply::PkgAdvOperationReply(const PkgAdvOperationReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:admin.PkgAdvOperationReply)
}

void PkgAdvOperationReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = false;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  advid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgAdvOperationReply::~PkgAdvOperationReply() {
  // @@protoc_insertion_point(destructor:admin.PkgAdvOperationReply)
  SharedDtor();
}

void PkgAdvOperationReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgAdvOperationReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgAdvOperationReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgAdvOperationReply_descriptor_;
}

const PkgAdvOperationReply& PkgAdvOperationReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_admin_2eproto();
  return *default_instance_;
}

PkgAdvOperationReply* PkgAdvOperationReply::default_instance_ = NULL;

PkgAdvOperationReply* PkgAdvOperationReply::New(::google::protobuf::Arena* arena) const {
  PkgAdvOperationReply* n = new PkgAdvOperationReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgAdvOperationReply::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgAdvOperationReply*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(issuccess_, advid_);
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgAdvOperationReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:admin.PkgAdvOperationReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "admin.PkgAdvOperationReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_advid;
        break;
      }

      // optional int32 advid = 5;
      case 5: {
        if (tag == 40) {
         parse_advid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &advid_)));
          set_has_advid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:admin.PkgAdvOperationReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:admin.PkgAdvOperationReply)
  return false;
#undef DO_
}

void PkgAdvOperationReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:admin.PkgAdvOperationReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgAdvOperationReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  // optional int32 advid = 5;
  if (has_advid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->advid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:admin.PkgAdvOperationReply)
}

::google::protobuf::uint8* PkgAdvOperationReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:admin.PkgAdvOperationReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgAdvOperationReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  // optional int32 advid = 5;
  if (has_advid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->advid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:admin.PkgAdvOperationReply)
  return target;
}

int PkgAdvOperationReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1;
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  if (_has_bits_[1 / 32] & 6) {
    // optional string err = 2;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->err());
    }

    // optional int32 advid = 5;
    if (has_advid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->advid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgAdvOperationReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgAdvOperationReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgAdvOperationReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgAdvOperationReply::MergeFrom(const PkgAdvOperationReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
    if (from.has_advid()) {
      set_advid(from.advid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgAdvOperationReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgAdvOperationReply::CopyFrom(const PkgAdvOperationReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgAdvOperationReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgAdvOperationReply::Swap(PkgAdvOperationReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgAdvOperationReply::InternalSwap(PkgAdvOperationReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  std::swap(advid_, other->advid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgAdvOperationReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgAdvOperationReply_descriptor_;
  metadata.reflection = PkgAdvOperationReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgSysInfoSetReq::kKeystringFieldNumber;
const int PkgSysInfoSetReq::kValuestringFieldNumber;
#endif  // !_MSC_VER

PkgSysInfoSetReq::PkgSysInfoSetReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:admin.PkgSysInfoSetReq)
}

void PkgSysInfoSetReq::InitAsDefaultInstance() {
}

PkgSysInfoSetReq::PkgSysInfoSetReq(const PkgSysInfoSetReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:admin.PkgSysInfoSetReq)
}

void PkgSysInfoSetReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  keystring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valuestring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgSysInfoSetReq::~PkgSysInfoSetReq() {
  // @@protoc_insertion_point(destructor:admin.PkgSysInfoSetReq)
  SharedDtor();
}

void PkgSysInfoSetReq::SharedDtor() {
  keystring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valuestring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgSysInfoSetReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgSysInfoSetReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgSysInfoSetReq_descriptor_;
}

const PkgSysInfoSetReq& PkgSysInfoSetReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_admin_2eproto();
  return *default_instance_;
}

PkgSysInfoSetReq* PkgSysInfoSetReq::default_instance_ = NULL;

PkgSysInfoSetReq* PkgSysInfoSetReq::New(::google::protobuf::Arena* arena) const {
  PkgSysInfoSetReq* n = new PkgSysInfoSetReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgSysInfoSetReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_keystring()) {
      keystring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_valuestring()) {
      valuestring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgSysInfoSetReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:admin.PkgSysInfoSetReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string keystring = 10;
      case 10: {
        if (tag == 82) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_keystring()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->keystring().data(), this->keystring().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "admin.PkgSysInfoSetReq.keystring");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_valuestring;
        break;
      }

      // optional string valuestring = 11;
      case 11: {
        if (tag == 90) {
         parse_valuestring:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_valuestring()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->valuestring().data(), this->valuestring().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "admin.PkgSysInfoSetReq.valuestring");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:admin.PkgSysInfoSetReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:admin.PkgSysInfoSetReq)
  return false;
#undef DO_
}

void PkgSysInfoSetReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:admin.PkgSysInfoSetReq)
  // optional string keystring = 10;
  if (has_keystring()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keystring().data(), this->keystring().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgSysInfoSetReq.keystring");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->keystring(), output);
  }

  // optional string valuestring = 11;
  if (has_valuestring()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->valuestring().data(), this->valuestring().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgSysInfoSetReq.valuestring");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->valuestring(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:admin.PkgSysInfoSetReq)
}

::google::protobuf::uint8* PkgSysInfoSetReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:admin.PkgSysInfoSetReq)
  // optional string keystring = 10;
  if (has_keystring()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keystring().data(), this->keystring().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgSysInfoSetReq.keystring");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->keystring(), target);
  }

  // optional string valuestring = 11;
  if (has_valuestring()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->valuestring().data(), this->valuestring().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgSysInfoSetReq.valuestring");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->valuestring(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:admin.PkgSysInfoSetReq)
  return target;
}

int PkgSysInfoSetReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3) {
    // optional string keystring = 10;
    if (has_keystring()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->keystring());
    }

    // optional string valuestring = 11;
    if (has_valuestring()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->valuestring());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgSysInfoSetReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgSysInfoSetReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgSysInfoSetReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgSysInfoSetReq::MergeFrom(const PkgSysInfoSetReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_keystring()) {
      set_has_keystring();
      keystring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keystring_);
    }
    if (from.has_valuestring()) {
      set_has_valuestring();
      valuestring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.valuestring_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgSysInfoSetReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgSysInfoSetReq::CopyFrom(const PkgSysInfoSetReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgSysInfoSetReq::IsInitialized() const {

  return true;
}

void PkgSysInfoSetReq::Swap(PkgSysInfoSetReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgSysInfoSetReq::InternalSwap(PkgSysInfoSetReq* other) {
  keystring_.Swap(&other->keystring_);
  valuestring_.Swap(&other->valuestring_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgSysInfoSetReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgSysInfoSetReq_descriptor_;
  metadata.reflection = PkgSysInfoSetReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgSysInfoSetReply::kIssuccessFieldNumber;
const int PkgSysInfoSetReply::kErrFieldNumber;
#endif  // !_MSC_VER

PkgSysInfoSetReply::PkgSysInfoSetReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:admin.PkgSysInfoSetReply)
}

void PkgSysInfoSetReply::InitAsDefaultInstance() {
}

PkgSysInfoSetReply::PkgSysInfoSetReply(const PkgSysInfoSetReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:admin.PkgSysInfoSetReply)
}

void PkgSysInfoSetReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = false;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgSysInfoSetReply::~PkgSysInfoSetReply() {
  // @@protoc_insertion_point(destructor:admin.PkgSysInfoSetReply)
  SharedDtor();
}

void PkgSysInfoSetReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgSysInfoSetReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgSysInfoSetReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgSysInfoSetReply_descriptor_;
}

const PkgSysInfoSetReply& PkgSysInfoSetReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_admin_2eproto();
  return *default_instance_;
}

PkgSysInfoSetReply* PkgSysInfoSetReply::default_instance_ = NULL;

PkgSysInfoSetReply* PkgSysInfoSetReply::New(::google::protobuf::Arena* arena) const {
  PkgSysInfoSetReply* n = new PkgSysInfoSetReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgSysInfoSetReply::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    issuccess_ = false;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgSysInfoSetReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:admin.PkgSysInfoSetReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "admin.PkgSysInfoSetReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:admin.PkgSysInfoSetReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:admin.PkgSysInfoSetReply)
  return false;
#undef DO_
}

void PkgSysInfoSetReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:admin.PkgSysInfoSetReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgSysInfoSetReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:admin.PkgSysInfoSetReply)
}

::google::protobuf::uint8* PkgSysInfoSetReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:admin.PkgSysInfoSetReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgSysInfoSetReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:admin.PkgSysInfoSetReply)
  return target;
}

int PkgSysInfoSetReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1;
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  // optional string err = 2;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgSysInfoSetReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgSysInfoSetReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgSysInfoSetReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgSysInfoSetReply::MergeFrom(const PkgSysInfoSetReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgSysInfoSetReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgSysInfoSetReply::CopyFrom(const PkgSysInfoSetReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgSysInfoSetReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgSysInfoSetReply::Swap(PkgSysInfoSetReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgSysInfoSetReply::InternalSwap(PkgSysInfoSetReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgSysInfoSetReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgSysInfoSetReply_descriptor_;
  metadata.reflection = PkgSysInfoSetReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgSysInfoGetReq::kKeystringFieldNumber;
#endif  // !_MSC_VER

PkgSysInfoGetReq::PkgSysInfoGetReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:admin.PkgSysInfoGetReq)
}

void PkgSysInfoGetReq::InitAsDefaultInstance() {
}

PkgSysInfoGetReq::PkgSysInfoGetReq(const PkgSysInfoGetReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:admin.PkgSysInfoGetReq)
}

void PkgSysInfoGetReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  keystring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgSysInfoGetReq::~PkgSysInfoGetReq() {
  // @@protoc_insertion_point(destructor:admin.PkgSysInfoGetReq)
  SharedDtor();
}

void PkgSysInfoGetReq::SharedDtor() {
  keystring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgSysInfoGetReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgSysInfoGetReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgSysInfoGetReq_descriptor_;
}

const PkgSysInfoGetReq& PkgSysInfoGetReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_admin_2eproto();
  return *default_instance_;
}

PkgSysInfoGetReq* PkgSysInfoGetReq::default_instance_ = NULL;

PkgSysInfoGetReq* PkgSysInfoGetReq::New(::google::protobuf::Arena* arena) const {
  PkgSysInfoGetReq* n = new PkgSysInfoGetReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgSysInfoGetReq::Clear() {
  if (has_keystring()) {
    keystring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgSysInfoGetReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:admin.PkgSysInfoGetReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string keystring = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_keystring()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->keystring().data(), this->keystring().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "admin.PkgSysInfoGetReq.keystring");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:admin.PkgSysInfoGetReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:admin.PkgSysInfoGetReq)
  return false;
#undef DO_
}

void PkgSysInfoGetReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:admin.PkgSysInfoGetReq)
  // optional string keystring = 1;
  if (has_keystring()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keystring().data(), this->keystring().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgSysInfoGetReq.keystring");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->keystring(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:admin.PkgSysInfoGetReq)
}

::google::protobuf::uint8* PkgSysInfoGetReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:admin.PkgSysInfoGetReq)
  // optional string keystring = 1;
  if (has_keystring()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keystring().data(), this->keystring().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgSysInfoGetReq.keystring");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->keystring(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:admin.PkgSysInfoGetReq)
  return target;
}

int PkgSysInfoGetReq::ByteSize() const {
  int total_size = 0;

  // optional string keystring = 1;
  if (has_keystring()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->keystring());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgSysInfoGetReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgSysInfoGetReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgSysInfoGetReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgSysInfoGetReq::MergeFrom(const PkgSysInfoGetReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_keystring()) {
      set_has_keystring();
      keystring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keystring_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgSysInfoGetReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgSysInfoGetReq::CopyFrom(const PkgSysInfoGetReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgSysInfoGetReq::IsInitialized() const {

  return true;
}

void PkgSysInfoGetReq::Swap(PkgSysInfoGetReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgSysInfoGetReq::InternalSwap(PkgSysInfoGetReq* other) {
  keystring_.Swap(&other->keystring_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgSysInfoGetReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgSysInfoGetReq_descriptor_;
  metadata.reflection = PkgSysInfoGetReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgSysInfoGetReply::kIssuccessFieldNumber;
const int PkgSysInfoGetReply::kErrFieldNumber;
const int PkgSysInfoGetReply::kValuestringFieldNumber;
#endif  // !_MSC_VER

PkgSysInfoGetReply::PkgSysInfoGetReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:admin.PkgSysInfoGetReply)
}

void PkgSysInfoGetReply::InitAsDefaultInstance() {
}

PkgSysInfoGetReply::PkgSysInfoGetReply(const PkgSysInfoGetReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:admin.PkgSysInfoGetReply)
}

void PkgSysInfoGetReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = false;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valuestring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgSysInfoGetReply::~PkgSysInfoGetReply() {
  // @@protoc_insertion_point(destructor:admin.PkgSysInfoGetReply)
  SharedDtor();
}

void PkgSysInfoGetReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valuestring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgSysInfoGetReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgSysInfoGetReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgSysInfoGetReply_descriptor_;
}

const PkgSysInfoGetReply& PkgSysInfoGetReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_admin_2eproto();
  return *default_instance_;
}

PkgSysInfoGetReply* PkgSysInfoGetReply::default_instance_ = NULL;

PkgSysInfoGetReply* PkgSysInfoGetReply::New(::google::protobuf::Arena* arena) const {
  PkgSysInfoGetReply* n = new PkgSysInfoGetReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgSysInfoGetReply::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    issuccess_ = false;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_valuestring()) {
      valuestring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgSysInfoGetReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:admin.PkgSysInfoGetReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "admin.PkgSysInfoGetReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_valuestring;
        break;
      }

      // optional string valuestring = 10;
      case 10: {
        if (tag == 82) {
         parse_valuestring:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_valuestring()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->valuestring().data(), this->valuestring().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "admin.PkgSysInfoGetReply.valuestring");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:admin.PkgSysInfoGetReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:admin.PkgSysInfoGetReply)
  return false;
#undef DO_
}

void PkgSysInfoGetReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:admin.PkgSysInfoGetReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgSysInfoGetReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  // optional string valuestring = 10;
  if (has_valuestring()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->valuestring().data(), this->valuestring().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgSysInfoGetReply.valuestring");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->valuestring(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:admin.PkgSysInfoGetReply)
}

::google::protobuf::uint8* PkgSysInfoGetReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:admin.PkgSysInfoGetReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgSysInfoGetReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  // optional string valuestring = 10;
  if (has_valuestring()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->valuestring().data(), this->valuestring().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "admin.PkgSysInfoGetReply.valuestring");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->valuestring(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:admin.PkgSysInfoGetReply)
  return target;
}

int PkgSysInfoGetReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1;
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  if (_has_bits_[1 / 32] & 6) {
    // optional string err = 2;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->err());
    }

    // optional string valuestring = 10;
    if (has_valuestring()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->valuestring());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgSysInfoGetReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgSysInfoGetReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgSysInfoGetReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgSysInfoGetReply::MergeFrom(const PkgSysInfoGetReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
    if (from.has_valuestring()) {
      set_has_valuestring();
      valuestring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.valuestring_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgSysInfoGetReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgSysInfoGetReply::CopyFrom(const PkgSysInfoGetReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgSysInfoGetReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgSysInfoGetReply::Swap(PkgSysInfoGetReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgSysInfoGetReply::InternalSwap(PkgSysInfoGetReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  valuestring_.Swap(&other->valuestring_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgSysInfoGetReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgSysInfoGetReply_descriptor_;
  metadata.reflection = PkgSysInfoGetReply_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace admin

// @@protoc_insertion_point(global_scope)
