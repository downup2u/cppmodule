// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: admin.proto

#ifndef PROTOBUF_admin_2eproto__INCLUDED
#define PROTOBUF_admin_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace admin {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_admin_2eproto();
void protobuf_AssignDesc_admin_2eproto();
void protobuf_ShutdownFile_admin_2eproto();

class PkgUserInfo;
class PkgUserLoginReq;
class PkgUserLoginReply;
class PkgUserOperationReq;
class PkgUserOperationReply;
class PkgAdvQueryReq;
class PkgAdvQueryReply;
class PkgAdvInfo;
class PkgAdvOperationReq;
class PkgAdvOperationReply;
class PkgSysInfoSetReq;
class PkgSysInfoSetReply;
class PkgSysInfoGetReq;
class PkgSysInfoGetReply;

enum PkgUserOperationReq_EnUserOperation {
  PkgUserOperationReq_EnUserOperation_TO_INSERT_INFO = 1,
  PkgUserOperationReq_EnUserOperation_TO_UPDATE_INFO = 16,
  PkgUserOperationReq_EnUserOperation_TO_DELETE_INFO = 64
};
bool PkgUserOperationReq_EnUserOperation_IsValid(int value);
const PkgUserOperationReq_EnUserOperation PkgUserOperationReq_EnUserOperation_EnUserOperation_MIN = PkgUserOperationReq_EnUserOperation_TO_INSERT_INFO;
const PkgUserOperationReq_EnUserOperation PkgUserOperationReq_EnUserOperation_EnUserOperation_MAX = PkgUserOperationReq_EnUserOperation_TO_DELETE_INFO;
const int PkgUserOperationReq_EnUserOperation_EnUserOperation_ARRAYSIZE = PkgUserOperationReq_EnUserOperation_EnUserOperation_MAX + 1;

const ::google::protobuf::EnumDescriptor* PkgUserOperationReq_EnUserOperation_descriptor();
inline const ::std::string& PkgUserOperationReq_EnUserOperation_Name(PkgUserOperationReq_EnUserOperation value) {
  return ::google::protobuf::internal::NameOfEnum(
    PkgUserOperationReq_EnUserOperation_descriptor(), value);
}
inline bool PkgUserOperationReq_EnUserOperation_Parse(
    const ::std::string& name, PkgUserOperationReq_EnUserOperation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PkgUserOperationReq_EnUserOperation>(
    PkgUserOperationReq_EnUserOperation_descriptor(), name, value);
}
enum PkgAdvQueryReq_EnQueryType {
  PkgAdvQueryReq_EnQueryType_QT_ALL = 0,
  PkgAdvQueryReq_EnQueryType_QT_ADVID = 4,
  PkgAdvQueryReq_EnQueryType_QT_KEYNAME = 8
};
bool PkgAdvQueryReq_EnQueryType_IsValid(int value);
const PkgAdvQueryReq_EnQueryType PkgAdvQueryReq_EnQueryType_EnQueryType_MIN = PkgAdvQueryReq_EnQueryType_QT_ALL;
const PkgAdvQueryReq_EnQueryType PkgAdvQueryReq_EnQueryType_EnQueryType_MAX = PkgAdvQueryReq_EnQueryType_QT_KEYNAME;
const int PkgAdvQueryReq_EnQueryType_EnQueryType_ARRAYSIZE = PkgAdvQueryReq_EnQueryType_EnQueryType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PkgAdvQueryReq_EnQueryType_descriptor();
inline const ::std::string& PkgAdvQueryReq_EnQueryType_Name(PkgAdvQueryReq_EnQueryType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PkgAdvQueryReq_EnQueryType_descriptor(), value);
}
inline bool PkgAdvQueryReq_EnQueryType_Parse(
    const ::std::string& name, PkgAdvQueryReq_EnQueryType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PkgAdvQueryReq_EnQueryType>(
    PkgAdvQueryReq_EnQueryType_descriptor(), name, value);
}
enum PkgAdvOperationReq_EnAdvOperation {
  PkgAdvOperationReq_EnAdvOperation_TO_INSERT_INFO = 1,
  PkgAdvOperationReq_EnAdvOperation_TO_UPDATE_INFO = 16,
  PkgAdvOperationReq_EnAdvOperation_TO_DELETE_INFO = 64
};
bool PkgAdvOperationReq_EnAdvOperation_IsValid(int value);
const PkgAdvOperationReq_EnAdvOperation PkgAdvOperationReq_EnAdvOperation_EnAdvOperation_MIN = PkgAdvOperationReq_EnAdvOperation_TO_INSERT_INFO;
const PkgAdvOperationReq_EnAdvOperation PkgAdvOperationReq_EnAdvOperation_EnAdvOperation_MAX = PkgAdvOperationReq_EnAdvOperation_TO_DELETE_INFO;
const int PkgAdvOperationReq_EnAdvOperation_EnAdvOperation_ARRAYSIZE = PkgAdvOperationReq_EnAdvOperation_EnAdvOperation_MAX + 1;

const ::google::protobuf::EnumDescriptor* PkgAdvOperationReq_EnAdvOperation_descriptor();
inline const ::std::string& PkgAdvOperationReq_EnAdvOperation_Name(PkgAdvOperationReq_EnAdvOperation value) {
  return ::google::protobuf::internal::NameOfEnum(
    PkgAdvOperationReq_EnAdvOperation_descriptor(), value);
}
inline bool PkgAdvOperationReq_EnAdvOperation_Parse(
    const ::std::string& name, PkgAdvOperationReq_EnAdvOperation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PkgAdvOperationReq_EnAdvOperation>(
    PkgAdvOperationReq_EnAdvOperation_descriptor(), name, value);
}
// ===================================================================

class PkgUserInfo : public ::google::protobuf::Message {
 public:
  PkgUserInfo();
  virtual ~PkgUserInfo();

  PkgUserInfo(const PkgUserInfo& from);

  inline PkgUserInfo& operator=(const PkgUserInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserInfo& default_instance();

  void Swap(PkgUserInfo* other);

  // implements Message ----------------------------------------------

  inline PkgUserInfo* New() const { return New(NULL); }

  PkgUserInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserInfo& from);
  void MergeFrom(const PkgUserInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional string username = 2;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 2;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // optional string password = 3;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 3;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // optional int32 permission = 10;
  inline bool has_permission() const;
  inline void clear_permission();
  static const int kPermissionFieldNumber = 10;
  inline ::google::protobuf::int32 permission() const;
  inline void set_permission(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:admin.PkgUserInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_password();
  inline void clear_has_password();
  inline void set_has_permission();
  inline void clear_has_permission();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 permission_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  friend void  protobuf_AddDesc_admin_2eproto();
  friend void protobuf_AssignDesc_admin_2eproto();
  friend void protobuf_ShutdownFile_admin_2eproto();

  void InitAsDefaultInstance();
  static PkgUserInfo* default_instance_;
};
// -------------------------------------------------------------------

class PkgUserLoginReq : public ::google::protobuf::Message {
 public:
  PkgUserLoginReq();
  virtual ~PkgUserLoginReq();

  PkgUserLoginReq(const PkgUserLoginReq& from);

  inline PkgUserLoginReq& operator=(const PkgUserLoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserLoginReq& default_instance();

  void Swap(PkgUserLoginReq* other);

  // implements Message ----------------------------------------------

  inline PkgUserLoginReq* New() const { return New(NULL); }

  PkgUserLoginReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserLoginReq& from);
  void MergeFrom(const PkgUserLoginReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string username = 1;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 1;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // required string password = 2;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 2;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:admin.PkgUserLoginReq)
 private:
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_password();
  inline void clear_has_password();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  friend void  protobuf_AddDesc_admin_2eproto();
  friend void protobuf_AssignDesc_admin_2eproto();
  friend void protobuf_ShutdownFile_admin_2eproto();

  void InitAsDefaultInstance();
  static PkgUserLoginReq* default_instance_;
};
// -------------------------------------------------------------------

class PkgUserLoginReply : public ::google::protobuf::Message {
 public:
  PkgUserLoginReply();
  virtual ~PkgUserLoginReply();

  PkgUserLoginReply(const PkgUserLoginReply& from);

  inline PkgUserLoginReply& operator=(const PkgUserLoginReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserLoginReply& default_instance();

  void Swap(PkgUserLoginReply* other);

  // implements Message ----------------------------------------------

  inline PkgUserLoginReply* New() const { return New(NULL); }

  PkgUserLoginReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserLoginReply& from);
  void MergeFrom(const PkgUserLoginReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserLoginReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool issuccess = 1 [default = true];
  inline bool has_issuccess() const;
  inline void clear_issuccess();
  static const int kIssuccessFieldNumber = 1;
  inline bool issuccess() const;
  inline void set_issuccess(bool value);

  // optional string err = 2;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 2;
  inline const ::std::string& err() const;
  inline void set_err(const ::std::string& value);
  inline void set_err(const char* value);
  inline void set_err(const char* value, size_t size);
  inline ::std::string* mutable_err();
  inline ::std::string* release_err();
  inline void set_allocated_err(::std::string* err);

  // optional int32 userid = 3;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 3;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);

  // optional int32 permission = 4;
  inline bool has_permission() const;
  inline void clear_permission();
  static const int kPermissionFieldNumber = 4;
  inline ::google::protobuf::int32 permission() const;
  inline void set_permission(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:admin.PkgUserLoginReply)
 private:
  inline void set_has_issuccess();
  inline void clear_has_issuccess();
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_permission();
  inline void clear_has_permission();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  bool issuccess_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 permission_;
  friend void  protobuf_AddDesc_admin_2eproto();
  friend void protobuf_AssignDesc_admin_2eproto();
  friend void protobuf_ShutdownFile_admin_2eproto();

  void InitAsDefaultInstance();
  static PkgUserLoginReply* default_instance_;
};
// -------------------------------------------------------------------

class PkgUserOperationReq : public ::google::protobuf::Message {
 public:
  PkgUserOperationReq();
  virtual ~PkgUserOperationReq();

  PkgUserOperationReq(const PkgUserOperationReq& from);

  inline PkgUserOperationReq& operator=(const PkgUserOperationReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserOperationReq& default_instance();

  void Swap(PkgUserOperationReq* other);

  // implements Message ----------------------------------------------

  inline PkgUserOperationReq* New() const { return New(NULL); }

  PkgUserOperationReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserOperationReq& from);
  void MergeFrom(const PkgUserOperationReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserOperationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef PkgUserOperationReq_EnUserOperation EnUserOperation;
  static const EnUserOperation TO_INSERT_INFO = PkgUserOperationReq_EnUserOperation_TO_INSERT_INFO;
  static const EnUserOperation TO_UPDATE_INFO = PkgUserOperationReq_EnUserOperation_TO_UPDATE_INFO;
  static const EnUserOperation TO_DELETE_INFO = PkgUserOperationReq_EnUserOperation_TO_DELETE_INFO;
  static inline bool EnUserOperation_IsValid(int value) {
    return PkgUserOperationReq_EnUserOperation_IsValid(value);
  }
  static const EnUserOperation EnUserOperation_MIN =
    PkgUserOperationReq_EnUserOperation_EnUserOperation_MIN;
  static const EnUserOperation EnUserOperation_MAX =
    PkgUserOperationReq_EnUserOperation_EnUserOperation_MAX;
  static const int EnUserOperation_ARRAYSIZE =
    PkgUserOperationReq_EnUserOperation_EnUserOperation_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EnUserOperation_descriptor() {
    return PkgUserOperationReq_EnUserOperation_descriptor();
  }
  static inline const ::std::string& EnUserOperation_Name(EnUserOperation value) {
    return PkgUserOperationReq_EnUserOperation_Name(value);
  }
  static inline bool EnUserOperation_Parse(const ::std::string& name,
      EnUserOperation* value) {
    return PkgUserOperationReq_EnUserOperation_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 useroperation = 1;
  inline bool has_useroperation() const;
  inline void clear_useroperation();
  static const int kUseroperationFieldNumber = 1;
  inline ::google::protobuf::int32 useroperation() const;
  inline void set_useroperation(::google::protobuf::int32 value);

  // optional .admin.PkgUserInfo userinfo = 2;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserinfoFieldNumber = 2;
  inline const ::admin::PkgUserInfo& userinfo() const;
  inline ::admin::PkgUserInfo* mutable_userinfo();
  inline ::admin::PkgUserInfo* release_userinfo();
  inline void set_allocated_userinfo(::admin::PkgUserInfo* userinfo);

  // optional int32 userid = 10;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 10;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:admin.PkgUserOperationReq)
 private:
  inline void set_has_useroperation();
  inline void clear_has_useroperation();
  inline void set_has_userinfo();
  inline void clear_has_userinfo();
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::admin::PkgUserInfo* userinfo_;
  ::google::protobuf::int32 useroperation_;
  ::google::protobuf::int32 userid_;
  friend void  protobuf_AddDesc_admin_2eproto();
  friend void protobuf_AssignDesc_admin_2eproto();
  friend void protobuf_ShutdownFile_admin_2eproto();

  void InitAsDefaultInstance();
  static PkgUserOperationReq* default_instance_;
};
// -------------------------------------------------------------------

class PkgUserOperationReply : public ::google::protobuf::Message {
 public:
  PkgUserOperationReply();
  virtual ~PkgUserOperationReply();

  PkgUserOperationReply(const PkgUserOperationReply& from);

  inline PkgUserOperationReply& operator=(const PkgUserOperationReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgUserOperationReply& default_instance();

  void Swap(PkgUserOperationReply* other);

  // implements Message ----------------------------------------------

  inline PkgUserOperationReply* New() const { return New(NULL); }

  PkgUserOperationReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgUserOperationReply& from);
  void MergeFrom(const PkgUserOperationReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgUserOperationReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool issuccess = 1;
  inline bool has_issuccess() const;
  inline void clear_issuccess();
  static const int kIssuccessFieldNumber = 1;
  inline bool issuccess() const;
  inline void set_issuccess(bool value);

  // optional string err = 2;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 2;
  inline const ::std::string& err() const;
  inline void set_err(const ::std::string& value);
  inline void set_err(const char* value);
  inline void set_err(const char* value, size_t size);
  inline ::std::string* mutable_err();
  inline ::std::string* release_err();
  inline void set_allocated_err(::std::string* err);

  // optional int32 userid = 5;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 5;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:admin.PkgUserOperationReply)
 private:
  inline void set_has_issuccess();
  inline void clear_has_issuccess();
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  bool issuccess_;
  ::google::protobuf::int32 userid_;
  friend void  protobuf_AddDesc_admin_2eproto();
  friend void protobuf_AssignDesc_admin_2eproto();
  friend void protobuf_ShutdownFile_admin_2eproto();

  void InitAsDefaultInstance();
  static PkgUserOperationReply* default_instance_;
};
// -------------------------------------------------------------------

class PkgAdvQueryReq : public ::google::protobuf::Message {
 public:
  PkgAdvQueryReq();
  virtual ~PkgAdvQueryReq();

  PkgAdvQueryReq(const PkgAdvQueryReq& from);

  inline PkgAdvQueryReq& operator=(const PkgAdvQueryReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgAdvQueryReq& default_instance();

  void Swap(PkgAdvQueryReq* other);

  // implements Message ----------------------------------------------

  inline PkgAdvQueryReq* New() const { return New(NULL); }

  PkgAdvQueryReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgAdvQueryReq& from);
  void MergeFrom(const PkgAdvQueryReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgAdvQueryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef PkgAdvQueryReq_EnQueryType EnQueryType;
  static const EnQueryType QT_ALL = PkgAdvQueryReq_EnQueryType_QT_ALL;
  static const EnQueryType QT_ADVID = PkgAdvQueryReq_EnQueryType_QT_ADVID;
  static const EnQueryType QT_KEYNAME = PkgAdvQueryReq_EnQueryType_QT_KEYNAME;
  static inline bool EnQueryType_IsValid(int value) {
    return PkgAdvQueryReq_EnQueryType_IsValid(value);
  }
  static const EnQueryType EnQueryType_MIN =
    PkgAdvQueryReq_EnQueryType_EnQueryType_MIN;
  static const EnQueryType EnQueryType_MAX =
    PkgAdvQueryReq_EnQueryType_EnQueryType_MAX;
  static const int EnQueryType_ARRAYSIZE =
    PkgAdvQueryReq_EnQueryType_EnQueryType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EnQueryType_descriptor() {
    return PkgAdvQueryReq_EnQueryType_descriptor();
  }
  static inline const ::std::string& EnQueryType_Name(EnQueryType value) {
    return PkgAdvQueryReq_EnQueryType_Name(value);
  }
  static inline bool EnQueryType_Parse(const ::std::string& name,
      EnQueryType* value) {
    return PkgAdvQueryReq_EnQueryType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 queryflag = 1 [default = 1];
  inline bool has_queryflag() const;
  inline void clear_queryflag();
  static const int kQueryflagFieldNumber = 1;
  inline ::google::protobuf::int32 queryflag() const;
  inline void set_queryflag(::google::protobuf::int32 value);

  // optional int32 advid = 3;
  inline bool has_advid() const;
  inline void clear_advid();
  static const int kAdvidFieldNumber = 3;
  inline ::google::protobuf::int32 advid() const;
  inline void set_advid(::google::protobuf::int32 value);

  // optional string keyname = 4;
  inline bool has_keyname() const;
  inline void clear_keyname();
  static const int kKeynameFieldNumber = 4;
  inline const ::std::string& keyname() const;
  inline void set_keyname(const ::std::string& value);
  inline void set_keyname(const char* value);
  inline void set_keyname(const char* value, size_t size);
  inline ::std::string* mutable_keyname();
  inline ::std::string* release_keyname();
  inline void set_allocated_keyname(::std::string* keyname);

  // @@protoc_insertion_point(class_scope:admin.PkgAdvQueryReq)
 private:
  inline void set_has_queryflag();
  inline void clear_has_queryflag();
  inline void set_has_advid();
  inline void clear_has_advid();
  inline void set_has_keyname();
  inline void clear_has_keyname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 queryflag_;
  ::google::protobuf::int32 advid_;
  ::google::protobuf::internal::ArenaStringPtr keyname_;
  friend void  protobuf_AddDesc_admin_2eproto();
  friend void protobuf_AssignDesc_admin_2eproto();
  friend void protobuf_ShutdownFile_admin_2eproto();

  void InitAsDefaultInstance();
  static PkgAdvQueryReq* default_instance_;
};
// -------------------------------------------------------------------

class PkgAdvQueryReply : public ::google::protobuf::Message {
 public:
  PkgAdvQueryReply();
  virtual ~PkgAdvQueryReply();

  PkgAdvQueryReply(const PkgAdvQueryReply& from);

  inline PkgAdvQueryReply& operator=(const PkgAdvQueryReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgAdvQueryReply& default_instance();

  void Swap(PkgAdvQueryReply* other);

  // implements Message ----------------------------------------------

  inline PkgAdvQueryReply* New() const { return New(NULL); }

  PkgAdvQueryReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgAdvQueryReply& from);
  void MergeFrom(const PkgAdvQueryReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgAdvQueryReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool issuccess = 1;
  inline bool has_issuccess() const;
  inline void clear_issuccess();
  static const int kIssuccessFieldNumber = 1;
  inline bool issuccess() const;
  inline void set_issuccess(bool value);

  // optional string err = 2;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 2;
  inline const ::std::string& err() const;
  inline void set_err(const ::std::string& value);
  inline void set_err(const char* value);
  inline void set_err(const char* value, size_t size);
  inline ::std::string* mutable_err();
  inline ::std::string* release_err();
  inline void set_allocated_err(::std::string* err);

  // repeated .admin.PkgAdvInfo advinfolist = 3;
  inline int advinfolist_size() const;
  inline void clear_advinfolist();
  static const int kAdvinfolistFieldNumber = 3;
  inline const ::admin::PkgAdvInfo& advinfolist(int index) const;
  inline ::admin::PkgAdvInfo* mutable_advinfolist(int index);
  inline ::admin::PkgAdvInfo* add_advinfolist();
  inline const ::google::protobuf::RepeatedPtrField< ::admin::PkgAdvInfo >&
      advinfolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::admin::PkgAdvInfo >*
      mutable_advinfolist();

  // @@protoc_insertion_point(class_scope:admin.PkgAdvQueryReply)
 private:
  inline void set_has_issuccess();
  inline void clear_has_issuccess();
  inline void set_has_err();
  inline void clear_has_err();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  ::google::protobuf::RepeatedPtrField< ::admin::PkgAdvInfo > advinfolist_;
  bool issuccess_;
  friend void  protobuf_AddDesc_admin_2eproto();
  friend void protobuf_AssignDesc_admin_2eproto();
  friend void protobuf_ShutdownFile_admin_2eproto();

  void InitAsDefaultInstance();
  static PkgAdvQueryReply* default_instance_;
};
// -------------------------------------------------------------------

class PkgAdvInfo : public ::google::protobuf::Message {
 public:
  PkgAdvInfo();
  virtual ~PkgAdvInfo();

  PkgAdvInfo(const PkgAdvInfo& from);

  inline PkgAdvInfo& operator=(const PkgAdvInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgAdvInfo& default_instance();

  void Swap(PkgAdvInfo* other);

  // implements Message ----------------------------------------------

  inline PkgAdvInfo* New() const { return New(NULL); }

  PkgAdvInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgAdvInfo& from);
  void MergeFrom(const PkgAdvInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgAdvInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string urlpic = 3;
  inline bool has_urlpic() const;
  inline void clear_urlpic();
  static const int kUrlpicFieldNumber = 3;
  inline const ::std::string& urlpic() const;
  inline void set_urlpic(const ::std::string& value);
  inline void set_urlpic(const char* value);
  inline void set_urlpic(const char* value, size_t size);
  inline ::std::string* mutable_urlpic();
  inline ::std::string* release_urlpic();
  inline void set_allocated_urlpic(::std::string* urlpic);

  // optional string advtxt = 4;
  inline bool has_advtxt() const;
  inline void clear_advtxt();
  static const int kAdvtxtFieldNumber = 4;
  inline const ::std::string& advtxt() const;
  inline void set_advtxt(const ::std::string& value);
  inline void set_advtxt(const char* value);
  inline void set_advtxt(const char* value, size_t size);
  inline ::std::string* mutable_advtxt();
  inline ::std::string* release_advtxt();
  inline void set_allocated_advtxt(::std::string* advtxt);

  // optional string advdesc = 5;
  inline bool has_advdesc() const;
  inline void clear_advdesc();
  static const int kAdvdescFieldNumber = 5;
  inline const ::std::string& advdesc() const;
  inline void set_advdesc(const ::std::string& value);
  inline void set_advdesc(const char* value);
  inline void set_advdesc(const char* value, size_t size);
  inline ::std::string* mutable_advdesc();
  inline ::std::string* release_advdesc();
  inline void set_allocated_advdesc(::std::string* advdesc);

  // optional string createtime = 6;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreatetimeFieldNumber = 6;
  inline const ::std::string& createtime() const;
  inline void set_createtime(const ::std::string& value);
  inline void set_createtime(const char* value);
  inline void set_createtime(const char* value, size_t size);
  inline ::std::string* mutable_createtime();
  inline ::std::string* release_createtime();
  inline void set_allocated_createtime(::std::string* createtime);

  // optional string expiretime = 7;
  inline bool has_expiretime() const;
  inline void clear_expiretime();
  static const int kExpiretimeFieldNumber = 7;
  inline const ::std::string& expiretime() const;
  inline void set_expiretime(const ::std::string& value);
  inline void set_expiretime(const char* value);
  inline void set_expiretime(const char* value, size_t size);
  inline ::std::string* mutable_expiretime();
  inline ::std::string* release_expiretime();
  inline void set_allocated_expiretime(::std::string* expiretime);

  // optional string picpath = 8;
  inline bool has_picpath() const;
  inline void clear_picpath();
  static const int kPicpathFieldNumber = 8;
  inline const ::std::string& picpath() const;
  inline void set_picpath(const ::std::string& value);
  inline void set_picpath(const char* value);
  inline void set_picpath(const char* value, size_t size);
  inline ::std::string* mutable_picpath();
  inline ::std::string* release_picpath();
  inline void set_allocated_picpath(::std::string* picpath);

  // @@protoc_insertion_point(class_scope:admin.PkgAdvInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_urlpic();
  inline void clear_has_urlpic();
  inline void set_has_advtxt();
  inline void clear_has_advtxt();
  inline void set_has_advdesc();
  inline void clear_has_advdesc();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_expiretime();
  inline void clear_has_expiretime();
  inline void set_has_picpath();
  inline void clear_has_picpath();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr urlpic_;
  ::google::protobuf::internal::ArenaStringPtr advtxt_;
  ::google::protobuf::internal::ArenaStringPtr advdesc_;
  ::google::protobuf::internal::ArenaStringPtr createtime_;
  ::google::protobuf::internal::ArenaStringPtr expiretime_;
  ::google::protobuf::internal::ArenaStringPtr picpath_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_admin_2eproto();
  friend void protobuf_AssignDesc_admin_2eproto();
  friend void protobuf_ShutdownFile_admin_2eproto();

  void InitAsDefaultInstance();
  static PkgAdvInfo* default_instance_;
};
// -------------------------------------------------------------------

class PkgAdvOperationReq : public ::google::protobuf::Message {
 public:
  PkgAdvOperationReq();
  virtual ~PkgAdvOperationReq();

  PkgAdvOperationReq(const PkgAdvOperationReq& from);

  inline PkgAdvOperationReq& operator=(const PkgAdvOperationReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgAdvOperationReq& default_instance();

  void Swap(PkgAdvOperationReq* other);

  // implements Message ----------------------------------------------

  inline PkgAdvOperationReq* New() const { return New(NULL); }

  PkgAdvOperationReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgAdvOperationReq& from);
  void MergeFrom(const PkgAdvOperationReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgAdvOperationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef PkgAdvOperationReq_EnAdvOperation EnAdvOperation;
  static const EnAdvOperation TO_INSERT_INFO = PkgAdvOperationReq_EnAdvOperation_TO_INSERT_INFO;
  static const EnAdvOperation TO_UPDATE_INFO = PkgAdvOperationReq_EnAdvOperation_TO_UPDATE_INFO;
  static const EnAdvOperation TO_DELETE_INFO = PkgAdvOperationReq_EnAdvOperation_TO_DELETE_INFO;
  static inline bool EnAdvOperation_IsValid(int value) {
    return PkgAdvOperationReq_EnAdvOperation_IsValid(value);
  }
  static const EnAdvOperation EnAdvOperation_MIN =
    PkgAdvOperationReq_EnAdvOperation_EnAdvOperation_MIN;
  static const EnAdvOperation EnAdvOperation_MAX =
    PkgAdvOperationReq_EnAdvOperation_EnAdvOperation_MAX;
  static const int EnAdvOperation_ARRAYSIZE =
    PkgAdvOperationReq_EnAdvOperation_EnAdvOperation_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EnAdvOperation_descriptor() {
    return PkgAdvOperationReq_EnAdvOperation_descriptor();
  }
  static inline const ::std::string& EnAdvOperation_Name(EnAdvOperation value) {
    return PkgAdvOperationReq_EnAdvOperation_Name(value);
  }
  static inline bool EnAdvOperation_Parse(const ::std::string& name,
      EnAdvOperation* value) {
    return PkgAdvOperationReq_EnAdvOperation_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 advoperation = 1;
  inline bool has_advoperation() const;
  inline void clear_advoperation();
  static const int kAdvoperationFieldNumber = 1;
  inline ::google::protobuf::int32 advoperation() const;
  inline void set_advoperation(::google::protobuf::int32 value);

  // optional .admin.PkgAdvInfo advinfo = 2;
  inline bool has_advinfo() const;
  inline void clear_advinfo();
  static const int kAdvinfoFieldNumber = 2;
  inline const ::admin::PkgAdvInfo& advinfo() const;
  inline ::admin::PkgAdvInfo* mutable_advinfo();
  inline ::admin::PkgAdvInfo* release_advinfo();
  inline void set_allocated_advinfo(::admin::PkgAdvInfo* advinfo);

  // optional int32 advid = 10;
  inline bool has_advid() const;
  inline void clear_advid();
  static const int kAdvidFieldNumber = 10;
  inline ::google::protobuf::int32 advid() const;
  inline void set_advid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:admin.PkgAdvOperationReq)
 private:
  inline void set_has_advoperation();
  inline void clear_has_advoperation();
  inline void set_has_advinfo();
  inline void clear_has_advinfo();
  inline void set_has_advid();
  inline void clear_has_advid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::admin::PkgAdvInfo* advinfo_;
  ::google::protobuf::int32 advoperation_;
  ::google::protobuf::int32 advid_;
  friend void  protobuf_AddDesc_admin_2eproto();
  friend void protobuf_AssignDesc_admin_2eproto();
  friend void protobuf_ShutdownFile_admin_2eproto();

  void InitAsDefaultInstance();
  static PkgAdvOperationReq* default_instance_;
};
// -------------------------------------------------------------------

class PkgAdvOperationReply : public ::google::protobuf::Message {
 public:
  PkgAdvOperationReply();
  virtual ~PkgAdvOperationReply();

  PkgAdvOperationReply(const PkgAdvOperationReply& from);

  inline PkgAdvOperationReply& operator=(const PkgAdvOperationReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgAdvOperationReply& default_instance();

  void Swap(PkgAdvOperationReply* other);

  // implements Message ----------------------------------------------

  inline PkgAdvOperationReply* New() const { return New(NULL); }

  PkgAdvOperationReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgAdvOperationReply& from);
  void MergeFrom(const PkgAdvOperationReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgAdvOperationReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool issuccess = 1;
  inline bool has_issuccess() const;
  inline void clear_issuccess();
  static const int kIssuccessFieldNumber = 1;
  inline bool issuccess() const;
  inline void set_issuccess(bool value);

  // optional string err = 2;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 2;
  inline const ::std::string& err() const;
  inline void set_err(const ::std::string& value);
  inline void set_err(const char* value);
  inline void set_err(const char* value, size_t size);
  inline ::std::string* mutable_err();
  inline ::std::string* release_err();
  inline void set_allocated_err(::std::string* err);

  // optional int32 advid = 5;
  inline bool has_advid() const;
  inline void clear_advid();
  static const int kAdvidFieldNumber = 5;
  inline ::google::protobuf::int32 advid() const;
  inline void set_advid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:admin.PkgAdvOperationReply)
 private:
  inline void set_has_issuccess();
  inline void clear_has_issuccess();
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_advid();
  inline void clear_has_advid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  bool issuccess_;
  ::google::protobuf::int32 advid_;
  friend void  protobuf_AddDesc_admin_2eproto();
  friend void protobuf_AssignDesc_admin_2eproto();
  friend void protobuf_ShutdownFile_admin_2eproto();

  void InitAsDefaultInstance();
  static PkgAdvOperationReply* default_instance_;
};
// -------------------------------------------------------------------

class PkgSysInfoSetReq : public ::google::protobuf::Message {
 public:
  PkgSysInfoSetReq();
  virtual ~PkgSysInfoSetReq();

  PkgSysInfoSetReq(const PkgSysInfoSetReq& from);

  inline PkgSysInfoSetReq& operator=(const PkgSysInfoSetReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgSysInfoSetReq& default_instance();

  void Swap(PkgSysInfoSetReq* other);

  // implements Message ----------------------------------------------

  inline PkgSysInfoSetReq* New() const { return New(NULL); }

  PkgSysInfoSetReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgSysInfoSetReq& from);
  void MergeFrom(const PkgSysInfoSetReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgSysInfoSetReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string keystring = 10;
  inline bool has_keystring() const;
  inline void clear_keystring();
  static const int kKeystringFieldNumber = 10;
  inline const ::std::string& keystring() const;
  inline void set_keystring(const ::std::string& value);
  inline void set_keystring(const char* value);
  inline void set_keystring(const char* value, size_t size);
  inline ::std::string* mutable_keystring();
  inline ::std::string* release_keystring();
  inline void set_allocated_keystring(::std::string* keystring);

  // optional string valuestring = 11;
  inline bool has_valuestring() const;
  inline void clear_valuestring();
  static const int kValuestringFieldNumber = 11;
  inline const ::std::string& valuestring() const;
  inline void set_valuestring(const ::std::string& value);
  inline void set_valuestring(const char* value);
  inline void set_valuestring(const char* value, size_t size);
  inline ::std::string* mutable_valuestring();
  inline ::std::string* release_valuestring();
  inline void set_allocated_valuestring(::std::string* valuestring);

  // @@protoc_insertion_point(class_scope:admin.PkgSysInfoSetReq)
 private:
  inline void set_has_keystring();
  inline void clear_has_keystring();
  inline void set_has_valuestring();
  inline void clear_has_valuestring();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr keystring_;
  ::google::protobuf::internal::ArenaStringPtr valuestring_;
  friend void  protobuf_AddDesc_admin_2eproto();
  friend void protobuf_AssignDesc_admin_2eproto();
  friend void protobuf_ShutdownFile_admin_2eproto();

  void InitAsDefaultInstance();
  static PkgSysInfoSetReq* default_instance_;
};
// -------------------------------------------------------------------

class PkgSysInfoSetReply : public ::google::protobuf::Message {
 public:
  PkgSysInfoSetReply();
  virtual ~PkgSysInfoSetReply();

  PkgSysInfoSetReply(const PkgSysInfoSetReply& from);

  inline PkgSysInfoSetReply& operator=(const PkgSysInfoSetReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgSysInfoSetReply& default_instance();

  void Swap(PkgSysInfoSetReply* other);

  // implements Message ----------------------------------------------

  inline PkgSysInfoSetReply* New() const { return New(NULL); }

  PkgSysInfoSetReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgSysInfoSetReply& from);
  void MergeFrom(const PkgSysInfoSetReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgSysInfoSetReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool issuccess = 1;
  inline bool has_issuccess() const;
  inline void clear_issuccess();
  static const int kIssuccessFieldNumber = 1;
  inline bool issuccess() const;
  inline void set_issuccess(bool value);

  // optional string err = 2;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 2;
  inline const ::std::string& err() const;
  inline void set_err(const ::std::string& value);
  inline void set_err(const char* value);
  inline void set_err(const char* value, size_t size);
  inline ::std::string* mutable_err();
  inline ::std::string* release_err();
  inline void set_allocated_err(::std::string* err);

  // @@protoc_insertion_point(class_scope:admin.PkgSysInfoSetReply)
 private:
  inline void set_has_issuccess();
  inline void clear_has_issuccess();
  inline void set_has_err();
  inline void clear_has_err();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  bool issuccess_;
  friend void  protobuf_AddDesc_admin_2eproto();
  friend void protobuf_AssignDesc_admin_2eproto();
  friend void protobuf_ShutdownFile_admin_2eproto();

  void InitAsDefaultInstance();
  static PkgSysInfoSetReply* default_instance_;
};
// -------------------------------------------------------------------

class PkgSysInfoGetReq : public ::google::protobuf::Message {
 public:
  PkgSysInfoGetReq();
  virtual ~PkgSysInfoGetReq();

  PkgSysInfoGetReq(const PkgSysInfoGetReq& from);

  inline PkgSysInfoGetReq& operator=(const PkgSysInfoGetReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgSysInfoGetReq& default_instance();

  void Swap(PkgSysInfoGetReq* other);

  // implements Message ----------------------------------------------

  inline PkgSysInfoGetReq* New() const { return New(NULL); }

  PkgSysInfoGetReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgSysInfoGetReq& from);
  void MergeFrom(const PkgSysInfoGetReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgSysInfoGetReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string keystring = 1;
  inline bool has_keystring() const;
  inline void clear_keystring();
  static const int kKeystringFieldNumber = 1;
  inline const ::std::string& keystring() const;
  inline void set_keystring(const ::std::string& value);
  inline void set_keystring(const char* value);
  inline void set_keystring(const char* value, size_t size);
  inline ::std::string* mutable_keystring();
  inline ::std::string* release_keystring();
  inline void set_allocated_keystring(::std::string* keystring);

  // @@protoc_insertion_point(class_scope:admin.PkgSysInfoGetReq)
 private:
  inline void set_has_keystring();
  inline void clear_has_keystring();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr keystring_;
  friend void  protobuf_AddDesc_admin_2eproto();
  friend void protobuf_AssignDesc_admin_2eproto();
  friend void protobuf_ShutdownFile_admin_2eproto();

  void InitAsDefaultInstance();
  static PkgSysInfoGetReq* default_instance_;
};
// -------------------------------------------------------------------

class PkgSysInfoGetReply : public ::google::protobuf::Message {
 public:
  PkgSysInfoGetReply();
  virtual ~PkgSysInfoGetReply();

  PkgSysInfoGetReply(const PkgSysInfoGetReply& from);

  inline PkgSysInfoGetReply& operator=(const PkgSysInfoGetReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgSysInfoGetReply& default_instance();

  void Swap(PkgSysInfoGetReply* other);

  // implements Message ----------------------------------------------

  inline PkgSysInfoGetReply* New() const { return New(NULL); }

  PkgSysInfoGetReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgSysInfoGetReply& from);
  void MergeFrom(const PkgSysInfoGetReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgSysInfoGetReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool issuccess = 1;
  inline bool has_issuccess() const;
  inline void clear_issuccess();
  static const int kIssuccessFieldNumber = 1;
  inline bool issuccess() const;
  inline void set_issuccess(bool value);

  // optional string err = 2;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 2;
  inline const ::std::string& err() const;
  inline void set_err(const ::std::string& value);
  inline void set_err(const char* value);
  inline void set_err(const char* value, size_t size);
  inline ::std::string* mutable_err();
  inline ::std::string* release_err();
  inline void set_allocated_err(::std::string* err);

  // optional string valuestring = 10;
  inline bool has_valuestring() const;
  inline void clear_valuestring();
  static const int kValuestringFieldNumber = 10;
  inline const ::std::string& valuestring() const;
  inline void set_valuestring(const ::std::string& value);
  inline void set_valuestring(const char* value);
  inline void set_valuestring(const char* value, size_t size);
  inline ::std::string* mutable_valuestring();
  inline ::std::string* release_valuestring();
  inline void set_allocated_valuestring(::std::string* valuestring);

  // @@protoc_insertion_point(class_scope:admin.PkgSysInfoGetReply)
 private:
  inline void set_has_issuccess();
  inline void clear_has_issuccess();
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_valuestring();
  inline void clear_has_valuestring();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  ::google::protobuf::internal::ArenaStringPtr valuestring_;
  bool issuccess_;
  friend void  protobuf_AddDesc_admin_2eproto();
  friend void protobuf_AssignDesc_admin_2eproto();
  friend void protobuf_ShutdownFile_admin_2eproto();

  void InitAsDefaultInstance();
  static PkgSysInfoGetReply* default_instance_;
};
// ===================================================================


// ===================================================================

// PkgUserInfo

// optional int32 id = 1;
inline bool PkgUserInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgUserInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgUserInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgUserInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 PkgUserInfo::id() const {
  // @@protoc_insertion_point(field_get:admin.PkgUserInfo.id)
  return id_;
}
inline void PkgUserInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:admin.PkgUserInfo.id)
}

// optional string username = 2;
inline bool PkgUserInfo::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgUserInfo::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgUserInfo::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgUserInfo::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& PkgUserInfo::username() const {
  // @@protoc_insertion_point(field_get:admin.PkgUserInfo.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserInfo::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:admin.PkgUserInfo.username)
}
inline void PkgUserInfo::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:admin.PkgUserInfo.username)
}
inline void PkgUserInfo::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:admin.PkgUserInfo.username)
}
inline ::std::string* PkgUserInfo::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:admin.PkgUserInfo.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserInfo::release_username() {
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserInfo::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:admin.PkgUserInfo.username)
}

// optional string password = 3;
inline bool PkgUserInfo::has_password() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgUserInfo::set_has_password() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgUserInfo::clear_has_password() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgUserInfo::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& PkgUserInfo::password() const {
  // @@protoc_insertion_point(field_get:admin.PkgUserInfo.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserInfo::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:admin.PkgUserInfo.password)
}
inline void PkgUserInfo::set_password(const char* value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:admin.PkgUserInfo.password)
}
inline void PkgUserInfo::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:admin.PkgUserInfo.password)
}
inline ::std::string* PkgUserInfo::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:admin.PkgUserInfo.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserInfo::release_password() {
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserInfo::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:admin.PkgUserInfo.password)
}

// optional int32 permission = 10;
inline bool PkgUserInfo::has_permission() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PkgUserInfo::set_has_permission() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PkgUserInfo::clear_has_permission() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PkgUserInfo::clear_permission() {
  permission_ = 0;
  clear_has_permission();
}
inline ::google::protobuf::int32 PkgUserInfo::permission() const {
  // @@protoc_insertion_point(field_get:admin.PkgUserInfo.permission)
  return permission_;
}
inline void PkgUserInfo::set_permission(::google::protobuf::int32 value) {
  set_has_permission();
  permission_ = value;
  // @@protoc_insertion_point(field_set:admin.PkgUserInfo.permission)
}

// -------------------------------------------------------------------

// PkgUserLoginReq

// optional string username = 1;
inline bool PkgUserLoginReq::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgUserLoginReq::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgUserLoginReq::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgUserLoginReq::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& PkgUserLoginReq::username() const {
  // @@protoc_insertion_point(field_get:admin.PkgUserLoginReq.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReq::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:admin.PkgUserLoginReq.username)
}
inline void PkgUserLoginReq::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:admin.PkgUserLoginReq.username)
}
inline void PkgUserLoginReq::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:admin.PkgUserLoginReq.username)
}
inline ::std::string* PkgUserLoginReq::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:admin.PkgUserLoginReq.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserLoginReq::release_username() {
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReq::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:admin.PkgUserLoginReq.username)
}

// required string password = 2;
inline bool PkgUserLoginReq::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgUserLoginReq::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgUserLoginReq::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgUserLoginReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& PkgUserLoginReq::password() const {
  // @@protoc_insertion_point(field_get:admin.PkgUserLoginReq.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReq::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:admin.PkgUserLoginReq.password)
}
inline void PkgUserLoginReq::set_password(const char* value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:admin.PkgUserLoginReq.password)
}
inline void PkgUserLoginReq::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:admin.PkgUserLoginReq.password)
}
inline ::std::string* PkgUserLoginReq::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:admin.PkgUserLoginReq.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserLoginReq::release_password() {
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:admin.PkgUserLoginReq.password)
}

// -------------------------------------------------------------------

// PkgUserLoginReply

// required bool issuccess = 1 [default = true];
inline bool PkgUserLoginReply::has_issuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgUserLoginReply::set_has_issuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgUserLoginReply::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgUserLoginReply::clear_issuccess() {
  issuccess_ = true;
  clear_has_issuccess();
}
inline bool PkgUserLoginReply::issuccess() const {
  // @@protoc_insertion_point(field_get:admin.PkgUserLoginReply.issuccess)
  return issuccess_;
}
inline void PkgUserLoginReply::set_issuccess(bool value) {
  set_has_issuccess();
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:admin.PkgUserLoginReply.issuccess)
}

// optional string err = 2;
inline bool PkgUserLoginReply::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgUserLoginReply::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgUserLoginReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgUserLoginReply::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
inline const ::std::string& PkgUserLoginReply::err() const {
  // @@protoc_insertion_point(field_get:admin.PkgUserLoginReply.err)
  return err_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReply::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:admin.PkgUserLoginReply.err)
}
inline void PkgUserLoginReply::set_err(const char* value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:admin.PkgUserLoginReply.err)
}
inline void PkgUserLoginReply::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:admin.PkgUserLoginReply.err)
}
inline ::std::string* PkgUserLoginReply::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:admin.PkgUserLoginReply.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserLoginReply::release_err() {
  clear_has_err();
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserLoginReply::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:admin.PkgUserLoginReply.err)
}

// optional int32 userid = 3;
inline bool PkgUserLoginReply::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgUserLoginReply::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgUserLoginReply::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgUserLoginReply::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 PkgUserLoginReply::userid() const {
  // @@protoc_insertion_point(field_get:admin.PkgUserLoginReply.userid)
  return userid_;
}
inline void PkgUserLoginReply::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:admin.PkgUserLoginReply.userid)
}

// optional int32 permission = 4;
inline bool PkgUserLoginReply::has_permission() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PkgUserLoginReply::set_has_permission() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PkgUserLoginReply::clear_has_permission() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PkgUserLoginReply::clear_permission() {
  permission_ = 0;
  clear_has_permission();
}
inline ::google::protobuf::int32 PkgUserLoginReply::permission() const {
  // @@protoc_insertion_point(field_get:admin.PkgUserLoginReply.permission)
  return permission_;
}
inline void PkgUserLoginReply::set_permission(::google::protobuf::int32 value) {
  set_has_permission();
  permission_ = value;
  // @@protoc_insertion_point(field_set:admin.PkgUserLoginReply.permission)
}

// -------------------------------------------------------------------

// PkgUserOperationReq

// required int32 useroperation = 1;
inline bool PkgUserOperationReq::has_useroperation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgUserOperationReq::set_has_useroperation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgUserOperationReq::clear_has_useroperation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgUserOperationReq::clear_useroperation() {
  useroperation_ = 0;
  clear_has_useroperation();
}
inline ::google::protobuf::int32 PkgUserOperationReq::useroperation() const {
  // @@protoc_insertion_point(field_get:admin.PkgUserOperationReq.useroperation)
  return useroperation_;
}
inline void PkgUserOperationReq::set_useroperation(::google::protobuf::int32 value) {
  set_has_useroperation();
  useroperation_ = value;
  // @@protoc_insertion_point(field_set:admin.PkgUserOperationReq.useroperation)
}

// optional .admin.PkgUserInfo userinfo = 2;
inline bool PkgUserOperationReq::has_userinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgUserOperationReq::set_has_userinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgUserOperationReq::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgUserOperationReq::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::admin::PkgUserInfo::Clear();
  clear_has_userinfo();
}
inline const ::admin::PkgUserInfo& PkgUserOperationReq::userinfo() const {
  // @@protoc_insertion_point(field_get:admin.PkgUserOperationReq.userinfo)
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::admin::PkgUserInfo* PkgUserOperationReq::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) {
    userinfo_ = new ::admin::PkgUserInfo;
  }
  // @@protoc_insertion_point(field_mutable:admin.PkgUserOperationReq.userinfo)
  return userinfo_;
}
inline ::admin::PkgUserInfo* PkgUserOperationReq::release_userinfo() {
  clear_has_userinfo();
  ::admin::PkgUserInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void PkgUserOperationReq::set_allocated_userinfo(::admin::PkgUserInfo* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:admin.PkgUserOperationReq.userinfo)
}

// optional int32 userid = 10;
inline bool PkgUserOperationReq::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgUserOperationReq::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgUserOperationReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgUserOperationReq::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 PkgUserOperationReq::userid() const {
  // @@protoc_insertion_point(field_get:admin.PkgUserOperationReq.userid)
  return userid_;
}
inline void PkgUserOperationReq::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:admin.PkgUserOperationReq.userid)
}

// -------------------------------------------------------------------

// PkgUserOperationReply

// required bool issuccess = 1;
inline bool PkgUserOperationReply::has_issuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgUserOperationReply::set_has_issuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgUserOperationReply::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgUserOperationReply::clear_issuccess() {
  issuccess_ = false;
  clear_has_issuccess();
}
inline bool PkgUserOperationReply::issuccess() const {
  // @@protoc_insertion_point(field_get:admin.PkgUserOperationReply.issuccess)
  return issuccess_;
}
inline void PkgUserOperationReply::set_issuccess(bool value) {
  set_has_issuccess();
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:admin.PkgUserOperationReply.issuccess)
}

// optional string err = 2;
inline bool PkgUserOperationReply::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgUserOperationReply::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgUserOperationReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgUserOperationReply::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
inline const ::std::string& PkgUserOperationReply::err() const {
  // @@protoc_insertion_point(field_get:admin.PkgUserOperationReply.err)
  return err_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserOperationReply::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:admin.PkgUserOperationReply.err)
}
inline void PkgUserOperationReply::set_err(const char* value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:admin.PkgUserOperationReply.err)
}
inline void PkgUserOperationReply::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:admin.PkgUserOperationReply.err)
}
inline ::std::string* PkgUserOperationReply::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:admin.PkgUserOperationReply.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgUserOperationReply::release_err() {
  clear_has_err();
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgUserOperationReply::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:admin.PkgUserOperationReply.err)
}

// optional int32 userid = 5;
inline bool PkgUserOperationReply::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgUserOperationReply::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgUserOperationReply::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgUserOperationReply::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 PkgUserOperationReply::userid() const {
  // @@protoc_insertion_point(field_get:admin.PkgUserOperationReply.userid)
  return userid_;
}
inline void PkgUserOperationReply::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:admin.PkgUserOperationReply.userid)
}

// -------------------------------------------------------------------

// PkgAdvQueryReq

// required int32 queryflag = 1 [default = 1];
inline bool PkgAdvQueryReq::has_queryflag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgAdvQueryReq::set_has_queryflag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgAdvQueryReq::clear_has_queryflag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgAdvQueryReq::clear_queryflag() {
  queryflag_ = 1;
  clear_has_queryflag();
}
inline ::google::protobuf::int32 PkgAdvQueryReq::queryflag() const {
  // @@protoc_insertion_point(field_get:admin.PkgAdvQueryReq.queryflag)
  return queryflag_;
}
inline void PkgAdvQueryReq::set_queryflag(::google::protobuf::int32 value) {
  set_has_queryflag();
  queryflag_ = value;
  // @@protoc_insertion_point(field_set:admin.PkgAdvQueryReq.queryflag)
}

// optional int32 advid = 3;
inline bool PkgAdvQueryReq::has_advid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgAdvQueryReq::set_has_advid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgAdvQueryReq::clear_has_advid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgAdvQueryReq::clear_advid() {
  advid_ = 0;
  clear_has_advid();
}
inline ::google::protobuf::int32 PkgAdvQueryReq::advid() const {
  // @@protoc_insertion_point(field_get:admin.PkgAdvQueryReq.advid)
  return advid_;
}
inline void PkgAdvQueryReq::set_advid(::google::protobuf::int32 value) {
  set_has_advid();
  advid_ = value;
  // @@protoc_insertion_point(field_set:admin.PkgAdvQueryReq.advid)
}

// optional string keyname = 4;
inline bool PkgAdvQueryReq::has_keyname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgAdvQueryReq::set_has_keyname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgAdvQueryReq::clear_has_keyname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgAdvQueryReq::clear_keyname() {
  keyname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_keyname();
}
inline const ::std::string& PkgAdvQueryReq::keyname() const {
  // @@protoc_insertion_point(field_get:admin.PkgAdvQueryReq.keyname)
  return keyname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvQueryReq::set_keyname(const ::std::string& value) {
  set_has_keyname();
  keyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:admin.PkgAdvQueryReq.keyname)
}
inline void PkgAdvQueryReq::set_keyname(const char* value) {
  set_has_keyname();
  keyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:admin.PkgAdvQueryReq.keyname)
}
inline void PkgAdvQueryReq::set_keyname(const char* value, size_t size) {
  set_has_keyname();
  keyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:admin.PkgAdvQueryReq.keyname)
}
inline ::std::string* PkgAdvQueryReq::mutable_keyname() {
  set_has_keyname();
  // @@protoc_insertion_point(field_mutable:admin.PkgAdvQueryReq.keyname)
  return keyname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgAdvQueryReq::release_keyname() {
  clear_has_keyname();
  return keyname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvQueryReq::set_allocated_keyname(::std::string* keyname) {
  if (keyname != NULL) {
    set_has_keyname();
  } else {
    clear_has_keyname();
  }
  keyname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keyname);
  // @@protoc_insertion_point(field_set_allocated:admin.PkgAdvQueryReq.keyname)
}

// -------------------------------------------------------------------

// PkgAdvQueryReply

// required bool issuccess = 1;
inline bool PkgAdvQueryReply::has_issuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgAdvQueryReply::set_has_issuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgAdvQueryReply::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgAdvQueryReply::clear_issuccess() {
  issuccess_ = false;
  clear_has_issuccess();
}
inline bool PkgAdvQueryReply::issuccess() const {
  // @@protoc_insertion_point(field_get:admin.PkgAdvQueryReply.issuccess)
  return issuccess_;
}
inline void PkgAdvQueryReply::set_issuccess(bool value) {
  set_has_issuccess();
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:admin.PkgAdvQueryReply.issuccess)
}

// optional string err = 2;
inline bool PkgAdvQueryReply::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgAdvQueryReply::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgAdvQueryReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgAdvQueryReply::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
inline const ::std::string& PkgAdvQueryReply::err() const {
  // @@protoc_insertion_point(field_get:admin.PkgAdvQueryReply.err)
  return err_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvQueryReply::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:admin.PkgAdvQueryReply.err)
}
inline void PkgAdvQueryReply::set_err(const char* value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:admin.PkgAdvQueryReply.err)
}
inline void PkgAdvQueryReply::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:admin.PkgAdvQueryReply.err)
}
inline ::std::string* PkgAdvQueryReply::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:admin.PkgAdvQueryReply.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgAdvQueryReply::release_err() {
  clear_has_err();
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvQueryReply::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:admin.PkgAdvQueryReply.err)
}

// repeated .admin.PkgAdvInfo advinfolist = 3;
inline int PkgAdvQueryReply::advinfolist_size() const {
  return advinfolist_.size();
}
inline void PkgAdvQueryReply::clear_advinfolist() {
  advinfolist_.Clear();
}
inline const ::admin::PkgAdvInfo& PkgAdvQueryReply::advinfolist(int index) const {
  // @@protoc_insertion_point(field_get:admin.PkgAdvQueryReply.advinfolist)
  return advinfolist_.Get(index);
}
inline ::admin::PkgAdvInfo* PkgAdvQueryReply::mutable_advinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:admin.PkgAdvQueryReply.advinfolist)
  return advinfolist_.Mutable(index);
}
inline ::admin::PkgAdvInfo* PkgAdvQueryReply::add_advinfolist() {
  // @@protoc_insertion_point(field_add:admin.PkgAdvQueryReply.advinfolist)
  return advinfolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::admin::PkgAdvInfo >&
PkgAdvQueryReply::advinfolist() const {
  // @@protoc_insertion_point(field_list:admin.PkgAdvQueryReply.advinfolist)
  return advinfolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::admin::PkgAdvInfo >*
PkgAdvQueryReply::mutable_advinfolist() {
  // @@protoc_insertion_point(field_mutable_list:admin.PkgAdvQueryReply.advinfolist)
  return &advinfolist_;
}

// -------------------------------------------------------------------

// PkgAdvInfo

// optional int32 id = 1 [default = 0];
inline bool PkgAdvInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgAdvInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgAdvInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgAdvInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 PkgAdvInfo::id() const {
  // @@protoc_insertion_point(field_get:admin.PkgAdvInfo.id)
  return id_;
}
inline void PkgAdvInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:admin.PkgAdvInfo.id)
}

// optional string name = 2;
inline bool PkgAdvInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgAdvInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgAdvInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgAdvInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& PkgAdvInfo::name() const {
  // @@protoc_insertion_point(field_get:admin.PkgAdvInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:admin.PkgAdvInfo.name)
}
inline void PkgAdvInfo::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:admin.PkgAdvInfo.name)
}
inline void PkgAdvInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:admin.PkgAdvInfo.name)
}
inline ::std::string* PkgAdvInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:admin.PkgAdvInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgAdvInfo::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:admin.PkgAdvInfo.name)
}

// optional string urlpic = 3;
inline bool PkgAdvInfo::has_urlpic() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgAdvInfo::set_has_urlpic() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgAdvInfo::clear_has_urlpic() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgAdvInfo::clear_urlpic() {
  urlpic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_urlpic();
}
inline const ::std::string& PkgAdvInfo::urlpic() const {
  // @@protoc_insertion_point(field_get:admin.PkgAdvInfo.urlpic)
  return urlpic_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvInfo::set_urlpic(const ::std::string& value) {
  set_has_urlpic();
  urlpic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:admin.PkgAdvInfo.urlpic)
}
inline void PkgAdvInfo::set_urlpic(const char* value) {
  set_has_urlpic();
  urlpic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:admin.PkgAdvInfo.urlpic)
}
inline void PkgAdvInfo::set_urlpic(const char* value, size_t size) {
  set_has_urlpic();
  urlpic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:admin.PkgAdvInfo.urlpic)
}
inline ::std::string* PkgAdvInfo::mutable_urlpic() {
  set_has_urlpic();
  // @@protoc_insertion_point(field_mutable:admin.PkgAdvInfo.urlpic)
  return urlpic_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgAdvInfo::release_urlpic() {
  clear_has_urlpic();
  return urlpic_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvInfo::set_allocated_urlpic(::std::string* urlpic) {
  if (urlpic != NULL) {
    set_has_urlpic();
  } else {
    clear_has_urlpic();
  }
  urlpic_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), urlpic);
  // @@protoc_insertion_point(field_set_allocated:admin.PkgAdvInfo.urlpic)
}

// optional string advtxt = 4;
inline bool PkgAdvInfo::has_advtxt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PkgAdvInfo::set_has_advtxt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PkgAdvInfo::clear_has_advtxt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PkgAdvInfo::clear_advtxt() {
  advtxt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_advtxt();
}
inline const ::std::string& PkgAdvInfo::advtxt() const {
  // @@protoc_insertion_point(field_get:admin.PkgAdvInfo.advtxt)
  return advtxt_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvInfo::set_advtxt(const ::std::string& value) {
  set_has_advtxt();
  advtxt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:admin.PkgAdvInfo.advtxt)
}
inline void PkgAdvInfo::set_advtxt(const char* value) {
  set_has_advtxt();
  advtxt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:admin.PkgAdvInfo.advtxt)
}
inline void PkgAdvInfo::set_advtxt(const char* value, size_t size) {
  set_has_advtxt();
  advtxt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:admin.PkgAdvInfo.advtxt)
}
inline ::std::string* PkgAdvInfo::mutable_advtxt() {
  set_has_advtxt();
  // @@protoc_insertion_point(field_mutable:admin.PkgAdvInfo.advtxt)
  return advtxt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgAdvInfo::release_advtxt() {
  clear_has_advtxt();
  return advtxt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvInfo::set_allocated_advtxt(::std::string* advtxt) {
  if (advtxt != NULL) {
    set_has_advtxt();
  } else {
    clear_has_advtxt();
  }
  advtxt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), advtxt);
  // @@protoc_insertion_point(field_set_allocated:admin.PkgAdvInfo.advtxt)
}

// optional string advdesc = 5;
inline bool PkgAdvInfo::has_advdesc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PkgAdvInfo::set_has_advdesc() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PkgAdvInfo::clear_has_advdesc() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PkgAdvInfo::clear_advdesc() {
  advdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_advdesc();
}
inline const ::std::string& PkgAdvInfo::advdesc() const {
  // @@protoc_insertion_point(field_get:admin.PkgAdvInfo.advdesc)
  return advdesc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvInfo::set_advdesc(const ::std::string& value) {
  set_has_advdesc();
  advdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:admin.PkgAdvInfo.advdesc)
}
inline void PkgAdvInfo::set_advdesc(const char* value) {
  set_has_advdesc();
  advdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:admin.PkgAdvInfo.advdesc)
}
inline void PkgAdvInfo::set_advdesc(const char* value, size_t size) {
  set_has_advdesc();
  advdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:admin.PkgAdvInfo.advdesc)
}
inline ::std::string* PkgAdvInfo::mutable_advdesc() {
  set_has_advdesc();
  // @@protoc_insertion_point(field_mutable:admin.PkgAdvInfo.advdesc)
  return advdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgAdvInfo::release_advdesc() {
  clear_has_advdesc();
  return advdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvInfo::set_allocated_advdesc(::std::string* advdesc) {
  if (advdesc != NULL) {
    set_has_advdesc();
  } else {
    clear_has_advdesc();
  }
  advdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), advdesc);
  // @@protoc_insertion_point(field_set_allocated:admin.PkgAdvInfo.advdesc)
}

// optional string createtime = 6;
inline bool PkgAdvInfo::has_createtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PkgAdvInfo::set_has_createtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PkgAdvInfo::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PkgAdvInfo::clear_createtime() {
  createtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_createtime();
}
inline const ::std::string& PkgAdvInfo::createtime() const {
  // @@protoc_insertion_point(field_get:admin.PkgAdvInfo.createtime)
  return createtime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvInfo::set_createtime(const ::std::string& value) {
  set_has_createtime();
  createtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:admin.PkgAdvInfo.createtime)
}
inline void PkgAdvInfo::set_createtime(const char* value) {
  set_has_createtime();
  createtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:admin.PkgAdvInfo.createtime)
}
inline void PkgAdvInfo::set_createtime(const char* value, size_t size) {
  set_has_createtime();
  createtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:admin.PkgAdvInfo.createtime)
}
inline ::std::string* PkgAdvInfo::mutable_createtime() {
  set_has_createtime();
  // @@protoc_insertion_point(field_mutable:admin.PkgAdvInfo.createtime)
  return createtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgAdvInfo::release_createtime() {
  clear_has_createtime();
  return createtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvInfo::set_allocated_createtime(::std::string* createtime) {
  if (createtime != NULL) {
    set_has_createtime();
  } else {
    clear_has_createtime();
  }
  createtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), createtime);
  // @@protoc_insertion_point(field_set_allocated:admin.PkgAdvInfo.createtime)
}

// optional string expiretime = 7;
inline bool PkgAdvInfo::has_expiretime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PkgAdvInfo::set_has_expiretime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PkgAdvInfo::clear_has_expiretime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PkgAdvInfo::clear_expiretime() {
  expiretime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_expiretime();
}
inline const ::std::string& PkgAdvInfo::expiretime() const {
  // @@protoc_insertion_point(field_get:admin.PkgAdvInfo.expiretime)
  return expiretime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvInfo::set_expiretime(const ::std::string& value) {
  set_has_expiretime();
  expiretime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:admin.PkgAdvInfo.expiretime)
}
inline void PkgAdvInfo::set_expiretime(const char* value) {
  set_has_expiretime();
  expiretime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:admin.PkgAdvInfo.expiretime)
}
inline void PkgAdvInfo::set_expiretime(const char* value, size_t size) {
  set_has_expiretime();
  expiretime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:admin.PkgAdvInfo.expiretime)
}
inline ::std::string* PkgAdvInfo::mutable_expiretime() {
  set_has_expiretime();
  // @@protoc_insertion_point(field_mutable:admin.PkgAdvInfo.expiretime)
  return expiretime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgAdvInfo::release_expiretime() {
  clear_has_expiretime();
  return expiretime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvInfo::set_allocated_expiretime(::std::string* expiretime) {
  if (expiretime != NULL) {
    set_has_expiretime();
  } else {
    clear_has_expiretime();
  }
  expiretime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), expiretime);
  // @@protoc_insertion_point(field_set_allocated:admin.PkgAdvInfo.expiretime)
}

// optional string picpath = 8;
inline bool PkgAdvInfo::has_picpath() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PkgAdvInfo::set_has_picpath() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PkgAdvInfo::clear_has_picpath() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PkgAdvInfo::clear_picpath() {
  picpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_picpath();
}
inline const ::std::string& PkgAdvInfo::picpath() const {
  // @@protoc_insertion_point(field_get:admin.PkgAdvInfo.picpath)
  return picpath_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvInfo::set_picpath(const ::std::string& value) {
  set_has_picpath();
  picpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:admin.PkgAdvInfo.picpath)
}
inline void PkgAdvInfo::set_picpath(const char* value) {
  set_has_picpath();
  picpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:admin.PkgAdvInfo.picpath)
}
inline void PkgAdvInfo::set_picpath(const char* value, size_t size) {
  set_has_picpath();
  picpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:admin.PkgAdvInfo.picpath)
}
inline ::std::string* PkgAdvInfo::mutable_picpath() {
  set_has_picpath();
  // @@protoc_insertion_point(field_mutable:admin.PkgAdvInfo.picpath)
  return picpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgAdvInfo::release_picpath() {
  clear_has_picpath();
  return picpath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvInfo::set_allocated_picpath(::std::string* picpath) {
  if (picpath != NULL) {
    set_has_picpath();
  } else {
    clear_has_picpath();
  }
  picpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), picpath);
  // @@protoc_insertion_point(field_set_allocated:admin.PkgAdvInfo.picpath)
}

// -------------------------------------------------------------------

// PkgAdvOperationReq

// required int32 advoperation = 1;
inline bool PkgAdvOperationReq::has_advoperation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgAdvOperationReq::set_has_advoperation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgAdvOperationReq::clear_has_advoperation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgAdvOperationReq::clear_advoperation() {
  advoperation_ = 0;
  clear_has_advoperation();
}
inline ::google::protobuf::int32 PkgAdvOperationReq::advoperation() const {
  // @@protoc_insertion_point(field_get:admin.PkgAdvOperationReq.advoperation)
  return advoperation_;
}
inline void PkgAdvOperationReq::set_advoperation(::google::protobuf::int32 value) {
  set_has_advoperation();
  advoperation_ = value;
  // @@protoc_insertion_point(field_set:admin.PkgAdvOperationReq.advoperation)
}

// optional .admin.PkgAdvInfo advinfo = 2;
inline bool PkgAdvOperationReq::has_advinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgAdvOperationReq::set_has_advinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgAdvOperationReq::clear_has_advinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgAdvOperationReq::clear_advinfo() {
  if (advinfo_ != NULL) advinfo_->::admin::PkgAdvInfo::Clear();
  clear_has_advinfo();
}
inline const ::admin::PkgAdvInfo& PkgAdvOperationReq::advinfo() const {
  // @@protoc_insertion_point(field_get:admin.PkgAdvOperationReq.advinfo)
  return advinfo_ != NULL ? *advinfo_ : *default_instance_->advinfo_;
}
inline ::admin::PkgAdvInfo* PkgAdvOperationReq::mutable_advinfo() {
  set_has_advinfo();
  if (advinfo_ == NULL) {
    advinfo_ = new ::admin::PkgAdvInfo;
  }
  // @@protoc_insertion_point(field_mutable:admin.PkgAdvOperationReq.advinfo)
  return advinfo_;
}
inline ::admin::PkgAdvInfo* PkgAdvOperationReq::release_advinfo() {
  clear_has_advinfo();
  ::admin::PkgAdvInfo* temp = advinfo_;
  advinfo_ = NULL;
  return temp;
}
inline void PkgAdvOperationReq::set_allocated_advinfo(::admin::PkgAdvInfo* advinfo) {
  delete advinfo_;
  advinfo_ = advinfo;
  if (advinfo) {
    set_has_advinfo();
  } else {
    clear_has_advinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:admin.PkgAdvOperationReq.advinfo)
}

// optional int32 advid = 10;
inline bool PkgAdvOperationReq::has_advid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgAdvOperationReq::set_has_advid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgAdvOperationReq::clear_has_advid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgAdvOperationReq::clear_advid() {
  advid_ = 0;
  clear_has_advid();
}
inline ::google::protobuf::int32 PkgAdvOperationReq::advid() const {
  // @@protoc_insertion_point(field_get:admin.PkgAdvOperationReq.advid)
  return advid_;
}
inline void PkgAdvOperationReq::set_advid(::google::protobuf::int32 value) {
  set_has_advid();
  advid_ = value;
  // @@protoc_insertion_point(field_set:admin.PkgAdvOperationReq.advid)
}

// -------------------------------------------------------------------

// PkgAdvOperationReply

// required bool issuccess = 1;
inline bool PkgAdvOperationReply::has_issuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgAdvOperationReply::set_has_issuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgAdvOperationReply::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgAdvOperationReply::clear_issuccess() {
  issuccess_ = false;
  clear_has_issuccess();
}
inline bool PkgAdvOperationReply::issuccess() const {
  // @@protoc_insertion_point(field_get:admin.PkgAdvOperationReply.issuccess)
  return issuccess_;
}
inline void PkgAdvOperationReply::set_issuccess(bool value) {
  set_has_issuccess();
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:admin.PkgAdvOperationReply.issuccess)
}

// optional string err = 2;
inline bool PkgAdvOperationReply::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgAdvOperationReply::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgAdvOperationReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgAdvOperationReply::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
inline const ::std::string& PkgAdvOperationReply::err() const {
  // @@protoc_insertion_point(field_get:admin.PkgAdvOperationReply.err)
  return err_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvOperationReply::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:admin.PkgAdvOperationReply.err)
}
inline void PkgAdvOperationReply::set_err(const char* value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:admin.PkgAdvOperationReply.err)
}
inline void PkgAdvOperationReply::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:admin.PkgAdvOperationReply.err)
}
inline ::std::string* PkgAdvOperationReply::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:admin.PkgAdvOperationReply.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgAdvOperationReply::release_err() {
  clear_has_err();
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgAdvOperationReply::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:admin.PkgAdvOperationReply.err)
}

// optional int32 advid = 5;
inline bool PkgAdvOperationReply::has_advid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgAdvOperationReply::set_has_advid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgAdvOperationReply::clear_has_advid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgAdvOperationReply::clear_advid() {
  advid_ = 0;
  clear_has_advid();
}
inline ::google::protobuf::int32 PkgAdvOperationReply::advid() const {
  // @@protoc_insertion_point(field_get:admin.PkgAdvOperationReply.advid)
  return advid_;
}
inline void PkgAdvOperationReply::set_advid(::google::protobuf::int32 value) {
  set_has_advid();
  advid_ = value;
  // @@protoc_insertion_point(field_set:admin.PkgAdvOperationReply.advid)
}

// -------------------------------------------------------------------

// PkgSysInfoSetReq

// optional string keystring = 10;
inline bool PkgSysInfoSetReq::has_keystring() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgSysInfoSetReq::set_has_keystring() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgSysInfoSetReq::clear_has_keystring() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgSysInfoSetReq::clear_keystring() {
  keystring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_keystring();
}
inline const ::std::string& PkgSysInfoSetReq::keystring() const {
  // @@protoc_insertion_point(field_get:admin.PkgSysInfoSetReq.keystring)
  return keystring_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgSysInfoSetReq::set_keystring(const ::std::string& value) {
  set_has_keystring();
  keystring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:admin.PkgSysInfoSetReq.keystring)
}
inline void PkgSysInfoSetReq::set_keystring(const char* value) {
  set_has_keystring();
  keystring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:admin.PkgSysInfoSetReq.keystring)
}
inline void PkgSysInfoSetReq::set_keystring(const char* value, size_t size) {
  set_has_keystring();
  keystring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:admin.PkgSysInfoSetReq.keystring)
}
inline ::std::string* PkgSysInfoSetReq::mutable_keystring() {
  set_has_keystring();
  // @@protoc_insertion_point(field_mutable:admin.PkgSysInfoSetReq.keystring)
  return keystring_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgSysInfoSetReq::release_keystring() {
  clear_has_keystring();
  return keystring_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgSysInfoSetReq::set_allocated_keystring(::std::string* keystring) {
  if (keystring != NULL) {
    set_has_keystring();
  } else {
    clear_has_keystring();
  }
  keystring_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keystring);
  // @@protoc_insertion_point(field_set_allocated:admin.PkgSysInfoSetReq.keystring)
}

// optional string valuestring = 11;
inline bool PkgSysInfoSetReq::has_valuestring() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgSysInfoSetReq::set_has_valuestring() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgSysInfoSetReq::clear_has_valuestring() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgSysInfoSetReq::clear_valuestring() {
  valuestring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_valuestring();
}
inline const ::std::string& PkgSysInfoSetReq::valuestring() const {
  // @@protoc_insertion_point(field_get:admin.PkgSysInfoSetReq.valuestring)
  return valuestring_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgSysInfoSetReq::set_valuestring(const ::std::string& value) {
  set_has_valuestring();
  valuestring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:admin.PkgSysInfoSetReq.valuestring)
}
inline void PkgSysInfoSetReq::set_valuestring(const char* value) {
  set_has_valuestring();
  valuestring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:admin.PkgSysInfoSetReq.valuestring)
}
inline void PkgSysInfoSetReq::set_valuestring(const char* value, size_t size) {
  set_has_valuestring();
  valuestring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:admin.PkgSysInfoSetReq.valuestring)
}
inline ::std::string* PkgSysInfoSetReq::mutable_valuestring() {
  set_has_valuestring();
  // @@protoc_insertion_point(field_mutable:admin.PkgSysInfoSetReq.valuestring)
  return valuestring_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgSysInfoSetReq::release_valuestring() {
  clear_has_valuestring();
  return valuestring_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgSysInfoSetReq::set_allocated_valuestring(::std::string* valuestring) {
  if (valuestring != NULL) {
    set_has_valuestring();
  } else {
    clear_has_valuestring();
  }
  valuestring_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), valuestring);
  // @@protoc_insertion_point(field_set_allocated:admin.PkgSysInfoSetReq.valuestring)
}

// -------------------------------------------------------------------

// PkgSysInfoSetReply

// required bool issuccess = 1;
inline bool PkgSysInfoSetReply::has_issuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgSysInfoSetReply::set_has_issuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgSysInfoSetReply::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgSysInfoSetReply::clear_issuccess() {
  issuccess_ = false;
  clear_has_issuccess();
}
inline bool PkgSysInfoSetReply::issuccess() const {
  // @@protoc_insertion_point(field_get:admin.PkgSysInfoSetReply.issuccess)
  return issuccess_;
}
inline void PkgSysInfoSetReply::set_issuccess(bool value) {
  set_has_issuccess();
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:admin.PkgSysInfoSetReply.issuccess)
}

// optional string err = 2;
inline bool PkgSysInfoSetReply::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgSysInfoSetReply::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgSysInfoSetReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgSysInfoSetReply::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
inline const ::std::string& PkgSysInfoSetReply::err() const {
  // @@protoc_insertion_point(field_get:admin.PkgSysInfoSetReply.err)
  return err_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgSysInfoSetReply::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:admin.PkgSysInfoSetReply.err)
}
inline void PkgSysInfoSetReply::set_err(const char* value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:admin.PkgSysInfoSetReply.err)
}
inline void PkgSysInfoSetReply::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:admin.PkgSysInfoSetReply.err)
}
inline ::std::string* PkgSysInfoSetReply::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:admin.PkgSysInfoSetReply.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgSysInfoSetReply::release_err() {
  clear_has_err();
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgSysInfoSetReply::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:admin.PkgSysInfoSetReply.err)
}

// -------------------------------------------------------------------

// PkgSysInfoGetReq

// optional string keystring = 1;
inline bool PkgSysInfoGetReq::has_keystring() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgSysInfoGetReq::set_has_keystring() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgSysInfoGetReq::clear_has_keystring() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgSysInfoGetReq::clear_keystring() {
  keystring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_keystring();
}
inline const ::std::string& PkgSysInfoGetReq::keystring() const {
  // @@protoc_insertion_point(field_get:admin.PkgSysInfoGetReq.keystring)
  return keystring_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgSysInfoGetReq::set_keystring(const ::std::string& value) {
  set_has_keystring();
  keystring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:admin.PkgSysInfoGetReq.keystring)
}
inline void PkgSysInfoGetReq::set_keystring(const char* value) {
  set_has_keystring();
  keystring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:admin.PkgSysInfoGetReq.keystring)
}
inline void PkgSysInfoGetReq::set_keystring(const char* value, size_t size) {
  set_has_keystring();
  keystring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:admin.PkgSysInfoGetReq.keystring)
}
inline ::std::string* PkgSysInfoGetReq::mutable_keystring() {
  set_has_keystring();
  // @@protoc_insertion_point(field_mutable:admin.PkgSysInfoGetReq.keystring)
  return keystring_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgSysInfoGetReq::release_keystring() {
  clear_has_keystring();
  return keystring_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgSysInfoGetReq::set_allocated_keystring(::std::string* keystring) {
  if (keystring != NULL) {
    set_has_keystring();
  } else {
    clear_has_keystring();
  }
  keystring_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keystring);
  // @@protoc_insertion_point(field_set_allocated:admin.PkgSysInfoGetReq.keystring)
}

// -------------------------------------------------------------------

// PkgSysInfoGetReply

// required bool issuccess = 1;
inline bool PkgSysInfoGetReply::has_issuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgSysInfoGetReply::set_has_issuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgSysInfoGetReply::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgSysInfoGetReply::clear_issuccess() {
  issuccess_ = false;
  clear_has_issuccess();
}
inline bool PkgSysInfoGetReply::issuccess() const {
  // @@protoc_insertion_point(field_get:admin.PkgSysInfoGetReply.issuccess)
  return issuccess_;
}
inline void PkgSysInfoGetReply::set_issuccess(bool value) {
  set_has_issuccess();
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:admin.PkgSysInfoGetReply.issuccess)
}

// optional string err = 2;
inline bool PkgSysInfoGetReply::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgSysInfoGetReply::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgSysInfoGetReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgSysInfoGetReply::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
inline const ::std::string& PkgSysInfoGetReply::err() const {
  // @@protoc_insertion_point(field_get:admin.PkgSysInfoGetReply.err)
  return err_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgSysInfoGetReply::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:admin.PkgSysInfoGetReply.err)
}
inline void PkgSysInfoGetReply::set_err(const char* value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:admin.PkgSysInfoGetReply.err)
}
inline void PkgSysInfoGetReply::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:admin.PkgSysInfoGetReply.err)
}
inline ::std::string* PkgSysInfoGetReply::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:admin.PkgSysInfoGetReply.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgSysInfoGetReply::release_err() {
  clear_has_err();
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgSysInfoGetReply::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:admin.PkgSysInfoGetReply.err)
}

// optional string valuestring = 10;
inline bool PkgSysInfoGetReply::has_valuestring() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgSysInfoGetReply::set_has_valuestring() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgSysInfoGetReply::clear_has_valuestring() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgSysInfoGetReply::clear_valuestring() {
  valuestring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_valuestring();
}
inline const ::std::string& PkgSysInfoGetReply::valuestring() const {
  // @@protoc_insertion_point(field_get:admin.PkgSysInfoGetReply.valuestring)
  return valuestring_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgSysInfoGetReply::set_valuestring(const ::std::string& value) {
  set_has_valuestring();
  valuestring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:admin.PkgSysInfoGetReply.valuestring)
}
inline void PkgSysInfoGetReply::set_valuestring(const char* value) {
  set_has_valuestring();
  valuestring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:admin.PkgSysInfoGetReply.valuestring)
}
inline void PkgSysInfoGetReply::set_valuestring(const char* value, size_t size) {
  set_has_valuestring();
  valuestring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:admin.PkgSysInfoGetReply.valuestring)
}
inline ::std::string* PkgSysInfoGetReply::mutable_valuestring() {
  set_has_valuestring();
  // @@protoc_insertion_point(field_mutable:admin.PkgSysInfoGetReply.valuestring)
  return valuestring_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgSysInfoGetReply::release_valuestring() {
  clear_has_valuestring();
  return valuestring_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgSysInfoGetReply::set_allocated_valuestring(::std::string* valuestring) {
  if (valuestring != NULL) {
    set_has_valuestring();
  } else {
    clear_has_valuestring();
  }
  valuestring_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), valuestring);
  // @@protoc_insertion_point(field_set_allocated:admin.PkgSysInfoGetReply.valuestring)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace admin

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::admin::PkgUserOperationReq_EnUserOperation> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::admin::PkgUserOperationReq_EnUserOperation>() {
  return ::admin::PkgUserOperationReq_EnUserOperation_descriptor();
}
template <> struct is_proto_enum< ::admin::PkgAdvQueryReq_EnQueryType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::admin::PkgAdvQueryReq_EnQueryType>() {
  return ::admin::PkgAdvQueryReq_EnQueryType_descriptor();
}
template <> struct is_proto_enum< ::admin::PkgAdvOperationReq_EnAdvOperation> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::admin::PkgAdvOperationReq_EnAdvOperation>() {
  return ::admin::PkgAdvOperationReq_EnAdvOperation_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_admin_2eproto__INCLUDED
