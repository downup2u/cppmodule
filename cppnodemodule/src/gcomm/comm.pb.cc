// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: comm.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "comm.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace comm {

namespace {

const ::google::protobuf::Descriptor* PkgConnectReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgConnectReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgConnectReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgConnectReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgUserCheckReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserCheckReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgUserCheckReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserCheckReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgUserCheckInvitionCodeReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserCheckInvitionCodeReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgUserCheckInvitionCodeReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserCheckInvitionCodeReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgUserGetAuthReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserGetAuthReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgUserGetAuthReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserGetAuthReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgUserCreateReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserCreateReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgUserCreateReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserCreateReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgUserLoginReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserLoginReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgCompanyInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgCompanyInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgUserLoginReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserLoginReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgUserGetPasswordReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserGetPasswordReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgUserGetPasswordReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserGetPasswordReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgUserResetPasswordReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserResetPasswordReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgUserResetPasswordReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserResetPasswordReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgUserSetReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserSetReq_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PkgUserSetReq_EnSetType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* PkgUserSetReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserSetReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgUserInvitionUserReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserInvitionUserReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgUserInvitionUserReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserInvitionUserReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgUserInvitionCheckReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserInvitionCheckReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgUserInvitionCheckReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserInvitionCheckReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgUserCreateCompanyReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserCreateCompanyReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgUserCreateCompanyReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserCreateCompanyReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgUserReassignAdminReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserReassignAdminReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgUserReassignAdminReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserReassignAdminReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgUserDeleteFromCompanyReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserDeleteFromCompanyReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgUserDeleteFromCompanyReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserDeleteFromCompanyReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgUserExitCompanyReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserExitCompanyReq_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PkgUserExitCompanyReq_EnCmd_descriptor_ = NULL;
const ::google::protobuf::Descriptor* PkgUserExitCompanyReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserExitCompanyReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgTaskInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgTaskInfo_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PkgTaskInfo_EnTaskLevel_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PkgTaskInfo_EnTaskStatus_descriptor_ = NULL;
const ::google::protobuf::Descriptor* PkgTaskPageQueryReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgTaskPageQueryReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgTaskPageQueryReq_PkgTaskQueryCondition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgTaskPageQueryReq_PkgTaskQueryCondition_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PkgTaskPageQueryReq_EnTaskFlag_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PkgTaskPageQueryReq_EnTaskQueryCondition_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PkgTaskPageQueryReq_EnPageFlag_descriptor_ = NULL;
const ::google::protobuf::Descriptor* PkgTaskPageQueryReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgTaskPageQueryReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgTaskQueryReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgTaskQueryReq_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PkgTaskQueryReq_EnQueryFlag_descriptor_ = NULL;
const ::google::protobuf::Descriptor* PkgTaskQueryReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgTaskQueryReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgTaskSortFlag_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgTaskSortFlag_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgTaskSetSortFlagReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgTaskSetSortFlagReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgTaskSetSortFlagReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgTaskSetSortFlagReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgTaskOperationReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgTaskOperationReq_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PkgTaskOperationReq_EnTaskOperation_descriptor_ = NULL;
const ::google::protobuf::Descriptor* PkgTaskOperationReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgTaskOperationReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgCompanyGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgCompanyGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgGroupUser_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgGroupUser_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgCompanyGroupQueryReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgCompanyGroupQueryReq_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PkgCompanyGroupQueryReq_EnQueryType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* PkgCompanyGroupQueryReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgCompanyGroupQueryReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgAdvInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgAdvInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgAdvQueryReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgAdvQueryReq_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PkgAdvQueryReq_EnQueryType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* PkgAdvQueryReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgAdvQueryReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgQueryMyProfileReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgQueryMyProfileReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgQueryMyProfileReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgQueryMyProfileReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgLogoutReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgLogoutReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgLogoutReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgLogoutReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgNotifyReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgNotifyReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgNotifyReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgNotifyReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgPhoneCppWrapReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgPhoneCppWrapReq_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PkgPhoneCppWrapReq_EnReqType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* PkgPhoneCppWrapReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgPhoneCppWrapReply_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EnGetType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EnUpdatedFlag_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_comm_2eproto() {
  protobuf_AddDesc_comm_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "comm.proto");
  GOOGLE_CHECK(file != NULL);
  PkgConnectReq_descriptor_ = file->message_type(0);
  static const int PkgConnectReq_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgConnectReq, apptype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgConnectReq, appversion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgConnectReq, applanguage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgConnectReq, ostype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgConnectReq, osversion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgConnectReq, osrr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgConnectReq, clientsn_),
  };
  PkgConnectReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgConnectReq_descriptor_,
      PkgConnectReq::default_instance_,
      PkgConnectReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgConnectReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgConnectReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgConnectReq, _internal_metadata_),
      -1);
  PkgConnectReply_descriptor_ = file->message_type(1);
  static const int PkgConnectReply_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgConnectReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgConnectReply, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgConnectReply, urllist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgConnectReply, encryptkey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgConnectReply, hashedclientsn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgConnectReply, serversn_),
  };
  PkgConnectReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgConnectReply_descriptor_,
      PkgConnectReply::default_instance_,
      PkgConnectReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgConnectReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgConnectReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgConnectReply, _internal_metadata_),
      -1);
  PkgUserCheckReq_descriptor_ = file->message_type(2);
  static const int PkgUserCheckReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCheckReq, gettype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCheckReq, phonenumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCheckReq, emailaddress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCheckReq, username_),
  };
  PkgUserCheckReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserCheckReq_descriptor_,
      PkgUserCheckReq::default_instance_,
      PkgUserCheckReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCheckReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserCheckReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCheckReq, _internal_metadata_),
      -1);
  PkgUserCheckReply_descriptor_ = file->message_type(3);
  static const int PkgUserCheckReply_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCheckReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCheckReply, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCheckReply, userid_),
  };
  PkgUserCheckReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserCheckReply_descriptor_,
      PkgUserCheckReply::default_instance_,
      PkgUserCheckReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCheckReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserCheckReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCheckReply, _internal_metadata_),
      -1);
  PkgUserCheckInvitionCodeReq_descriptor_ = file->message_type(4);
  static const int PkgUserCheckInvitionCodeReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCheckInvitionCodeReq, gettype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCheckInvitionCodeReq, invitioncode_),
  };
  PkgUserCheckInvitionCodeReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserCheckInvitionCodeReq_descriptor_,
      PkgUserCheckInvitionCodeReq::default_instance_,
      PkgUserCheckInvitionCodeReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCheckInvitionCodeReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserCheckInvitionCodeReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCheckInvitionCodeReq, _internal_metadata_),
      -1);
  PkgUserCheckInvitionCodeReply_descriptor_ = file->message_type(5);
  static const int PkgUserCheckInvitionCodeReply_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCheckInvitionCodeReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCheckInvitionCodeReply, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCheckInvitionCodeReply, phonenumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCheckInvitionCodeReply, emailaddress_),
  };
  PkgUserCheckInvitionCodeReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserCheckInvitionCodeReply_descriptor_,
      PkgUserCheckInvitionCodeReply::default_instance_,
      PkgUserCheckInvitionCodeReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCheckInvitionCodeReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserCheckInvitionCodeReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCheckInvitionCodeReply, _internal_metadata_),
      -1);
  PkgUserGetAuthReq_descriptor_ = file->message_type(6);
  static const int PkgUserGetAuthReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserGetAuthReq, gettype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserGetAuthReq, phonenumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserGetAuthReq, emailaddress_),
  };
  PkgUserGetAuthReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserGetAuthReq_descriptor_,
      PkgUserGetAuthReq::default_instance_,
      PkgUserGetAuthReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserGetAuthReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserGetAuthReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserGetAuthReq, _internal_metadata_),
      -1);
  PkgUserGetAuthReply_descriptor_ = file->message_type(7);
  static const int PkgUserGetAuthReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserGetAuthReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserGetAuthReply, err_),
  };
  PkgUserGetAuthReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserGetAuthReply_descriptor_,
      PkgUserGetAuthReply::default_instance_,
      PkgUserGetAuthReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserGetAuthReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserGetAuthReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserGetAuthReply, _internal_metadata_),
      -1);
  PkgUserCreateReq_descriptor_ = file->message_type(8);
  static const int PkgUserCreateReq_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCreateReq, gettype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCreateReq, phonenumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCreateReq, emailaddress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCreateReq, authcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCreateReq, invitioncode_),
  };
  PkgUserCreateReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserCreateReq_descriptor_,
      PkgUserCreateReq::default_instance_,
      PkgUserCreateReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCreateReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserCreateReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCreateReq, _internal_metadata_),
      -1);
  PkgUserCreateReply_descriptor_ = file->message_type(9);
  static const int PkgUserCreateReply_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCreateReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCreateReply, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCreateReply, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCreateReply, realname_),
  };
  PkgUserCreateReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserCreateReply_descriptor_,
      PkgUserCreateReply::default_instance_,
      PkgUserCreateReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCreateReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserCreateReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCreateReply, _internal_metadata_),
      -1);
  PkgUserLoginReq_descriptor_ = file->message_type(10);
  static const int PkgUserLoginReq_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReq, gettype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReq, phonenumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReq, emailaddress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReq, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReq, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReq, hashedserversn_),
  };
  PkgUserLoginReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserLoginReq_descriptor_,
      PkgUserLoginReq::default_instance_,
      PkgUserLoginReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserLoginReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReq, _internal_metadata_),
      -1);
  PkgCompanyInfo_descriptor_ = file->message_type(11);
  static const int PkgCompanyInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgCompanyInfo, companyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgCompanyInfo, companyname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgCompanyInfo, companyusernumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgCompanyInfo, companycreatetime_),
  };
  PkgCompanyInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgCompanyInfo_descriptor_,
      PkgCompanyInfo::default_instance_,
      PkgCompanyInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgCompanyInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgCompanyInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgCompanyInfo, _internal_metadata_),
      -1);
  PkgUserLoginReply_descriptor_ = file->message_type(12);
  static const int PkgUserLoginReply_offsets_[17] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, realname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, phonenumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, emailaddress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, isloginsuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, permission_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, companyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, companyname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, companyusernumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, createtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, rolename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, companycreatetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, permissionroleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, companyinfo_),
  };
  PkgUserLoginReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserLoginReply_descriptor_,
      PkgUserLoginReply::default_instance_,
      PkgUserLoginReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserLoginReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, _internal_metadata_),
      -1);
  PkgUserGetPasswordReq_descriptor_ = file->message_type(13);
  static const int PkgUserGetPasswordReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserGetPasswordReq, gettype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserGetPasswordReq, phonenumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserGetPasswordReq, emailaddress_),
  };
  PkgUserGetPasswordReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserGetPasswordReq_descriptor_,
      PkgUserGetPasswordReq::default_instance_,
      PkgUserGetPasswordReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserGetPasswordReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserGetPasswordReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserGetPasswordReq, _internal_metadata_),
      -1);
  PkgUserGetPasswordReply_descriptor_ = file->message_type(14);
  static const int PkgUserGetPasswordReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserGetPasswordReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserGetPasswordReply, err_),
  };
  PkgUserGetPasswordReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserGetPasswordReply_descriptor_,
      PkgUserGetPasswordReply::default_instance_,
      PkgUserGetPasswordReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserGetPasswordReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserGetPasswordReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserGetPasswordReply, _internal_metadata_),
      -1);
  PkgUserResetPasswordReq_descriptor_ = file->message_type(15);
  static const int PkgUserResetPasswordReq_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserResetPasswordReq, gettype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserResetPasswordReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserResetPasswordReq, phonenumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserResetPasswordReq, emailaddress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserResetPasswordReq, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserResetPasswordReq, authcode_),
  };
  PkgUserResetPasswordReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserResetPasswordReq_descriptor_,
      PkgUserResetPasswordReq::default_instance_,
      PkgUserResetPasswordReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserResetPasswordReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserResetPasswordReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserResetPasswordReq, _internal_metadata_),
      -1);
  PkgUserResetPasswordReply_descriptor_ = file->message_type(16);
  static const int PkgUserResetPasswordReply_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserResetPasswordReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserResetPasswordReply, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserResetPasswordReply, oldpassword_),
  };
  PkgUserResetPasswordReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserResetPasswordReply_descriptor_,
      PkgUserResetPasswordReply::default_instance_,
      PkgUserResetPasswordReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserResetPasswordReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserResetPasswordReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserResetPasswordReply, _internal_metadata_),
      -1);
  PkgUserSetReq_descriptor_ = file->message_type(17);
  static const int PkgUserSetReq_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserSetReq, gettype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserSetReq, settype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserSetReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserSetReq, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserSetReq, phonenumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserSetReq, emailaddress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserSetReq, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserSetReq, newpassword_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserSetReq, realname_),
  };
  PkgUserSetReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserSetReq_descriptor_,
      PkgUserSetReq::default_instance_,
      PkgUserSetReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserSetReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserSetReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserSetReq, _internal_metadata_),
      -1);
  PkgUserSetReq_EnSetType_descriptor_ = PkgUserSetReq_descriptor_->enum_type(0);
  PkgUserSetReply_descriptor_ = file->message_type(18);
  static const int PkgUserSetReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserSetReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserSetReply, err_),
  };
  PkgUserSetReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserSetReply_descriptor_,
      PkgUserSetReply::default_instance_,
      PkgUserSetReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserSetReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserSetReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserSetReply, _internal_metadata_),
      -1);
  PkgUserInvitionUserReq_descriptor_ = file->message_type(19);
  static const int PkgUserInvitionUserReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserInvitionUserReq, gettype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserInvitionUserReq, phonenumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserInvitionUserReq, emailaddress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserInvitionUserReq, realname_),
  };
  PkgUserInvitionUserReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserInvitionUserReq_descriptor_,
      PkgUserInvitionUserReq::default_instance_,
      PkgUserInvitionUserReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserInvitionUserReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserInvitionUserReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserInvitionUserReq, _internal_metadata_),
      -1);
  PkgUserInvitionUserReply_descriptor_ = file->message_type(20);
  static const int PkgUserInvitionUserReply_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserInvitionUserReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserInvitionUserReply, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserInvitionUserReply, invitioncode_),
  };
  PkgUserInvitionUserReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserInvitionUserReply_descriptor_,
      PkgUserInvitionUserReply::default_instance_,
      PkgUserInvitionUserReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserInvitionUserReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserInvitionUserReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserInvitionUserReply, _internal_metadata_),
      -1);
  PkgUserInvitionCheckReq_descriptor_ = file->message_type(21);
  static const int PkgUserInvitionCheckReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserInvitionCheckReq, invitioncode_),
  };
  PkgUserInvitionCheckReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserInvitionCheckReq_descriptor_,
      PkgUserInvitionCheckReq::default_instance_,
      PkgUserInvitionCheckReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserInvitionCheckReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserInvitionCheckReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserInvitionCheckReq, _internal_metadata_),
      -1);
  PkgUserInvitionCheckReply_descriptor_ = file->message_type(22);
  static const int PkgUserInvitionCheckReply_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserInvitionCheckReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserInvitionCheckReply, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserInvitionCheckReply, permission_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserInvitionCheckReply, companyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserInvitionCheckReply, companyname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserInvitionCheckReply, companyusernumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserInvitionCheckReply, rolename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserInvitionCheckReply, companycreatetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserInvitionCheckReply, permissionroleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserInvitionCheckReply, companyinfo_),
  };
  PkgUserInvitionCheckReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserInvitionCheckReply_descriptor_,
      PkgUserInvitionCheckReply::default_instance_,
      PkgUserInvitionCheckReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserInvitionCheckReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserInvitionCheckReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserInvitionCheckReply, _internal_metadata_),
      -1);
  PkgUserCreateCompanyReq_descriptor_ = file->message_type(23);
  static const int PkgUserCreateCompanyReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCreateCompanyReq, companyname_),
  };
  PkgUserCreateCompanyReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserCreateCompanyReq_descriptor_,
      PkgUserCreateCompanyReq::default_instance_,
      PkgUserCreateCompanyReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCreateCompanyReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserCreateCompanyReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCreateCompanyReq, _internal_metadata_),
      -1);
  PkgUserCreateCompanyReply_descriptor_ = file->message_type(24);
  static const int PkgUserCreateCompanyReply_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCreateCompanyReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCreateCompanyReply, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCreateCompanyReply, companyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCreateCompanyReply, companyname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCreateCompanyReply, companyusernumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCreateCompanyReply, rolename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCreateCompanyReply, companycreatetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCreateCompanyReply, permissionroleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCreateCompanyReply, companyinfo_),
  };
  PkgUserCreateCompanyReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserCreateCompanyReply_descriptor_,
      PkgUserCreateCompanyReply::default_instance_,
      PkgUserCreateCompanyReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCreateCompanyReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserCreateCompanyReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserCreateCompanyReply, _internal_metadata_),
      -1);
  PkgUserReassignAdminReq_descriptor_ = file->message_type(25);
  static const int PkgUserReassignAdminReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserReassignAdminReq, adminuserid_),
  };
  PkgUserReassignAdminReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserReassignAdminReq_descriptor_,
      PkgUserReassignAdminReq::default_instance_,
      PkgUserReassignAdminReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserReassignAdminReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserReassignAdminReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserReassignAdminReq, _internal_metadata_),
      -1);
  PkgUserReassignAdminReply_descriptor_ = file->message_type(26);
  static const int PkgUserReassignAdminReply_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserReassignAdminReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserReassignAdminReply, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserReassignAdminReply, permission_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserReassignAdminReply, rolename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserReassignAdminReply, permissionroleid_),
  };
  PkgUserReassignAdminReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserReassignAdminReply_descriptor_,
      PkgUserReassignAdminReply::default_instance_,
      PkgUserReassignAdminReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserReassignAdminReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserReassignAdminReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserReassignAdminReply, _internal_metadata_),
      -1);
  PkgUserDeleteFromCompanyReq_descriptor_ = file->message_type(27);
  static const int PkgUserDeleteFromCompanyReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserDeleteFromCompanyReq, useridlist_),
  };
  PkgUserDeleteFromCompanyReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserDeleteFromCompanyReq_descriptor_,
      PkgUserDeleteFromCompanyReq::default_instance_,
      PkgUserDeleteFromCompanyReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserDeleteFromCompanyReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserDeleteFromCompanyReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserDeleteFromCompanyReq, _internal_metadata_),
      -1);
  PkgUserDeleteFromCompanyReply_descriptor_ = file->message_type(28);
  static const int PkgUserDeleteFromCompanyReply_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserDeleteFromCompanyReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserDeleteFromCompanyReply, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserDeleteFromCompanyReply, companyusernumber_),
  };
  PkgUserDeleteFromCompanyReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserDeleteFromCompanyReply_descriptor_,
      PkgUserDeleteFromCompanyReply::default_instance_,
      PkgUserDeleteFromCompanyReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserDeleteFromCompanyReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserDeleteFromCompanyReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserDeleteFromCompanyReply, _internal_metadata_),
      -1);
  PkgUserExitCompanyReq_descriptor_ = file->message_type(29);
  static const int PkgUserExitCompanyReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserExitCompanyReq, encmd_),
  };
  PkgUserExitCompanyReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserExitCompanyReq_descriptor_,
      PkgUserExitCompanyReq::default_instance_,
      PkgUserExitCompanyReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserExitCompanyReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserExitCompanyReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserExitCompanyReq, _internal_metadata_),
      -1);
  PkgUserExitCompanyReq_EnCmd_descriptor_ = PkgUserExitCompanyReq_descriptor_->enum_type(0);
  PkgUserExitCompanyReply_descriptor_ = file->message_type(30);
  static const int PkgUserExitCompanyReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserExitCompanyReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserExitCompanyReply, err_),
  };
  PkgUserExitCompanyReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserExitCompanyReply_descriptor_,
      PkgUserExitCompanyReply::default_instance_,
      PkgUserExitCompanyReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserExitCompanyReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserExitCompanyReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserExitCompanyReply, _internal_metadata_),
      -1);
  PkgTaskInfo_descriptor_ = file->message_type(31);
  static const int PkgTaskInfo_offsets_[18] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskInfo, parentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskInfo, taskdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskInfo, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskInfo, remark_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskInfo, tasklevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskInfo, createuserid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskInfo, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskInfo, createtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskInfo, finishtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskInfo, accepteduserid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskInfo, coworkid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskInfo, updatetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskInfo, isreaded_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskInfo, sortflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskInfo, createdrealname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskInfo, acceptedrealname_),
  };
  PkgTaskInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgTaskInfo_descriptor_,
      PkgTaskInfo::default_instance_,
      PkgTaskInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgTaskInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskInfo, _internal_metadata_),
      -1);
  PkgTaskInfo_EnTaskLevel_descriptor_ = PkgTaskInfo_descriptor_->enum_type(0);
  PkgTaskInfo_EnTaskStatus_descriptor_ = PkgTaskInfo_descriptor_->enum_type(1);
  PkgTaskPageQueryReq_descriptor_ = file->message_type(32);
  static const int PkgTaskPageQueryReq_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskPageQueryReq, taskflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskPageQueryReq, enconditon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskPageQueryReq, pkgtaskquerycondition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskPageQueryReq, pageflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskPageQueryReq, indexstart_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskPageQueryReq, indexend_),
  };
  PkgTaskPageQueryReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgTaskPageQueryReq_descriptor_,
      PkgTaskPageQueryReq::default_instance_,
      PkgTaskPageQueryReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskPageQueryReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgTaskPageQueryReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskPageQueryReq, _internal_metadata_),
      -1);
  PkgTaskPageQueryReq_PkgTaskQueryCondition_descriptor_ = PkgTaskPageQueryReq_descriptor_->nested_type(0);
  static const int PkgTaskPageQueryReq_PkgTaskQueryCondition_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskPageQueryReq_PkgTaskQueryCondition, taskdatestart_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskPageQueryReq_PkgTaskQueryCondition, taskdateend_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskPageQueryReq_PkgTaskQueryCondition, keyforname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskPageQueryReq_PkgTaskQueryCondition, keyforcontent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskPageQueryReq_PkgTaskQueryCondition, taskstatuslist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskPageQueryReq_PkgTaskQueryCondition, enreadedflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskPageQueryReq_PkgTaskQueryCondition, lastupdatetime_),
  };
  PkgTaskPageQueryReq_PkgTaskQueryCondition_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgTaskPageQueryReq_PkgTaskQueryCondition_descriptor_,
      PkgTaskPageQueryReq_PkgTaskQueryCondition::default_instance_,
      PkgTaskPageQueryReq_PkgTaskQueryCondition_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskPageQueryReq_PkgTaskQueryCondition, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgTaskPageQueryReq_PkgTaskQueryCondition),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskPageQueryReq_PkgTaskQueryCondition, _internal_metadata_),
      -1);
  PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_descriptor_ = PkgTaskPageQueryReq_PkgTaskQueryCondition_descriptor_->enum_type(0);
  PkgTaskPageQueryReq_EnTaskFlag_descriptor_ = PkgTaskPageQueryReq_descriptor_->enum_type(0);
  PkgTaskPageQueryReq_EnTaskQueryCondition_descriptor_ = PkgTaskPageQueryReq_descriptor_->enum_type(1);
  PkgTaskPageQueryReq_EnPageFlag_descriptor_ = PkgTaskPageQueryReq_descriptor_->enum_type(2);
  PkgTaskPageQueryReply_descriptor_ = file->message_type(33);
  static const int PkgTaskPageQueryReply_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskPageQueryReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskPageQueryReply, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskPageQueryReply, taskinfolist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskPageQueryReply, returnnum_),
  };
  PkgTaskPageQueryReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgTaskPageQueryReply_descriptor_,
      PkgTaskPageQueryReply::default_instance_,
      PkgTaskPageQueryReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskPageQueryReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgTaskPageQueryReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskPageQueryReply, _internal_metadata_),
      -1);
  PkgTaskQueryReq_descriptor_ = file->message_type(34);
  static const int PkgTaskQueryReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskQueryReq, queryflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskQueryReq, taskid_),
  };
  PkgTaskQueryReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgTaskQueryReq_descriptor_,
      PkgTaskQueryReq::default_instance_,
      PkgTaskQueryReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskQueryReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgTaskQueryReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskQueryReq, _internal_metadata_),
      -1);
  PkgTaskQueryReq_EnQueryFlag_descriptor_ = PkgTaskQueryReq_descriptor_->enum_type(0);
  PkgTaskQueryReply_descriptor_ = file->message_type(35);
  static const int PkgTaskQueryReply_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskQueryReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskQueryReply, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskQueryReply, taskinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskQueryReply, taskinfolist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskQueryReply, accepteduseridlist_),
  };
  PkgTaskQueryReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgTaskQueryReply_descriptor_,
      PkgTaskQueryReply::default_instance_,
      PkgTaskQueryReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskQueryReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgTaskQueryReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskQueryReply, _internal_metadata_),
      -1);
  PkgTaskSortFlag_descriptor_ = file->message_type(36);
  static const int PkgTaskSortFlag_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskSortFlag, taskid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskSortFlag, sortflag_),
  };
  PkgTaskSortFlag_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgTaskSortFlag_descriptor_,
      PkgTaskSortFlag::default_instance_,
      PkgTaskSortFlag_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskSortFlag, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgTaskSortFlag),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskSortFlag, _internal_metadata_),
      -1);
  PkgTaskSetSortFlagReq_descriptor_ = file->message_type(37);
  static const int PkgTaskSetSortFlagReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskSetSortFlagReq, tasksortflaglist_),
  };
  PkgTaskSetSortFlagReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgTaskSetSortFlagReq_descriptor_,
      PkgTaskSetSortFlagReq::default_instance_,
      PkgTaskSetSortFlagReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskSetSortFlagReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgTaskSetSortFlagReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskSetSortFlagReq, _internal_metadata_),
      -1);
  PkgTaskSetSortFlagReply_descriptor_ = file->message_type(38);
  static const int PkgTaskSetSortFlagReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskSetSortFlagReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskSetSortFlagReply, err_),
  };
  PkgTaskSetSortFlagReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgTaskSetSortFlagReply_descriptor_,
      PkgTaskSetSortFlagReply::default_instance_,
      PkgTaskSetSortFlagReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskSetSortFlagReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgTaskSetSortFlagReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskSetSortFlagReply, _internal_metadata_),
      -1);
  PkgTaskOperationReq_descriptor_ = file->message_type(39);
  static const int PkgTaskOperationReq_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskOperationReq, taskoperation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskOperationReq, taskinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskOperationReq, taskinfolist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskOperationReq, accepteduseridlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskOperationReq, taskid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskOperationReq, reason_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskOperationReq, updatestatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskOperationReq, updatereaded_),
  };
  PkgTaskOperationReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgTaskOperationReq_descriptor_,
      PkgTaskOperationReq::default_instance_,
      PkgTaskOperationReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskOperationReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgTaskOperationReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskOperationReq, _internal_metadata_),
      -1);
  PkgTaskOperationReq_EnTaskOperation_descriptor_ = PkgTaskOperationReq_descriptor_->enum_type(0);
  PkgTaskOperationReply_descriptor_ = file->message_type(40);
  static const int PkgTaskOperationReply_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskOperationReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskOperationReply, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskOperationReply, taskid_),
  };
  PkgTaskOperationReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgTaskOperationReply_descriptor_,
      PkgTaskOperationReply::default_instance_,
      PkgTaskOperationReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskOperationReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgTaskOperationReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgTaskOperationReply, _internal_metadata_),
      -1);
  PkgCompanyGroup_descriptor_ = file->message_type(41);
  static const int PkgCompanyGroup_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgCompanyGroup, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgCompanyGroup, companyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgCompanyGroup, groupname_),
  };
  PkgCompanyGroup_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgCompanyGroup_descriptor_,
      PkgCompanyGroup::default_instance_,
      PkgCompanyGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgCompanyGroup, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgCompanyGroup),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgCompanyGroup, _internal_metadata_),
      -1);
  PkgGroupUser_descriptor_ = file->message_type(42);
  static const int PkgGroupUser_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGroupUser, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGroupUser, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGroupUser, realname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGroupUser, phonenumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGroupUser, emailaddress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGroupUser, permission_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGroupUser, createtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGroupUser, rolename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGroupUser, permissionroleid_),
  };
  PkgGroupUser_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgGroupUser_descriptor_,
      PkgGroupUser::default_instance_,
      PkgGroupUser_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGroupUser, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgGroupUser),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgGroupUser, _internal_metadata_),
      -1);
  PkgCompanyGroupQueryReq_descriptor_ = file->message_type(43);
  static const int PkgCompanyGroupQueryReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgCompanyGroupQueryReq, querytype_),
  };
  PkgCompanyGroupQueryReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgCompanyGroupQueryReq_descriptor_,
      PkgCompanyGroupQueryReq::default_instance_,
      PkgCompanyGroupQueryReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgCompanyGroupQueryReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgCompanyGroupQueryReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgCompanyGroupQueryReq, _internal_metadata_),
      -1);
  PkgCompanyGroupQueryReq_EnQueryType_descriptor_ = PkgCompanyGroupQueryReq_descriptor_->enum_type(0);
  PkgCompanyGroupQueryReply_descriptor_ = file->message_type(44);
  static const int PkgCompanyGroupQueryReply_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgCompanyGroupQueryReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgCompanyGroupQueryReply, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgCompanyGroupQueryReply, companygrouplist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgCompanyGroupQueryReply, groupuserlist_),
  };
  PkgCompanyGroupQueryReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgCompanyGroupQueryReply_descriptor_,
      PkgCompanyGroupQueryReply::default_instance_,
      PkgCompanyGroupQueryReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgCompanyGroupQueryReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgCompanyGroupQueryReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgCompanyGroupQueryReply, _internal_metadata_),
      -1);
  PkgAdvInfo_descriptor_ = file->message_type(45);
  static const int PkgAdvInfo_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvInfo, urlpic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvInfo, advtxt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvInfo, advdesc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvInfo, createtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvInfo, expiretime_),
  };
  PkgAdvInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgAdvInfo_descriptor_,
      PkgAdvInfo::default_instance_,
      PkgAdvInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgAdvInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvInfo, _internal_metadata_),
      -1);
  PkgAdvQueryReq_descriptor_ = file->message_type(46);
  static const int PkgAdvQueryReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvQueryReq, queryflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvQueryReq, numreq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvQueryReq, advid_),
  };
  PkgAdvQueryReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgAdvQueryReq_descriptor_,
      PkgAdvQueryReq::default_instance_,
      PkgAdvQueryReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvQueryReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgAdvQueryReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvQueryReq, _internal_metadata_),
      -1);
  PkgAdvQueryReq_EnQueryType_descriptor_ = PkgAdvQueryReq_descriptor_->enum_type(0);
  PkgAdvQueryReply_descriptor_ = file->message_type(47);
  static const int PkgAdvQueryReply_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvQueryReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvQueryReply, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvQueryReply, advinfolist_),
  };
  PkgAdvQueryReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgAdvQueryReply_descriptor_,
      PkgAdvQueryReply::default_instance_,
      PkgAdvQueryReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvQueryReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgAdvQueryReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgAdvQueryReply, _internal_metadata_),
      -1);
  PkgQueryMyProfileReq_descriptor_ = file->message_type(48);
  static const int PkgQueryMyProfileReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgQueryMyProfileReq, curversion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgQueryMyProfileReq, platmform_),
  };
  PkgQueryMyProfileReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgQueryMyProfileReq_descriptor_,
      PkgQueryMyProfileReq::default_instance_,
      PkgQueryMyProfileReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgQueryMyProfileReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgQueryMyProfileReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgQueryMyProfileReq, _internal_metadata_),
      -1);
  PkgQueryMyProfileReply_descriptor_ = file->message_type(49);
  static const int PkgQueryMyProfileReply_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgQueryMyProfileReply, versionlastest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgQueryMyProfileReply, versiondownloadurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgQueryMyProfileReply, tasknumbernotfinished_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgQueryMyProfileReply, tasknumberfinshed_),
  };
  PkgQueryMyProfileReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgQueryMyProfileReply_descriptor_,
      PkgQueryMyProfileReply::default_instance_,
      PkgQueryMyProfileReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgQueryMyProfileReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgQueryMyProfileReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgQueryMyProfileReply, _internal_metadata_),
      -1);
  PkgLogoutReq_descriptor_ = file->message_type(50);
  static const int PkgLogoutReq_offsets_[1] = {
  };
  PkgLogoutReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgLogoutReq_descriptor_,
      PkgLogoutReq::default_instance_,
      PkgLogoutReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgLogoutReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgLogoutReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgLogoutReq, _internal_metadata_),
      -1);
  PkgLogoutReply_descriptor_ = file->message_type(51);
  static const int PkgLogoutReply_offsets_[1] = {
  };
  PkgLogoutReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgLogoutReply_descriptor_,
      PkgLogoutReply::default_instance_,
      PkgLogoutReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgLogoutReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgLogoutReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgLogoutReply, _internal_metadata_),
      -1);
  PkgNotifyReq_descriptor_ = file->message_type(52);
  static const int PkgNotifyReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgNotifyReq, curversion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgNotifyReq, platmform_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgNotifyReq, dataupatedtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgNotifyReq, forceupdateflag_),
  };
  PkgNotifyReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgNotifyReq_descriptor_,
      PkgNotifyReq::default_instance_,
      PkgNotifyReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgNotifyReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgNotifyReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgNotifyReq, _internal_metadata_),
      -1);
  PkgNotifyReply_descriptor_ = file->message_type(53);
  static const int PkgNotifyReply_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgNotifyReply, dataupatedtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgNotifyReply, notifyupdatedflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgNotifyReply, companyinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgNotifyReply, tasknumbernotfinished_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgNotifyReply, tasknumberfinished_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgNotifyReply, versionlastest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgNotifyReply, versiondownloadurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgNotifyReply, permission_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgNotifyReply, rolename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgNotifyReply, permissionroleid_),
  };
  PkgNotifyReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgNotifyReply_descriptor_,
      PkgNotifyReply::default_instance_,
      PkgNotifyReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgNotifyReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgNotifyReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgNotifyReply, _internal_metadata_),
      -1);
  PkgPhoneCppWrapReq_descriptor_ = file->message_type(54);
  static const int PkgPhoneCppWrapReq_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPhoneCppWrapReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPhoneCppWrapReq, enreqtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPhoneCppWrapReq, lasttaskupdatetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPhoneCppWrapReq, taskinfolist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPhoneCppWrapReq, taskpagequeryreq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPhoneCppWrapReq, taskqueryreq_),
  };
  PkgPhoneCppWrapReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgPhoneCppWrapReq_descriptor_,
      PkgPhoneCppWrapReq::default_instance_,
      PkgPhoneCppWrapReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPhoneCppWrapReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgPhoneCppWrapReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPhoneCppWrapReq, _internal_metadata_),
      -1);
  PkgPhoneCppWrapReq_EnReqType_descriptor_ = PkgPhoneCppWrapReq_descriptor_->enum_type(0);
  PkgPhoneCppWrapReply_descriptor_ = file->message_type(55);
  static const int PkgPhoneCppWrapReply_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPhoneCppWrapReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPhoneCppWrapReply, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPhoneCppWrapReply, lasttaskupdatetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPhoneCppWrapReply, taskpagequeryreply_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPhoneCppWrapReply, taskqueryreply_),
  };
  PkgPhoneCppWrapReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgPhoneCppWrapReply_descriptor_,
      PkgPhoneCppWrapReply::default_instance_,
      PkgPhoneCppWrapReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPhoneCppWrapReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgPhoneCppWrapReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPhoneCppWrapReply, _internal_metadata_),
      -1);
  EnGetType_descriptor_ = file->enum_type(0);
  EnUpdatedFlag_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_comm_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgConnectReq_descriptor_, &PkgConnectReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgConnectReply_descriptor_, &PkgConnectReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserCheckReq_descriptor_, &PkgUserCheckReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserCheckReply_descriptor_, &PkgUserCheckReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserCheckInvitionCodeReq_descriptor_, &PkgUserCheckInvitionCodeReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserCheckInvitionCodeReply_descriptor_, &PkgUserCheckInvitionCodeReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserGetAuthReq_descriptor_, &PkgUserGetAuthReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserGetAuthReply_descriptor_, &PkgUserGetAuthReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserCreateReq_descriptor_, &PkgUserCreateReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserCreateReply_descriptor_, &PkgUserCreateReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserLoginReq_descriptor_, &PkgUserLoginReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgCompanyInfo_descriptor_, &PkgCompanyInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserLoginReply_descriptor_, &PkgUserLoginReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserGetPasswordReq_descriptor_, &PkgUserGetPasswordReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserGetPasswordReply_descriptor_, &PkgUserGetPasswordReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserResetPasswordReq_descriptor_, &PkgUserResetPasswordReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserResetPasswordReply_descriptor_, &PkgUserResetPasswordReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserSetReq_descriptor_, &PkgUserSetReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserSetReply_descriptor_, &PkgUserSetReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserInvitionUserReq_descriptor_, &PkgUserInvitionUserReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserInvitionUserReply_descriptor_, &PkgUserInvitionUserReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserInvitionCheckReq_descriptor_, &PkgUserInvitionCheckReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserInvitionCheckReply_descriptor_, &PkgUserInvitionCheckReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserCreateCompanyReq_descriptor_, &PkgUserCreateCompanyReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserCreateCompanyReply_descriptor_, &PkgUserCreateCompanyReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserReassignAdminReq_descriptor_, &PkgUserReassignAdminReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserReassignAdminReply_descriptor_, &PkgUserReassignAdminReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserDeleteFromCompanyReq_descriptor_, &PkgUserDeleteFromCompanyReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserDeleteFromCompanyReply_descriptor_, &PkgUserDeleteFromCompanyReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserExitCompanyReq_descriptor_, &PkgUserExitCompanyReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserExitCompanyReply_descriptor_, &PkgUserExitCompanyReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgTaskInfo_descriptor_, &PkgTaskInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgTaskPageQueryReq_descriptor_, &PkgTaskPageQueryReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgTaskPageQueryReq_PkgTaskQueryCondition_descriptor_, &PkgTaskPageQueryReq_PkgTaskQueryCondition::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgTaskPageQueryReply_descriptor_, &PkgTaskPageQueryReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgTaskQueryReq_descriptor_, &PkgTaskQueryReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgTaskQueryReply_descriptor_, &PkgTaskQueryReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgTaskSortFlag_descriptor_, &PkgTaskSortFlag::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgTaskSetSortFlagReq_descriptor_, &PkgTaskSetSortFlagReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgTaskSetSortFlagReply_descriptor_, &PkgTaskSetSortFlagReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgTaskOperationReq_descriptor_, &PkgTaskOperationReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgTaskOperationReply_descriptor_, &PkgTaskOperationReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgCompanyGroup_descriptor_, &PkgCompanyGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgGroupUser_descriptor_, &PkgGroupUser::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgCompanyGroupQueryReq_descriptor_, &PkgCompanyGroupQueryReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgCompanyGroupQueryReply_descriptor_, &PkgCompanyGroupQueryReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgAdvInfo_descriptor_, &PkgAdvInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgAdvQueryReq_descriptor_, &PkgAdvQueryReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgAdvQueryReply_descriptor_, &PkgAdvQueryReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgQueryMyProfileReq_descriptor_, &PkgQueryMyProfileReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgQueryMyProfileReply_descriptor_, &PkgQueryMyProfileReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgLogoutReq_descriptor_, &PkgLogoutReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgLogoutReply_descriptor_, &PkgLogoutReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgNotifyReq_descriptor_, &PkgNotifyReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgNotifyReply_descriptor_, &PkgNotifyReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgPhoneCppWrapReq_descriptor_, &PkgPhoneCppWrapReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgPhoneCppWrapReply_descriptor_, &PkgPhoneCppWrapReply::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_comm_2eproto() {
  delete PkgConnectReq::default_instance_;
  delete PkgConnectReq_reflection_;
  delete PkgConnectReply::default_instance_;
  delete PkgConnectReply_reflection_;
  delete PkgUserCheckReq::default_instance_;
  delete PkgUserCheckReq_reflection_;
  delete PkgUserCheckReply::default_instance_;
  delete PkgUserCheckReply_reflection_;
  delete PkgUserCheckInvitionCodeReq::default_instance_;
  delete PkgUserCheckInvitionCodeReq_reflection_;
  delete PkgUserCheckInvitionCodeReply::default_instance_;
  delete PkgUserCheckInvitionCodeReply_reflection_;
  delete PkgUserGetAuthReq::default_instance_;
  delete PkgUserGetAuthReq_reflection_;
  delete PkgUserGetAuthReply::default_instance_;
  delete PkgUserGetAuthReply_reflection_;
  delete PkgUserCreateReq::default_instance_;
  delete PkgUserCreateReq_reflection_;
  delete PkgUserCreateReply::default_instance_;
  delete PkgUserCreateReply_reflection_;
  delete PkgUserLoginReq::default_instance_;
  delete PkgUserLoginReq_reflection_;
  delete PkgCompanyInfo::default_instance_;
  delete PkgCompanyInfo_reflection_;
  delete PkgUserLoginReply::default_instance_;
  delete PkgUserLoginReply_reflection_;
  delete PkgUserGetPasswordReq::default_instance_;
  delete PkgUserGetPasswordReq_reflection_;
  delete PkgUserGetPasswordReply::default_instance_;
  delete PkgUserGetPasswordReply_reflection_;
  delete PkgUserResetPasswordReq::default_instance_;
  delete PkgUserResetPasswordReq_reflection_;
  delete PkgUserResetPasswordReply::default_instance_;
  delete PkgUserResetPasswordReply_reflection_;
  delete PkgUserSetReq::default_instance_;
  delete PkgUserSetReq_reflection_;
  delete PkgUserSetReply::default_instance_;
  delete PkgUserSetReply_reflection_;
  delete PkgUserInvitionUserReq::default_instance_;
  delete PkgUserInvitionUserReq_reflection_;
  delete PkgUserInvitionUserReply::default_instance_;
  delete PkgUserInvitionUserReply_reflection_;
  delete PkgUserInvitionCheckReq::default_instance_;
  delete PkgUserInvitionCheckReq_reflection_;
  delete PkgUserInvitionCheckReply::default_instance_;
  delete PkgUserInvitionCheckReply_reflection_;
  delete PkgUserCreateCompanyReq::default_instance_;
  delete PkgUserCreateCompanyReq_reflection_;
  delete PkgUserCreateCompanyReply::default_instance_;
  delete PkgUserCreateCompanyReply_reflection_;
  delete PkgUserReassignAdminReq::default_instance_;
  delete PkgUserReassignAdminReq_reflection_;
  delete PkgUserReassignAdminReply::default_instance_;
  delete PkgUserReassignAdminReply_reflection_;
  delete PkgUserDeleteFromCompanyReq::default_instance_;
  delete PkgUserDeleteFromCompanyReq_reflection_;
  delete PkgUserDeleteFromCompanyReply::default_instance_;
  delete PkgUserDeleteFromCompanyReply_reflection_;
  delete PkgUserExitCompanyReq::default_instance_;
  delete PkgUserExitCompanyReq_reflection_;
  delete PkgUserExitCompanyReply::default_instance_;
  delete PkgUserExitCompanyReply_reflection_;
  delete PkgTaskInfo::default_instance_;
  delete PkgTaskInfo_reflection_;
  delete PkgTaskPageQueryReq::default_instance_;
  delete PkgTaskPageQueryReq_reflection_;
  delete PkgTaskPageQueryReq_PkgTaskQueryCondition::default_instance_;
  delete PkgTaskPageQueryReq_PkgTaskQueryCondition_reflection_;
  delete PkgTaskPageQueryReply::default_instance_;
  delete PkgTaskPageQueryReply_reflection_;
  delete PkgTaskQueryReq::default_instance_;
  delete PkgTaskQueryReq_reflection_;
  delete PkgTaskQueryReply::default_instance_;
  delete PkgTaskQueryReply_reflection_;
  delete PkgTaskSortFlag::default_instance_;
  delete PkgTaskSortFlag_reflection_;
  delete PkgTaskSetSortFlagReq::default_instance_;
  delete PkgTaskSetSortFlagReq_reflection_;
  delete PkgTaskSetSortFlagReply::default_instance_;
  delete PkgTaskSetSortFlagReply_reflection_;
  delete PkgTaskOperationReq::default_instance_;
  delete PkgTaskOperationReq_reflection_;
  delete PkgTaskOperationReply::default_instance_;
  delete PkgTaskOperationReply_reflection_;
  delete PkgCompanyGroup::default_instance_;
  delete PkgCompanyGroup_reflection_;
  delete PkgGroupUser::default_instance_;
  delete PkgGroupUser_reflection_;
  delete PkgCompanyGroupQueryReq::default_instance_;
  delete PkgCompanyGroupQueryReq_reflection_;
  delete PkgCompanyGroupQueryReply::default_instance_;
  delete PkgCompanyGroupQueryReply_reflection_;
  delete PkgAdvInfo::default_instance_;
  delete PkgAdvInfo_reflection_;
  delete PkgAdvQueryReq::default_instance_;
  delete PkgAdvQueryReq_reflection_;
  delete PkgAdvQueryReply::default_instance_;
  delete PkgAdvQueryReply_reflection_;
  delete PkgQueryMyProfileReq::default_instance_;
  delete PkgQueryMyProfileReq_reflection_;
  delete PkgQueryMyProfileReply::default_instance_;
  delete PkgQueryMyProfileReply_reflection_;
  delete PkgLogoutReq::default_instance_;
  delete PkgLogoutReq_reflection_;
  delete PkgLogoutReply::default_instance_;
  delete PkgLogoutReply_reflection_;
  delete PkgNotifyReq::default_instance_;
  delete PkgNotifyReq_reflection_;
  delete PkgNotifyReply::default_instance_;
  delete PkgNotifyReply_reflection_;
  delete PkgPhoneCppWrapReq::default_instance_;
  delete PkgPhoneCppWrapReq_reflection_;
  delete PkgPhoneCppWrapReply::default_instance_;
  delete PkgPhoneCppWrapReply_reflection_;
}

void protobuf_AddDesc_comm_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\ncomm.proto\022\004comm\"\214\001\n\rPkgConnectReq\022\017\n\007"
    "apptype\030\002 \001(\t\022\022\n\nappversion\030\003 \001(\t\022\023\n\013app"
    "language\030\004 \001(\t\022\016\n\006ostype\030\n \001(\t\022\021\n\tosvers"
    "ion\030\013 \001(\t\022\014\n\004osrr\030\014 \001(\t\022\020\n\010clientsn\030e \001("
    "\t\"\206\001\n\017PkgConnectReply\022\027\n\tissuccess\030\001 \002(\010"
    ":\004true\022\013\n\003err\030\002 \001(\t\022\017\n\007urllist\030\n \003(\t\022\022\n\n"
    "encryptkey\030\013 \001(\t\022\026\n\016hashedclientsn\030d \001(\t"
    "\022\020\n\010serversn\030e \001(\t\"z\n\017PkgUserCheckReq\022*\n"
    "\007gettype\030\001 \002(\0162\017.comm.EnGetType:\010GT_PHON"
    "E\022\023\n\013phonenumber\030\003 \001(\t\022\024\n\014emailaddress\030\004"
    " \001(\t\022\020\n\010username\030\005 \001(\t\"I\n\021PkgUserCheckRe"
    "ply\022\027\n\tissuccess\030\001 \002(\010:\004true\022\013\n\003err\030\002 \001("
    "\t\022\016\n\006userid\030\003 \001(\005\"_\n\033PkgUserCheckInvitio"
    "nCodeReq\022*\n\007gettype\030\001 \002(\0162\017.comm.EnGetTy"
    "pe:\010GT_PHONE\022\024\n\014invitioncode\030\002 \001(\t\"p\n\035Pk"
    "gUserCheckInvitionCodeReply\022\027\n\tissuccess"
    "\030\001 \002(\010:\004true\022\013\n\003err\030\002 \001(\t\022\023\n\013phonenumber"
    "\030\003 \001(\t\022\024\n\014emailaddress\030\004 \001(\t\"j\n\021PkgUserG"
    "etAuthReq\022*\n\007gettype\030\001 \002(\0162\017.comm.EnGetT"
    "ype:\010GT_PHONE\022\023\n\013phonenumber\030\003 \001(\t\022\024\n\014em"
    "ailaddress\030\004 \001(\t\";\n\023PkgUserGetAuthReply\022"
    "\027\n\tissuccess\030\001 \002(\010:\004true\022\013\n\003err\030\002 \001(\t\"\221\001"
    "\n\020PkgUserCreateReq\022*\n\007gettype\030\001 \002(\0162\017.co"
    "mm.EnGetType:\010GT_PHONE\022\023\n\013phonenumber\030\002 "
    "\001(\t\022\024\n\014emailaddress\030\003 \001(\t\022\020\n\010authcode\030\004 "
    "\001(\t\022\024\n\014invitioncode\030\005 \001(\t\"\\\n\022PkgUserCrea"
    "teReply\022\027\n\tissuccess\030\001 \002(\010:\004true\022\013\n\003err\030"
    "\002 \001(\t\022\016\n\006userid\030\003 \001(\005\022\020\n\010realname\030\013 \001(\t\""
    "\264\001\n\017PkgUserLoginReq\022*\n\007gettype\030\001 \002(\0162\017.c"
    "omm.EnGetType:\010GT_PHONE\022\016\n\006userid\030\002 \001(\005\022"
    "\023\n\013phonenumber\030\003 \001(\t\022\024\n\014emailaddress\030\004 \001"
    "(\t\022\020\n\010username\030\005 \001(\t\022\020\n\010password\030\n \002(\t\022\026"
    "\n\016hashedserversn\030d \001(\t\"q\n\016PkgCompanyInfo"
    "\022\024\n\tcompanyid\030\020 \001(\005:\0010\022\023\n\013companyname\030\021 "
    "\001(\t\022\031\n\021companyusernumber\030\022 \001(\005\022\031\n\021compan"
    "ycreatetime\030\025 \001(\t\"\220\003\n\021PkgUserLoginReply\022"
    "\027\n\tissuccess\030\001 \002(\010:\004true\022\013\n\003err\030\002 \001(\t\022\016\n"
    "\006userid\030\003 \001(\005\022\020\n\010username\030\n \001(\t\022\020\n\010realn"
    "ame\030\013 \001(\t\022\023\n\013phonenumber\030\014 \001(\t\022\024\n\014emaila"
    "ddress\030\r \001(\t\022\026\n\016isloginsuccess\030\016 \001(\010\022\022\n\n"
    "permission\030\017 \001(\005\022\024\n\tcompanyid\030\020 \001(\005:\0010\022\023"
    "\n\013companyname\030\021 \001(\t\022\031\n\021companyusernumber"
    "\030\022 \001(\005\022\022\n\ncreatetime\030\023 \001(\t\022\020\n\010rolename\030\024"
    " \001(\t\022\031\n\021companycreatetime\030\025 \001(\t\022\030\n\020permi"
    "ssionroleid\030\026 \001(\005\022)\n\013companyinfo\030d \001(\0132\024"
    ".comm.PkgCompanyInfo\"n\n\025PkgUserGetPasswo"
    "rdReq\022*\n\007gettype\030\001 \002(\0162\017.comm.EnGetType:"
    "\010GT_PHONE\022\023\n\013phonenumber\030\002 \001(\t\022\024\n\014emaila"
    "ddress\030\003 \001(\t\"\?\n\027PkgUserGetPasswordReply\022"
    "\027\n\tissuccess\030\001 \002(\010:\004true\022\013\n\003err\030\002 \001(\t\"\244\001"
    "\n\027PkgUserResetPasswordReq\022*\n\007gettype\030\001 \002"
    "(\0162\017.comm.EnGetType:\010GT_PHONE\022\016\n\006userid\030"
    "\002 \001(\005\022\023\n\013phonenumber\030\003 \001(\t\022\024\n\014emailaddre"
    "ss\030\004 \001(\t\022\020\n\010username\030\005 \001(\t\022\020\n\010authcode\030\n"
    " \002(\t\"V\n\031PkgUserResetPasswordReply\022\027\n\tiss"
    "uccess\030\001 \002(\010:\004true\022\013\n\003err\030\002 \001(\t\022\023\n\013oldpa"
    "ssword\030\003 \001(\t\"\261\002\n\rPkgUserSetReq\022*\n\007gettyp"
    "e\030\001 \002(\0162\017.comm.EnGetType:\010GT_PHONE\022\017\n\007se"
    "ttype\030\002 \002(\005\022\016\n\006userid\030\003 \001(\005\022\020\n\010password\030"
    "\004 \002(\t\022\023\n\013phonenumber\030\005 \001(\t\022\024\n\014emailaddre"
    "ss\030\006 \001(\t\022\020\n\010username\030\007 \001(\t\022\023\n\013newpasswor"
    "d\030\010 \002(\t\022\020\n\010realname\030\t \001(\t\"]\n\tEnSetType\022\014"
    "\n\010ST_PHONE\020\001\022\014\n\010ST_EMAIL\020\002\022\017\n\013ST_USERNAM"
    "E\020\004\022\022\n\016ST_NEWPASSWORD\020\010\022\017\n\013ST_REALNAME\020\020"
    "\"7\n\017PkgUserSetReply\022\027\n\tissuccess\030\001 \002(\010:\004"
    "true\022\013\n\003err\030\002 \001(\t\"\201\001\n\026PkgUserInvitionUse"
    "rReq\022*\n\007gettype\030\001 \002(\0162\017.comm.EnGetType:\010"
    "GT_PHONE\022\023\n\013phonenumber\030\003 \001(\t\022\024\n\014emailad"
    "dress\030\004 \001(\t\022\020\n\010realname\030\005 \001(\t\"V\n\030PkgUser"
    "InvitionUserReply\022\027\n\tissuccess\030\001 \002(\010:\004tr"
    "ue\022\013\n\003err\030\002 \001(\t\022\024\n\014invitioncode\030\003 \001(\t\"/\n"
    "\027PkgUserInvitionCheckReq\022\024\n\014invitioncode"
    "\030\001 \001(\t\"\215\002\n\031PkgUserInvitionCheckReply\022\027\n\t"
    "issuccess\030\001 \002(\010:\004true\022\013\n\003err\030\002 \001(\t\022\022\n\npe"
    "rmission\030\017 \001(\005\022\024\n\tcompanyid\030\020 \001(\005:\0010\022\023\n\013"
    "companyname\030\021 \001(\t\022\031\n\021companyusernumber\030\022"
    " \001(\005\022\020\n\010rolename\030\024 \001(\t\022\031\n\021companycreatet"
    "ime\030\025 \001(\t\022\030\n\020permissionroleid\030\026 \001(\005\022)\n\013c"
    "ompanyinfo\030d \001(\0132\024.comm.PkgCompanyInfo\"."
    "\n\027PkgUserCreateCompanyReq\022\023\n\013companyname"
    "\030\001 \001(\t\"\371\001\n\031PkgUserCreateCompanyReply\022\027\n\t"
    "issuccess\030\001 \002(\010:\004true\022\013\n\003err\030\002 \001(\t\022\024\n\tco"
    "mpanyid\030\020 \001(\005:\0010\022\023\n\013companyname\030\021 \001(\t\022\031\n"
    "\021companyusernumber\030\022 \001(\005\022\020\n\010rolename\030\024 \001"
    "(\t\022\031\n\021companycreatetime\030\025 \001(\t\022\030\n\020permiss"
    "ionroleid\030\026 \001(\005\022)\n\013companyinfo\030d \001(\0132\024.c"
    "omm.PkgCompanyInfo\".\n\027PkgUserReassignAdm"
    "inReq\022\023\n\013adminuserid\030\002 \001(\005\"\201\001\n\031PkgUserRe"
    "assignAdminReply\022\027\n\tissuccess\030\001 \002(\010:\004tru"
    "e\022\013\n\003err\030\002 \001(\t\022\022\n\npermission\030\017 \001(\005\022\020\n\010ro"
    "lename\030\024 \001(\t\022\030\n\020permissionroleid\030\026 \001(\005\"1"
    "\n\033PkgUserDeleteFromCompanyReq\022\022\n\nuseridl"
    "ist\030\001 \003(\005\"`\n\035PkgUserDeleteFromCompanyRep"
    "ly\022\027\n\tissuccess\030\001 \002(\010:\004true\022\013\n\003err\030\002 \001(\t"
    "\022\031\n\021companyusernumber\030\022 \001(\005\"{\n\025PkgUserEx"
    "itCompanyReq\022:\n\005encmd\030\001 \002(\0162!.comm.PkgUs"
    "erExitCompanyReq.EnCmd:\010CMD_EXIT\"&\n\005EnCm"
    "d\022\014\n\010CMD_EXIT\020\001\022\017\n\013CMD_DISMISS\020\002\"\?\n\027PkgU"
    "serExitCompanyReply\022\027\n\tissuccess\030\001 \002(\010:\004"
    "true\022\013\n\003err\030\002 \001(\t\"\265\005\n\013PkgTaskInfo\022\r\n\002id\030"
    "\001 \001(\005:\0010\022\023\n\010parentid\030\002 \001(\005:\0010\022\014\n\004name\030\003 "
    "\001(\t\022\020\n\010taskdate\030\004 \001(\t\022\017\n\007content\030\005 \001(\t\022\016"
    "\n\006remark\030\006 \001(\t\022J\n\ttasklevel\030\007 \001(\0162\035.comm"
    ".PkgTaskInfo.EnTaskLevel:\030TL_IMPORTANCE_"
    "NOTARGENCY\022\024\n\014createuserid\030\010 \001(\005\0226\n\006stat"
    "us\030\t \001(\0162\036.comm.PkgTaskInfo.EnTaskStatus"
    ":\006TS_NEW\022\022\n\ncreatetime\030\n \001(\t\022\022\n\nfinishti"
    "me\030\013 \001(\t\022\031\n\016accepteduserid\030\r \001(\005:\0010\022\023\n\010c"
    "oworkid\030\016 \001(\005:\0010\022\022\n\nupdatetime\030\017 \001(\t\022\023\n\010"
    "isreaded\030\020 \001(\005:\0010\022\023\n\010sortflag\030\021 \001(\005:\0010\022\027"
    "\n\017createdrealname\030\036 \001(\t\022\030\n\020acceptedrealn"
    "ame\030\037 \001(\t\"\205\001\n\013EnTaskLevel\022\031\n\025TL_IMPORTAN"
    "CE_ARGENCY\020\003\022\034\n\030TL_IMPORTANCE_NOTARGENCY"
    "\020\001\022\034\n\030TL_NOTIMPORTANCE_ARGENCY\020\002\022\037\n\033TL_N"
    "OTIMPORTANCE_NOTARGENCY\020\000\"V\n\014EnTaskStatu"
    "s\022\n\n\006TS_NEW\020\000\022\014\n\010TS_GOING\020\001\022\017\n\013TS_FINISH"
    "ED\020\002\022\013\n\007TS_DENY\020\003\022\016\n\nTS_DELETED\020\004\"\340\007\n\023Pk"
    "gTaskPageQueryReq\022A\n\010taskflag\030\001 \002(\0162$.co"
    "mm.PkgTaskPageQueryReq.EnTaskFlag:\tTF_MY"
    "TASK\022\025\n\nenconditon\030\002 \001(\005:\0010\022N\n\025pkgtaskqu"
    "erycondition\030\003 \001(\0132/.comm.PkgTaskPageQue"
    "ryReq.PkgTaskQueryCondition\022C\n\010pageflag\030"
    "\004 \001(\0162$.comm.PkgTaskPageQueryReq.EnPageF"
    "lag:\013P_RETURNALL\022\022\n\nindexstart\030\005 \001(\005\022\020\n\010"
    "indexend\030\006 \001(\005\032\267\002\n\025PkgTaskQueryCondition"
    "\022\025\n\rtaskdatestart\030\002 \001(\t\022\023\n\013taskdateend\030\003"
    " \001(\t\022\022\n\nkeyforname\030\004 \001(\t\022\025\n\rkeyforconten"
    "t\030\005 \001(\t\022\026\n\016taskstatuslist\030\006 \003(\005\022Z\n\014enrea"
    "dedflag\030\007 \001(\0162<.comm.PkgTaskPageQueryReq"
    ".PkgTaskQueryCondition.EnReadedFlag:\006PR_"
    "ALL\022\026\n\016lastupdatetime\030d \001(\t\";\n\014EnReadedF"
    "lag\022\n\n\006PR_ALL\020\001\022\r\n\tPR_READED\020\002\022\020\n\014PR_NOT"
    "READED\020\003\"T\n\nEnTaskFlag\022\r\n\tTF_MYTASK\020\000\022\021\n"
    "\rTF_COWORKTASK\020\001\022\020\n\014TF_TASKTABLE\020\002\022\022\n\016TF"
    "_USERDEFINED\020\n\"\343\001\n\024EnTaskQueryCondition\022"
    "\021\n\rTQC_DATESTART\020\001\022\017\n\013TQC_DATEEND\020\002\022\022\n\016T"
    "QC_KEYFORNAME\020\004\022\025\n\021TQC_KEYFORCONTENT\020\010\022\022"
    "\n\016TQC_TASKSTATUS\020\020\022\025\n\021TQC_TASKNOTSTATUS\020"
    " \022\020\n\014TQC_ONLYSEND\020@\022\021\n\014TQC_ONLYRECV\020\200\001\022\023"
    "\n\016TQC_READEDFLAG\020\200\002\022\027\n\022TQC_LASTUPDATETIM"
    "E\020\200\010\">\n\nEnPageFlag\022\r\n\tP_ONLYNUM\020\001\022\017\n\013P_R"
    "ETURNALL\020\002\022\020\n\014P_RETURNPAGE\020\003\"s\n\025PkgTaskP"
    "ageQueryReply\022\021\n\tissuccess\030\001 \002(\010\022\013\n\003err\030"
    "\002 \001(\t\022\'\n\014taskinfolist\030\003 \003(\0132\021.comm.PkgTa"
    "skInfo\022\021\n\treturnnum\030\005 \001(\005\"\246\001\n\017PkgTaskQue"
    "ryReq\0224\n\tqueryflag\030\001 \002(\0162!.comm.PkgTaskQ"
    "ueryReq.EnQueryFlag\022\016\n\006taskid\030\002 \002(\005\"M\n\013E"
    "nQueryFlag\022\017\n\013QF_TASKINFO\020\001\022\026\n\022QF_TASKWI"
    "THSUBTASK\020\002\022\025\n\021QF_TASKWITHASSGIN\020\004\"\235\001\n\021P"
    "kgTaskQueryReply\022\021\n\tissuccess\030\001 \002(\010\022\013\n\003e"
    "rr\030\002 \001(\t\022#\n\010taskinfo\030\003 \001(\0132\021.comm.PkgTas"
    "kInfo\022\'\n\014taskinfolist\030\004 \003(\0132\021.comm.PkgTa"
    "skInfo\022\032\n\022accepteduseridlist\030\005 \003(\005\"3\n\017Pk"
    "gTaskSortFlag\022\016\n\006taskid\030\001 \002(\005\022\020\n\010sortfla"
    "g\030\002 \002(\005\"H\n\025PkgTaskSetSortFlagReq\022/\n\020task"
    "sortflaglist\030\001 \003(\0132\025.comm.PkgTaskSortFla"
    "g\"9\n\027PkgTaskSetSortFlagReply\022\021\n\tissucces"
    "s\030\001 \002(\010\022\013\n\003err\030\002 \001(\t\"\232\003\n\023PkgTaskOperatio"
    "nReq\022\025\n\rtaskoperation\030\001 \002(\005\022#\n\010taskinfo\030"
    "\003 \001(\0132\021.comm.PkgTaskInfo\022\'\n\014taskinfolist"
    "\030\004 \003(\0132\021.comm.PkgTaskInfo\022\032\n\022accepteduse"
    "ridlist\030\005 \003(\005\022\016\n\006taskid\030\n \001(\005\022\016\n\006reason\030"
    "\013 \001(\t\022\024\n\014updatestatus\030\014 \001(\005\022\024\n\014updaterea"
    "ded\030\r \001(\005\"\265\001\n\017EnTaskOperation\022\022\n\016TO_INSE"
    "RT_INFO\020\001\022\036\n\032TO_INSERT_INFO_SUBTASKINFO\020"
    "\002\022\031\n\025TO_INSERT_INFO_COWORK\020\004\022\022\n\016TO_UPDAT"
    "E_INFO\020\020\022\024\n\020TO_UPDATE_STATUS\020 \022\022\n\016TO_DEL"
    "ETE_INFO\020@\022\025\n\020TO_UPDATE_READED\020\200\001\"G\n\025Pkg"
    "TaskOperationReply\022\021\n\tissuccess\030\001 \002(\010\022\013\n"
    "\003err\030\002 \001(\t\022\016\n\006taskid\030\005 \001(\005\"H\n\017PkgCompany"
    "Group\022\017\n\007groupid\030\001 \002(\005\022\021\n\tcompanyid\030\002 \002("
    "\005\022\021\n\tgroupname\030\003 \002(\t\"\300\001\n\014PkgGroupUser\022\017\n"
    "\007groupid\030\001 \002(\005\022\016\n\006userid\030\002 \002(\005\022\020\n\010realna"
    "me\030\003 \001(\t\022\023\n\013phonenumber\030\014 \001(\t\022\024\n\014emailad"
    "dress\030\r \001(\t\022\022\n\npermission\030\017 \001(\005\022\022\n\ncreat"
    "etime\030\023 \001(\t\022\020\n\010rolename\030\024 \001(\t\022\030\n\020permiss"
    "ionroleid\030\026 \001(\005\"\207\001\n\027PkgCompanyGroupQuery"
    "Req\022D\n\tquerytype\030\001 \002(\0162).comm.PkgCompany"
    "GroupQueryReq.EnQueryType:\006QT_ALL\"&\n\013EnQ"
    "ueryType\022\n\n\006QT_ALL\020\000\022\013\n\007QT_MINE\020\001\"\227\001\n\031Pk"
    "gCompanyGroupQueryReply\022\021\n\tissuccess\030\001 \002"
    "(\010\022\013\n\003err\030\002 \001(\t\022/\n\020companygrouplist\030\004 \003("
    "\0132\025.comm.PkgCompanyGroup\022)\n\rgroupuserlis"
    "t\030\005 \003(\0132\022.comm.PkgGroupUser\"\202\001\n\nPkgAdvIn"
    "fo\022\r\n\002id\030\001 \001(\005:\0010\022\014\n\004name\030\002 \001(\t\022\016\n\006urlpi"
    "c\030\003 \001(\t\022\016\n\006advtxt\030\004 \001(\t\022\017\n\007advdesc\030\005 \001(\t"
    "\022\022\n\ncreatetime\030\006 \001(\t\022\022\n\nexpiretime\030\007 \001(\t"
    "\"\202\001\n\016PkgAdvQueryReq\022\024\n\tqueryflag\030\001 \002(\005:\001"
    "1\022\016\n\006numreq\030\002 \001(\005\022\r\n\005advid\030\003 \001(\005\";\n\013EnQu"
    "eryType\022\014\n\010QT_SPNUM\020\001\022\020\n\014QT_VAILDTIME\020\002\022"
    "\014\n\010QT_ADVID\020\004\"Y\n\020PkgAdvQueryReply\022\021\n\tiss"
    "uccess\030\001 \002(\010\022\013\n\003err\030\002 \001(\t\022%\n\013advinfolist"
    "\030\003 \003(\0132\020.comm.PkgAdvInfo\"=\n\024PkgQueryMyPr"
    "ofileReq\022\022\n\ncurversion\030\001 \001(\t\022\021\n\tplatmfor"
    "m\030\002 \001(\t\"\206\001\n\026PkgQueryMyProfileReply\022\026\n\016ve"
    "rsionlastest\0303 \001(\t\022\032\n\022versiondownloadurl"
    "\0304 \001(\t\022\035\n\025tasknumbernotfinished\030d \001(\005\022\031\n"
    "\021tasknumberfinshed\030e \001(\005\"\016\n\014PkgLogoutReq"
    "\"\020\n\016PkgLogoutReply\"i\n\014PkgNotifyReq\022\022\n\ncu"
    "rversion\030\001 \001(\t\022\021\n\tplatmform\030\002 \001(\t\022\026\n\016dat"
    "aupatedtime\030\003 \001(\t\022\032\n\017forceupdateflag\030d \001"
    "(\005:\0010\"\245\002\n\016PkgNotifyReply\022\026\n\016dataupatedti"
    "me\030d \001(\t\022\031\n\021notifyupdatedflag\030e \001(\005\022*\n\013c"
    "ompanyinfo\030\350\007 \001(\0132\024.comm.PkgCompanyInfo\022"
    "\036\n\025tasknumbernotfinished\030\363\007 \001(\005\022\033\n\022taskn"
    "umberfinished\030\364\007 \001(\005\022\027\n\016versionlastest\030\206"
    "\010 \001(\t\022\033\n\022versiondownloadurl\030\221\010 \001(\t\022\023\n\npe"
    "rmission\030\233\010 \001(\005\022\021\n\010rolename\030\234\010 \001(\t\022\031\n\020pe"
    "rmissionroleid\030\235\010 \001(\005\"\272\003\n\022PkgPhoneCppWra"
    "pReq\022\016\n\006userid\030\001 \002(\005\0225\n\tenreqtype\030\002 \002(\0162"
    "\".comm.PkgPhoneCppWrapReq.EnReqType\022\033\n\022l"
    "asttaskupdatetime\030\350\007 \001(\t\022(\n\014taskinfolist"
    "\030\351\007 \003(\0132\021.comm.PkgTaskInfo\0224\n\020taskpagequ"
    "eryreq\030\363\007 \001(\0132\031.comm.PkgTaskPageQueryReq"
    "\022,\n\014taskqueryreq\030\375\007 \001(\0132\025.comm.PkgTaskQu"
    "eryReq\"\261\001\n\tEnReqType\022\031\n\025PONEWRAP_LOGINSU"
    "CCESS\020\000\022\"\n\036PONEWRAP_GETUSERTASKUPDATETIM"
    "E\020\001\022*\n&PONEWRAP_SETUSERTASKUPDATETIMEAND"
    "TASKS\020\002\022\033\n\027PONEWRAP_QUERYPAGETASKS\020\003\022\034\n\030"
    "PONEWRAP_QUERYTASKDETAIL\020\004\"\277\001\n\024PkgPhoneC"
    "ppWrapReply\022\021\n\tissuccess\030\001 \002(\010\022\013\n\003err\030\002 "
    "\001(\t\022\033\n\022lasttaskupdatetime\030\350\007 \001(\t\0228\n\022task"
    "pagequeryreply\030\363\007 \001(\0132\033.comm.PkgTaskPage"
    "QueryReply\0220\n\016taskqueryreply\030\375\007 \001(\0132\027.co"
    "mm.PkgTaskQueryReply*G\n\tEnGetType\022\014\n\010GT_"
    "PHONE\020\000\022\014\n\010GT_EMAIL\020\001\022\r\n\tGT_USERID\020\002\022\017\n\013"
    "GT_USERNAME\020\003*\226\001\n\rEnUpdatedFlag\022\022\n\016UF_CO"
    "MPANYINFO\020\001\022\021\n\rUF_TASKCOWORK\020\002\022\r\n\tUF_MYT"
    "ASK\020\004\022\034\n\030UF_MYTASKFINISHEDNUMBERS\020\010\022\017\n\013U"
    "F_USERROLE\020\020\022\017\n\nUF_ADVINFO\020\200\010\022\017\n\nUF_VERS"
    "ION\020\200\020", 9206);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "comm.proto", &protobuf_RegisterTypes);
  PkgConnectReq::default_instance_ = new PkgConnectReq();
  PkgConnectReply::default_instance_ = new PkgConnectReply();
  PkgUserCheckReq::default_instance_ = new PkgUserCheckReq();
  PkgUserCheckReply::default_instance_ = new PkgUserCheckReply();
  PkgUserCheckInvitionCodeReq::default_instance_ = new PkgUserCheckInvitionCodeReq();
  PkgUserCheckInvitionCodeReply::default_instance_ = new PkgUserCheckInvitionCodeReply();
  PkgUserGetAuthReq::default_instance_ = new PkgUserGetAuthReq();
  PkgUserGetAuthReply::default_instance_ = new PkgUserGetAuthReply();
  PkgUserCreateReq::default_instance_ = new PkgUserCreateReq();
  PkgUserCreateReply::default_instance_ = new PkgUserCreateReply();
  PkgUserLoginReq::default_instance_ = new PkgUserLoginReq();
  PkgCompanyInfo::default_instance_ = new PkgCompanyInfo();
  PkgUserLoginReply::default_instance_ = new PkgUserLoginReply();
  PkgUserGetPasswordReq::default_instance_ = new PkgUserGetPasswordReq();
  PkgUserGetPasswordReply::default_instance_ = new PkgUserGetPasswordReply();
  PkgUserResetPasswordReq::default_instance_ = new PkgUserResetPasswordReq();
  PkgUserResetPasswordReply::default_instance_ = new PkgUserResetPasswordReply();
  PkgUserSetReq::default_instance_ = new PkgUserSetReq();
  PkgUserSetReply::default_instance_ = new PkgUserSetReply();
  PkgUserInvitionUserReq::default_instance_ = new PkgUserInvitionUserReq();
  PkgUserInvitionUserReply::default_instance_ = new PkgUserInvitionUserReply();
  PkgUserInvitionCheckReq::default_instance_ = new PkgUserInvitionCheckReq();
  PkgUserInvitionCheckReply::default_instance_ = new PkgUserInvitionCheckReply();
  PkgUserCreateCompanyReq::default_instance_ = new PkgUserCreateCompanyReq();
  PkgUserCreateCompanyReply::default_instance_ = new PkgUserCreateCompanyReply();
  PkgUserReassignAdminReq::default_instance_ = new PkgUserReassignAdminReq();
  PkgUserReassignAdminReply::default_instance_ = new PkgUserReassignAdminReply();
  PkgUserDeleteFromCompanyReq::default_instance_ = new PkgUserDeleteFromCompanyReq();
  PkgUserDeleteFromCompanyReply::default_instance_ = new PkgUserDeleteFromCompanyReply();
  PkgUserExitCompanyReq::default_instance_ = new PkgUserExitCompanyReq();
  PkgUserExitCompanyReply::default_instance_ = new PkgUserExitCompanyReply();
  PkgTaskInfo::default_instance_ = new PkgTaskInfo();
  PkgTaskPageQueryReq::default_instance_ = new PkgTaskPageQueryReq();
  PkgTaskPageQueryReq_PkgTaskQueryCondition::default_instance_ = new PkgTaskPageQueryReq_PkgTaskQueryCondition();
  PkgTaskPageQueryReply::default_instance_ = new PkgTaskPageQueryReply();
  PkgTaskQueryReq::default_instance_ = new PkgTaskQueryReq();
  PkgTaskQueryReply::default_instance_ = new PkgTaskQueryReply();
  PkgTaskSortFlag::default_instance_ = new PkgTaskSortFlag();
  PkgTaskSetSortFlagReq::default_instance_ = new PkgTaskSetSortFlagReq();
  PkgTaskSetSortFlagReply::default_instance_ = new PkgTaskSetSortFlagReply();
  PkgTaskOperationReq::default_instance_ = new PkgTaskOperationReq();
  PkgTaskOperationReply::default_instance_ = new PkgTaskOperationReply();
  PkgCompanyGroup::default_instance_ = new PkgCompanyGroup();
  PkgGroupUser::default_instance_ = new PkgGroupUser();
  PkgCompanyGroupQueryReq::default_instance_ = new PkgCompanyGroupQueryReq();
  PkgCompanyGroupQueryReply::default_instance_ = new PkgCompanyGroupQueryReply();
  PkgAdvInfo::default_instance_ = new PkgAdvInfo();
  PkgAdvQueryReq::default_instance_ = new PkgAdvQueryReq();
  PkgAdvQueryReply::default_instance_ = new PkgAdvQueryReply();
  PkgQueryMyProfileReq::default_instance_ = new PkgQueryMyProfileReq();
  PkgQueryMyProfileReply::default_instance_ = new PkgQueryMyProfileReply();
  PkgLogoutReq::default_instance_ = new PkgLogoutReq();
  PkgLogoutReply::default_instance_ = new PkgLogoutReply();
  PkgNotifyReq::default_instance_ = new PkgNotifyReq();
  PkgNotifyReply::default_instance_ = new PkgNotifyReply();
  PkgPhoneCppWrapReq::default_instance_ = new PkgPhoneCppWrapReq();
  PkgPhoneCppWrapReply::default_instance_ = new PkgPhoneCppWrapReply();
  PkgConnectReq::default_instance_->InitAsDefaultInstance();
  PkgConnectReply::default_instance_->InitAsDefaultInstance();
  PkgUserCheckReq::default_instance_->InitAsDefaultInstance();
  PkgUserCheckReply::default_instance_->InitAsDefaultInstance();
  PkgUserCheckInvitionCodeReq::default_instance_->InitAsDefaultInstance();
  PkgUserCheckInvitionCodeReply::default_instance_->InitAsDefaultInstance();
  PkgUserGetAuthReq::default_instance_->InitAsDefaultInstance();
  PkgUserGetAuthReply::default_instance_->InitAsDefaultInstance();
  PkgUserCreateReq::default_instance_->InitAsDefaultInstance();
  PkgUserCreateReply::default_instance_->InitAsDefaultInstance();
  PkgUserLoginReq::default_instance_->InitAsDefaultInstance();
  PkgCompanyInfo::default_instance_->InitAsDefaultInstance();
  PkgUserLoginReply::default_instance_->InitAsDefaultInstance();
  PkgUserGetPasswordReq::default_instance_->InitAsDefaultInstance();
  PkgUserGetPasswordReply::default_instance_->InitAsDefaultInstance();
  PkgUserResetPasswordReq::default_instance_->InitAsDefaultInstance();
  PkgUserResetPasswordReply::default_instance_->InitAsDefaultInstance();
  PkgUserSetReq::default_instance_->InitAsDefaultInstance();
  PkgUserSetReply::default_instance_->InitAsDefaultInstance();
  PkgUserInvitionUserReq::default_instance_->InitAsDefaultInstance();
  PkgUserInvitionUserReply::default_instance_->InitAsDefaultInstance();
  PkgUserInvitionCheckReq::default_instance_->InitAsDefaultInstance();
  PkgUserInvitionCheckReply::default_instance_->InitAsDefaultInstance();
  PkgUserCreateCompanyReq::default_instance_->InitAsDefaultInstance();
  PkgUserCreateCompanyReply::default_instance_->InitAsDefaultInstance();
  PkgUserReassignAdminReq::default_instance_->InitAsDefaultInstance();
  PkgUserReassignAdminReply::default_instance_->InitAsDefaultInstance();
  PkgUserDeleteFromCompanyReq::default_instance_->InitAsDefaultInstance();
  PkgUserDeleteFromCompanyReply::default_instance_->InitAsDefaultInstance();
  PkgUserExitCompanyReq::default_instance_->InitAsDefaultInstance();
  PkgUserExitCompanyReply::default_instance_->InitAsDefaultInstance();
  PkgTaskInfo::default_instance_->InitAsDefaultInstance();
  PkgTaskPageQueryReq::default_instance_->InitAsDefaultInstance();
  PkgTaskPageQueryReq_PkgTaskQueryCondition::default_instance_->InitAsDefaultInstance();
  PkgTaskPageQueryReply::default_instance_->InitAsDefaultInstance();
  PkgTaskQueryReq::default_instance_->InitAsDefaultInstance();
  PkgTaskQueryReply::default_instance_->InitAsDefaultInstance();
  PkgTaskSortFlag::default_instance_->InitAsDefaultInstance();
  PkgTaskSetSortFlagReq::default_instance_->InitAsDefaultInstance();
  PkgTaskSetSortFlagReply::default_instance_->InitAsDefaultInstance();
  PkgTaskOperationReq::default_instance_->InitAsDefaultInstance();
  PkgTaskOperationReply::default_instance_->InitAsDefaultInstance();
  PkgCompanyGroup::default_instance_->InitAsDefaultInstance();
  PkgGroupUser::default_instance_->InitAsDefaultInstance();
  PkgCompanyGroupQueryReq::default_instance_->InitAsDefaultInstance();
  PkgCompanyGroupQueryReply::default_instance_->InitAsDefaultInstance();
  PkgAdvInfo::default_instance_->InitAsDefaultInstance();
  PkgAdvQueryReq::default_instance_->InitAsDefaultInstance();
  PkgAdvQueryReply::default_instance_->InitAsDefaultInstance();
  PkgQueryMyProfileReq::default_instance_->InitAsDefaultInstance();
  PkgQueryMyProfileReply::default_instance_->InitAsDefaultInstance();
  PkgLogoutReq::default_instance_->InitAsDefaultInstance();
  PkgLogoutReply::default_instance_->InitAsDefaultInstance();
  PkgNotifyReq::default_instance_->InitAsDefaultInstance();
  PkgNotifyReply::default_instance_->InitAsDefaultInstance();
  PkgPhoneCppWrapReq::default_instance_->InitAsDefaultInstance();
  PkgPhoneCppWrapReply::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_comm_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_comm_2eproto {
  StaticDescriptorInitializer_comm_2eproto() {
    protobuf_AddDesc_comm_2eproto();
  }
} static_descriptor_initializer_comm_2eproto_;
const ::google::protobuf::EnumDescriptor* EnGetType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnGetType_descriptor_;
}
bool EnGetType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EnUpdatedFlag_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnUpdatedFlag_descriptor_;
}
bool EnUpdatedFlag_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 1024:
    case 2048:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int PkgConnectReq::kApptypeFieldNumber;
const int PkgConnectReq::kAppversionFieldNumber;
const int PkgConnectReq::kApplanguageFieldNumber;
const int PkgConnectReq::kOstypeFieldNumber;
const int PkgConnectReq::kOsversionFieldNumber;
const int PkgConnectReq::kOsrrFieldNumber;
const int PkgConnectReq::kClientsnFieldNumber;
#endif  // !_MSC_VER

PkgConnectReq::PkgConnectReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgConnectReq)
}

void PkgConnectReq::InitAsDefaultInstance() {
}

PkgConnectReq::PkgConnectReq(const PkgConnectReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgConnectReq)
}

void PkgConnectReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  apptype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  applanguage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ostype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  osversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  osrr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientsn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgConnectReq::~PkgConnectReq() {
  // @@protoc_insertion_point(destructor:comm.PkgConnectReq)
  SharedDtor();
}

void PkgConnectReq::SharedDtor() {
  apptype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  applanguage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ostype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  osversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  osrr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientsn_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgConnectReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgConnectReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgConnectReq_descriptor_;
}

const PkgConnectReq& PkgConnectReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgConnectReq* PkgConnectReq::default_instance_ = NULL;

PkgConnectReq* PkgConnectReq::New(::google::protobuf::Arena* arena) const {
  PkgConnectReq* n = new PkgConnectReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgConnectReq::Clear() {
  if (_has_bits_[0 / 32] & 127) {
    if (has_apptype()) {
      apptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_appversion()) {
      appversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_applanguage()) {
      applanguage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_ostype()) {
      ostype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_osversion()) {
      osversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_osrr()) {
      osrr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_clientsn()) {
      clientsn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgConnectReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgConnectReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string apptype = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apptype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->apptype().data(), this->apptype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgConnectReq.apptype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_appversion;
        break;
      }

      // optional string appversion = 3;
      case 3: {
        if (tag == 26) {
         parse_appversion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appversion()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appversion().data(), this->appversion().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgConnectReq.appversion");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_applanguage;
        break;
      }

      // optional string applanguage = 4;
      case 4: {
        if (tag == 34) {
         parse_applanguage:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_applanguage()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->applanguage().data(), this->applanguage().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgConnectReq.applanguage");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_ostype;
        break;
      }

      // optional string ostype = 10;
      case 10: {
        if (tag == 82) {
         parse_ostype:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ostype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ostype().data(), this->ostype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgConnectReq.ostype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_osversion;
        break;
      }

      // optional string osversion = 11;
      case 11: {
        if (tag == 90) {
         parse_osversion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_osversion()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->osversion().data(), this->osversion().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgConnectReq.osversion");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_osrr;
        break;
      }

      // optional string osrr = 12;
      case 12: {
        if (tag == 98) {
         parse_osrr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_osrr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->osrr().data(), this->osrr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgConnectReq.osrr");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(810)) goto parse_clientsn;
        break;
      }

      // optional string clientsn = 101;
      case 101: {
        if (tag == 810) {
         parse_clientsn:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientsn()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->clientsn().data(), this->clientsn().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgConnectReq.clientsn");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgConnectReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgConnectReq)
  return false;
#undef DO_
}

void PkgConnectReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgConnectReq)
  // optional string apptype = 2;
  if (has_apptype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->apptype().data(), this->apptype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgConnectReq.apptype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->apptype(), output);
  }

  // optional string appversion = 3;
  if (has_appversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appversion().data(), this->appversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgConnectReq.appversion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->appversion(), output);
  }

  // optional string applanguage = 4;
  if (has_applanguage()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->applanguage().data(), this->applanguage().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgConnectReq.applanguage");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->applanguage(), output);
  }

  // optional string ostype = 10;
  if (has_ostype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ostype().data(), this->ostype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgConnectReq.ostype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->ostype(), output);
  }

  // optional string osversion = 11;
  if (has_osversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->osversion().data(), this->osversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgConnectReq.osversion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->osversion(), output);
  }

  // optional string osrr = 12;
  if (has_osrr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->osrr().data(), this->osrr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgConnectReq.osrr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->osrr(), output);
  }

  // optional string clientsn = 101;
  if (has_clientsn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clientsn().data(), this->clientsn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgConnectReq.clientsn");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      101, this->clientsn(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgConnectReq)
}

::google::protobuf::uint8* PkgConnectReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgConnectReq)
  // optional string apptype = 2;
  if (has_apptype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->apptype().data(), this->apptype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgConnectReq.apptype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->apptype(), target);
  }

  // optional string appversion = 3;
  if (has_appversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appversion().data(), this->appversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgConnectReq.appversion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->appversion(), target);
  }

  // optional string applanguage = 4;
  if (has_applanguage()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->applanguage().data(), this->applanguage().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgConnectReq.applanguage");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->applanguage(), target);
  }

  // optional string ostype = 10;
  if (has_ostype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ostype().data(), this->ostype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgConnectReq.ostype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->ostype(), target);
  }

  // optional string osversion = 11;
  if (has_osversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->osversion().data(), this->osversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgConnectReq.osversion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->osversion(), target);
  }

  // optional string osrr = 12;
  if (has_osrr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->osrr().data(), this->osrr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgConnectReq.osrr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->osrr(), target);
  }

  // optional string clientsn = 101;
  if (has_clientsn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clientsn().data(), this->clientsn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgConnectReq.clientsn");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        101, this->clientsn(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgConnectReq)
  return target;
}

int PkgConnectReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 127) {
    // optional string apptype = 2;
    if (has_apptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->apptype());
    }

    // optional string appversion = 3;
    if (has_appversion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appversion());
    }

    // optional string applanguage = 4;
    if (has_applanguage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->applanguage());
    }

    // optional string ostype = 10;
    if (has_ostype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ostype());
    }

    // optional string osversion = 11;
    if (has_osversion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->osversion());
    }

    // optional string osrr = 12;
    if (has_osrr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->osrr());
    }

    // optional string clientsn = 101;
    if (has_clientsn()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->clientsn());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgConnectReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgConnectReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgConnectReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgConnectReq::MergeFrom(const PkgConnectReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_apptype()) {
      set_has_apptype();
      apptype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apptype_);
    }
    if (from.has_appversion()) {
      set_has_appversion();
      appversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appversion_);
    }
    if (from.has_applanguage()) {
      set_has_applanguage();
      applanguage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.applanguage_);
    }
    if (from.has_ostype()) {
      set_has_ostype();
      ostype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ostype_);
    }
    if (from.has_osversion()) {
      set_has_osversion();
      osversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.osversion_);
    }
    if (from.has_osrr()) {
      set_has_osrr();
      osrr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.osrr_);
    }
    if (from.has_clientsn()) {
      set_has_clientsn();
      clientsn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientsn_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgConnectReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgConnectReq::CopyFrom(const PkgConnectReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgConnectReq::IsInitialized() const {

  return true;
}

void PkgConnectReq::Swap(PkgConnectReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgConnectReq::InternalSwap(PkgConnectReq* other) {
  apptype_.Swap(&other->apptype_);
  appversion_.Swap(&other->appversion_);
  applanguage_.Swap(&other->applanguage_);
  ostype_.Swap(&other->ostype_);
  osversion_.Swap(&other->osversion_);
  osrr_.Swap(&other->osrr_);
  clientsn_.Swap(&other->clientsn_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgConnectReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgConnectReq_descriptor_;
  metadata.reflection = PkgConnectReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgConnectReply::kIssuccessFieldNumber;
const int PkgConnectReply::kErrFieldNumber;
const int PkgConnectReply::kUrllistFieldNumber;
const int PkgConnectReply::kEncryptkeyFieldNumber;
const int PkgConnectReply::kHashedclientsnFieldNumber;
const int PkgConnectReply::kServersnFieldNumber;
#endif  // !_MSC_VER

PkgConnectReply::PkgConnectReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgConnectReply)
}

void PkgConnectReply::InitAsDefaultInstance() {
}

PkgConnectReply::PkgConnectReply(const PkgConnectReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgConnectReply)
}

void PkgConnectReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = true;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encryptkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashedclientsn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serversn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgConnectReply::~PkgConnectReply() {
  // @@protoc_insertion_point(destructor:comm.PkgConnectReply)
  SharedDtor();
}

void PkgConnectReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encryptkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashedclientsn_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serversn_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgConnectReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgConnectReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgConnectReply_descriptor_;
}

const PkgConnectReply& PkgConnectReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgConnectReply* PkgConnectReply::default_instance_ = NULL;

PkgConnectReply* PkgConnectReply::New(::google::protobuf::Arena* arena) const {
  PkgConnectReply* n = new PkgConnectReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgConnectReply::Clear() {
  if (_has_bits_[0 / 32] & 59) {
    issuccess_ = true;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_encryptkey()) {
      encryptkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_hashedclientsn()) {
      hashedclientsn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_serversn()) {
      serversn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  urllist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgConnectReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgConnectReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1 [default = true];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgConnectReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_urllist;
        break;
      }

      // repeated string urllist = 10;
      case 10: {
        if (tag == 82) {
         parse_urllist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_urllist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->urllist(this->urllist_size() - 1).data(),
            this->urllist(this->urllist_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgConnectReply.urllist");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_urllist;
        if (input->ExpectTag(90)) goto parse_encryptkey;
        break;
      }

      // optional string encryptkey = 11;
      case 11: {
        if (tag == 90) {
         parse_encryptkey:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_encryptkey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->encryptkey().data(), this->encryptkey().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgConnectReply.encryptkey");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(802)) goto parse_hashedclientsn;
        break;
      }

      // optional string hashedclientsn = 100;
      case 100: {
        if (tag == 802) {
         parse_hashedclientsn:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hashedclientsn()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hashedclientsn().data(), this->hashedclientsn().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgConnectReply.hashedclientsn");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(810)) goto parse_serversn;
        break;
      }

      // optional string serversn = 101;
      case 101: {
        if (tag == 810) {
         parse_serversn:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serversn()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->serversn().data(), this->serversn().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgConnectReply.serversn");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgConnectReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgConnectReply)
  return false;
#undef DO_
}

void PkgConnectReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgConnectReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgConnectReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  // repeated string urllist = 10;
  for (int i = 0; i < this->urllist_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->urllist(i).data(), this->urllist(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "comm.PkgConnectReply.urllist");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->urllist(i), output);
  }

  // optional string encryptkey = 11;
  if (has_encryptkey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->encryptkey().data(), this->encryptkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgConnectReply.encryptkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->encryptkey(), output);
  }

  // optional string hashedclientsn = 100;
  if (has_hashedclientsn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hashedclientsn().data(), this->hashedclientsn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgConnectReply.hashedclientsn");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      100, this->hashedclientsn(), output);
  }

  // optional string serversn = 101;
  if (has_serversn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serversn().data(), this->serversn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgConnectReply.serversn");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      101, this->serversn(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgConnectReply)
}

::google::protobuf::uint8* PkgConnectReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgConnectReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgConnectReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  // repeated string urllist = 10;
  for (int i = 0; i < this->urllist_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->urllist(i).data(), this->urllist(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgConnectReply.urllist");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(10, this->urllist(i), target);
  }

  // optional string encryptkey = 11;
  if (has_encryptkey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->encryptkey().data(), this->encryptkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgConnectReply.encryptkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->encryptkey(), target);
  }

  // optional string hashedclientsn = 100;
  if (has_hashedclientsn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hashedclientsn().data(), this->hashedclientsn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgConnectReply.hashedclientsn");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        100, this->hashedclientsn(), target);
  }

  // optional string serversn = 101;
  if (has_serversn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serversn().data(), this->serversn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgConnectReply.serversn");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        101, this->serversn(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgConnectReply)
  return target;
}

int PkgConnectReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  if (_has_bits_[1 / 32] & 58) {
    // optional string err = 2;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->err());
    }

    // optional string encryptkey = 11;
    if (has_encryptkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->encryptkey());
    }

    // optional string hashedclientsn = 100;
    if (has_hashedclientsn()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hashedclientsn());
    }

    // optional string serversn = 101;
    if (has_serversn()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->serversn());
    }

  }
  // repeated string urllist = 10;
  total_size += 1 * this->urllist_size();
  for (int i = 0; i < this->urllist_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->urllist(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgConnectReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgConnectReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgConnectReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgConnectReply::MergeFrom(const PkgConnectReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  urllist_.MergeFrom(from.urllist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
    if (from.has_encryptkey()) {
      set_has_encryptkey();
      encryptkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encryptkey_);
    }
    if (from.has_hashedclientsn()) {
      set_has_hashedclientsn();
      hashedclientsn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hashedclientsn_);
    }
    if (from.has_serversn()) {
      set_has_serversn();
      serversn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serversn_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgConnectReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgConnectReply::CopyFrom(const PkgConnectReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgConnectReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgConnectReply::Swap(PkgConnectReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgConnectReply::InternalSwap(PkgConnectReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  urllist_.UnsafeArenaSwap(&other->urllist_);
  encryptkey_.Swap(&other->encryptkey_);
  hashedclientsn_.Swap(&other->hashedclientsn_);
  serversn_.Swap(&other->serversn_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgConnectReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgConnectReply_descriptor_;
  metadata.reflection = PkgConnectReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgUserCheckReq::kGettypeFieldNumber;
const int PkgUserCheckReq::kPhonenumberFieldNumber;
const int PkgUserCheckReq::kEmailaddressFieldNumber;
const int PkgUserCheckReq::kUsernameFieldNumber;
#endif  // !_MSC_VER

PkgUserCheckReq::PkgUserCheckReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgUserCheckReq)
}

void PkgUserCheckReq::InitAsDefaultInstance() {
}

PkgUserCheckReq::PkgUserCheckReq(const PkgUserCheckReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgUserCheckReq)
}

void PkgUserCheckReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  gettype_ = 0;
  phonenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emailaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserCheckReq::~PkgUserCheckReq() {
  // @@protoc_insertion_point(destructor:comm.PkgUserCheckReq)
  SharedDtor();
}

void PkgUserCheckReq::SharedDtor() {
  phonenumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emailaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgUserCheckReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserCheckReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserCheckReq_descriptor_;
}

const PkgUserCheckReq& PkgUserCheckReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgUserCheckReq* PkgUserCheckReq::default_instance_ = NULL;

PkgUserCheckReq* PkgUserCheckReq::New(::google::protobuf::Arena* arena) const {
  PkgUserCheckReq* n = new PkgUserCheckReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserCheckReq::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    gettype_ = 0;
    if (has_phonenumber()) {
      phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_emailaddress()) {
      emailaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_username()) {
      username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserCheckReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgUserCheckReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::comm::EnGetType_IsValid(value)) {
            set_gettype(static_cast< ::comm::EnGetType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_phonenumber;
        break;
      }

      // optional string phonenumber = 3;
      case 3: {
        if (tag == 26) {
         parse_phonenumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonenumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phonenumber().data(), this->phonenumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserCheckReq.phonenumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_emailaddress;
        break;
      }

      // optional string emailaddress = 4;
      case 4: {
        if (tag == 34) {
         parse_emailaddress:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_emailaddress()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->emailaddress().data(), this->emailaddress().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserCheckReq.emailaddress");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_username;
        break;
      }

      // optional string username = 5;
      case 5: {
        if (tag == 42) {
         parse_username:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserCheckReq.username");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgUserCheckReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgUserCheckReq)
  return false;
#undef DO_
}

void PkgUserCheckReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgUserCheckReq)
  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  if (has_gettype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->gettype(), output);
  }

  // optional string phonenumber = 3;
  if (has_phonenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCheckReq.phonenumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->phonenumber(), output);
  }

  // optional string emailaddress = 4;
  if (has_emailaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emailaddress().data(), this->emailaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCheckReq.emailaddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->emailaddress(), output);
  }

  // optional string username = 5;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCheckReq.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->username(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgUserCheckReq)
}

::google::protobuf::uint8* PkgUserCheckReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgUserCheckReq)
  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  if (has_gettype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->gettype(), target);
  }

  // optional string phonenumber = 3;
  if (has_phonenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCheckReq.phonenumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->phonenumber(), target);
  }

  // optional string emailaddress = 4;
  if (has_emailaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emailaddress().data(), this->emailaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCheckReq.emailaddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->emailaddress(), target);
  }

  // optional string username = 5;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCheckReq.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->username(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgUserCheckReq)
  return target;
}

int PkgUserCheckReq::ByteSize() const {
  int total_size = 0;

  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  if (has_gettype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gettype());
  }
  if (_has_bits_[1 / 32] & 14) {
    // optional string phonenumber = 3;
    if (has_phonenumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phonenumber());
    }

    // optional string emailaddress = 4;
    if (has_emailaddress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->emailaddress());
    }

    // optional string username = 5;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserCheckReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserCheckReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserCheckReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserCheckReq::MergeFrom(const PkgUserCheckReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gettype()) {
      set_gettype(from.gettype());
    }
    if (from.has_phonenumber()) {
      set_has_phonenumber();
      phonenumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenumber_);
    }
    if (from.has_emailaddress()) {
      set_has_emailaddress();
      emailaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.emailaddress_);
    }
    if (from.has_username()) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserCheckReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserCheckReq::CopyFrom(const PkgUserCheckReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserCheckReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgUserCheckReq::Swap(PkgUserCheckReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserCheckReq::InternalSwap(PkgUserCheckReq* other) {
  std::swap(gettype_, other->gettype_);
  phonenumber_.Swap(&other->phonenumber_);
  emailaddress_.Swap(&other->emailaddress_);
  username_.Swap(&other->username_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserCheckReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserCheckReq_descriptor_;
  metadata.reflection = PkgUserCheckReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgUserCheckReply::kIssuccessFieldNumber;
const int PkgUserCheckReply::kErrFieldNumber;
const int PkgUserCheckReply::kUseridFieldNumber;
#endif  // !_MSC_VER

PkgUserCheckReply::PkgUserCheckReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgUserCheckReply)
}

void PkgUserCheckReply::InitAsDefaultInstance() {
}

PkgUserCheckReply::PkgUserCheckReply(const PkgUserCheckReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgUserCheckReply)
}

void PkgUserCheckReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = true;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserCheckReply::~PkgUserCheckReply() {
  // @@protoc_insertion_point(destructor:comm.PkgUserCheckReply)
  SharedDtor();
}

void PkgUserCheckReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgUserCheckReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserCheckReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserCheckReply_descriptor_;
}

const PkgUserCheckReply& PkgUserCheckReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgUserCheckReply* PkgUserCheckReply::default_instance_ = NULL;

PkgUserCheckReply* PkgUserCheckReply::New(::google::protobuf::Arena* arena) const {
  PkgUserCheckReply* n = new PkgUserCheckReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserCheckReply::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    issuccess_ = true;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    userid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserCheckReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgUserCheckReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1 [default = true];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserCheckReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_userid;
        break;
      }

      // optional int32 userid = 3;
      case 3: {
        if (tag == 24) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
          set_has_userid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgUserCheckReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgUserCheckReply)
  return false;
#undef DO_
}

void PkgUserCheckReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgUserCheckReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCheckReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  // optional int32 userid = 3;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgUserCheckReply)
}

::google::protobuf::uint8* PkgUserCheckReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgUserCheckReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCheckReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  // optional int32 userid = 3;
  if (has_userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgUserCheckReply)
  return target;
}

int PkgUserCheckReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  if (_has_bits_[1 / 32] & 6) {
    // optional string err = 2;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->err());
    }

    // optional int32 userid = 3;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserCheckReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserCheckReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserCheckReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserCheckReply::MergeFrom(const PkgUserCheckReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
    if (from.has_userid()) {
      set_userid(from.userid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserCheckReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserCheckReply::CopyFrom(const PkgUserCheckReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserCheckReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgUserCheckReply::Swap(PkgUserCheckReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserCheckReply::InternalSwap(PkgUserCheckReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  std::swap(userid_, other->userid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserCheckReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserCheckReply_descriptor_;
  metadata.reflection = PkgUserCheckReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgUserCheckInvitionCodeReq::kGettypeFieldNumber;
const int PkgUserCheckInvitionCodeReq::kInvitioncodeFieldNumber;
#endif  // !_MSC_VER

PkgUserCheckInvitionCodeReq::PkgUserCheckInvitionCodeReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgUserCheckInvitionCodeReq)
}

void PkgUserCheckInvitionCodeReq::InitAsDefaultInstance() {
}

PkgUserCheckInvitionCodeReq::PkgUserCheckInvitionCodeReq(const PkgUserCheckInvitionCodeReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgUserCheckInvitionCodeReq)
}

void PkgUserCheckInvitionCodeReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  gettype_ = 0;
  invitioncode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserCheckInvitionCodeReq::~PkgUserCheckInvitionCodeReq() {
  // @@protoc_insertion_point(destructor:comm.PkgUserCheckInvitionCodeReq)
  SharedDtor();
}

void PkgUserCheckInvitionCodeReq::SharedDtor() {
  invitioncode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgUserCheckInvitionCodeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserCheckInvitionCodeReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserCheckInvitionCodeReq_descriptor_;
}

const PkgUserCheckInvitionCodeReq& PkgUserCheckInvitionCodeReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgUserCheckInvitionCodeReq* PkgUserCheckInvitionCodeReq::default_instance_ = NULL;

PkgUserCheckInvitionCodeReq* PkgUserCheckInvitionCodeReq::New(::google::protobuf::Arena* arena) const {
  PkgUserCheckInvitionCodeReq* n = new PkgUserCheckInvitionCodeReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserCheckInvitionCodeReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    gettype_ = 0;
    if (has_invitioncode()) {
      invitioncode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserCheckInvitionCodeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgUserCheckInvitionCodeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::comm::EnGetType_IsValid(value)) {
            set_gettype(static_cast< ::comm::EnGetType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_invitioncode;
        break;
      }

      // optional string invitioncode = 2;
      case 2: {
        if (tag == 18) {
         parse_invitioncode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_invitioncode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->invitioncode().data(), this->invitioncode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserCheckInvitionCodeReq.invitioncode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgUserCheckInvitionCodeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgUserCheckInvitionCodeReq)
  return false;
#undef DO_
}

void PkgUserCheckInvitionCodeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgUserCheckInvitionCodeReq)
  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  if (has_gettype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->gettype(), output);
  }

  // optional string invitioncode = 2;
  if (has_invitioncode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->invitioncode().data(), this->invitioncode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCheckInvitionCodeReq.invitioncode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->invitioncode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgUserCheckInvitionCodeReq)
}

::google::protobuf::uint8* PkgUserCheckInvitionCodeReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgUserCheckInvitionCodeReq)
  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  if (has_gettype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->gettype(), target);
  }

  // optional string invitioncode = 2;
  if (has_invitioncode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->invitioncode().data(), this->invitioncode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCheckInvitionCodeReq.invitioncode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->invitioncode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgUserCheckInvitionCodeReq)
  return target;
}

int PkgUserCheckInvitionCodeReq::ByteSize() const {
  int total_size = 0;

  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  if (has_gettype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gettype());
  }
  // optional string invitioncode = 2;
  if (has_invitioncode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->invitioncode());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserCheckInvitionCodeReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserCheckInvitionCodeReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserCheckInvitionCodeReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserCheckInvitionCodeReq::MergeFrom(const PkgUserCheckInvitionCodeReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gettype()) {
      set_gettype(from.gettype());
    }
    if (from.has_invitioncode()) {
      set_has_invitioncode();
      invitioncode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.invitioncode_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserCheckInvitionCodeReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserCheckInvitionCodeReq::CopyFrom(const PkgUserCheckInvitionCodeReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserCheckInvitionCodeReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgUserCheckInvitionCodeReq::Swap(PkgUserCheckInvitionCodeReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserCheckInvitionCodeReq::InternalSwap(PkgUserCheckInvitionCodeReq* other) {
  std::swap(gettype_, other->gettype_);
  invitioncode_.Swap(&other->invitioncode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserCheckInvitionCodeReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserCheckInvitionCodeReq_descriptor_;
  metadata.reflection = PkgUserCheckInvitionCodeReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgUserCheckInvitionCodeReply::kIssuccessFieldNumber;
const int PkgUserCheckInvitionCodeReply::kErrFieldNumber;
const int PkgUserCheckInvitionCodeReply::kPhonenumberFieldNumber;
const int PkgUserCheckInvitionCodeReply::kEmailaddressFieldNumber;
#endif  // !_MSC_VER

PkgUserCheckInvitionCodeReply::PkgUserCheckInvitionCodeReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgUserCheckInvitionCodeReply)
}

void PkgUserCheckInvitionCodeReply::InitAsDefaultInstance() {
}

PkgUserCheckInvitionCodeReply::PkgUserCheckInvitionCodeReply(const PkgUserCheckInvitionCodeReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgUserCheckInvitionCodeReply)
}

void PkgUserCheckInvitionCodeReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = true;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emailaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserCheckInvitionCodeReply::~PkgUserCheckInvitionCodeReply() {
  // @@protoc_insertion_point(destructor:comm.PkgUserCheckInvitionCodeReply)
  SharedDtor();
}

void PkgUserCheckInvitionCodeReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emailaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgUserCheckInvitionCodeReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserCheckInvitionCodeReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserCheckInvitionCodeReply_descriptor_;
}

const PkgUserCheckInvitionCodeReply& PkgUserCheckInvitionCodeReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgUserCheckInvitionCodeReply* PkgUserCheckInvitionCodeReply::default_instance_ = NULL;

PkgUserCheckInvitionCodeReply* PkgUserCheckInvitionCodeReply::New(::google::protobuf::Arena* arena) const {
  PkgUserCheckInvitionCodeReply* n = new PkgUserCheckInvitionCodeReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserCheckInvitionCodeReply::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    issuccess_ = true;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_phonenumber()) {
      phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_emailaddress()) {
      emailaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserCheckInvitionCodeReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgUserCheckInvitionCodeReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1 [default = true];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserCheckInvitionCodeReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_phonenumber;
        break;
      }

      // optional string phonenumber = 3;
      case 3: {
        if (tag == 26) {
         parse_phonenumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonenumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phonenumber().data(), this->phonenumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserCheckInvitionCodeReply.phonenumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_emailaddress;
        break;
      }

      // optional string emailaddress = 4;
      case 4: {
        if (tag == 34) {
         parse_emailaddress:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_emailaddress()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->emailaddress().data(), this->emailaddress().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserCheckInvitionCodeReply.emailaddress");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgUserCheckInvitionCodeReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgUserCheckInvitionCodeReply)
  return false;
#undef DO_
}

void PkgUserCheckInvitionCodeReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgUserCheckInvitionCodeReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCheckInvitionCodeReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  // optional string phonenumber = 3;
  if (has_phonenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCheckInvitionCodeReply.phonenumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->phonenumber(), output);
  }

  // optional string emailaddress = 4;
  if (has_emailaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emailaddress().data(), this->emailaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCheckInvitionCodeReply.emailaddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->emailaddress(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgUserCheckInvitionCodeReply)
}

::google::protobuf::uint8* PkgUserCheckInvitionCodeReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgUserCheckInvitionCodeReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCheckInvitionCodeReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  // optional string phonenumber = 3;
  if (has_phonenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCheckInvitionCodeReply.phonenumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->phonenumber(), target);
  }

  // optional string emailaddress = 4;
  if (has_emailaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emailaddress().data(), this->emailaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCheckInvitionCodeReply.emailaddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->emailaddress(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgUserCheckInvitionCodeReply)
  return target;
}

int PkgUserCheckInvitionCodeReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  if (_has_bits_[1 / 32] & 14) {
    // optional string err = 2;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->err());
    }

    // optional string phonenumber = 3;
    if (has_phonenumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phonenumber());
    }

    // optional string emailaddress = 4;
    if (has_emailaddress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->emailaddress());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserCheckInvitionCodeReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserCheckInvitionCodeReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserCheckInvitionCodeReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserCheckInvitionCodeReply::MergeFrom(const PkgUserCheckInvitionCodeReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
    if (from.has_phonenumber()) {
      set_has_phonenumber();
      phonenumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenumber_);
    }
    if (from.has_emailaddress()) {
      set_has_emailaddress();
      emailaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.emailaddress_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserCheckInvitionCodeReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserCheckInvitionCodeReply::CopyFrom(const PkgUserCheckInvitionCodeReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserCheckInvitionCodeReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgUserCheckInvitionCodeReply::Swap(PkgUserCheckInvitionCodeReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserCheckInvitionCodeReply::InternalSwap(PkgUserCheckInvitionCodeReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  phonenumber_.Swap(&other->phonenumber_);
  emailaddress_.Swap(&other->emailaddress_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserCheckInvitionCodeReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserCheckInvitionCodeReply_descriptor_;
  metadata.reflection = PkgUserCheckInvitionCodeReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgUserGetAuthReq::kGettypeFieldNumber;
const int PkgUserGetAuthReq::kPhonenumberFieldNumber;
const int PkgUserGetAuthReq::kEmailaddressFieldNumber;
#endif  // !_MSC_VER

PkgUserGetAuthReq::PkgUserGetAuthReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgUserGetAuthReq)
}

void PkgUserGetAuthReq::InitAsDefaultInstance() {
}

PkgUserGetAuthReq::PkgUserGetAuthReq(const PkgUserGetAuthReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgUserGetAuthReq)
}

void PkgUserGetAuthReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  gettype_ = 0;
  phonenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emailaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserGetAuthReq::~PkgUserGetAuthReq() {
  // @@protoc_insertion_point(destructor:comm.PkgUserGetAuthReq)
  SharedDtor();
}

void PkgUserGetAuthReq::SharedDtor() {
  phonenumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emailaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgUserGetAuthReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserGetAuthReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserGetAuthReq_descriptor_;
}

const PkgUserGetAuthReq& PkgUserGetAuthReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgUserGetAuthReq* PkgUserGetAuthReq::default_instance_ = NULL;

PkgUserGetAuthReq* PkgUserGetAuthReq::New(::google::protobuf::Arena* arena) const {
  PkgUserGetAuthReq* n = new PkgUserGetAuthReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserGetAuthReq::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    gettype_ = 0;
    if (has_phonenumber()) {
      phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_emailaddress()) {
      emailaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserGetAuthReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgUserGetAuthReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::comm::EnGetType_IsValid(value)) {
            set_gettype(static_cast< ::comm::EnGetType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_phonenumber;
        break;
      }

      // optional string phonenumber = 3;
      case 3: {
        if (tag == 26) {
         parse_phonenumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonenumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phonenumber().data(), this->phonenumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserGetAuthReq.phonenumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_emailaddress;
        break;
      }

      // optional string emailaddress = 4;
      case 4: {
        if (tag == 34) {
         parse_emailaddress:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_emailaddress()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->emailaddress().data(), this->emailaddress().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserGetAuthReq.emailaddress");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgUserGetAuthReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgUserGetAuthReq)
  return false;
#undef DO_
}

void PkgUserGetAuthReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgUserGetAuthReq)
  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  if (has_gettype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->gettype(), output);
  }

  // optional string phonenumber = 3;
  if (has_phonenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserGetAuthReq.phonenumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->phonenumber(), output);
  }

  // optional string emailaddress = 4;
  if (has_emailaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emailaddress().data(), this->emailaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserGetAuthReq.emailaddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->emailaddress(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgUserGetAuthReq)
}

::google::protobuf::uint8* PkgUserGetAuthReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgUserGetAuthReq)
  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  if (has_gettype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->gettype(), target);
  }

  // optional string phonenumber = 3;
  if (has_phonenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserGetAuthReq.phonenumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->phonenumber(), target);
  }

  // optional string emailaddress = 4;
  if (has_emailaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emailaddress().data(), this->emailaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserGetAuthReq.emailaddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->emailaddress(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgUserGetAuthReq)
  return target;
}

int PkgUserGetAuthReq::ByteSize() const {
  int total_size = 0;

  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  if (has_gettype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gettype());
  }
  if (_has_bits_[1 / 32] & 6) {
    // optional string phonenumber = 3;
    if (has_phonenumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phonenumber());
    }

    // optional string emailaddress = 4;
    if (has_emailaddress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->emailaddress());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserGetAuthReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserGetAuthReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserGetAuthReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserGetAuthReq::MergeFrom(const PkgUserGetAuthReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gettype()) {
      set_gettype(from.gettype());
    }
    if (from.has_phonenumber()) {
      set_has_phonenumber();
      phonenumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenumber_);
    }
    if (from.has_emailaddress()) {
      set_has_emailaddress();
      emailaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.emailaddress_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserGetAuthReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserGetAuthReq::CopyFrom(const PkgUserGetAuthReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserGetAuthReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgUserGetAuthReq::Swap(PkgUserGetAuthReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserGetAuthReq::InternalSwap(PkgUserGetAuthReq* other) {
  std::swap(gettype_, other->gettype_);
  phonenumber_.Swap(&other->phonenumber_);
  emailaddress_.Swap(&other->emailaddress_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserGetAuthReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserGetAuthReq_descriptor_;
  metadata.reflection = PkgUserGetAuthReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgUserGetAuthReply::kIssuccessFieldNumber;
const int PkgUserGetAuthReply::kErrFieldNumber;
#endif  // !_MSC_VER

PkgUserGetAuthReply::PkgUserGetAuthReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgUserGetAuthReply)
}

void PkgUserGetAuthReply::InitAsDefaultInstance() {
}

PkgUserGetAuthReply::PkgUserGetAuthReply(const PkgUserGetAuthReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgUserGetAuthReply)
}

void PkgUserGetAuthReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = true;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserGetAuthReply::~PkgUserGetAuthReply() {
  // @@protoc_insertion_point(destructor:comm.PkgUserGetAuthReply)
  SharedDtor();
}

void PkgUserGetAuthReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgUserGetAuthReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserGetAuthReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserGetAuthReply_descriptor_;
}

const PkgUserGetAuthReply& PkgUserGetAuthReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgUserGetAuthReply* PkgUserGetAuthReply::default_instance_ = NULL;

PkgUserGetAuthReply* PkgUserGetAuthReply::New(::google::protobuf::Arena* arena) const {
  PkgUserGetAuthReply* n = new PkgUserGetAuthReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserGetAuthReply::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    issuccess_ = true;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserGetAuthReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgUserGetAuthReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1 [default = true];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserGetAuthReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgUserGetAuthReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgUserGetAuthReply)
  return false;
#undef DO_
}

void PkgUserGetAuthReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgUserGetAuthReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserGetAuthReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgUserGetAuthReply)
}

::google::protobuf::uint8* PkgUserGetAuthReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgUserGetAuthReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserGetAuthReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgUserGetAuthReply)
  return target;
}

int PkgUserGetAuthReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  // optional string err = 2;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserGetAuthReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserGetAuthReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserGetAuthReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserGetAuthReply::MergeFrom(const PkgUserGetAuthReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserGetAuthReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserGetAuthReply::CopyFrom(const PkgUserGetAuthReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserGetAuthReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgUserGetAuthReply::Swap(PkgUserGetAuthReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserGetAuthReply::InternalSwap(PkgUserGetAuthReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserGetAuthReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserGetAuthReply_descriptor_;
  metadata.reflection = PkgUserGetAuthReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgUserCreateReq::kGettypeFieldNumber;
const int PkgUserCreateReq::kPhonenumberFieldNumber;
const int PkgUserCreateReq::kEmailaddressFieldNumber;
const int PkgUserCreateReq::kAuthcodeFieldNumber;
const int PkgUserCreateReq::kInvitioncodeFieldNumber;
#endif  // !_MSC_VER

PkgUserCreateReq::PkgUserCreateReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgUserCreateReq)
}

void PkgUserCreateReq::InitAsDefaultInstance() {
}

PkgUserCreateReq::PkgUserCreateReq(const PkgUserCreateReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgUserCreateReq)
}

void PkgUserCreateReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  gettype_ = 0;
  phonenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emailaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invitioncode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserCreateReq::~PkgUserCreateReq() {
  // @@protoc_insertion_point(destructor:comm.PkgUserCreateReq)
  SharedDtor();
}

void PkgUserCreateReq::SharedDtor() {
  phonenumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emailaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invitioncode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgUserCreateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserCreateReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserCreateReq_descriptor_;
}

const PkgUserCreateReq& PkgUserCreateReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgUserCreateReq* PkgUserCreateReq::default_instance_ = NULL;

PkgUserCreateReq* PkgUserCreateReq::New(::google::protobuf::Arena* arena) const {
  PkgUserCreateReq* n = new PkgUserCreateReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserCreateReq::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    gettype_ = 0;
    if (has_phonenumber()) {
      phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_emailaddress()) {
      emailaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_authcode()) {
      authcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_invitioncode()) {
      invitioncode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserCreateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgUserCreateReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::comm::EnGetType_IsValid(value)) {
            set_gettype(static_cast< ::comm::EnGetType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_phonenumber;
        break;
      }

      // optional string phonenumber = 2;
      case 2: {
        if (tag == 18) {
         parse_phonenumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonenumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phonenumber().data(), this->phonenumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserCreateReq.phonenumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_emailaddress;
        break;
      }

      // optional string emailaddress = 3;
      case 3: {
        if (tag == 26) {
         parse_emailaddress:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_emailaddress()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->emailaddress().data(), this->emailaddress().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserCreateReq.emailaddress");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_authcode;
        break;
      }

      // optional string authcode = 4;
      case 4: {
        if (tag == 34) {
         parse_authcode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_authcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->authcode().data(), this->authcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserCreateReq.authcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_invitioncode;
        break;
      }

      // optional string invitioncode = 5;
      case 5: {
        if (tag == 42) {
         parse_invitioncode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_invitioncode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->invitioncode().data(), this->invitioncode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserCreateReq.invitioncode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgUserCreateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgUserCreateReq)
  return false;
#undef DO_
}

void PkgUserCreateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgUserCreateReq)
  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  if (has_gettype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->gettype(), output);
  }

  // optional string phonenumber = 2;
  if (has_phonenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCreateReq.phonenumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->phonenumber(), output);
  }

  // optional string emailaddress = 3;
  if (has_emailaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emailaddress().data(), this->emailaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCreateReq.emailaddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->emailaddress(), output);
  }

  // optional string authcode = 4;
  if (has_authcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->authcode().data(), this->authcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCreateReq.authcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->authcode(), output);
  }

  // optional string invitioncode = 5;
  if (has_invitioncode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->invitioncode().data(), this->invitioncode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCreateReq.invitioncode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->invitioncode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgUserCreateReq)
}

::google::protobuf::uint8* PkgUserCreateReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgUserCreateReq)
  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  if (has_gettype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->gettype(), target);
  }

  // optional string phonenumber = 2;
  if (has_phonenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCreateReq.phonenumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->phonenumber(), target);
  }

  // optional string emailaddress = 3;
  if (has_emailaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emailaddress().data(), this->emailaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCreateReq.emailaddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->emailaddress(), target);
  }

  // optional string authcode = 4;
  if (has_authcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->authcode().data(), this->authcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCreateReq.authcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->authcode(), target);
  }

  // optional string invitioncode = 5;
  if (has_invitioncode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->invitioncode().data(), this->invitioncode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCreateReq.invitioncode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->invitioncode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgUserCreateReq)
  return target;
}

int PkgUserCreateReq::ByteSize() const {
  int total_size = 0;

  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  if (has_gettype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gettype());
  }
  if (_has_bits_[1 / 32] & 30) {
    // optional string phonenumber = 2;
    if (has_phonenumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phonenumber());
    }

    // optional string emailaddress = 3;
    if (has_emailaddress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->emailaddress());
    }

    // optional string authcode = 4;
    if (has_authcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->authcode());
    }

    // optional string invitioncode = 5;
    if (has_invitioncode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->invitioncode());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserCreateReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserCreateReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserCreateReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserCreateReq::MergeFrom(const PkgUserCreateReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gettype()) {
      set_gettype(from.gettype());
    }
    if (from.has_phonenumber()) {
      set_has_phonenumber();
      phonenumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenumber_);
    }
    if (from.has_emailaddress()) {
      set_has_emailaddress();
      emailaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.emailaddress_);
    }
    if (from.has_authcode()) {
      set_has_authcode();
      authcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authcode_);
    }
    if (from.has_invitioncode()) {
      set_has_invitioncode();
      invitioncode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.invitioncode_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserCreateReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserCreateReq::CopyFrom(const PkgUserCreateReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserCreateReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgUserCreateReq::Swap(PkgUserCreateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserCreateReq::InternalSwap(PkgUserCreateReq* other) {
  std::swap(gettype_, other->gettype_);
  phonenumber_.Swap(&other->phonenumber_);
  emailaddress_.Swap(&other->emailaddress_);
  authcode_.Swap(&other->authcode_);
  invitioncode_.Swap(&other->invitioncode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserCreateReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserCreateReq_descriptor_;
  metadata.reflection = PkgUserCreateReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgUserCreateReply::kIssuccessFieldNumber;
const int PkgUserCreateReply::kErrFieldNumber;
const int PkgUserCreateReply::kUseridFieldNumber;
const int PkgUserCreateReply::kRealnameFieldNumber;
#endif  // !_MSC_VER

PkgUserCreateReply::PkgUserCreateReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgUserCreateReply)
}

void PkgUserCreateReply::InitAsDefaultInstance() {
}

PkgUserCreateReply::PkgUserCreateReply(const PkgUserCreateReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgUserCreateReply)
}

void PkgUserCreateReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = true;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = 0;
  realname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserCreateReply::~PkgUserCreateReply() {
  // @@protoc_insertion_point(destructor:comm.PkgUserCreateReply)
  SharedDtor();
}

void PkgUserCreateReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  realname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgUserCreateReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserCreateReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserCreateReply_descriptor_;
}

const PkgUserCreateReply& PkgUserCreateReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgUserCreateReply* PkgUserCreateReply::default_instance_ = NULL;

PkgUserCreateReply* PkgUserCreateReply::New(::google::protobuf::Arena* arena) const {
  PkgUserCreateReply* n = new PkgUserCreateReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserCreateReply::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    issuccess_ = true;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    userid_ = 0;
    if (has_realname()) {
      realname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserCreateReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgUserCreateReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1 [default = true];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserCreateReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_userid;
        break;
      }

      // optional int32 userid = 3;
      case 3: {
        if (tag == 24) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
          set_has_userid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_realname;
        break;
      }

      // optional string realname = 11;
      case 11: {
        if (tag == 90) {
         parse_realname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_realname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->realname().data(), this->realname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserCreateReply.realname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgUserCreateReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgUserCreateReply)
  return false;
#undef DO_
}

void PkgUserCreateReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgUserCreateReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCreateReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  // optional int32 userid = 3;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->userid(), output);
  }

  // optional string realname = 11;
  if (has_realname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->realname().data(), this->realname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCreateReply.realname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->realname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgUserCreateReply)
}

::google::protobuf::uint8* PkgUserCreateReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgUserCreateReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCreateReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  // optional int32 userid = 3;
  if (has_userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->userid(), target);
  }

  // optional string realname = 11;
  if (has_realname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->realname().data(), this->realname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCreateReply.realname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->realname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgUserCreateReply)
  return target;
}

int PkgUserCreateReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  if (_has_bits_[1 / 32] & 14) {
    // optional string err = 2;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->err());
    }

    // optional int32 userid = 3;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional string realname = 11;
    if (has_realname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->realname());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserCreateReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserCreateReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserCreateReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserCreateReply::MergeFrom(const PkgUserCreateReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
    if (from.has_userid()) {
      set_userid(from.userid());
    }
    if (from.has_realname()) {
      set_has_realname();
      realname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.realname_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserCreateReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserCreateReply::CopyFrom(const PkgUserCreateReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserCreateReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgUserCreateReply::Swap(PkgUserCreateReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserCreateReply::InternalSwap(PkgUserCreateReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  std::swap(userid_, other->userid_);
  realname_.Swap(&other->realname_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserCreateReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserCreateReply_descriptor_;
  metadata.reflection = PkgUserCreateReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgUserLoginReq::kGettypeFieldNumber;
const int PkgUserLoginReq::kUseridFieldNumber;
const int PkgUserLoginReq::kPhonenumberFieldNumber;
const int PkgUserLoginReq::kEmailaddressFieldNumber;
const int PkgUserLoginReq::kUsernameFieldNumber;
const int PkgUserLoginReq::kPasswordFieldNumber;
const int PkgUserLoginReq::kHashedserversnFieldNumber;
#endif  // !_MSC_VER

PkgUserLoginReq::PkgUserLoginReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgUserLoginReq)
}

void PkgUserLoginReq::InitAsDefaultInstance() {
}

PkgUserLoginReq::PkgUserLoginReq(const PkgUserLoginReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgUserLoginReq)
}

void PkgUserLoginReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  gettype_ = 0;
  userid_ = 0;
  phonenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emailaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashedserversn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserLoginReq::~PkgUserLoginReq() {
  // @@protoc_insertion_point(destructor:comm.PkgUserLoginReq)
  SharedDtor();
}

void PkgUserLoginReq::SharedDtor() {
  phonenumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emailaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashedserversn_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgUserLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserLoginReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserLoginReq_descriptor_;
}

const PkgUserLoginReq& PkgUserLoginReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgUserLoginReq* PkgUserLoginReq::default_instance_ = NULL;

PkgUserLoginReq* PkgUserLoginReq::New(::google::protobuf::Arena* arena) const {
  PkgUserLoginReq* n = new PkgUserLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserLoginReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgUserLoginReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(gettype_, userid_);
    if (has_phonenumber()) {
      phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_emailaddress()) {
      emailaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_username()) {
      username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_password()) {
      password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_hashedserversn()) {
      hashedserversn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgUserLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::comm::EnGetType_IsValid(value)) {
            set_gettype(static_cast< ::comm::EnGetType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userid;
        break;
      }

      // optional int32 userid = 2;
      case 2: {
        if (tag == 16) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
          set_has_userid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_phonenumber;
        break;
      }

      // optional string phonenumber = 3;
      case 3: {
        if (tag == 26) {
         parse_phonenumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonenumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phonenumber().data(), this->phonenumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserLoginReq.phonenumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_emailaddress;
        break;
      }

      // optional string emailaddress = 4;
      case 4: {
        if (tag == 34) {
         parse_emailaddress:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_emailaddress()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->emailaddress().data(), this->emailaddress().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserLoginReq.emailaddress");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_username;
        break;
      }

      // optional string username = 5;
      case 5: {
        if (tag == 42) {
         parse_username:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserLoginReq.username");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_password;
        break;
      }

      // required string password = 10;
      case 10: {
        if (tag == 82) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserLoginReq.password");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(802)) goto parse_hashedserversn;
        break;
      }

      // optional string hashedserversn = 100;
      case 100: {
        if (tag == 802) {
         parse_hashedserversn:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hashedserversn()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hashedserversn().data(), this->hashedserversn().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserLoginReq.hashedserversn");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgUserLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgUserLoginReq)
  return false;
#undef DO_
}

void PkgUserLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgUserLoginReq)
  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  if (has_gettype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->gettype(), output);
  }

  // optional int32 userid = 2;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->userid(), output);
  }

  // optional string phonenumber = 3;
  if (has_phonenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserLoginReq.phonenumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->phonenumber(), output);
  }

  // optional string emailaddress = 4;
  if (has_emailaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emailaddress().data(), this->emailaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserLoginReq.emailaddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->emailaddress(), output);
  }

  // optional string username = 5;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserLoginReq.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->username(), output);
  }

  // required string password = 10;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserLoginReq.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->password(), output);
  }

  // optional string hashedserversn = 100;
  if (has_hashedserversn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hashedserversn().data(), this->hashedserversn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserLoginReq.hashedserversn");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      100, this->hashedserversn(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgUserLoginReq)
}

::google::protobuf::uint8* PkgUserLoginReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgUserLoginReq)
  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  if (has_gettype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->gettype(), target);
  }

  // optional int32 userid = 2;
  if (has_userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->userid(), target);
  }

  // optional string phonenumber = 3;
  if (has_phonenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserLoginReq.phonenumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->phonenumber(), target);
  }

  // optional string emailaddress = 4;
  if (has_emailaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emailaddress().data(), this->emailaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserLoginReq.emailaddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->emailaddress(), target);
  }

  // optional string username = 5;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserLoginReq.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->username(), target);
  }

  // required string password = 10;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserLoginReq.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->password(), target);
  }

  // optional string hashedserversn = 100;
  if (has_hashedserversn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hashedserversn().data(), this->hashedserversn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserLoginReq.hashedserversn");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        100, this->hashedserversn(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgUserLoginReq)
  return target;
}

int PkgUserLoginReq::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_gettype()) {
    // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gettype());
  }

  if (has_password()) {
    // required string password = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  return total_size;
}
int PkgUserLoginReq::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000021) ^ 0x00000021) == 0) {  // All required fields are present.
    // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gettype());

    // required string password = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[1 / 32] & 94) {
    // optional int32 userid = 2;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional string phonenumber = 3;
    if (has_phonenumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phonenumber());
    }

    // optional string emailaddress = 4;
    if (has_emailaddress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->emailaddress());
    }

    // optional string username = 5;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional string hashedserversn = 100;
    if (has_hashedserversn()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hashedserversn());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserLoginReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserLoginReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserLoginReq::MergeFrom(const PkgUserLoginReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gettype()) {
      set_gettype(from.gettype());
    }
    if (from.has_userid()) {
      set_userid(from.userid());
    }
    if (from.has_phonenumber()) {
      set_has_phonenumber();
      phonenumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenumber_);
    }
    if (from.has_emailaddress()) {
      set_has_emailaddress();
      emailaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.emailaddress_);
    }
    if (from.has_username()) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (from.has_password()) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (from.has_hashedserversn()) {
      set_has_hashedserversn();
      hashedserversn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hashedserversn_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserLoginReq::CopyFrom(const PkgUserLoginReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserLoginReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000021) != 0x00000021) return false;

  return true;
}

void PkgUserLoginReq::Swap(PkgUserLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserLoginReq::InternalSwap(PkgUserLoginReq* other) {
  std::swap(gettype_, other->gettype_);
  std::swap(userid_, other->userid_);
  phonenumber_.Swap(&other->phonenumber_);
  emailaddress_.Swap(&other->emailaddress_);
  username_.Swap(&other->username_);
  password_.Swap(&other->password_);
  hashedserversn_.Swap(&other->hashedserversn_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserLoginReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserLoginReq_descriptor_;
  metadata.reflection = PkgUserLoginReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgCompanyInfo::kCompanyidFieldNumber;
const int PkgCompanyInfo::kCompanynameFieldNumber;
const int PkgCompanyInfo::kCompanyusernumberFieldNumber;
const int PkgCompanyInfo::kCompanycreatetimeFieldNumber;
#endif  // !_MSC_VER

PkgCompanyInfo::PkgCompanyInfo()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgCompanyInfo)
}

void PkgCompanyInfo::InitAsDefaultInstance() {
}

PkgCompanyInfo::PkgCompanyInfo(const PkgCompanyInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgCompanyInfo)
}

void PkgCompanyInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  companyid_ = 0;
  companyname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  companyusernumber_ = 0;
  companycreatetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgCompanyInfo::~PkgCompanyInfo() {
  // @@protoc_insertion_point(destructor:comm.PkgCompanyInfo)
  SharedDtor();
}

void PkgCompanyInfo::SharedDtor() {
  companyname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  companycreatetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgCompanyInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgCompanyInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgCompanyInfo_descriptor_;
}

const PkgCompanyInfo& PkgCompanyInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgCompanyInfo* PkgCompanyInfo::default_instance_ = NULL;

PkgCompanyInfo* PkgCompanyInfo::New(::google::protobuf::Arena* arena) const {
  PkgCompanyInfo* n = new PkgCompanyInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgCompanyInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgCompanyInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(companyid_, companyusernumber_);
    if (has_companyname()) {
      companyname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_companycreatetime()) {
      companycreatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgCompanyInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgCompanyInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 companyid = 16 [default = 0];
      case 16: {
        if (tag == 128) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &companyid_)));
          set_has_companyid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_companyname;
        break;
      }

      // optional string companyname = 17;
      case 17: {
        if (tag == 138) {
         parse_companyname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_companyname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->companyname().data(), this->companyname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgCompanyInfo.companyname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_companyusernumber;
        break;
      }

      // optional int32 companyusernumber = 18;
      case 18: {
        if (tag == 144) {
         parse_companyusernumber:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &companyusernumber_)));
          set_has_companyusernumber();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_companycreatetime;
        break;
      }

      // optional string companycreatetime = 21;
      case 21: {
        if (tag == 170) {
         parse_companycreatetime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_companycreatetime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->companycreatetime().data(), this->companycreatetime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgCompanyInfo.companycreatetime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgCompanyInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgCompanyInfo)
  return false;
#undef DO_
}

void PkgCompanyInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgCompanyInfo)
  // optional int32 companyid = 16 [default = 0];
  if (has_companyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->companyid(), output);
  }

  // optional string companyname = 17;
  if (has_companyname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->companyname().data(), this->companyname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgCompanyInfo.companyname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->companyname(), output);
  }

  // optional int32 companyusernumber = 18;
  if (has_companyusernumber()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->companyusernumber(), output);
  }

  // optional string companycreatetime = 21;
  if (has_companycreatetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->companycreatetime().data(), this->companycreatetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgCompanyInfo.companycreatetime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->companycreatetime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgCompanyInfo)
}

::google::protobuf::uint8* PkgCompanyInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgCompanyInfo)
  // optional int32 companyid = 16 [default = 0];
  if (has_companyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->companyid(), target);
  }

  // optional string companyname = 17;
  if (has_companyname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->companyname().data(), this->companyname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgCompanyInfo.companyname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->companyname(), target);
  }

  // optional int32 companyusernumber = 18;
  if (has_companyusernumber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->companyusernumber(), target);
  }

  // optional string companycreatetime = 21;
  if (has_companycreatetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->companycreatetime().data(), this->companycreatetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgCompanyInfo.companycreatetime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->companycreatetime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgCompanyInfo)
  return target;
}

int PkgCompanyInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15) {
    // optional int32 companyid = 16 [default = 0];
    if (has_companyid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->companyid());
    }

    // optional string companyname = 17;
    if (has_companyname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->companyname());
    }

    // optional int32 companyusernumber = 18;
    if (has_companyusernumber()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->companyusernumber());
    }

    // optional string companycreatetime = 21;
    if (has_companycreatetime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->companycreatetime());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgCompanyInfo::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgCompanyInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgCompanyInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgCompanyInfo::MergeFrom(const PkgCompanyInfo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_companyid()) {
      set_companyid(from.companyid());
    }
    if (from.has_companyname()) {
      set_has_companyname();
      companyname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.companyname_);
    }
    if (from.has_companyusernumber()) {
      set_companyusernumber(from.companyusernumber());
    }
    if (from.has_companycreatetime()) {
      set_has_companycreatetime();
      companycreatetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.companycreatetime_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgCompanyInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgCompanyInfo::CopyFrom(const PkgCompanyInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgCompanyInfo::IsInitialized() const {

  return true;
}

void PkgCompanyInfo::Swap(PkgCompanyInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgCompanyInfo::InternalSwap(PkgCompanyInfo* other) {
  std::swap(companyid_, other->companyid_);
  companyname_.Swap(&other->companyname_);
  std::swap(companyusernumber_, other->companyusernumber_);
  companycreatetime_.Swap(&other->companycreatetime_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgCompanyInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgCompanyInfo_descriptor_;
  metadata.reflection = PkgCompanyInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgUserLoginReply::kIssuccessFieldNumber;
const int PkgUserLoginReply::kErrFieldNumber;
const int PkgUserLoginReply::kUseridFieldNumber;
const int PkgUserLoginReply::kUsernameFieldNumber;
const int PkgUserLoginReply::kRealnameFieldNumber;
const int PkgUserLoginReply::kPhonenumberFieldNumber;
const int PkgUserLoginReply::kEmailaddressFieldNumber;
const int PkgUserLoginReply::kIsloginsuccessFieldNumber;
const int PkgUserLoginReply::kPermissionFieldNumber;
const int PkgUserLoginReply::kCompanyidFieldNumber;
const int PkgUserLoginReply::kCompanynameFieldNumber;
const int PkgUserLoginReply::kCompanyusernumberFieldNumber;
const int PkgUserLoginReply::kCreatetimeFieldNumber;
const int PkgUserLoginReply::kRolenameFieldNumber;
const int PkgUserLoginReply::kCompanycreatetimeFieldNumber;
const int PkgUserLoginReply::kPermissionroleidFieldNumber;
const int PkgUserLoginReply::kCompanyinfoFieldNumber;
#endif  // !_MSC_VER

PkgUserLoginReply::PkgUserLoginReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgUserLoginReply)
}

void PkgUserLoginReply::InitAsDefaultInstance() {
  companyinfo_ = const_cast< ::comm::PkgCompanyInfo*>(&::comm::PkgCompanyInfo::default_instance());
}

PkgUserLoginReply::PkgUserLoginReply(const PkgUserLoginReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgUserLoginReply)
}

void PkgUserLoginReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = true;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  realname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emailaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isloginsuccess_ = false;
  permission_ = 0;
  companyid_ = 0;
  companyname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  companyusernumber_ = 0;
  createtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rolename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  companycreatetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permissionroleid_ = 0;
  companyinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserLoginReply::~PkgUserLoginReply() {
  // @@protoc_insertion_point(destructor:comm.PkgUserLoginReply)
  SharedDtor();
}

void PkgUserLoginReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  realname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emailaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  companyname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rolename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  companycreatetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete companyinfo_;
  }
}

void PkgUserLoginReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserLoginReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserLoginReply_descriptor_;
}

const PkgUserLoginReply& PkgUserLoginReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgUserLoginReply* PkgUserLoginReply::default_instance_ = NULL;

PkgUserLoginReply* PkgUserLoginReply::New(::google::protobuf::Arena* arena) const {
  PkgUserLoginReply* n = new PkgUserLoginReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserLoginReply::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgUserLoginReply*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    issuccess_ = true;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    userid_ = 0;
    if (has_username()) {
      username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_realname()) {
      realname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_phonenumber()) {
      phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_emailaddress()) {
      emailaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    isloginsuccess_ = false;
  }
  if (_has_bits_[8 / 32] & 65280) {
    ZR_(permission_, companyid_);
    ZR_(companyusernumber_, permissionroleid_);
    if (has_companyname()) {
      companyname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_createtime()) {
      createtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_rolename()) {
      rolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_companycreatetime()) {
      companycreatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (has_companyinfo()) {
    if (companyinfo_ != NULL) companyinfo_->::comm::PkgCompanyInfo::Clear();
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserLoginReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgUserLoginReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1 [default = true];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserLoginReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_userid;
        break;
      }

      // optional int32 userid = 3;
      case 3: {
        if (tag == 24) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
          set_has_userid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_username;
        break;
      }

      // optional string username = 10;
      case 10: {
        if (tag == 82) {
         parse_username:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserLoginReply.username");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_realname;
        break;
      }

      // optional string realname = 11;
      case 11: {
        if (tag == 90) {
         parse_realname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_realname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->realname().data(), this->realname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserLoginReply.realname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_phonenumber;
        break;
      }

      // optional string phonenumber = 12;
      case 12: {
        if (tag == 98) {
         parse_phonenumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonenumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phonenumber().data(), this->phonenumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserLoginReply.phonenumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_emailaddress;
        break;
      }

      // optional string emailaddress = 13;
      case 13: {
        if (tag == 106) {
         parse_emailaddress:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_emailaddress()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->emailaddress().data(), this->emailaddress().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserLoginReply.emailaddress");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_isloginsuccess;
        break;
      }

      // optional bool isloginsuccess = 14;
      case 14: {
        if (tag == 112) {
         parse_isloginsuccess:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isloginsuccess_)));
          set_has_isloginsuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_permission;
        break;
      }

      // optional int32 permission = 15;
      case 15: {
        if (tag == 120) {
         parse_permission:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &permission_)));
          set_has_permission();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_companyid;
        break;
      }

      // optional int32 companyid = 16 [default = 0];
      case 16: {
        if (tag == 128) {
         parse_companyid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &companyid_)));
          set_has_companyid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_companyname;
        break;
      }

      // optional string companyname = 17;
      case 17: {
        if (tag == 138) {
         parse_companyname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_companyname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->companyname().data(), this->companyname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserLoginReply.companyname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_companyusernumber;
        break;
      }

      // optional int32 companyusernumber = 18;
      case 18: {
        if (tag == 144) {
         parse_companyusernumber:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &companyusernumber_)));
          set_has_companyusernumber();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_createtime;
        break;
      }

      // optional string createtime = 19;
      case 19: {
        if (tag == 154) {
         parse_createtime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_createtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->createtime().data(), this->createtime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserLoginReply.createtime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_rolename;
        break;
      }

      // optional string rolename = 20;
      case 20: {
        if (tag == 162) {
         parse_rolename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rolename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rolename().data(), this->rolename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserLoginReply.rolename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_companycreatetime;
        break;
      }

      // optional string companycreatetime = 21;
      case 21: {
        if (tag == 170) {
         parse_companycreatetime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_companycreatetime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->companycreatetime().data(), this->companycreatetime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserLoginReply.companycreatetime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_permissionroleid;
        break;
      }

      // optional int32 permissionroleid = 22;
      case 22: {
        if (tag == 176) {
         parse_permissionroleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &permissionroleid_)));
          set_has_permissionroleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(802)) goto parse_companyinfo;
        break;
      }

      // optional .comm.PkgCompanyInfo companyinfo = 100;
      case 100: {
        if (tag == 802) {
         parse_companyinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_companyinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgUserLoginReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgUserLoginReply)
  return false;
#undef DO_
}

void PkgUserLoginReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgUserLoginReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserLoginReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  // optional int32 userid = 3;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->userid(), output);
  }

  // optional string username = 10;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserLoginReply.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->username(), output);
  }

  // optional string realname = 11;
  if (has_realname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->realname().data(), this->realname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserLoginReply.realname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->realname(), output);
  }

  // optional string phonenumber = 12;
  if (has_phonenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserLoginReply.phonenumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->phonenumber(), output);
  }

  // optional string emailaddress = 13;
  if (has_emailaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emailaddress().data(), this->emailaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserLoginReply.emailaddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->emailaddress(), output);
  }

  // optional bool isloginsuccess = 14;
  if (has_isloginsuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->isloginsuccess(), output);
  }

  // optional int32 permission = 15;
  if (has_permission()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->permission(), output);
  }

  // optional int32 companyid = 16 [default = 0];
  if (has_companyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->companyid(), output);
  }

  // optional string companyname = 17;
  if (has_companyname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->companyname().data(), this->companyname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserLoginReply.companyname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->companyname(), output);
  }

  // optional int32 companyusernumber = 18;
  if (has_companyusernumber()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->companyusernumber(), output);
  }

  // optional string createtime = 19;
  if (has_createtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createtime().data(), this->createtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserLoginReply.createtime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->createtime(), output);
  }

  // optional string rolename = 20;
  if (has_rolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserLoginReply.rolename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->rolename(), output);
  }

  // optional string companycreatetime = 21;
  if (has_companycreatetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->companycreatetime().data(), this->companycreatetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserLoginReply.companycreatetime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->companycreatetime(), output);
  }

  // optional int32 permissionroleid = 22;
  if (has_permissionroleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->permissionroleid(), output);
  }

  // optional .comm.PkgCompanyInfo companyinfo = 100;
  if (has_companyinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, *this->companyinfo_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgUserLoginReply)
}

::google::protobuf::uint8* PkgUserLoginReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgUserLoginReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserLoginReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  // optional int32 userid = 3;
  if (has_userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->userid(), target);
  }

  // optional string username = 10;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserLoginReply.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->username(), target);
  }

  // optional string realname = 11;
  if (has_realname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->realname().data(), this->realname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserLoginReply.realname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->realname(), target);
  }

  // optional string phonenumber = 12;
  if (has_phonenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserLoginReply.phonenumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->phonenumber(), target);
  }

  // optional string emailaddress = 13;
  if (has_emailaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emailaddress().data(), this->emailaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserLoginReply.emailaddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->emailaddress(), target);
  }

  // optional bool isloginsuccess = 14;
  if (has_isloginsuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->isloginsuccess(), target);
  }

  // optional int32 permission = 15;
  if (has_permission()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->permission(), target);
  }

  // optional int32 companyid = 16 [default = 0];
  if (has_companyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->companyid(), target);
  }

  // optional string companyname = 17;
  if (has_companyname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->companyname().data(), this->companyname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserLoginReply.companyname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->companyname(), target);
  }

  // optional int32 companyusernumber = 18;
  if (has_companyusernumber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->companyusernumber(), target);
  }

  // optional string createtime = 19;
  if (has_createtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createtime().data(), this->createtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserLoginReply.createtime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->createtime(), target);
  }

  // optional string rolename = 20;
  if (has_rolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserLoginReply.rolename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->rolename(), target);
  }

  // optional string companycreatetime = 21;
  if (has_companycreatetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->companycreatetime().data(), this->companycreatetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserLoginReply.companycreatetime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->companycreatetime(), target);
  }

  // optional int32 permissionroleid = 22;
  if (has_permissionroleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->permissionroleid(), target);
  }

  // optional .comm.PkgCompanyInfo companyinfo = 100;
  if (has_companyinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        100, *this->companyinfo_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgUserLoginReply)
  return target;
}

int PkgUserLoginReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  if (_has_bits_[1 / 32] & 254) {
    // optional string err = 2;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->err());
    }

    // optional int32 userid = 3;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional string username = 10;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional string realname = 11;
    if (has_realname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->realname());
    }

    // optional string phonenumber = 12;
    if (has_phonenumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phonenumber());
    }

    // optional string emailaddress = 13;
    if (has_emailaddress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->emailaddress());
    }

    // optional bool isloginsuccess = 14;
    if (has_isloginsuccess()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 65280) {
    // optional int32 permission = 15;
    if (has_permission()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->permission());
    }

    // optional int32 companyid = 16 [default = 0];
    if (has_companyid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->companyid());
    }

    // optional string companyname = 17;
    if (has_companyname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->companyname());
    }

    // optional int32 companyusernumber = 18;
    if (has_companyusernumber()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->companyusernumber());
    }

    // optional string createtime = 19;
    if (has_createtime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->createtime());
    }

    // optional string rolename = 20;
    if (has_rolename()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rolename());
    }

    // optional string companycreatetime = 21;
    if (has_companycreatetime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->companycreatetime());
    }

    // optional int32 permissionroleid = 22;
    if (has_permissionroleid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->permissionroleid());
    }

  }
  // optional .comm.PkgCompanyInfo companyinfo = 100;
  if (has_companyinfo()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->companyinfo_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserLoginReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserLoginReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserLoginReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserLoginReply::MergeFrom(const PkgUserLoginReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
    if (from.has_userid()) {
      set_userid(from.userid());
    }
    if (from.has_username()) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (from.has_realname()) {
      set_has_realname();
      realname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.realname_);
    }
    if (from.has_phonenumber()) {
      set_has_phonenumber();
      phonenumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenumber_);
    }
    if (from.has_emailaddress()) {
      set_has_emailaddress();
      emailaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.emailaddress_);
    }
    if (from.has_isloginsuccess()) {
      set_isloginsuccess(from.isloginsuccess());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_permission()) {
      set_permission(from.permission());
    }
    if (from.has_companyid()) {
      set_companyid(from.companyid());
    }
    if (from.has_companyname()) {
      set_has_companyname();
      companyname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.companyname_);
    }
    if (from.has_companyusernumber()) {
      set_companyusernumber(from.companyusernumber());
    }
    if (from.has_createtime()) {
      set_has_createtime();
      createtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.createtime_);
    }
    if (from.has_rolename()) {
      set_has_rolename();
      rolename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rolename_);
    }
    if (from.has_companycreatetime()) {
      set_has_companycreatetime();
      companycreatetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.companycreatetime_);
    }
    if (from.has_permissionroleid()) {
      set_permissionroleid(from.permissionroleid());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_companyinfo()) {
      mutable_companyinfo()->::comm::PkgCompanyInfo::MergeFrom(from.companyinfo());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserLoginReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserLoginReply::CopyFrom(const PkgUserLoginReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserLoginReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgUserLoginReply::Swap(PkgUserLoginReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserLoginReply::InternalSwap(PkgUserLoginReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  std::swap(userid_, other->userid_);
  username_.Swap(&other->username_);
  realname_.Swap(&other->realname_);
  phonenumber_.Swap(&other->phonenumber_);
  emailaddress_.Swap(&other->emailaddress_);
  std::swap(isloginsuccess_, other->isloginsuccess_);
  std::swap(permission_, other->permission_);
  std::swap(companyid_, other->companyid_);
  companyname_.Swap(&other->companyname_);
  std::swap(companyusernumber_, other->companyusernumber_);
  createtime_.Swap(&other->createtime_);
  rolename_.Swap(&other->rolename_);
  companycreatetime_.Swap(&other->companycreatetime_);
  std::swap(permissionroleid_, other->permissionroleid_);
  std::swap(companyinfo_, other->companyinfo_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserLoginReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserLoginReply_descriptor_;
  metadata.reflection = PkgUserLoginReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgUserGetPasswordReq::kGettypeFieldNumber;
const int PkgUserGetPasswordReq::kPhonenumberFieldNumber;
const int PkgUserGetPasswordReq::kEmailaddressFieldNumber;
#endif  // !_MSC_VER

PkgUserGetPasswordReq::PkgUserGetPasswordReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgUserGetPasswordReq)
}

void PkgUserGetPasswordReq::InitAsDefaultInstance() {
}

PkgUserGetPasswordReq::PkgUserGetPasswordReq(const PkgUserGetPasswordReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgUserGetPasswordReq)
}

void PkgUserGetPasswordReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  gettype_ = 0;
  phonenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emailaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserGetPasswordReq::~PkgUserGetPasswordReq() {
  // @@protoc_insertion_point(destructor:comm.PkgUserGetPasswordReq)
  SharedDtor();
}

void PkgUserGetPasswordReq::SharedDtor() {
  phonenumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emailaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgUserGetPasswordReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserGetPasswordReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserGetPasswordReq_descriptor_;
}

const PkgUserGetPasswordReq& PkgUserGetPasswordReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgUserGetPasswordReq* PkgUserGetPasswordReq::default_instance_ = NULL;

PkgUserGetPasswordReq* PkgUserGetPasswordReq::New(::google::protobuf::Arena* arena) const {
  PkgUserGetPasswordReq* n = new PkgUserGetPasswordReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserGetPasswordReq::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    gettype_ = 0;
    if (has_phonenumber()) {
      phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_emailaddress()) {
      emailaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserGetPasswordReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgUserGetPasswordReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::comm::EnGetType_IsValid(value)) {
            set_gettype(static_cast< ::comm::EnGetType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_phonenumber;
        break;
      }

      // optional string phonenumber = 2;
      case 2: {
        if (tag == 18) {
         parse_phonenumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonenumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phonenumber().data(), this->phonenumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserGetPasswordReq.phonenumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_emailaddress;
        break;
      }

      // optional string emailaddress = 3;
      case 3: {
        if (tag == 26) {
         parse_emailaddress:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_emailaddress()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->emailaddress().data(), this->emailaddress().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserGetPasswordReq.emailaddress");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgUserGetPasswordReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgUserGetPasswordReq)
  return false;
#undef DO_
}

void PkgUserGetPasswordReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgUserGetPasswordReq)
  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  if (has_gettype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->gettype(), output);
  }

  // optional string phonenumber = 2;
  if (has_phonenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserGetPasswordReq.phonenumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->phonenumber(), output);
  }

  // optional string emailaddress = 3;
  if (has_emailaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emailaddress().data(), this->emailaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserGetPasswordReq.emailaddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->emailaddress(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgUserGetPasswordReq)
}

::google::protobuf::uint8* PkgUserGetPasswordReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgUserGetPasswordReq)
  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  if (has_gettype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->gettype(), target);
  }

  // optional string phonenumber = 2;
  if (has_phonenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserGetPasswordReq.phonenumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->phonenumber(), target);
  }

  // optional string emailaddress = 3;
  if (has_emailaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emailaddress().data(), this->emailaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserGetPasswordReq.emailaddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->emailaddress(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgUserGetPasswordReq)
  return target;
}

int PkgUserGetPasswordReq::ByteSize() const {
  int total_size = 0;

  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  if (has_gettype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gettype());
  }
  if (_has_bits_[1 / 32] & 6) {
    // optional string phonenumber = 2;
    if (has_phonenumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phonenumber());
    }

    // optional string emailaddress = 3;
    if (has_emailaddress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->emailaddress());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserGetPasswordReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserGetPasswordReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserGetPasswordReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserGetPasswordReq::MergeFrom(const PkgUserGetPasswordReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gettype()) {
      set_gettype(from.gettype());
    }
    if (from.has_phonenumber()) {
      set_has_phonenumber();
      phonenumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenumber_);
    }
    if (from.has_emailaddress()) {
      set_has_emailaddress();
      emailaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.emailaddress_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserGetPasswordReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserGetPasswordReq::CopyFrom(const PkgUserGetPasswordReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserGetPasswordReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgUserGetPasswordReq::Swap(PkgUserGetPasswordReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserGetPasswordReq::InternalSwap(PkgUserGetPasswordReq* other) {
  std::swap(gettype_, other->gettype_);
  phonenumber_.Swap(&other->phonenumber_);
  emailaddress_.Swap(&other->emailaddress_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserGetPasswordReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserGetPasswordReq_descriptor_;
  metadata.reflection = PkgUserGetPasswordReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgUserGetPasswordReply::kIssuccessFieldNumber;
const int PkgUserGetPasswordReply::kErrFieldNumber;
#endif  // !_MSC_VER

PkgUserGetPasswordReply::PkgUserGetPasswordReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgUserGetPasswordReply)
}

void PkgUserGetPasswordReply::InitAsDefaultInstance() {
}

PkgUserGetPasswordReply::PkgUserGetPasswordReply(const PkgUserGetPasswordReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgUserGetPasswordReply)
}

void PkgUserGetPasswordReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = true;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserGetPasswordReply::~PkgUserGetPasswordReply() {
  // @@protoc_insertion_point(destructor:comm.PkgUserGetPasswordReply)
  SharedDtor();
}

void PkgUserGetPasswordReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgUserGetPasswordReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserGetPasswordReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserGetPasswordReply_descriptor_;
}

const PkgUserGetPasswordReply& PkgUserGetPasswordReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgUserGetPasswordReply* PkgUserGetPasswordReply::default_instance_ = NULL;

PkgUserGetPasswordReply* PkgUserGetPasswordReply::New(::google::protobuf::Arena* arena) const {
  PkgUserGetPasswordReply* n = new PkgUserGetPasswordReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserGetPasswordReply::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    issuccess_ = true;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserGetPasswordReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgUserGetPasswordReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1 [default = true];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserGetPasswordReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgUserGetPasswordReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgUserGetPasswordReply)
  return false;
#undef DO_
}

void PkgUserGetPasswordReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgUserGetPasswordReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserGetPasswordReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgUserGetPasswordReply)
}

::google::protobuf::uint8* PkgUserGetPasswordReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgUserGetPasswordReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserGetPasswordReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgUserGetPasswordReply)
  return target;
}

int PkgUserGetPasswordReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  // optional string err = 2;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserGetPasswordReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserGetPasswordReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserGetPasswordReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserGetPasswordReply::MergeFrom(const PkgUserGetPasswordReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserGetPasswordReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserGetPasswordReply::CopyFrom(const PkgUserGetPasswordReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserGetPasswordReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgUserGetPasswordReply::Swap(PkgUserGetPasswordReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserGetPasswordReply::InternalSwap(PkgUserGetPasswordReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserGetPasswordReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserGetPasswordReply_descriptor_;
  metadata.reflection = PkgUserGetPasswordReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgUserResetPasswordReq::kGettypeFieldNumber;
const int PkgUserResetPasswordReq::kUseridFieldNumber;
const int PkgUserResetPasswordReq::kPhonenumberFieldNumber;
const int PkgUserResetPasswordReq::kEmailaddressFieldNumber;
const int PkgUserResetPasswordReq::kUsernameFieldNumber;
const int PkgUserResetPasswordReq::kAuthcodeFieldNumber;
#endif  // !_MSC_VER

PkgUserResetPasswordReq::PkgUserResetPasswordReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgUserResetPasswordReq)
}

void PkgUserResetPasswordReq::InitAsDefaultInstance() {
}

PkgUserResetPasswordReq::PkgUserResetPasswordReq(const PkgUserResetPasswordReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgUserResetPasswordReq)
}

void PkgUserResetPasswordReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  gettype_ = 0;
  userid_ = 0;
  phonenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emailaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserResetPasswordReq::~PkgUserResetPasswordReq() {
  // @@protoc_insertion_point(destructor:comm.PkgUserResetPasswordReq)
  SharedDtor();
}

void PkgUserResetPasswordReq::SharedDtor() {
  phonenumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emailaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgUserResetPasswordReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserResetPasswordReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserResetPasswordReq_descriptor_;
}

const PkgUserResetPasswordReq& PkgUserResetPasswordReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgUserResetPasswordReq* PkgUserResetPasswordReq::default_instance_ = NULL;

PkgUserResetPasswordReq* PkgUserResetPasswordReq::New(::google::protobuf::Arena* arena) const {
  PkgUserResetPasswordReq* n = new PkgUserResetPasswordReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserResetPasswordReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgUserResetPasswordReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(gettype_, userid_);
    if (has_phonenumber()) {
      phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_emailaddress()) {
      emailaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_username()) {
      username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_authcode()) {
      authcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserResetPasswordReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgUserResetPasswordReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::comm::EnGetType_IsValid(value)) {
            set_gettype(static_cast< ::comm::EnGetType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userid;
        break;
      }

      // optional int32 userid = 2;
      case 2: {
        if (tag == 16) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
          set_has_userid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_phonenumber;
        break;
      }

      // optional string phonenumber = 3;
      case 3: {
        if (tag == 26) {
         parse_phonenumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonenumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phonenumber().data(), this->phonenumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserResetPasswordReq.phonenumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_emailaddress;
        break;
      }

      // optional string emailaddress = 4;
      case 4: {
        if (tag == 34) {
         parse_emailaddress:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_emailaddress()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->emailaddress().data(), this->emailaddress().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserResetPasswordReq.emailaddress");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_username;
        break;
      }

      // optional string username = 5;
      case 5: {
        if (tag == 42) {
         parse_username:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserResetPasswordReq.username");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_authcode;
        break;
      }

      // required string authcode = 10;
      case 10: {
        if (tag == 82) {
         parse_authcode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_authcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->authcode().data(), this->authcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserResetPasswordReq.authcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgUserResetPasswordReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgUserResetPasswordReq)
  return false;
#undef DO_
}

void PkgUserResetPasswordReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgUserResetPasswordReq)
  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  if (has_gettype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->gettype(), output);
  }

  // optional int32 userid = 2;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->userid(), output);
  }

  // optional string phonenumber = 3;
  if (has_phonenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserResetPasswordReq.phonenumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->phonenumber(), output);
  }

  // optional string emailaddress = 4;
  if (has_emailaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emailaddress().data(), this->emailaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserResetPasswordReq.emailaddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->emailaddress(), output);
  }

  // optional string username = 5;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserResetPasswordReq.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->username(), output);
  }

  // required string authcode = 10;
  if (has_authcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->authcode().data(), this->authcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserResetPasswordReq.authcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->authcode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgUserResetPasswordReq)
}

::google::protobuf::uint8* PkgUserResetPasswordReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgUserResetPasswordReq)
  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  if (has_gettype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->gettype(), target);
  }

  // optional int32 userid = 2;
  if (has_userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->userid(), target);
  }

  // optional string phonenumber = 3;
  if (has_phonenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserResetPasswordReq.phonenumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->phonenumber(), target);
  }

  // optional string emailaddress = 4;
  if (has_emailaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emailaddress().data(), this->emailaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserResetPasswordReq.emailaddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->emailaddress(), target);
  }

  // optional string username = 5;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserResetPasswordReq.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->username(), target);
  }

  // required string authcode = 10;
  if (has_authcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->authcode().data(), this->authcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserResetPasswordReq.authcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->authcode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgUserResetPasswordReq)
  return target;
}

int PkgUserResetPasswordReq::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_gettype()) {
    // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gettype());
  }

  if (has_authcode()) {
    // required string authcode = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->authcode());
  }

  return total_size;
}
int PkgUserResetPasswordReq::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000021) ^ 0x00000021) == 0) {  // All required fields are present.
    // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gettype());

    // required string authcode = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->authcode());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[1 / 32] & 30) {
    // optional int32 userid = 2;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional string phonenumber = 3;
    if (has_phonenumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phonenumber());
    }

    // optional string emailaddress = 4;
    if (has_emailaddress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->emailaddress());
    }

    // optional string username = 5;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserResetPasswordReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserResetPasswordReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserResetPasswordReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserResetPasswordReq::MergeFrom(const PkgUserResetPasswordReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gettype()) {
      set_gettype(from.gettype());
    }
    if (from.has_userid()) {
      set_userid(from.userid());
    }
    if (from.has_phonenumber()) {
      set_has_phonenumber();
      phonenumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenumber_);
    }
    if (from.has_emailaddress()) {
      set_has_emailaddress();
      emailaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.emailaddress_);
    }
    if (from.has_username()) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (from.has_authcode()) {
      set_has_authcode();
      authcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authcode_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserResetPasswordReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserResetPasswordReq::CopyFrom(const PkgUserResetPasswordReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserResetPasswordReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000021) != 0x00000021) return false;

  return true;
}

void PkgUserResetPasswordReq::Swap(PkgUserResetPasswordReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserResetPasswordReq::InternalSwap(PkgUserResetPasswordReq* other) {
  std::swap(gettype_, other->gettype_);
  std::swap(userid_, other->userid_);
  phonenumber_.Swap(&other->phonenumber_);
  emailaddress_.Swap(&other->emailaddress_);
  username_.Swap(&other->username_);
  authcode_.Swap(&other->authcode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserResetPasswordReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserResetPasswordReq_descriptor_;
  metadata.reflection = PkgUserResetPasswordReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgUserResetPasswordReply::kIssuccessFieldNumber;
const int PkgUserResetPasswordReply::kErrFieldNumber;
const int PkgUserResetPasswordReply::kOldpasswordFieldNumber;
#endif  // !_MSC_VER

PkgUserResetPasswordReply::PkgUserResetPasswordReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgUserResetPasswordReply)
}

void PkgUserResetPasswordReply::InitAsDefaultInstance() {
}

PkgUserResetPasswordReply::PkgUserResetPasswordReply(const PkgUserResetPasswordReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgUserResetPasswordReply)
}

void PkgUserResetPasswordReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = true;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oldpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserResetPasswordReply::~PkgUserResetPasswordReply() {
  // @@protoc_insertion_point(destructor:comm.PkgUserResetPasswordReply)
  SharedDtor();
}

void PkgUserResetPasswordReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oldpassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgUserResetPasswordReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserResetPasswordReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserResetPasswordReply_descriptor_;
}

const PkgUserResetPasswordReply& PkgUserResetPasswordReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgUserResetPasswordReply* PkgUserResetPasswordReply::default_instance_ = NULL;

PkgUserResetPasswordReply* PkgUserResetPasswordReply::New(::google::protobuf::Arena* arena) const {
  PkgUserResetPasswordReply* n = new PkgUserResetPasswordReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserResetPasswordReply::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    issuccess_ = true;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_oldpassword()) {
      oldpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserResetPasswordReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgUserResetPasswordReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1 [default = true];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserResetPasswordReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_oldpassword;
        break;
      }

      // optional string oldpassword = 3;
      case 3: {
        if (tag == 26) {
         parse_oldpassword:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oldpassword()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->oldpassword().data(), this->oldpassword().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserResetPasswordReply.oldpassword");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgUserResetPasswordReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgUserResetPasswordReply)
  return false;
#undef DO_
}

void PkgUserResetPasswordReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgUserResetPasswordReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserResetPasswordReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  // optional string oldpassword = 3;
  if (has_oldpassword()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->oldpassword().data(), this->oldpassword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserResetPasswordReply.oldpassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->oldpassword(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgUserResetPasswordReply)
}

::google::protobuf::uint8* PkgUserResetPasswordReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgUserResetPasswordReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserResetPasswordReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  // optional string oldpassword = 3;
  if (has_oldpassword()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->oldpassword().data(), this->oldpassword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserResetPasswordReply.oldpassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->oldpassword(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgUserResetPasswordReply)
  return target;
}

int PkgUserResetPasswordReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  if (_has_bits_[1 / 32] & 6) {
    // optional string err = 2;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->err());
    }

    // optional string oldpassword = 3;
    if (has_oldpassword()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->oldpassword());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserResetPasswordReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserResetPasswordReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserResetPasswordReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserResetPasswordReply::MergeFrom(const PkgUserResetPasswordReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
    if (from.has_oldpassword()) {
      set_has_oldpassword();
      oldpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oldpassword_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserResetPasswordReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserResetPasswordReply::CopyFrom(const PkgUserResetPasswordReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserResetPasswordReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgUserResetPasswordReply::Swap(PkgUserResetPasswordReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserResetPasswordReply::InternalSwap(PkgUserResetPasswordReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  oldpassword_.Swap(&other->oldpassword_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserResetPasswordReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserResetPasswordReply_descriptor_;
  metadata.reflection = PkgUserResetPasswordReply_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* PkgUserSetReq_EnSetType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserSetReq_EnSetType_descriptor_;
}
bool PkgUserSetReq_EnSetType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PkgUserSetReq_EnSetType PkgUserSetReq::ST_PHONE;
const PkgUserSetReq_EnSetType PkgUserSetReq::ST_EMAIL;
const PkgUserSetReq_EnSetType PkgUserSetReq::ST_USERNAME;
const PkgUserSetReq_EnSetType PkgUserSetReq::ST_NEWPASSWORD;
const PkgUserSetReq_EnSetType PkgUserSetReq::ST_REALNAME;
const PkgUserSetReq_EnSetType PkgUserSetReq::EnSetType_MIN;
const PkgUserSetReq_EnSetType PkgUserSetReq::EnSetType_MAX;
const int PkgUserSetReq::EnSetType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int PkgUserSetReq::kGettypeFieldNumber;
const int PkgUserSetReq::kSettypeFieldNumber;
const int PkgUserSetReq::kUseridFieldNumber;
const int PkgUserSetReq::kPasswordFieldNumber;
const int PkgUserSetReq::kPhonenumberFieldNumber;
const int PkgUserSetReq::kEmailaddressFieldNumber;
const int PkgUserSetReq::kUsernameFieldNumber;
const int PkgUserSetReq::kNewpasswordFieldNumber;
const int PkgUserSetReq::kRealnameFieldNumber;
#endif  // !_MSC_VER

PkgUserSetReq::PkgUserSetReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgUserSetReq)
}

void PkgUserSetReq::InitAsDefaultInstance() {
}

PkgUserSetReq::PkgUserSetReq(const PkgUserSetReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgUserSetReq)
}

void PkgUserSetReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  gettype_ = 0;
  settype_ = 0;
  userid_ = 0;
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emailaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  newpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  realname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserSetReq::~PkgUserSetReq() {
  // @@protoc_insertion_point(destructor:comm.PkgUserSetReq)
  SharedDtor();
}

void PkgUserSetReq::SharedDtor() {
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emailaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  newpassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  realname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgUserSetReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserSetReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserSetReq_descriptor_;
}

const PkgUserSetReq& PkgUserSetReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgUserSetReq* PkgUserSetReq::default_instance_ = NULL;

PkgUserSetReq* PkgUserSetReq::New(::google::protobuf::Arena* arena) const {
  PkgUserSetReq* n = new PkgUserSetReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserSetReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgUserSetReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(gettype_, settype_);
    userid_ = 0;
    if (has_password()) {
      password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_phonenumber()) {
      phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_emailaddress()) {
      emailaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_username()) {
      username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_newpassword()) {
      newpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (has_realname()) {
    realname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserSetReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgUserSetReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::comm::EnGetType_IsValid(value)) {
            set_gettype(static_cast< ::comm::EnGetType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_settype;
        break;
      }

      // required int32 settype = 2;
      case 2: {
        if (tag == 16) {
         parse_settype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &settype_)));
          set_has_settype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_userid;
        break;
      }

      // optional int32 userid = 3;
      case 3: {
        if (tag == 24) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
          set_has_userid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_password;
        break;
      }

      // required string password = 4;
      case 4: {
        if (tag == 34) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserSetReq.password");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_phonenumber;
        break;
      }

      // optional string phonenumber = 5;
      case 5: {
        if (tag == 42) {
         parse_phonenumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonenumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phonenumber().data(), this->phonenumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserSetReq.phonenumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_emailaddress;
        break;
      }

      // optional string emailaddress = 6;
      case 6: {
        if (tag == 50) {
         parse_emailaddress:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_emailaddress()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->emailaddress().data(), this->emailaddress().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserSetReq.emailaddress");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_username;
        break;
      }

      // optional string username = 7;
      case 7: {
        if (tag == 58) {
         parse_username:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserSetReq.username");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_newpassword;
        break;
      }

      // required string newpassword = 8;
      case 8: {
        if (tag == 66) {
         parse_newpassword:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_newpassword()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->newpassword().data(), this->newpassword().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserSetReq.newpassword");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_realname;
        break;
      }

      // optional string realname = 9;
      case 9: {
        if (tag == 74) {
         parse_realname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_realname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->realname().data(), this->realname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserSetReq.realname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgUserSetReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgUserSetReq)
  return false;
#undef DO_
}

void PkgUserSetReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgUserSetReq)
  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  if (has_gettype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->gettype(), output);
  }

  // required int32 settype = 2;
  if (has_settype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->settype(), output);
  }

  // optional int32 userid = 3;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->userid(), output);
  }

  // required string password = 4;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserSetReq.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->password(), output);
  }

  // optional string phonenumber = 5;
  if (has_phonenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserSetReq.phonenumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->phonenumber(), output);
  }

  // optional string emailaddress = 6;
  if (has_emailaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emailaddress().data(), this->emailaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserSetReq.emailaddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->emailaddress(), output);
  }

  // optional string username = 7;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserSetReq.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->username(), output);
  }

  // required string newpassword = 8;
  if (has_newpassword()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->newpassword().data(), this->newpassword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserSetReq.newpassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->newpassword(), output);
  }

  // optional string realname = 9;
  if (has_realname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->realname().data(), this->realname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserSetReq.realname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->realname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgUserSetReq)
}

::google::protobuf::uint8* PkgUserSetReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgUserSetReq)
  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  if (has_gettype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->gettype(), target);
  }

  // required int32 settype = 2;
  if (has_settype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->settype(), target);
  }

  // optional int32 userid = 3;
  if (has_userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->userid(), target);
  }

  // required string password = 4;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserSetReq.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->password(), target);
  }

  // optional string phonenumber = 5;
  if (has_phonenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserSetReq.phonenumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->phonenumber(), target);
  }

  // optional string emailaddress = 6;
  if (has_emailaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emailaddress().data(), this->emailaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserSetReq.emailaddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->emailaddress(), target);
  }

  // optional string username = 7;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserSetReq.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->username(), target);
  }

  // required string newpassword = 8;
  if (has_newpassword()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->newpassword().data(), this->newpassword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserSetReq.newpassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->newpassword(), target);
  }

  // optional string realname = 9;
  if (has_realname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->realname().data(), this->realname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserSetReq.realname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->realname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgUserSetReq)
  return target;
}

int PkgUserSetReq::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_gettype()) {
    // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gettype());
  }

  if (has_settype()) {
    // required int32 settype = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->settype());
  }

  if (has_password()) {
    // required string password = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  if (has_newpassword()) {
    // required string newpassword = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->newpassword());
  }

  return total_size;
}
int PkgUserSetReq::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000008b) ^ 0x0000008b) == 0) {  // All required fields are present.
    // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gettype());

    // required int32 settype = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->settype());

    // required string password = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());

    // required string newpassword = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->newpassword());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 116) {
    // optional int32 userid = 3;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional string phonenumber = 5;
    if (has_phonenumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phonenumber());
    }

    // optional string emailaddress = 6;
    if (has_emailaddress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->emailaddress());
    }

    // optional string username = 7;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

  }
  // optional string realname = 9;
  if (has_realname()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->realname());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserSetReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserSetReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserSetReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserSetReq::MergeFrom(const PkgUserSetReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gettype()) {
      set_gettype(from.gettype());
    }
    if (from.has_settype()) {
      set_settype(from.settype());
    }
    if (from.has_userid()) {
      set_userid(from.userid());
    }
    if (from.has_password()) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (from.has_phonenumber()) {
      set_has_phonenumber();
      phonenumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenumber_);
    }
    if (from.has_emailaddress()) {
      set_has_emailaddress();
      emailaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.emailaddress_);
    }
    if (from.has_username()) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (from.has_newpassword()) {
      set_has_newpassword();
      newpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newpassword_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_realname()) {
      set_has_realname();
      realname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.realname_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserSetReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserSetReq::CopyFrom(const PkgUserSetReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserSetReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000008b) != 0x0000008b) return false;

  return true;
}

void PkgUserSetReq::Swap(PkgUserSetReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserSetReq::InternalSwap(PkgUserSetReq* other) {
  std::swap(gettype_, other->gettype_);
  std::swap(settype_, other->settype_);
  std::swap(userid_, other->userid_);
  password_.Swap(&other->password_);
  phonenumber_.Swap(&other->phonenumber_);
  emailaddress_.Swap(&other->emailaddress_);
  username_.Swap(&other->username_);
  newpassword_.Swap(&other->newpassword_);
  realname_.Swap(&other->realname_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserSetReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserSetReq_descriptor_;
  metadata.reflection = PkgUserSetReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgUserSetReply::kIssuccessFieldNumber;
const int PkgUserSetReply::kErrFieldNumber;
#endif  // !_MSC_VER

PkgUserSetReply::PkgUserSetReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgUserSetReply)
}

void PkgUserSetReply::InitAsDefaultInstance() {
}

PkgUserSetReply::PkgUserSetReply(const PkgUserSetReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgUserSetReply)
}

void PkgUserSetReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = true;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserSetReply::~PkgUserSetReply() {
  // @@protoc_insertion_point(destructor:comm.PkgUserSetReply)
  SharedDtor();
}

void PkgUserSetReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgUserSetReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserSetReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserSetReply_descriptor_;
}

const PkgUserSetReply& PkgUserSetReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgUserSetReply* PkgUserSetReply::default_instance_ = NULL;

PkgUserSetReply* PkgUserSetReply::New(::google::protobuf::Arena* arena) const {
  PkgUserSetReply* n = new PkgUserSetReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserSetReply::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    issuccess_ = true;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserSetReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgUserSetReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1 [default = true];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserSetReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgUserSetReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgUserSetReply)
  return false;
#undef DO_
}

void PkgUserSetReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgUserSetReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserSetReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgUserSetReply)
}

::google::protobuf::uint8* PkgUserSetReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgUserSetReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserSetReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgUserSetReply)
  return target;
}

int PkgUserSetReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  // optional string err = 2;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserSetReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserSetReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserSetReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserSetReply::MergeFrom(const PkgUserSetReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserSetReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserSetReply::CopyFrom(const PkgUserSetReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserSetReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgUserSetReply::Swap(PkgUserSetReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserSetReply::InternalSwap(PkgUserSetReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserSetReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserSetReply_descriptor_;
  metadata.reflection = PkgUserSetReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgUserInvitionUserReq::kGettypeFieldNumber;
const int PkgUserInvitionUserReq::kPhonenumberFieldNumber;
const int PkgUserInvitionUserReq::kEmailaddressFieldNumber;
const int PkgUserInvitionUserReq::kRealnameFieldNumber;
#endif  // !_MSC_VER

PkgUserInvitionUserReq::PkgUserInvitionUserReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgUserInvitionUserReq)
}

void PkgUserInvitionUserReq::InitAsDefaultInstance() {
}

PkgUserInvitionUserReq::PkgUserInvitionUserReq(const PkgUserInvitionUserReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgUserInvitionUserReq)
}

void PkgUserInvitionUserReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  gettype_ = 0;
  phonenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emailaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  realname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserInvitionUserReq::~PkgUserInvitionUserReq() {
  // @@protoc_insertion_point(destructor:comm.PkgUserInvitionUserReq)
  SharedDtor();
}

void PkgUserInvitionUserReq::SharedDtor() {
  phonenumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emailaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  realname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgUserInvitionUserReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserInvitionUserReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserInvitionUserReq_descriptor_;
}

const PkgUserInvitionUserReq& PkgUserInvitionUserReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgUserInvitionUserReq* PkgUserInvitionUserReq::default_instance_ = NULL;

PkgUserInvitionUserReq* PkgUserInvitionUserReq::New(::google::protobuf::Arena* arena) const {
  PkgUserInvitionUserReq* n = new PkgUserInvitionUserReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserInvitionUserReq::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    gettype_ = 0;
    if (has_phonenumber()) {
      phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_emailaddress()) {
      emailaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_realname()) {
      realname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserInvitionUserReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgUserInvitionUserReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::comm::EnGetType_IsValid(value)) {
            set_gettype(static_cast< ::comm::EnGetType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_phonenumber;
        break;
      }

      // optional string phonenumber = 3;
      case 3: {
        if (tag == 26) {
         parse_phonenumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonenumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phonenumber().data(), this->phonenumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserInvitionUserReq.phonenumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_emailaddress;
        break;
      }

      // optional string emailaddress = 4;
      case 4: {
        if (tag == 34) {
         parse_emailaddress:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_emailaddress()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->emailaddress().data(), this->emailaddress().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserInvitionUserReq.emailaddress");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_realname;
        break;
      }

      // optional string realname = 5;
      case 5: {
        if (tag == 42) {
         parse_realname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_realname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->realname().data(), this->realname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserInvitionUserReq.realname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgUserInvitionUserReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgUserInvitionUserReq)
  return false;
#undef DO_
}

void PkgUserInvitionUserReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgUserInvitionUserReq)
  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  if (has_gettype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->gettype(), output);
  }

  // optional string phonenumber = 3;
  if (has_phonenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserInvitionUserReq.phonenumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->phonenumber(), output);
  }

  // optional string emailaddress = 4;
  if (has_emailaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emailaddress().data(), this->emailaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserInvitionUserReq.emailaddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->emailaddress(), output);
  }

  // optional string realname = 5;
  if (has_realname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->realname().data(), this->realname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserInvitionUserReq.realname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->realname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgUserInvitionUserReq)
}

::google::protobuf::uint8* PkgUserInvitionUserReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgUserInvitionUserReq)
  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  if (has_gettype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->gettype(), target);
  }

  // optional string phonenumber = 3;
  if (has_phonenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserInvitionUserReq.phonenumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->phonenumber(), target);
  }

  // optional string emailaddress = 4;
  if (has_emailaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emailaddress().data(), this->emailaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserInvitionUserReq.emailaddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->emailaddress(), target);
  }

  // optional string realname = 5;
  if (has_realname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->realname().data(), this->realname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserInvitionUserReq.realname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->realname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgUserInvitionUserReq)
  return target;
}

int PkgUserInvitionUserReq::ByteSize() const {
  int total_size = 0;

  // required .comm.EnGetType gettype = 1 [default = GT_PHONE];
  if (has_gettype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gettype());
  }
  if (_has_bits_[1 / 32] & 14) {
    // optional string phonenumber = 3;
    if (has_phonenumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phonenumber());
    }

    // optional string emailaddress = 4;
    if (has_emailaddress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->emailaddress());
    }

    // optional string realname = 5;
    if (has_realname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->realname());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserInvitionUserReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserInvitionUserReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserInvitionUserReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserInvitionUserReq::MergeFrom(const PkgUserInvitionUserReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gettype()) {
      set_gettype(from.gettype());
    }
    if (from.has_phonenumber()) {
      set_has_phonenumber();
      phonenumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenumber_);
    }
    if (from.has_emailaddress()) {
      set_has_emailaddress();
      emailaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.emailaddress_);
    }
    if (from.has_realname()) {
      set_has_realname();
      realname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.realname_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserInvitionUserReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserInvitionUserReq::CopyFrom(const PkgUserInvitionUserReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserInvitionUserReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgUserInvitionUserReq::Swap(PkgUserInvitionUserReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserInvitionUserReq::InternalSwap(PkgUserInvitionUserReq* other) {
  std::swap(gettype_, other->gettype_);
  phonenumber_.Swap(&other->phonenumber_);
  emailaddress_.Swap(&other->emailaddress_);
  realname_.Swap(&other->realname_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserInvitionUserReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserInvitionUserReq_descriptor_;
  metadata.reflection = PkgUserInvitionUserReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgUserInvitionUserReply::kIssuccessFieldNumber;
const int PkgUserInvitionUserReply::kErrFieldNumber;
const int PkgUserInvitionUserReply::kInvitioncodeFieldNumber;
#endif  // !_MSC_VER

PkgUserInvitionUserReply::PkgUserInvitionUserReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgUserInvitionUserReply)
}

void PkgUserInvitionUserReply::InitAsDefaultInstance() {
}

PkgUserInvitionUserReply::PkgUserInvitionUserReply(const PkgUserInvitionUserReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgUserInvitionUserReply)
}

void PkgUserInvitionUserReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = true;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invitioncode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserInvitionUserReply::~PkgUserInvitionUserReply() {
  // @@protoc_insertion_point(destructor:comm.PkgUserInvitionUserReply)
  SharedDtor();
}

void PkgUserInvitionUserReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invitioncode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgUserInvitionUserReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserInvitionUserReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserInvitionUserReply_descriptor_;
}

const PkgUserInvitionUserReply& PkgUserInvitionUserReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgUserInvitionUserReply* PkgUserInvitionUserReply::default_instance_ = NULL;

PkgUserInvitionUserReply* PkgUserInvitionUserReply::New(::google::protobuf::Arena* arena) const {
  PkgUserInvitionUserReply* n = new PkgUserInvitionUserReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserInvitionUserReply::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    issuccess_ = true;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_invitioncode()) {
      invitioncode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserInvitionUserReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgUserInvitionUserReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1 [default = true];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserInvitionUserReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_invitioncode;
        break;
      }

      // optional string invitioncode = 3;
      case 3: {
        if (tag == 26) {
         parse_invitioncode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_invitioncode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->invitioncode().data(), this->invitioncode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserInvitionUserReply.invitioncode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgUserInvitionUserReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgUserInvitionUserReply)
  return false;
#undef DO_
}

void PkgUserInvitionUserReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgUserInvitionUserReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserInvitionUserReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  // optional string invitioncode = 3;
  if (has_invitioncode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->invitioncode().data(), this->invitioncode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserInvitionUserReply.invitioncode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->invitioncode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgUserInvitionUserReply)
}

::google::protobuf::uint8* PkgUserInvitionUserReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgUserInvitionUserReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserInvitionUserReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  // optional string invitioncode = 3;
  if (has_invitioncode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->invitioncode().data(), this->invitioncode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserInvitionUserReply.invitioncode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->invitioncode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgUserInvitionUserReply)
  return target;
}

int PkgUserInvitionUserReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  if (_has_bits_[1 / 32] & 6) {
    // optional string err = 2;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->err());
    }

    // optional string invitioncode = 3;
    if (has_invitioncode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->invitioncode());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserInvitionUserReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserInvitionUserReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserInvitionUserReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserInvitionUserReply::MergeFrom(const PkgUserInvitionUserReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
    if (from.has_invitioncode()) {
      set_has_invitioncode();
      invitioncode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.invitioncode_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserInvitionUserReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserInvitionUserReply::CopyFrom(const PkgUserInvitionUserReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserInvitionUserReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgUserInvitionUserReply::Swap(PkgUserInvitionUserReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserInvitionUserReply::InternalSwap(PkgUserInvitionUserReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  invitioncode_.Swap(&other->invitioncode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserInvitionUserReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserInvitionUserReply_descriptor_;
  metadata.reflection = PkgUserInvitionUserReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgUserInvitionCheckReq::kInvitioncodeFieldNumber;
#endif  // !_MSC_VER

PkgUserInvitionCheckReq::PkgUserInvitionCheckReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgUserInvitionCheckReq)
}

void PkgUserInvitionCheckReq::InitAsDefaultInstance() {
}

PkgUserInvitionCheckReq::PkgUserInvitionCheckReq(const PkgUserInvitionCheckReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgUserInvitionCheckReq)
}

void PkgUserInvitionCheckReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  invitioncode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserInvitionCheckReq::~PkgUserInvitionCheckReq() {
  // @@protoc_insertion_point(destructor:comm.PkgUserInvitionCheckReq)
  SharedDtor();
}

void PkgUserInvitionCheckReq::SharedDtor() {
  invitioncode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgUserInvitionCheckReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserInvitionCheckReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserInvitionCheckReq_descriptor_;
}

const PkgUserInvitionCheckReq& PkgUserInvitionCheckReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgUserInvitionCheckReq* PkgUserInvitionCheckReq::default_instance_ = NULL;

PkgUserInvitionCheckReq* PkgUserInvitionCheckReq::New(::google::protobuf::Arena* arena) const {
  PkgUserInvitionCheckReq* n = new PkgUserInvitionCheckReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserInvitionCheckReq::Clear() {
  if (has_invitioncode()) {
    invitioncode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserInvitionCheckReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgUserInvitionCheckReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string invitioncode = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_invitioncode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->invitioncode().data(), this->invitioncode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserInvitionCheckReq.invitioncode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgUserInvitionCheckReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgUserInvitionCheckReq)
  return false;
#undef DO_
}

void PkgUserInvitionCheckReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgUserInvitionCheckReq)
  // optional string invitioncode = 1;
  if (has_invitioncode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->invitioncode().data(), this->invitioncode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserInvitionCheckReq.invitioncode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->invitioncode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgUserInvitionCheckReq)
}

::google::protobuf::uint8* PkgUserInvitionCheckReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgUserInvitionCheckReq)
  // optional string invitioncode = 1;
  if (has_invitioncode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->invitioncode().data(), this->invitioncode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserInvitionCheckReq.invitioncode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->invitioncode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgUserInvitionCheckReq)
  return target;
}

int PkgUserInvitionCheckReq::ByteSize() const {
  int total_size = 0;

  // optional string invitioncode = 1;
  if (has_invitioncode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->invitioncode());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserInvitionCheckReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserInvitionCheckReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserInvitionCheckReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserInvitionCheckReq::MergeFrom(const PkgUserInvitionCheckReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_invitioncode()) {
      set_has_invitioncode();
      invitioncode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.invitioncode_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserInvitionCheckReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserInvitionCheckReq::CopyFrom(const PkgUserInvitionCheckReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserInvitionCheckReq::IsInitialized() const {

  return true;
}

void PkgUserInvitionCheckReq::Swap(PkgUserInvitionCheckReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserInvitionCheckReq::InternalSwap(PkgUserInvitionCheckReq* other) {
  invitioncode_.Swap(&other->invitioncode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserInvitionCheckReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserInvitionCheckReq_descriptor_;
  metadata.reflection = PkgUserInvitionCheckReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgUserInvitionCheckReply::kIssuccessFieldNumber;
const int PkgUserInvitionCheckReply::kErrFieldNumber;
const int PkgUserInvitionCheckReply::kPermissionFieldNumber;
const int PkgUserInvitionCheckReply::kCompanyidFieldNumber;
const int PkgUserInvitionCheckReply::kCompanynameFieldNumber;
const int PkgUserInvitionCheckReply::kCompanyusernumberFieldNumber;
const int PkgUserInvitionCheckReply::kRolenameFieldNumber;
const int PkgUserInvitionCheckReply::kCompanycreatetimeFieldNumber;
const int PkgUserInvitionCheckReply::kPermissionroleidFieldNumber;
const int PkgUserInvitionCheckReply::kCompanyinfoFieldNumber;
#endif  // !_MSC_VER

PkgUserInvitionCheckReply::PkgUserInvitionCheckReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgUserInvitionCheckReply)
}

void PkgUserInvitionCheckReply::InitAsDefaultInstance() {
  companyinfo_ = const_cast< ::comm::PkgCompanyInfo*>(&::comm::PkgCompanyInfo::default_instance());
}

PkgUserInvitionCheckReply::PkgUserInvitionCheckReply(const PkgUserInvitionCheckReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgUserInvitionCheckReply)
}

void PkgUserInvitionCheckReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = true;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permission_ = 0;
  companyid_ = 0;
  companyname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  companyusernumber_ = 0;
  rolename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  companycreatetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permissionroleid_ = 0;
  companyinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserInvitionCheckReply::~PkgUserInvitionCheckReply() {
  // @@protoc_insertion_point(destructor:comm.PkgUserInvitionCheckReply)
  SharedDtor();
}

void PkgUserInvitionCheckReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  companyname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rolename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  companycreatetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete companyinfo_;
  }
}

void PkgUserInvitionCheckReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserInvitionCheckReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserInvitionCheckReply_descriptor_;
}

const PkgUserInvitionCheckReply& PkgUserInvitionCheckReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgUserInvitionCheckReply* PkgUserInvitionCheckReply::default_instance_ = NULL;

PkgUserInvitionCheckReply* PkgUserInvitionCheckReply::New(::google::protobuf::Arena* arena) const {
  PkgUserInvitionCheckReply* n = new PkgUserInvitionCheckReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserInvitionCheckReply::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgUserInvitionCheckReply*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(companyid_, companyusernumber_);
    issuccess_ = true;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    permission_ = 0;
    if (has_companyname()) {
      companyname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_rolename()) {
      rolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_companycreatetime()) {
      companycreatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 768) {
    permissionroleid_ = 0;
    if (has_companyinfo()) {
      if (companyinfo_ != NULL) companyinfo_->::comm::PkgCompanyInfo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserInvitionCheckReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgUserInvitionCheckReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1 [default = true];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserInvitionCheckReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_permission;
        break;
      }

      // optional int32 permission = 15;
      case 15: {
        if (tag == 120) {
         parse_permission:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &permission_)));
          set_has_permission();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_companyid;
        break;
      }

      // optional int32 companyid = 16 [default = 0];
      case 16: {
        if (tag == 128) {
         parse_companyid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &companyid_)));
          set_has_companyid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_companyname;
        break;
      }

      // optional string companyname = 17;
      case 17: {
        if (tag == 138) {
         parse_companyname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_companyname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->companyname().data(), this->companyname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserInvitionCheckReply.companyname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_companyusernumber;
        break;
      }

      // optional int32 companyusernumber = 18;
      case 18: {
        if (tag == 144) {
         parse_companyusernumber:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &companyusernumber_)));
          set_has_companyusernumber();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_rolename;
        break;
      }

      // optional string rolename = 20;
      case 20: {
        if (tag == 162) {
         parse_rolename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rolename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rolename().data(), this->rolename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserInvitionCheckReply.rolename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_companycreatetime;
        break;
      }

      // optional string companycreatetime = 21;
      case 21: {
        if (tag == 170) {
         parse_companycreatetime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_companycreatetime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->companycreatetime().data(), this->companycreatetime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserInvitionCheckReply.companycreatetime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_permissionroleid;
        break;
      }

      // optional int32 permissionroleid = 22;
      case 22: {
        if (tag == 176) {
         parse_permissionroleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &permissionroleid_)));
          set_has_permissionroleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(802)) goto parse_companyinfo;
        break;
      }

      // optional .comm.PkgCompanyInfo companyinfo = 100;
      case 100: {
        if (tag == 802) {
         parse_companyinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_companyinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgUserInvitionCheckReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgUserInvitionCheckReply)
  return false;
#undef DO_
}

void PkgUserInvitionCheckReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgUserInvitionCheckReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserInvitionCheckReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  // optional int32 permission = 15;
  if (has_permission()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->permission(), output);
  }

  // optional int32 companyid = 16 [default = 0];
  if (has_companyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->companyid(), output);
  }

  // optional string companyname = 17;
  if (has_companyname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->companyname().data(), this->companyname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserInvitionCheckReply.companyname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->companyname(), output);
  }

  // optional int32 companyusernumber = 18;
  if (has_companyusernumber()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->companyusernumber(), output);
  }

  // optional string rolename = 20;
  if (has_rolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserInvitionCheckReply.rolename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->rolename(), output);
  }

  // optional string companycreatetime = 21;
  if (has_companycreatetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->companycreatetime().data(), this->companycreatetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserInvitionCheckReply.companycreatetime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->companycreatetime(), output);
  }

  // optional int32 permissionroleid = 22;
  if (has_permissionroleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->permissionroleid(), output);
  }

  // optional .comm.PkgCompanyInfo companyinfo = 100;
  if (has_companyinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, *this->companyinfo_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgUserInvitionCheckReply)
}

::google::protobuf::uint8* PkgUserInvitionCheckReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgUserInvitionCheckReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserInvitionCheckReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  // optional int32 permission = 15;
  if (has_permission()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->permission(), target);
  }

  // optional int32 companyid = 16 [default = 0];
  if (has_companyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->companyid(), target);
  }

  // optional string companyname = 17;
  if (has_companyname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->companyname().data(), this->companyname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserInvitionCheckReply.companyname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->companyname(), target);
  }

  // optional int32 companyusernumber = 18;
  if (has_companyusernumber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->companyusernumber(), target);
  }

  // optional string rolename = 20;
  if (has_rolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserInvitionCheckReply.rolename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->rolename(), target);
  }

  // optional string companycreatetime = 21;
  if (has_companycreatetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->companycreatetime().data(), this->companycreatetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserInvitionCheckReply.companycreatetime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->companycreatetime(), target);
  }

  // optional int32 permissionroleid = 22;
  if (has_permissionroleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->permissionroleid(), target);
  }

  // optional .comm.PkgCompanyInfo companyinfo = 100;
  if (has_companyinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        100, *this->companyinfo_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgUserInvitionCheckReply)
  return target;
}

int PkgUserInvitionCheckReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  if (_has_bits_[1 / 32] & 254) {
    // optional string err = 2;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->err());
    }

    // optional int32 permission = 15;
    if (has_permission()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->permission());
    }

    // optional int32 companyid = 16 [default = 0];
    if (has_companyid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->companyid());
    }

    // optional string companyname = 17;
    if (has_companyname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->companyname());
    }

    // optional int32 companyusernumber = 18;
    if (has_companyusernumber()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->companyusernumber());
    }

    // optional string rolename = 20;
    if (has_rolename()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rolename());
    }

    // optional string companycreatetime = 21;
    if (has_companycreatetime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->companycreatetime());
    }

  }
  if (_has_bits_[8 / 32] & 768) {
    // optional int32 permissionroleid = 22;
    if (has_permissionroleid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->permissionroleid());
    }

    // optional .comm.PkgCompanyInfo companyinfo = 100;
    if (has_companyinfo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->companyinfo_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserInvitionCheckReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserInvitionCheckReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserInvitionCheckReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserInvitionCheckReply::MergeFrom(const PkgUserInvitionCheckReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
    if (from.has_permission()) {
      set_permission(from.permission());
    }
    if (from.has_companyid()) {
      set_companyid(from.companyid());
    }
    if (from.has_companyname()) {
      set_has_companyname();
      companyname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.companyname_);
    }
    if (from.has_companyusernumber()) {
      set_companyusernumber(from.companyusernumber());
    }
    if (from.has_rolename()) {
      set_has_rolename();
      rolename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rolename_);
    }
    if (from.has_companycreatetime()) {
      set_has_companycreatetime();
      companycreatetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.companycreatetime_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_permissionroleid()) {
      set_permissionroleid(from.permissionroleid());
    }
    if (from.has_companyinfo()) {
      mutable_companyinfo()->::comm::PkgCompanyInfo::MergeFrom(from.companyinfo());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserInvitionCheckReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserInvitionCheckReply::CopyFrom(const PkgUserInvitionCheckReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserInvitionCheckReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgUserInvitionCheckReply::Swap(PkgUserInvitionCheckReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserInvitionCheckReply::InternalSwap(PkgUserInvitionCheckReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  std::swap(permission_, other->permission_);
  std::swap(companyid_, other->companyid_);
  companyname_.Swap(&other->companyname_);
  std::swap(companyusernumber_, other->companyusernumber_);
  rolename_.Swap(&other->rolename_);
  companycreatetime_.Swap(&other->companycreatetime_);
  std::swap(permissionroleid_, other->permissionroleid_);
  std::swap(companyinfo_, other->companyinfo_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserInvitionCheckReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserInvitionCheckReply_descriptor_;
  metadata.reflection = PkgUserInvitionCheckReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgUserCreateCompanyReq::kCompanynameFieldNumber;
#endif  // !_MSC_VER

PkgUserCreateCompanyReq::PkgUserCreateCompanyReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgUserCreateCompanyReq)
}

void PkgUserCreateCompanyReq::InitAsDefaultInstance() {
}

PkgUserCreateCompanyReq::PkgUserCreateCompanyReq(const PkgUserCreateCompanyReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgUserCreateCompanyReq)
}

void PkgUserCreateCompanyReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  companyname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserCreateCompanyReq::~PkgUserCreateCompanyReq() {
  // @@protoc_insertion_point(destructor:comm.PkgUserCreateCompanyReq)
  SharedDtor();
}

void PkgUserCreateCompanyReq::SharedDtor() {
  companyname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgUserCreateCompanyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserCreateCompanyReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserCreateCompanyReq_descriptor_;
}

const PkgUserCreateCompanyReq& PkgUserCreateCompanyReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgUserCreateCompanyReq* PkgUserCreateCompanyReq::default_instance_ = NULL;

PkgUserCreateCompanyReq* PkgUserCreateCompanyReq::New(::google::protobuf::Arena* arena) const {
  PkgUserCreateCompanyReq* n = new PkgUserCreateCompanyReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserCreateCompanyReq::Clear() {
  if (has_companyname()) {
    companyname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserCreateCompanyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgUserCreateCompanyReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string companyname = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_companyname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->companyname().data(), this->companyname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserCreateCompanyReq.companyname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgUserCreateCompanyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgUserCreateCompanyReq)
  return false;
#undef DO_
}

void PkgUserCreateCompanyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgUserCreateCompanyReq)
  // optional string companyname = 1;
  if (has_companyname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->companyname().data(), this->companyname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCreateCompanyReq.companyname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->companyname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgUserCreateCompanyReq)
}

::google::protobuf::uint8* PkgUserCreateCompanyReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgUserCreateCompanyReq)
  // optional string companyname = 1;
  if (has_companyname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->companyname().data(), this->companyname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCreateCompanyReq.companyname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->companyname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgUserCreateCompanyReq)
  return target;
}

int PkgUserCreateCompanyReq::ByteSize() const {
  int total_size = 0;

  // optional string companyname = 1;
  if (has_companyname()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->companyname());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserCreateCompanyReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserCreateCompanyReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserCreateCompanyReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserCreateCompanyReq::MergeFrom(const PkgUserCreateCompanyReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_companyname()) {
      set_has_companyname();
      companyname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.companyname_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserCreateCompanyReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserCreateCompanyReq::CopyFrom(const PkgUserCreateCompanyReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserCreateCompanyReq::IsInitialized() const {

  return true;
}

void PkgUserCreateCompanyReq::Swap(PkgUserCreateCompanyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserCreateCompanyReq::InternalSwap(PkgUserCreateCompanyReq* other) {
  companyname_.Swap(&other->companyname_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserCreateCompanyReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserCreateCompanyReq_descriptor_;
  metadata.reflection = PkgUserCreateCompanyReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgUserCreateCompanyReply::kIssuccessFieldNumber;
const int PkgUserCreateCompanyReply::kErrFieldNumber;
const int PkgUserCreateCompanyReply::kCompanyidFieldNumber;
const int PkgUserCreateCompanyReply::kCompanynameFieldNumber;
const int PkgUserCreateCompanyReply::kCompanyusernumberFieldNumber;
const int PkgUserCreateCompanyReply::kRolenameFieldNumber;
const int PkgUserCreateCompanyReply::kCompanycreatetimeFieldNumber;
const int PkgUserCreateCompanyReply::kPermissionroleidFieldNumber;
const int PkgUserCreateCompanyReply::kCompanyinfoFieldNumber;
#endif  // !_MSC_VER

PkgUserCreateCompanyReply::PkgUserCreateCompanyReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgUserCreateCompanyReply)
}

void PkgUserCreateCompanyReply::InitAsDefaultInstance() {
  companyinfo_ = const_cast< ::comm::PkgCompanyInfo*>(&::comm::PkgCompanyInfo::default_instance());
}

PkgUserCreateCompanyReply::PkgUserCreateCompanyReply(const PkgUserCreateCompanyReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgUserCreateCompanyReply)
}

void PkgUserCreateCompanyReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = true;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  companyid_ = 0;
  companyname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  companyusernumber_ = 0;
  rolename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  companycreatetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permissionroleid_ = 0;
  companyinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserCreateCompanyReply::~PkgUserCreateCompanyReply() {
  // @@protoc_insertion_point(destructor:comm.PkgUserCreateCompanyReply)
  SharedDtor();
}

void PkgUserCreateCompanyReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  companyname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rolename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  companycreatetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete companyinfo_;
  }
}

void PkgUserCreateCompanyReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserCreateCompanyReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserCreateCompanyReply_descriptor_;
}

const PkgUserCreateCompanyReply& PkgUserCreateCompanyReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgUserCreateCompanyReply* PkgUserCreateCompanyReply::default_instance_ = NULL;

PkgUserCreateCompanyReply* PkgUserCreateCompanyReply::New(::google::protobuf::Arena* arena) const {
  PkgUserCreateCompanyReply* n = new PkgUserCreateCompanyReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserCreateCompanyReply::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgUserCreateCompanyReply*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(companyusernumber_, permissionroleid_);
    issuccess_ = true;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    companyid_ = 0;
    if (has_companyname()) {
      companyname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_rolename()) {
      rolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_companycreatetime()) {
      companycreatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (has_companyinfo()) {
    if (companyinfo_ != NULL) companyinfo_->::comm::PkgCompanyInfo::Clear();
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserCreateCompanyReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgUserCreateCompanyReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1 [default = true];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserCreateCompanyReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_companyid;
        break;
      }

      // optional int32 companyid = 16 [default = 0];
      case 16: {
        if (tag == 128) {
         parse_companyid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &companyid_)));
          set_has_companyid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_companyname;
        break;
      }

      // optional string companyname = 17;
      case 17: {
        if (tag == 138) {
         parse_companyname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_companyname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->companyname().data(), this->companyname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserCreateCompanyReply.companyname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_companyusernumber;
        break;
      }

      // optional int32 companyusernumber = 18;
      case 18: {
        if (tag == 144) {
         parse_companyusernumber:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &companyusernumber_)));
          set_has_companyusernumber();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_rolename;
        break;
      }

      // optional string rolename = 20;
      case 20: {
        if (tag == 162) {
         parse_rolename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rolename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rolename().data(), this->rolename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserCreateCompanyReply.rolename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_companycreatetime;
        break;
      }

      // optional string companycreatetime = 21;
      case 21: {
        if (tag == 170) {
         parse_companycreatetime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_companycreatetime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->companycreatetime().data(), this->companycreatetime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserCreateCompanyReply.companycreatetime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_permissionroleid;
        break;
      }

      // optional int32 permissionroleid = 22;
      case 22: {
        if (tag == 176) {
         parse_permissionroleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &permissionroleid_)));
          set_has_permissionroleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(802)) goto parse_companyinfo;
        break;
      }

      // optional .comm.PkgCompanyInfo companyinfo = 100;
      case 100: {
        if (tag == 802) {
         parse_companyinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_companyinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgUserCreateCompanyReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgUserCreateCompanyReply)
  return false;
#undef DO_
}

void PkgUserCreateCompanyReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgUserCreateCompanyReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCreateCompanyReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  // optional int32 companyid = 16 [default = 0];
  if (has_companyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->companyid(), output);
  }

  // optional string companyname = 17;
  if (has_companyname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->companyname().data(), this->companyname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCreateCompanyReply.companyname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->companyname(), output);
  }

  // optional int32 companyusernumber = 18;
  if (has_companyusernumber()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->companyusernumber(), output);
  }

  // optional string rolename = 20;
  if (has_rolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCreateCompanyReply.rolename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->rolename(), output);
  }

  // optional string companycreatetime = 21;
  if (has_companycreatetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->companycreatetime().data(), this->companycreatetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCreateCompanyReply.companycreatetime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->companycreatetime(), output);
  }

  // optional int32 permissionroleid = 22;
  if (has_permissionroleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->permissionroleid(), output);
  }

  // optional .comm.PkgCompanyInfo companyinfo = 100;
  if (has_companyinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, *this->companyinfo_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgUserCreateCompanyReply)
}

::google::protobuf::uint8* PkgUserCreateCompanyReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgUserCreateCompanyReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCreateCompanyReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  // optional int32 companyid = 16 [default = 0];
  if (has_companyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->companyid(), target);
  }

  // optional string companyname = 17;
  if (has_companyname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->companyname().data(), this->companyname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCreateCompanyReply.companyname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->companyname(), target);
  }

  // optional int32 companyusernumber = 18;
  if (has_companyusernumber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->companyusernumber(), target);
  }

  // optional string rolename = 20;
  if (has_rolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCreateCompanyReply.rolename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->rolename(), target);
  }

  // optional string companycreatetime = 21;
  if (has_companycreatetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->companycreatetime().data(), this->companycreatetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserCreateCompanyReply.companycreatetime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->companycreatetime(), target);
  }

  // optional int32 permissionroleid = 22;
  if (has_permissionroleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->permissionroleid(), target);
  }

  // optional .comm.PkgCompanyInfo companyinfo = 100;
  if (has_companyinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        100, *this->companyinfo_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgUserCreateCompanyReply)
  return target;
}

int PkgUserCreateCompanyReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  if (_has_bits_[1 / 32] & 254) {
    // optional string err = 2;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->err());
    }

    // optional int32 companyid = 16 [default = 0];
    if (has_companyid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->companyid());
    }

    // optional string companyname = 17;
    if (has_companyname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->companyname());
    }

    // optional int32 companyusernumber = 18;
    if (has_companyusernumber()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->companyusernumber());
    }

    // optional string rolename = 20;
    if (has_rolename()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rolename());
    }

    // optional string companycreatetime = 21;
    if (has_companycreatetime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->companycreatetime());
    }

    // optional int32 permissionroleid = 22;
    if (has_permissionroleid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->permissionroleid());
    }

  }
  // optional .comm.PkgCompanyInfo companyinfo = 100;
  if (has_companyinfo()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->companyinfo_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserCreateCompanyReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserCreateCompanyReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserCreateCompanyReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserCreateCompanyReply::MergeFrom(const PkgUserCreateCompanyReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
    if (from.has_companyid()) {
      set_companyid(from.companyid());
    }
    if (from.has_companyname()) {
      set_has_companyname();
      companyname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.companyname_);
    }
    if (from.has_companyusernumber()) {
      set_companyusernumber(from.companyusernumber());
    }
    if (from.has_rolename()) {
      set_has_rolename();
      rolename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rolename_);
    }
    if (from.has_companycreatetime()) {
      set_has_companycreatetime();
      companycreatetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.companycreatetime_);
    }
    if (from.has_permissionroleid()) {
      set_permissionroleid(from.permissionroleid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_companyinfo()) {
      mutable_companyinfo()->::comm::PkgCompanyInfo::MergeFrom(from.companyinfo());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserCreateCompanyReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserCreateCompanyReply::CopyFrom(const PkgUserCreateCompanyReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserCreateCompanyReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgUserCreateCompanyReply::Swap(PkgUserCreateCompanyReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserCreateCompanyReply::InternalSwap(PkgUserCreateCompanyReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  std::swap(companyid_, other->companyid_);
  companyname_.Swap(&other->companyname_);
  std::swap(companyusernumber_, other->companyusernumber_);
  rolename_.Swap(&other->rolename_);
  companycreatetime_.Swap(&other->companycreatetime_);
  std::swap(permissionroleid_, other->permissionroleid_);
  std::swap(companyinfo_, other->companyinfo_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserCreateCompanyReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserCreateCompanyReply_descriptor_;
  metadata.reflection = PkgUserCreateCompanyReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgUserReassignAdminReq::kAdminuseridFieldNumber;
#endif  // !_MSC_VER

PkgUserReassignAdminReq::PkgUserReassignAdminReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgUserReassignAdminReq)
}

void PkgUserReassignAdminReq::InitAsDefaultInstance() {
}

PkgUserReassignAdminReq::PkgUserReassignAdminReq(const PkgUserReassignAdminReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgUserReassignAdminReq)
}

void PkgUserReassignAdminReq::SharedCtor() {
  _cached_size_ = 0;
  adminuserid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserReassignAdminReq::~PkgUserReassignAdminReq() {
  // @@protoc_insertion_point(destructor:comm.PkgUserReassignAdminReq)
  SharedDtor();
}

void PkgUserReassignAdminReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PkgUserReassignAdminReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserReassignAdminReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserReassignAdminReq_descriptor_;
}

const PkgUserReassignAdminReq& PkgUserReassignAdminReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgUserReassignAdminReq* PkgUserReassignAdminReq::default_instance_ = NULL;

PkgUserReassignAdminReq* PkgUserReassignAdminReq::New(::google::protobuf::Arena* arena) const {
  PkgUserReassignAdminReq* n = new PkgUserReassignAdminReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserReassignAdminReq::Clear() {
  adminuserid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserReassignAdminReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgUserReassignAdminReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 adminuserid = 2;
      case 2: {
        if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adminuserid_)));
          set_has_adminuserid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgUserReassignAdminReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgUserReassignAdminReq)
  return false;
#undef DO_
}

void PkgUserReassignAdminReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgUserReassignAdminReq)
  // optional int32 adminuserid = 2;
  if (has_adminuserid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->adminuserid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgUserReassignAdminReq)
}

::google::protobuf::uint8* PkgUserReassignAdminReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgUserReassignAdminReq)
  // optional int32 adminuserid = 2;
  if (has_adminuserid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->adminuserid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgUserReassignAdminReq)
  return target;
}

int PkgUserReassignAdminReq::ByteSize() const {
  int total_size = 0;

  // optional int32 adminuserid = 2;
  if (has_adminuserid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->adminuserid());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserReassignAdminReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserReassignAdminReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserReassignAdminReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserReassignAdminReq::MergeFrom(const PkgUserReassignAdminReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_adminuserid()) {
      set_adminuserid(from.adminuserid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserReassignAdminReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserReassignAdminReq::CopyFrom(const PkgUserReassignAdminReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserReassignAdminReq::IsInitialized() const {

  return true;
}

void PkgUserReassignAdminReq::Swap(PkgUserReassignAdminReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserReassignAdminReq::InternalSwap(PkgUserReassignAdminReq* other) {
  std::swap(adminuserid_, other->adminuserid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserReassignAdminReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserReassignAdminReq_descriptor_;
  metadata.reflection = PkgUserReassignAdminReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgUserReassignAdminReply::kIssuccessFieldNumber;
const int PkgUserReassignAdminReply::kErrFieldNumber;
const int PkgUserReassignAdminReply::kPermissionFieldNumber;
const int PkgUserReassignAdminReply::kRolenameFieldNumber;
const int PkgUserReassignAdminReply::kPermissionroleidFieldNumber;
#endif  // !_MSC_VER

PkgUserReassignAdminReply::PkgUserReassignAdminReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgUserReassignAdminReply)
}

void PkgUserReassignAdminReply::InitAsDefaultInstance() {
}

PkgUserReassignAdminReply::PkgUserReassignAdminReply(const PkgUserReassignAdminReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgUserReassignAdminReply)
}

void PkgUserReassignAdminReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = true;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permission_ = 0;
  rolename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permissionroleid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserReassignAdminReply::~PkgUserReassignAdminReply() {
  // @@protoc_insertion_point(destructor:comm.PkgUserReassignAdminReply)
  SharedDtor();
}

void PkgUserReassignAdminReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rolename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgUserReassignAdminReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserReassignAdminReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserReassignAdminReply_descriptor_;
}

const PkgUserReassignAdminReply& PkgUserReassignAdminReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgUserReassignAdminReply* PkgUserReassignAdminReply::default_instance_ = NULL;

PkgUserReassignAdminReply* PkgUserReassignAdminReply::New(::google::protobuf::Arena* arena) const {
  PkgUserReassignAdminReply* n = new PkgUserReassignAdminReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserReassignAdminReply::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    issuccess_ = true;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    permission_ = 0;
    if (has_rolename()) {
      rolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    permissionroleid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserReassignAdminReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgUserReassignAdminReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1 [default = true];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserReassignAdminReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_permission;
        break;
      }

      // optional int32 permission = 15;
      case 15: {
        if (tag == 120) {
         parse_permission:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &permission_)));
          set_has_permission();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_rolename;
        break;
      }

      // optional string rolename = 20;
      case 20: {
        if (tag == 162) {
         parse_rolename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rolename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rolename().data(), this->rolename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserReassignAdminReply.rolename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_permissionroleid;
        break;
      }

      // optional int32 permissionroleid = 22;
      case 22: {
        if (tag == 176) {
         parse_permissionroleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &permissionroleid_)));
          set_has_permissionroleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgUserReassignAdminReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgUserReassignAdminReply)
  return false;
#undef DO_
}

void PkgUserReassignAdminReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgUserReassignAdminReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserReassignAdminReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  // optional int32 permission = 15;
  if (has_permission()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->permission(), output);
  }

  // optional string rolename = 20;
  if (has_rolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserReassignAdminReply.rolename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->rolename(), output);
  }

  // optional int32 permissionroleid = 22;
  if (has_permissionroleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->permissionroleid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgUserReassignAdminReply)
}

::google::protobuf::uint8* PkgUserReassignAdminReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgUserReassignAdminReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserReassignAdminReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  // optional int32 permission = 15;
  if (has_permission()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->permission(), target);
  }

  // optional string rolename = 20;
  if (has_rolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserReassignAdminReply.rolename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->rolename(), target);
  }

  // optional int32 permissionroleid = 22;
  if (has_permissionroleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->permissionroleid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgUserReassignAdminReply)
  return target;
}

int PkgUserReassignAdminReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  if (_has_bits_[1 / 32] & 30) {
    // optional string err = 2;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->err());
    }

    // optional int32 permission = 15;
    if (has_permission()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->permission());
    }

    // optional string rolename = 20;
    if (has_rolename()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rolename());
    }

    // optional int32 permissionroleid = 22;
    if (has_permissionroleid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->permissionroleid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserReassignAdminReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserReassignAdminReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserReassignAdminReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserReassignAdminReply::MergeFrom(const PkgUserReassignAdminReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
    if (from.has_permission()) {
      set_permission(from.permission());
    }
    if (from.has_rolename()) {
      set_has_rolename();
      rolename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rolename_);
    }
    if (from.has_permissionroleid()) {
      set_permissionroleid(from.permissionroleid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserReassignAdminReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserReassignAdminReply::CopyFrom(const PkgUserReassignAdminReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserReassignAdminReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgUserReassignAdminReply::Swap(PkgUserReassignAdminReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserReassignAdminReply::InternalSwap(PkgUserReassignAdminReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  std::swap(permission_, other->permission_);
  rolename_.Swap(&other->rolename_);
  std::swap(permissionroleid_, other->permissionroleid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserReassignAdminReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserReassignAdminReply_descriptor_;
  metadata.reflection = PkgUserReassignAdminReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgUserDeleteFromCompanyReq::kUseridlistFieldNumber;
#endif  // !_MSC_VER

PkgUserDeleteFromCompanyReq::PkgUserDeleteFromCompanyReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgUserDeleteFromCompanyReq)
}

void PkgUserDeleteFromCompanyReq::InitAsDefaultInstance() {
}

PkgUserDeleteFromCompanyReq::PkgUserDeleteFromCompanyReq(const PkgUserDeleteFromCompanyReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgUserDeleteFromCompanyReq)
}

void PkgUserDeleteFromCompanyReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserDeleteFromCompanyReq::~PkgUserDeleteFromCompanyReq() {
  // @@protoc_insertion_point(destructor:comm.PkgUserDeleteFromCompanyReq)
  SharedDtor();
}

void PkgUserDeleteFromCompanyReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PkgUserDeleteFromCompanyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserDeleteFromCompanyReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserDeleteFromCompanyReq_descriptor_;
}

const PkgUserDeleteFromCompanyReq& PkgUserDeleteFromCompanyReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgUserDeleteFromCompanyReq* PkgUserDeleteFromCompanyReq::default_instance_ = NULL;

PkgUserDeleteFromCompanyReq* PkgUserDeleteFromCompanyReq::New(::google::protobuf::Arena* arena) const {
  PkgUserDeleteFromCompanyReq* n = new PkgUserDeleteFromCompanyReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserDeleteFromCompanyReq::Clear() {
  useridlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserDeleteFromCompanyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgUserDeleteFromCompanyReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 useridlist = 1;
      case 1: {
        if (tag == 8) {
         parse_useridlist:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_useridlist())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_useridlist())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_useridlist;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgUserDeleteFromCompanyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgUserDeleteFromCompanyReq)
  return false;
#undef DO_
}

void PkgUserDeleteFromCompanyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgUserDeleteFromCompanyReq)
  // repeated int32 useridlist = 1;
  for (int i = 0; i < this->useridlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->useridlist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgUserDeleteFromCompanyReq)
}

::google::protobuf::uint8* PkgUserDeleteFromCompanyReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgUserDeleteFromCompanyReq)
  // repeated int32 useridlist = 1;
  for (int i = 0; i < this->useridlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->useridlist(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgUserDeleteFromCompanyReq)
  return target;
}

int PkgUserDeleteFromCompanyReq::ByteSize() const {
  int total_size = 0;

  // repeated int32 useridlist = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->useridlist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->useridlist(i));
    }
    total_size += 1 * this->useridlist_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserDeleteFromCompanyReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserDeleteFromCompanyReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserDeleteFromCompanyReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserDeleteFromCompanyReq::MergeFrom(const PkgUserDeleteFromCompanyReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  useridlist_.MergeFrom(from.useridlist_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserDeleteFromCompanyReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserDeleteFromCompanyReq::CopyFrom(const PkgUserDeleteFromCompanyReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserDeleteFromCompanyReq::IsInitialized() const {

  return true;
}

void PkgUserDeleteFromCompanyReq::Swap(PkgUserDeleteFromCompanyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserDeleteFromCompanyReq::InternalSwap(PkgUserDeleteFromCompanyReq* other) {
  useridlist_.UnsafeArenaSwap(&other->useridlist_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserDeleteFromCompanyReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserDeleteFromCompanyReq_descriptor_;
  metadata.reflection = PkgUserDeleteFromCompanyReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgUserDeleteFromCompanyReply::kIssuccessFieldNumber;
const int PkgUserDeleteFromCompanyReply::kErrFieldNumber;
const int PkgUserDeleteFromCompanyReply::kCompanyusernumberFieldNumber;
#endif  // !_MSC_VER

PkgUserDeleteFromCompanyReply::PkgUserDeleteFromCompanyReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgUserDeleteFromCompanyReply)
}

void PkgUserDeleteFromCompanyReply::InitAsDefaultInstance() {
}

PkgUserDeleteFromCompanyReply::PkgUserDeleteFromCompanyReply(const PkgUserDeleteFromCompanyReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgUserDeleteFromCompanyReply)
}

void PkgUserDeleteFromCompanyReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = true;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  companyusernumber_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserDeleteFromCompanyReply::~PkgUserDeleteFromCompanyReply() {
  // @@protoc_insertion_point(destructor:comm.PkgUserDeleteFromCompanyReply)
  SharedDtor();
}

void PkgUserDeleteFromCompanyReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgUserDeleteFromCompanyReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserDeleteFromCompanyReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserDeleteFromCompanyReply_descriptor_;
}

const PkgUserDeleteFromCompanyReply& PkgUserDeleteFromCompanyReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgUserDeleteFromCompanyReply* PkgUserDeleteFromCompanyReply::default_instance_ = NULL;

PkgUserDeleteFromCompanyReply* PkgUserDeleteFromCompanyReply::New(::google::protobuf::Arena* arena) const {
  PkgUserDeleteFromCompanyReply* n = new PkgUserDeleteFromCompanyReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserDeleteFromCompanyReply::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    issuccess_ = true;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    companyusernumber_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserDeleteFromCompanyReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgUserDeleteFromCompanyReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1 [default = true];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserDeleteFromCompanyReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_companyusernumber;
        break;
      }

      // optional int32 companyusernumber = 18;
      case 18: {
        if (tag == 144) {
         parse_companyusernumber:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &companyusernumber_)));
          set_has_companyusernumber();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgUserDeleteFromCompanyReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgUserDeleteFromCompanyReply)
  return false;
#undef DO_
}

void PkgUserDeleteFromCompanyReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgUserDeleteFromCompanyReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserDeleteFromCompanyReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  // optional int32 companyusernumber = 18;
  if (has_companyusernumber()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->companyusernumber(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgUserDeleteFromCompanyReply)
}

::google::protobuf::uint8* PkgUserDeleteFromCompanyReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgUserDeleteFromCompanyReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserDeleteFromCompanyReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  // optional int32 companyusernumber = 18;
  if (has_companyusernumber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->companyusernumber(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgUserDeleteFromCompanyReply)
  return target;
}

int PkgUserDeleteFromCompanyReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  if (_has_bits_[1 / 32] & 6) {
    // optional string err = 2;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->err());
    }

    // optional int32 companyusernumber = 18;
    if (has_companyusernumber()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->companyusernumber());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserDeleteFromCompanyReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserDeleteFromCompanyReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserDeleteFromCompanyReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserDeleteFromCompanyReply::MergeFrom(const PkgUserDeleteFromCompanyReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
    if (from.has_companyusernumber()) {
      set_companyusernumber(from.companyusernumber());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserDeleteFromCompanyReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserDeleteFromCompanyReply::CopyFrom(const PkgUserDeleteFromCompanyReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserDeleteFromCompanyReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgUserDeleteFromCompanyReply::Swap(PkgUserDeleteFromCompanyReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserDeleteFromCompanyReply::InternalSwap(PkgUserDeleteFromCompanyReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  std::swap(companyusernumber_, other->companyusernumber_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserDeleteFromCompanyReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserDeleteFromCompanyReply_descriptor_;
  metadata.reflection = PkgUserDeleteFromCompanyReply_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* PkgUserExitCompanyReq_EnCmd_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserExitCompanyReq_EnCmd_descriptor_;
}
bool PkgUserExitCompanyReq_EnCmd_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PkgUserExitCompanyReq_EnCmd PkgUserExitCompanyReq::CMD_EXIT;
const PkgUserExitCompanyReq_EnCmd PkgUserExitCompanyReq::CMD_DISMISS;
const PkgUserExitCompanyReq_EnCmd PkgUserExitCompanyReq::EnCmd_MIN;
const PkgUserExitCompanyReq_EnCmd PkgUserExitCompanyReq::EnCmd_MAX;
const int PkgUserExitCompanyReq::EnCmd_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int PkgUserExitCompanyReq::kEncmdFieldNumber;
#endif  // !_MSC_VER

PkgUserExitCompanyReq::PkgUserExitCompanyReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgUserExitCompanyReq)
}

void PkgUserExitCompanyReq::InitAsDefaultInstance() {
}

PkgUserExitCompanyReq::PkgUserExitCompanyReq(const PkgUserExitCompanyReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgUserExitCompanyReq)
}

void PkgUserExitCompanyReq::SharedCtor() {
  _cached_size_ = 0;
  encmd_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserExitCompanyReq::~PkgUserExitCompanyReq() {
  // @@protoc_insertion_point(destructor:comm.PkgUserExitCompanyReq)
  SharedDtor();
}

void PkgUserExitCompanyReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PkgUserExitCompanyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserExitCompanyReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserExitCompanyReq_descriptor_;
}

const PkgUserExitCompanyReq& PkgUserExitCompanyReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgUserExitCompanyReq* PkgUserExitCompanyReq::default_instance_ = NULL;

PkgUserExitCompanyReq* PkgUserExitCompanyReq::New(::google::protobuf::Arena* arena) const {
  PkgUserExitCompanyReq* n = new PkgUserExitCompanyReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserExitCompanyReq::Clear() {
  encmd_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserExitCompanyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgUserExitCompanyReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .comm.PkgUserExitCompanyReq.EnCmd encmd = 1 [default = CMD_EXIT];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::comm::PkgUserExitCompanyReq_EnCmd_IsValid(value)) {
            set_encmd(static_cast< ::comm::PkgUserExitCompanyReq_EnCmd >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgUserExitCompanyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgUserExitCompanyReq)
  return false;
#undef DO_
}

void PkgUserExitCompanyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgUserExitCompanyReq)
  // required .comm.PkgUserExitCompanyReq.EnCmd encmd = 1 [default = CMD_EXIT];
  if (has_encmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->encmd(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgUserExitCompanyReq)
}

::google::protobuf::uint8* PkgUserExitCompanyReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgUserExitCompanyReq)
  // required .comm.PkgUserExitCompanyReq.EnCmd encmd = 1 [default = CMD_EXIT];
  if (has_encmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->encmd(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgUserExitCompanyReq)
  return target;
}

int PkgUserExitCompanyReq::ByteSize() const {
  int total_size = 0;

  // required .comm.PkgUserExitCompanyReq.EnCmd encmd = 1 [default = CMD_EXIT];
  if (has_encmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->encmd());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserExitCompanyReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserExitCompanyReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserExitCompanyReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserExitCompanyReq::MergeFrom(const PkgUserExitCompanyReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_encmd()) {
      set_encmd(from.encmd());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserExitCompanyReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserExitCompanyReq::CopyFrom(const PkgUserExitCompanyReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserExitCompanyReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgUserExitCompanyReq::Swap(PkgUserExitCompanyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserExitCompanyReq::InternalSwap(PkgUserExitCompanyReq* other) {
  std::swap(encmd_, other->encmd_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserExitCompanyReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserExitCompanyReq_descriptor_;
  metadata.reflection = PkgUserExitCompanyReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgUserExitCompanyReply::kIssuccessFieldNumber;
const int PkgUserExitCompanyReply::kErrFieldNumber;
#endif  // !_MSC_VER

PkgUserExitCompanyReply::PkgUserExitCompanyReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgUserExitCompanyReply)
}

void PkgUserExitCompanyReply::InitAsDefaultInstance() {
}

PkgUserExitCompanyReply::PkgUserExitCompanyReply(const PkgUserExitCompanyReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgUserExitCompanyReply)
}

void PkgUserExitCompanyReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = true;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserExitCompanyReply::~PkgUserExitCompanyReply() {
  // @@protoc_insertion_point(destructor:comm.PkgUserExitCompanyReply)
  SharedDtor();
}

void PkgUserExitCompanyReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgUserExitCompanyReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserExitCompanyReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserExitCompanyReply_descriptor_;
}

const PkgUserExitCompanyReply& PkgUserExitCompanyReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgUserExitCompanyReply* PkgUserExitCompanyReply::default_instance_ = NULL;

PkgUserExitCompanyReply* PkgUserExitCompanyReply::New(::google::protobuf::Arena* arena) const {
  PkgUserExitCompanyReply* n = new PkgUserExitCompanyReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserExitCompanyReply::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    issuccess_ = true;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserExitCompanyReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgUserExitCompanyReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1 [default = true];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgUserExitCompanyReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgUserExitCompanyReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgUserExitCompanyReply)
  return false;
#undef DO_
}

void PkgUserExitCompanyReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgUserExitCompanyReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserExitCompanyReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgUserExitCompanyReply)
}

::google::protobuf::uint8* PkgUserExitCompanyReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgUserExitCompanyReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgUserExitCompanyReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgUserExitCompanyReply)
  return target;
}

int PkgUserExitCompanyReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  // optional string err = 2;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserExitCompanyReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserExitCompanyReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserExitCompanyReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserExitCompanyReply::MergeFrom(const PkgUserExitCompanyReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserExitCompanyReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserExitCompanyReply::CopyFrom(const PkgUserExitCompanyReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserExitCompanyReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgUserExitCompanyReply::Swap(PkgUserExitCompanyReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserExitCompanyReply::InternalSwap(PkgUserExitCompanyReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserExitCompanyReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserExitCompanyReply_descriptor_;
  metadata.reflection = PkgUserExitCompanyReply_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* PkgTaskInfo_EnTaskLevel_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgTaskInfo_EnTaskLevel_descriptor_;
}
bool PkgTaskInfo_EnTaskLevel_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PkgTaskInfo_EnTaskLevel PkgTaskInfo::TL_IMPORTANCE_ARGENCY;
const PkgTaskInfo_EnTaskLevel PkgTaskInfo::TL_IMPORTANCE_NOTARGENCY;
const PkgTaskInfo_EnTaskLevel PkgTaskInfo::TL_NOTIMPORTANCE_ARGENCY;
const PkgTaskInfo_EnTaskLevel PkgTaskInfo::TL_NOTIMPORTANCE_NOTARGENCY;
const PkgTaskInfo_EnTaskLevel PkgTaskInfo::EnTaskLevel_MIN;
const PkgTaskInfo_EnTaskLevel PkgTaskInfo::EnTaskLevel_MAX;
const int PkgTaskInfo::EnTaskLevel_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* PkgTaskInfo_EnTaskStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgTaskInfo_EnTaskStatus_descriptor_;
}
bool PkgTaskInfo_EnTaskStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PkgTaskInfo_EnTaskStatus PkgTaskInfo::TS_NEW;
const PkgTaskInfo_EnTaskStatus PkgTaskInfo::TS_GOING;
const PkgTaskInfo_EnTaskStatus PkgTaskInfo::TS_FINISHED;
const PkgTaskInfo_EnTaskStatus PkgTaskInfo::TS_DENY;
const PkgTaskInfo_EnTaskStatus PkgTaskInfo::TS_DELETED;
const PkgTaskInfo_EnTaskStatus PkgTaskInfo::EnTaskStatus_MIN;
const PkgTaskInfo_EnTaskStatus PkgTaskInfo::EnTaskStatus_MAX;
const int PkgTaskInfo::EnTaskStatus_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int PkgTaskInfo::kIdFieldNumber;
const int PkgTaskInfo::kParentidFieldNumber;
const int PkgTaskInfo::kNameFieldNumber;
const int PkgTaskInfo::kTaskdateFieldNumber;
const int PkgTaskInfo::kContentFieldNumber;
const int PkgTaskInfo::kRemarkFieldNumber;
const int PkgTaskInfo::kTasklevelFieldNumber;
const int PkgTaskInfo::kCreateuseridFieldNumber;
const int PkgTaskInfo::kStatusFieldNumber;
const int PkgTaskInfo::kCreatetimeFieldNumber;
const int PkgTaskInfo::kFinishtimeFieldNumber;
const int PkgTaskInfo::kAccepteduseridFieldNumber;
const int PkgTaskInfo::kCoworkidFieldNumber;
const int PkgTaskInfo::kUpdatetimeFieldNumber;
const int PkgTaskInfo::kIsreadedFieldNumber;
const int PkgTaskInfo::kSortflagFieldNumber;
const int PkgTaskInfo::kCreatedrealnameFieldNumber;
const int PkgTaskInfo::kAcceptedrealnameFieldNumber;
#endif  // !_MSC_VER

PkgTaskInfo::PkgTaskInfo()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgTaskInfo)
}

void PkgTaskInfo::InitAsDefaultInstance() {
}

PkgTaskInfo::PkgTaskInfo(const PkgTaskInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgTaskInfo)
}

void PkgTaskInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  parentid_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tasklevel_ = 1;
  createuserid_ = 0;
  status_ = 0;
  createtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  finishtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accepteduserid_ = 0;
  coworkid_ = 0;
  updatetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isreaded_ = 0;
  sortflag_ = 0;
  createdrealname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  acceptedrealname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgTaskInfo::~PkgTaskInfo() {
  // @@protoc_insertion_point(destructor:comm.PkgTaskInfo)
  SharedDtor();
}

void PkgTaskInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  finishtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createdrealname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  acceptedrealname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgTaskInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgTaskInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgTaskInfo_descriptor_;
}

const PkgTaskInfo& PkgTaskInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgTaskInfo* PkgTaskInfo::default_instance_ = NULL;

PkgTaskInfo* PkgTaskInfo::New(::google::protobuf::Arena* arena) const {
  PkgTaskInfo* n = new PkgTaskInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgTaskInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgTaskInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(id_, parentid_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_taskdate()) {
      taskdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_content()) {
      content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_remark()) {
      remark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    tasklevel_ = 1;
    createuserid_ = 0;
  }
  if (_has_bits_[8 / 32] & 65280) {
    ZR_(status_, accepteduserid_);
    ZR_(coworkid_, isreaded_);
    if (has_createtime()) {
      createtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_finishtime()) {
      finishtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_updatetime()) {
      updatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    sortflag_ = 0;
  }
  if (_has_bits_[16 / 32] & 196608) {
    if (has_createdrealname()) {
      createdrealname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_acceptedrealname()) {
      acceptedrealname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgTaskInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgTaskInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_parentid;
        break;
      }

      // optional int32 parentid = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_parentid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &parentid_)));
          set_has_parentid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgTaskInfo.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_taskdate;
        break;
      }

      // optional string taskdate = 4;
      case 4: {
        if (tag == 34) {
         parse_taskdate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_taskdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->taskdate().data(), this->taskdate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgTaskInfo.taskdate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_content;
        break;
      }

      // optional string content = 5;
      case 5: {
        if (tag == 42) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgTaskInfo.content");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_remark;
        break;
      }

      // optional string remark = 6;
      case 6: {
        if (tag == 50) {
         parse_remark:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remark()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->remark().data(), this->remark().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgTaskInfo.remark");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_tasklevel;
        break;
      }

      // optional .comm.PkgTaskInfo.EnTaskLevel tasklevel = 7 [default = TL_IMPORTANCE_NOTARGENCY];
      case 7: {
        if (tag == 56) {
         parse_tasklevel:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::comm::PkgTaskInfo_EnTaskLevel_IsValid(value)) {
            set_tasklevel(static_cast< ::comm::PkgTaskInfo_EnTaskLevel >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_createuserid;
        break;
      }

      // optional int32 createuserid = 8;
      case 8: {
        if (tag == 64) {
         parse_createuserid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &createuserid_)));
          set_has_createuserid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_status;
        break;
      }

      // optional .comm.PkgTaskInfo.EnTaskStatus status = 9 [default = TS_NEW];
      case 9: {
        if (tag == 72) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::comm::PkgTaskInfo_EnTaskStatus_IsValid(value)) {
            set_status(static_cast< ::comm::PkgTaskInfo_EnTaskStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(9, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_createtime;
        break;
      }

      // optional string createtime = 10;
      case 10: {
        if (tag == 82) {
         parse_createtime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_createtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->createtime().data(), this->createtime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgTaskInfo.createtime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_finishtime;
        break;
      }

      // optional string finishtime = 11;
      case 11: {
        if (tag == 90) {
         parse_finishtime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_finishtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->finishtime().data(), this->finishtime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgTaskInfo.finishtime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_accepteduserid;
        break;
      }

      // optional int32 accepteduserid = 13 [default = 0];
      case 13: {
        if (tag == 104) {
         parse_accepteduserid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &accepteduserid_)));
          set_has_accepteduserid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_coworkid;
        break;
      }

      // optional int32 coworkid = 14 [default = 0];
      case 14: {
        if (tag == 112) {
         parse_coworkid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &coworkid_)));
          set_has_coworkid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_updatetime;
        break;
      }

      // optional string updatetime = 15;
      case 15: {
        if (tag == 122) {
         parse_updatetime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_updatetime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->updatetime().data(), this->updatetime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgTaskInfo.updatetime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_isreaded;
        break;
      }

      // optional int32 isreaded = 16 [default = 0];
      case 16: {
        if (tag == 128) {
         parse_isreaded:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isreaded_)));
          set_has_isreaded();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_sortflag;
        break;
      }

      // optional int32 sortflag = 17 [default = 0];
      case 17: {
        if (tag == 136) {
         parse_sortflag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sortflag_)));
          set_has_sortflag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(242)) goto parse_createdrealname;
        break;
      }

      // optional string createdrealname = 30;
      case 30: {
        if (tag == 242) {
         parse_createdrealname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_createdrealname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->createdrealname().data(), this->createdrealname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgTaskInfo.createdrealname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(250)) goto parse_acceptedrealname;
        break;
      }

      // optional string acceptedrealname = 31;
      case 31: {
        if (tag == 250) {
         parse_acceptedrealname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_acceptedrealname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->acceptedrealname().data(), this->acceptedrealname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgTaskInfo.acceptedrealname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgTaskInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgTaskInfo)
  return false;
#undef DO_
}

void PkgTaskInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgTaskInfo)
  // optional int32 id = 1 [default = 0];
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 parentid = 2 [default = 0];
  if (has_parentid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->parentid(), output);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional string taskdate = 4;
  if (has_taskdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->taskdate().data(), this->taskdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskInfo.taskdate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->taskdate(), output);
  }

  // optional string content = 5;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskInfo.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->content(), output);
  }

  // optional string remark = 6;
  if (has_remark()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->remark().data(), this->remark().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskInfo.remark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->remark(), output);
  }

  // optional .comm.PkgTaskInfo.EnTaskLevel tasklevel = 7 [default = TL_IMPORTANCE_NOTARGENCY];
  if (has_tasklevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->tasklevel(), output);
  }

  // optional int32 createuserid = 8;
  if (has_createuserid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->createuserid(), output);
  }

  // optional .comm.PkgTaskInfo.EnTaskStatus status = 9 [default = TS_NEW];
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->status(), output);
  }

  // optional string createtime = 10;
  if (has_createtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createtime().data(), this->createtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskInfo.createtime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->createtime(), output);
  }

  // optional string finishtime = 11;
  if (has_finishtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->finishtime().data(), this->finishtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskInfo.finishtime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->finishtime(), output);
  }

  // optional int32 accepteduserid = 13 [default = 0];
  if (has_accepteduserid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->accepteduserid(), output);
  }

  // optional int32 coworkid = 14 [default = 0];
  if (has_coworkid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->coworkid(), output);
  }

  // optional string updatetime = 15;
  if (has_updatetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->updatetime().data(), this->updatetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskInfo.updatetime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->updatetime(), output);
  }

  // optional int32 isreaded = 16 [default = 0];
  if (has_isreaded()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->isreaded(), output);
  }

  // optional int32 sortflag = 17 [default = 0];
  if (has_sortflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->sortflag(), output);
  }

  // optional string createdrealname = 30;
  if (has_createdrealname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createdrealname().data(), this->createdrealname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskInfo.createdrealname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      30, this->createdrealname(), output);
  }

  // optional string acceptedrealname = 31;
  if (has_acceptedrealname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->acceptedrealname().data(), this->acceptedrealname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskInfo.acceptedrealname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      31, this->acceptedrealname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgTaskInfo)
}

::google::protobuf::uint8* PkgTaskInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgTaskInfo)
  // optional int32 id = 1 [default = 0];
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 parentid = 2 [default = 0];
  if (has_parentid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->parentid(), target);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional string taskdate = 4;
  if (has_taskdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->taskdate().data(), this->taskdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskInfo.taskdate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->taskdate(), target);
  }

  // optional string content = 5;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskInfo.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->content(), target);
  }

  // optional string remark = 6;
  if (has_remark()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->remark().data(), this->remark().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskInfo.remark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->remark(), target);
  }

  // optional .comm.PkgTaskInfo.EnTaskLevel tasklevel = 7 [default = TL_IMPORTANCE_NOTARGENCY];
  if (has_tasklevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->tasklevel(), target);
  }

  // optional int32 createuserid = 8;
  if (has_createuserid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->createuserid(), target);
  }

  // optional .comm.PkgTaskInfo.EnTaskStatus status = 9 [default = TS_NEW];
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->status(), target);
  }

  // optional string createtime = 10;
  if (has_createtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createtime().data(), this->createtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskInfo.createtime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->createtime(), target);
  }

  // optional string finishtime = 11;
  if (has_finishtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->finishtime().data(), this->finishtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskInfo.finishtime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->finishtime(), target);
  }

  // optional int32 accepteduserid = 13 [default = 0];
  if (has_accepteduserid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->accepteduserid(), target);
  }

  // optional int32 coworkid = 14 [default = 0];
  if (has_coworkid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->coworkid(), target);
  }

  // optional string updatetime = 15;
  if (has_updatetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->updatetime().data(), this->updatetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskInfo.updatetime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->updatetime(), target);
  }

  // optional int32 isreaded = 16 [default = 0];
  if (has_isreaded()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->isreaded(), target);
  }

  // optional int32 sortflag = 17 [default = 0];
  if (has_sortflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->sortflag(), target);
  }

  // optional string createdrealname = 30;
  if (has_createdrealname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createdrealname().data(), this->createdrealname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskInfo.createdrealname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        30, this->createdrealname(), target);
  }

  // optional string acceptedrealname = 31;
  if (has_acceptedrealname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->acceptedrealname().data(), this->acceptedrealname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskInfo.acceptedrealname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        31, this->acceptedrealname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgTaskInfo)
  return target;
}

int PkgTaskInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255) {
    // optional int32 id = 1 [default = 0];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 parentid = 2 [default = 0];
    if (has_parentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->parentid());
    }

    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string taskdate = 4;
    if (has_taskdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->taskdate());
    }

    // optional string content = 5;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }

    // optional string remark = 6;
    if (has_remark()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->remark());
    }

    // optional .comm.PkgTaskInfo.EnTaskLevel tasklevel = 7 [default = TL_IMPORTANCE_NOTARGENCY];
    if (has_tasklevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->tasklevel());
    }

    // optional int32 createuserid = 8;
    if (has_createuserid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->createuserid());
    }

  }
  if (_has_bits_[8 / 32] & 65280) {
    // optional .comm.PkgTaskInfo.EnTaskStatus status = 9 [default = TS_NEW];
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional string createtime = 10;
    if (has_createtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->createtime());
    }

    // optional string finishtime = 11;
    if (has_finishtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->finishtime());
    }

    // optional int32 accepteduserid = 13 [default = 0];
    if (has_accepteduserid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->accepteduserid());
    }

    // optional int32 coworkid = 14 [default = 0];
    if (has_coworkid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->coworkid());
    }

    // optional string updatetime = 15;
    if (has_updatetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->updatetime());
    }

    // optional int32 isreaded = 16 [default = 0];
    if (has_isreaded()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->isreaded());
    }

    // optional int32 sortflag = 17 [default = 0];
    if (has_sortflag()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sortflag());
    }

  }
  if (_has_bits_[16 / 32] & 196608) {
    // optional string createdrealname = 30;
    if (has_createdrealname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->createdrealname());
    }

    // optional string acceptedrealname = 31;
    if (has_acceptedrealname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->acceptedrealname());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgTaskInfo::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgTaskInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgTaskInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgTaskInfo::MergeFrom(const PkgTaskInfo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_parentid()) {
      set_parentid(from.parentid());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_taskdate()) {
      set_has_taskdate();
      taskdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskdate_);
    }
    if (from.has_content()) {
      set_has_content();
      content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
    }
    if (from.has_remark()) {
      set_has_remark();
      remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
    }
    if (from.has_tasklevel()) {
      set_tasklevel(from.tasklevel());
    }
    if (from.has_createuserid()) {
      set_createuserid(from.createuserid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_createtime()) {
      set_has_createtime();
      createtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.createtime_);
    }
    if (from.has_finishtime()) {
      set_has_finishtime();
      finishtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.finishtime_);
    }
    if (from.has_accepteduserid()) {
      set_accepteduserid(from.accepteduserid());
    }
    if (from.has_coworkid()) {
      set_coworkid(from.coworkid());
    }
    if (from.has_updatetime()) {
      set_has_updatetime();
      updatetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.updatetime_);
    }
    if (from.has_isreaded()) {
      set_isreaded(from.isreaded());
    }
    if (from.has_sortflag()) {
      set_sortflag(from.sortflag());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_createdrealname()) {
      set_has_createdrealname();
      createdrealname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.createdrealname_);
    }
    if (from.has_acceptedrealname()) {
      set_has_acceptedrealname();
      acceptedrealname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.acceptedrealname_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgTaskInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgTaskInfo::CopyFrom(const PkgTaskInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgTaskInfo::IsInitialized() const {

  return true;
}

void PkgTaskInfo::Swap(PkgTaskInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgTaskInfo::InternalSwap(PkgTaskInfo* other) {
  std::swap(id_, other->id_);
  std::swap(parentid_, other->parentid_);
  name_.Swap(&other->name_);
  taskdate_.Swap(&other->taskdate_);
  content_.Swap(&other->content_);
  remark_.Swap(&other->remark_);
  std::swap(tasklevel_, other->tasklevel_);
  std::swap(createuserid_, other->createuserid_);
  std::swap(status_, other->status_);
  createtime_.Swap(&other->createtime_);
  finishtime_.Swap(&other->finishtime_);
  std::swap(accepteduserid_, other->accepteduserid_);
  std::swap(coworkid_, other->coworkid_);
  updatetime_.Swap(&other->updatetime_);
  std::swap(isreaded_, other->isreaded_);
  std::swap(sortflag_, other->sortflag_);
  createdrealname_.Swap(&other->createdrealname_);
  acceptedrealname_.Swap(&other->acceptedrealname_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgTaskInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgTaskInfo_descriptor_;
  metadata.reflection = PkgTaskInfo_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* PkgTaskPageQueryReq_EnTaskFlag_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgTaskPageQueryReq_EnTaskFlag_descriptor_;
}
bool PkgTaskPageQueryReq_EnTaskFlag_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 10:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PkgTaskPageQueryReq_EnTaskFlag PkgTaskPageQueryReq::TF_MYTASK;
const PkgTaskPageQueryReq_EnTaskFlag PkgTaskPageQueryReq::TF_COWORKTASK;
const PkgTaskPageQueryReq_EnTaskFlag PkgTaskPageQueryReq::TF_TASKTABLE;
const PkgTaskPageQueryReq_EnTaskFlag PkgTaskPageQueryReq::TF_USERDEFINED;
const PkgTaskPageQueryReq_EnTaskFlag PkgTaskPageQueryReq::EnTaskFlag_MIN;
const PkgTaskPageQueryReq_EnTaskFlag PkgTaskPageQueryReq::EnTaskFlag_MAX;
const int PkgTaskPageQueryReq::EnTaskFlag_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* PkgTaskPageQueryReq_EnTaskQueryCondition_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgTaskPageQueryReq_EnTaskQueryCondition_descriptor_;
}
bool PkgTaskPageQueryReq_EnTaskQueryCondition_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 1024:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PkgTaskPageQueryReq_EnTaskQueryCondition PkgTaskPageQueryReq::TQC_DATESTART;
const PkgTaskPageQueryReq_EnTaskQueryCondition PkgTaskPageQueryReq::TQC_DATEEND;
const PkgTaskPageQueryReq_EnTaskQueryCondition PkgTaskPageQueryReq::TQC_KEYFORNAME;
const PkgTaskPageQueryReq_EnTaskQueryCondition PkgTaskPageQueryReq::TQC_KEYFORCONTENT;
const PkgTaskPageQueryReq_EnTaskQueryCondition PkgTaskPageQueryReq::TQC_TASKSTATUS;
const PkgTaskPageQueryReq_EnTaskQueryCondition PkgTaskPageQueryReq::TQC_TASKNOTSTATUS;
const PkgTaskPageQueryReq_EnTaskQueryCondition PkgTaskPageQueryReq::TQC_ONLYSEND;
const PkgTaskPageQueryReq_EnTaskQueryCondition PkgTaskPageQueryReq::TQC_ONLYRECV;
const PkgTaskPageQueryReq_EnTaskQueryCondition PkgTaskPageQueryReq::TQC_READEDFLAG;
const PkgTaskPageQueryReq_EnTaskQueryCondition PkgTaskPageQueryReq::TQC_LASTUPDATETIME;
const PkgTaskPageQueryReq_EnTaskQueryCondition PkgTaskPageQueryReq::EnTaskQueryCondition_MIN;
const PkgTaskPageQueryReq_EnTaskQueryCondition PkgTaskPageQueryReq::EnTaskQueryCondition_MAX;
const int PkgTaskPageQueryReq::EnTaskQueryCondition_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* PkgTaskPageQueryReq_EnPageFlag_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgTaskPageQueryReq_EnPageFlag_descriptor_;
}
bool PkgTaskPageQueryReq_EnPageFlag_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PkgTaskPageQueryReq_EnPageFlag PkgTaskPageQueryReq::P_ONLYNUM;
const PkgTaskPageQueryReq_EnPageFlag PkgTaskPageQueryReq::P_RETURNALL;
const PkgTaskPageQueryReq_EnPageFlag PkgTaskPageQueryReq::P_RETURNPAGE;
const PkgTaskPageQueryReq_EnPageFlag PkgTaskPageQueryReq::EnPageFlag_MIN;
const PkgTaskPageQueryReq_EnPageFlag PkgTaskPageQueryReq::EnPageFlag_MAX;
const int PkgTaskPageQueryReq::EnPageFlag_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_descriptor_;
}
bool PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag PkgTaskPageQueryReq_PkgTaskQueryCondition::PR_ALL;
const PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag PkgTaskPageQueryReq_PkgTaskQueryCondition::PR_READED;
const PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag PkgTaskPageQueryReq_PkgTaskQueryCondition::PR_NOTREADED;
const PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag PkgTaskPageQueryReq_PkgTaskQueryCondition::EnReadedFlag_MIN;
const PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag PkgTaskPageQueryReq_PkgTaskQueryCondition::EnReadedFlag_MAX;
const int PkgTaskPageQueryReq_PkgTaskQueryCondition::EnReadedFlag_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int PkgTaskPageQueryReq_PkgTaskQueryCondition::kTaskdatestartFieldNumber;
const int PkgTaskPageQueryReq_PkgTaskQueryCondition::kTaskdateendFieldNumber;
const int PkgTaskPageQueryReq_PkgTaskQueryCondition::kKeyfornameFieldNumber;
const int PkgTaskPageQueryReq_PkgTaskQueryCondition::kKeyforcontentFieldNumber;
const int PkgTaskPageQueryReq_PkgTaskQueryCondition::kTaskstatuslistFieldNumber;
const int PkgTaskPageQueryReq_PkgTaskQueryCondition::kEnreadedflagFieldNumber;
const int PkgTaskPageQueryReq_PkgTaskQueryCondition::kLastupdatetimeFieldNumber;
#endif  // !_MSC_VER

PkgTaskPageQueryReq_PkgTaskQueryCondition::PkgTaskPageQueryReq_PkgTaskQueryCondition()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition)
}

void PkgTaskPageQueryReq_PkgTaskQueryCondition::InitAsDefaultInstance() {
}

PkgTaskPageQueryReq_PkgTaskQueryCondition::PkgTaskPageQueryReq_PkgTaskQueryCondition(const PkgTaskPageQueryReq_PkgTaskQueryCondition& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition)
}

void PkgTaskPageQueryReq_PkgTaskQueryCondition::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  taskdatestart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskdateend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyforname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyforcontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enreadedflag_ = 1;
  lastupdatetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgTaskPageQueryReq_PkgTaskQueryCondition::~PkgTaskPageQueryReq_PkgTaskQueryCondition() {
  // @@protoc_insertion_point(destructor:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition)
  SharedDtor();
}

void PkgTaskPageQueryReq_PkgTaskQueryCondition::SharedDtor() {
  taskdatestart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskdateend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyforname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyforcontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lastupdatetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgTaskPageQueryReq_PkgTaskQueryCondition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgTaskPageQueryReq_PkgTaskQueryCondition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgTaskPageQueryReq_PkgTaskQueryCondition_descriptor_;
}

const PkgTaskPageQueryReq_PkgTaskQueryCondition& PkgTaskPageQueryReq_PkgTaskQueryCondition::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgTaskPageQueryReq_PkgTaskQueryCondition* PkgTaskPageQueryReq_PkgTaskQueryCondition::default_instance_ = NULL;

PkgTaskPageQueryReq_PkgTaskQueryCondition* PkgTaskPageQueryReq_PkgTaskQueryCondition::New(::google::protobuf::Arena* arena) const {
  PkgTaskPageQueryReq_PkgTaskQueryCondition* n = new PkgTaskPageQueryReq_PkgTaskQueryCondition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgTaskPageQueryReq_PkgTaskQueryCondition::Clear() {
  if (_has_bits_[0 / 32] & 111) {
    if (has_taskdatestart()) {
      taskdatestart_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_taskdateend()) {
      taskdateend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_keyforname()) {
      keyforname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_keyforcontent()) {
      keyforcontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    enreadedflag_ = 1;
    if (has_lastupdatetime()) {
      lastupdatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  taskstatuslist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgTaskPageQueryReq_PkgTaskQueryCondition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string taskdatestart = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_taskdatestart()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->taskdatestart().data(), this->taskdatestart().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.taskdatestart");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_taskdateend;
        break;
      }

      // optional string taskdateend = 3;
      case 3: {
        if (tag == 26) {
         parse_taskdateend:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_taskdateend()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->taskdateend().data(), this->taskdateend().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.taskdateend");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_keyforname;
        break;
      }

      // optional string keyforname = 4;
      case 4: {
        if (tag == 34) {
         parse_keyforname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_keyforname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->keyforname().data(), this->keyforname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.keyforname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_keyforcontent;
        break;
      }

      // optional string keyforcontent = 5;
      case 5: {
        if (tag == 42) {
         parse_keyforcontent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_keyforcontent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->keyforcontent().data(), this->keyforcontent().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.keyforcontent");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_taskstatuslist;
        break;
      }

      // repeated int32 taskstatuslist = 6;
      case 6: {
        if (tag == 48) {
         parse_taskstatuslist:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48, input, this->mutable_taskstatuslist())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_taskstatuslist())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_taskstatuslist;
        if (input->ExpectTag(56)) goto parse_enreadedflag;
        break;
      }

      // optional .comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.EnReadedFlag enreadedflag = 7 [default = PR_ALL];
      case 7: {
        if (tag == 56) {
         parse_enreadedflag:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::comm::PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag_IsValid(value)) {
            set_enreadedflag(static_cast< ::comm::PkgTaskPageQueryReq_PkgTaskQueryCondition_EnReadedFlag >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(802)) goto parse_lastupdatetime;
        break;
      }

      // optional string lastupdatetime = 100;
      case 100: {
        if (tag == 802) {
         parse_lastupdatetime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lastupdatetime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->lastupdatetime().data(), this->lastupdatetime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.lastupdatetime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition)
  return false;
#undef DO_
}

void PkgTaskPageQueryReq_PkgTaskQueryCondition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition)
  // optional string taskdatestart = 2;
  if (has_taskdatestart()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->taskdatestart().data(), this->taskdatestart().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.taskdatestart");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->taskdatestart(), output);
  }

  // optional string taskdateend = 3;
  if (has_taskdateend()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->taskdateend().data(), this->taskdateend().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.taskdateend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->taskdateend(), output);
  }

  // optional string keyforname = 4;
  if (has_keyforname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keyforname().data(), this->keyforname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.keyforname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->keyforname(), output);
  }

  // optional string keyforcontent = 5;
  if (has_keyforcontent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keyforcontent().data(), this->keyforcontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.keyforcontent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->keyforcontent(), output);
  }

  // repeated int32 taskstatuslist = 6;
  for (int i = 0; i < this->taskstatuslist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->taskstatuslist(i), output);
  }

  // optional .comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.EnReadedFlag enreadedflag = 7 [default = PR_ALL];
  if (has_enreadedflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->enreadedflag(), output);
  }

  // optional string lastupdatetime = 100;
  if (has_lastupdatetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lastupdatetime().data(), this->lastupdatetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.lastupdatetime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      100, this->lastupdatetime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition)
}

::google::protobuf::uint8* PkgTaskPageQueryReq_PkgTaskQueryCondition::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition)
  // optional string taskdatestart = 2;
  if (has_taskdatestart()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->taskdatestart().data(), this->taskdatestart().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.taskdatestart");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->taskdatestart(), target);
  }

  // optional string taskdateend = 3;
  if (has_taskdateend()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->taskdateend().data(), this->taskdateend().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.taskdateend");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->taskdateend(), target);
  }

  // optional string keyforname = 4;
  if (has_keyforname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keyforname().data(), this->keyforname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.keyforname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->keyforname(), target);
  }

  // optional string keyforcontent = 5;
  if (has_keyforcontent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keyforcontent().data(), this->keyforcontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.keyforcontent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->keyforcontent(), target);
  }

  // repeated int32 taskstatuslist = 6;
  for (int i = 0; i < this->taskstatuslist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(6, this->taskstatuslist(i), target);
  }

  // optional .comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.EnReadedFlag enreadedflag = 7 [default = PR_ALL];
  if (has_enreadedflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->enreadedflag(), target);
  }

  // optional string lastupdatetime = 100;
  if (has_lastupdatetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lastupdatetime().data(), this->lastupdatetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.lastupdatetime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        100, this->lastupdatetime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgTaskPageQueryReq.PkgTaskQueryCondition)
  return target;
}

int PkgTaskPageQueryReq_PkgTaskQueryCondition::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 111) {
    // optional string taskdatestart = 2;
    if (has_taskdatestart()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->taskdatestart());
    }

    // optional string taskdateend = 3;
    if (has_taskdateend()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->taskdateend());
    }

    // optional string keyforname = 4;
    if (has_keyforname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->keyforname());
    }

    // optional string keyforcontent = 5;
    if (has_keyforcontent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->keyforcontent());
    }

    // optional .comm.PkgTaskPageQueryReq.PkgTaskQueryCondition.EnReadedFlag enreadedflag = 7 [default = PR_ALL];
    if (has_enreadedflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->enreadedflag());
    }

    // optional string lastupdatetime = 100;
    if (has_lastupdatetime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lastupdatetime());
    }

  }
  // repeated int32 taskstatuslist = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->taskstatuslist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->taskstatuslist(i));
    }
    total_size += 1 * this->taskstatuslist_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgTaskPageQueryReq_PkgTaskQueryCondition::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgTaskPageQueryReq_PkgTaskQueryCondition* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgTaskPageQueryReq_PkgTaskQueryCondition*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgTaskPageQueryReq_PkgTaskQueryCondition::MergeFrom(const PkgTaskPageQueryReq_PkgTaskQueryCondition& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  taskstatuslist_.MergeFrom(from.taskstatuslist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_taskdatestart()) {
      set_has_taskdatestart();
      taskdatestart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskdatestart_);
    }
    if (from.has_taskdateend()) {
      set_has_taskdateend();
      taskdateend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskdateend_);
    }
    if (from.has_keyforname()) {
      set_has_keyforname();
      keyforname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyforname_);
    }
    if (from.has_keyforcontent()) {
      set_has_keyforcontent();
      keyforcontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyforcontent_);
    }
    if (from.has_enreadedflag()) {
      set_enreadedflag(from.enreadedflag());
    }
    if (from.has_lastupdatetime()) {
      set_has_lastupdatetime();
      lastupdatetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lastupdatetime_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgTaskPageQueryReq_PkgTaskQueryCondition::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgTaskPageQueryReq_PkgTaskQueryCondition::CopyFrom(const PkgTaskPageQueryReq_PkgTaskQueryCondition& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgTaskPageQueryReq_PkgTaskQueryCondition::IsInitialized() const {

  return true;
}

void PkgTaskPageQueryReq_PkgTaskQueryCondition::Swap(PkgTaskPageQueryReq_PkgTaskQueryCondition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgTaskPageQueryReq_PkgTaskQueryCondition::InternalSwap(PkgTaskPageQueryReq_PkgTaskQueryCondition* other) {
  taskdatestart_.Swap(&other->taskdatestart_);
  taskdateend_.Swap(&other->taskdateend_);
  keyforname_.Swap(&other->keyforname_);
  keyforcontent_.Swap(&other->keyforcontent_);
  taskstatuslist_.UnsafeArenaSwap(&other->taskstatuslist_);
  std::swap(enreadedflag_, other->enreadedflag_);
  lastupdatetime_.Swap(&other->lastupdatetime_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgTaskPageQueryReq_PkgTaskQueryCondition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgTaskPageQueryReq_PkgTaskQueryCondition_descriptor_;
  metadata.reflection = PkgTaskPageQueryReq_PkgTaskQueryCondition_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int PkgTaskPageQueryReq::kTaskflagFieldNumber;
const int PkgTaskPageQueryReq::kEnconditonFieldNumber;
const int PkgTaskPageQueryReq::kPkgtaskqueryconditionFieldNumber;
const int PkgTaskPageQueryReq::kPageflagFieldNumber;
const int PkgTaskPageQueryReq::kIndexstartFieldNumber;
const int PkgTaskPageQueryReq::kIndexendFieldNumber;
#endif  // !_MSC_VER

PkgTaskPageQueryReq::PkgTaskPageQueryReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgTaskPageQueryReq)
}

void PkgTaskPageQueryReq::InitAsDefaultInstance() {
  pkgtaskquerycondition_ = const_cast< ::comm::PkgTaskPageQueryReq_PkgTaskQueryCondition*>(&::comm::PkgTaskPageQueryReq_PkgTaskQueryCondition::default_instance());
}

PkgTaskPageQueryReq::PkgTaskPageQueryReq(const PkgTaskPageQueryReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgTaskPageQueryReq)
}

void PkgTaskPageQueryReq::SharedCtor() {
  _cached_size_ = 0;
  taskflag_ = 0;
  enconditon_ = 0;
  pkgtaskquerycondition_ = NULL;
  pageflag_ = 2;
  indexstart_ = 0;
  indexend_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgTaskPageQueryReq::~PkgTaskPageQueryReq() {
  // @@protoc_insertion_point(destructor:comm.PkgTaskPageQueryReq)
  SharedDtor();
}

void PkgTaskPageQueryReq::SharedDtor() {
  if (this != default_instance_) {
    delete pkgtaskquerycondition_;
  }
}

void PkgTaskPageQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgTaskPageQueryReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgTaskPageQueryReq_descriptor_;
}

const PkgTaskPageQueryReq& PkgTaskPageQueryReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgTaskPageQueryReq* PkgTaskPageQueryReq::default_instance_ = NULL;

PkgTaskPageQueryReq* PkgTaskPageQueryReq::New(::google::protobuf::Arena* arena) const {
  PkgTaskPageQueryReq* n = new PkgTaskPageQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgTaskPageQueryReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgTaskPageQueryReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(taskflag_, enconditon_);
    ZR_(indexstart_, indexend_);
    if (has_pkgtaskquerycondition()) {
      if (pkgtaskquerycondition_ != NULL) pkgtaskquerycondition_->::comm::PkgTaskPageQueryReq_PkgTaskQueryCondition::Clear();
    }
    pageflag_ = 2;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgTaskPageQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgTaskPageQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .comm.PkgTaskPageQueryReq.EnTaskFlag taskflag = 1 [default = TF_MYTASK];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::comm::PkgTaskPageQueryReq_EnTaskFlag_IsValid(value)) {
            set_taskflag(static_cast< ::comm::PkgTaskPageQueryReq_EnTaskFlag >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_enconditon;
        break;
      }

      // optional int32 enconditon = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_enconditon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &enconditon_)));
          set_has_enconditon();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_pkgtaskquerycondition;
        break;
      }

      // optional .comm.PkgTaskPageQueryReq.PkgTaskQueryCondition pkgtaskquerycondition = 3;
      case 3: {
        if (tag == 26) {
         parse_pkgtaskquerycondition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pkgtaskquerycondition()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pageflag;
        break;
      }

      // optional .comm.PkgTaskPageQueryReq.EnPageFlag pageflag = 4 [default = P_RETURNALL];
      case 4: {
        if (tag == 32) {
         parse_pageflag:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::comm::PkgTaskPageQueryReq_EnPageFlag_IsValid(value)) {
            set_pageflag(static_cast< ::comm::PkgTaskPageQueryReq_EnPageFlag >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_indexstart;
        break;
      }

      // optional int32 indexstart = 5;
      case 5: {
        if (tag == 40) {
         parse_indexstart:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &indexstart_)));
          set_has_indexstart();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_indexend;
        break;
      }

      // optional int32 indexend = 6;
      case 6: {
        if (tag == 48) {
         parse_indexend:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &indexend_)));
          set_has_indexend();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgTaskPageQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgTaskPageQueryReq)
  return false;
#undef DO_
}

void PkgTaskPageQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgTaskPageQueryReq)
  // required .comm.PkgTaskPageQueryReq.EnTaskFlag taskflag = 1 [default = TF_MYTASK];
  if (has_taskflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->taskflag(), output);
  }

  // optional int32 enconditon = 2 [default = 0];
  if (has_enconditon()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->enconditon(), output);
  }

  // optional .comm.PkgTaskPageQueryReq.PkgTaskQueryCondition pkgtaskquerycondition = 3;
  if (has_pkgtaskquerycondition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->pkgtaskquerycondition_, output);
  }

  // optional .comm.PkgTaskPageQueryReq.EnPageFlag pageflag = 4 [default = P_RETURNALL];
  if (has_pageflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->pageflag(), output);
  }

  // optional int32 indexstart = 5;
  if (has_indexstart()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->indexstart(), output);
  }

  // optional int32 indexend = 6;
  if (has_indexend()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->indexend(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgTaskPageQueryReq)
}

::google::protobuf::uint8* PkgTaskPageQueryReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgTaskPageQueryReq)
  // required .comm.PkgTaskPageQueryReq.EnTaskFlag taskflag = 1 [default = TF_MYTASK];
  if (has_taskflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->taskflag(), target);
  }

  // optional int32 enconditon = 2 [default = 0];
  if (has_enconditon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->enconditon(), target);
  }

  // optional .comm.PkgTaskPageQueryReq.PkgTaskQueryCondition pkgtaskquerycondition = 3;
  if (has_pkgtaskquerycondition()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *this->pkgtaskquerycondition_, target);
  }

  // optional .comm.PkgTaskPageQueryReq.EnPageFlag pageflag = 4 [default = P_RETURNALL];
  if (has_pageflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->pageflag(), target);
  }

  // optional int32 indexstart = 5;
  if (has_indexstart()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->indexstart(), target);
  }

  // optional int32 indexend = 6;
  if (has_indexend()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->indexend(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgTaskPageQueryReq)
  return target;
}

int PkgTaskPageQueryReq::ByteSize() const {
  int total_size = 0;

  // required .comm.PkgTaskPageQueryReq.EnTaskFlag taskflag = 1 [default = TF_MYTASK];
  if (has_taskflag()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->taskflag());
  }
  if (_has_bits_[1 / 32] & 62) {
    // optional int32 enconditon = 2 [default = 0];
    if (has_enconditon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->enconditon());
    }

    // optional .comm.PkgTaskPageQueryReq.PkgTaskQueryCondition pkgtaskquerycondition = 3;
    if (has_pkgtaskquerycondition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pkgtaskquerycondition_);
    }

    // optional .comm.PkgTaskPageQueryReq.EnPageFlag pageflag = 4 [default = P_RETURNALL];
    if (has_pageflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->pageflag());
    }

    // optional int32 indexstart = 5;
    if (has_indexstart()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->indexstart());
    }

    // optional int32 indexend = 6;
    if (has_indexend()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->indexend());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgTaskPageQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgTaskPageQueryReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgTaskPageQueryReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgTaskPageQueryReq::MergeFrom(const PkgTaskPageQueryReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_taskflag()) {
      set_taskflag(from.taskflag());
    }
    if (from.has_enconditon()) {
      set_enconditon(from.enconditon());
    }
    if (from.has_pkgtaskquerycondition()) {
      mutable_pkgtaskquerycondition()->::comm::PkgTaskPageQueryReq_PkgTaskQueryCondition::MergeFrom(from.pkgtaskquerycondition());
    }
    if (from.has_pageflag()) {
      set_pageflag(from.pageflag());
    }
    if (from.has_indexstart()) {
      set_indexstart(from.indexstart());
    }
    if (from.has_indexend()) {
      set_indexend(from.indexend());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgTaskPageQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgTaskPageQueryReq::CopyFrom(const PkgTaskPageQueryReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgTaskPageQueryReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgTaskPageQueryReq::Swap(PkgTaskPageQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgTaskPageQueryReq::InternalSwap(PkgTaskPageQueryReq* other) {
  std::swap(taskflag_, other->taskflag_);
  std::swap(enconditon_, other->enconditon_);
  std::swap(pkgtaskquerycondition_, other->pkgtaskquerycondition_);
  std::swap(pageflag_, other->pageflag_);
  std::swap(indexstart_, other->indexstart_);
  std::swap(indexend_, other->indexend_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgTaskPageQueryReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgTaskPageQueryReq_descriptor_;
  metadata.reflection = PkgTaskPageQueryReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgTaskPageQueryReply::kIssuccessFieldNumber;
const int PkgTaskPageQueryReply::kErrFieldNumber;
const int PkgTaskPageQueryReply::kTaskinfolistFieldNumber;
const int PkgTaskPageQueryReply::kReturnnumFieldNumber;
#endif  // !_MSC_VER

PkgTaskPageQueryReply::PkgTaskPageQueryReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgTaskPageQueryReply)
}

void PkgTaskPageQueryReply::InitAsDefaultInstance() {
}

PkgTaskPageQueryReply::PkgTaskPageQueryReply(const PkgTaskPageQueryReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgTaskPageQueryReply)
}

void PkgTaskPageQueryReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = false;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  returnnum_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgTaskPageQueryReply::~PkgTaskPageQueryReply() {
  // @@protoc_insertion_point(destructor:comm.PkgTaskPageQueryReply)
  SharedDtor();
}

void PkgTaskPageQueryReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgTaskPageQueryReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgTaskPageQueryReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgTaskPageQueryReply_descriptor_;
}

const PkgTaskPageQueryReply& PkgTaskPageQueryReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgTaskPageQueryReply* PkgTaskPageQueryReply::default_instance_ = NULL;

PkgTaskPageQueryReply* PkgTaskPageQueryReply::New(::google::protobuf::Arena* arena) const {
  PkgTaskPageQueryReply* n = new PkgTaskPageQueryReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgTaskPageQueryReply::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgTaskPageQueryReply*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 11) {
    ZR_(issuccess_, returnnum_);
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  taskinfolist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgTaskPageQueryReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgTaskPageQueryReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgTaskPageQueryReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_taskinfolist;
        break;
      }

      // repeated .comm.PkgTaskInfo taskinfolist = 3;
      case 3: {
        if (tag == 26) {
         parse_taskinfolist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_taskinfolist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_taskinfolist;
        if (input->ExpectTag(40)) goto parse_returnnum;
        break;
      }

      // optional int32 returnnum = 5;
      case 5: {
        if (tag == 40) {
         parse_returnnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &returnnum_)));
          set_has_returnnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgTaskPageQueryReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgTaskPageQueryReply)
  return false;
#undef DO_
}

void PkgTaskPageQueryReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgTaskPageQueryReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskPageQueryReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  // repeated .comm.PkgTaskInfo taskinfolist = 3;
  for (unsigned int i = 0, n = this->taskinfolist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->taskinfolist(i), output);
  }

  // optional int32 returnnum = 5;
  if (has_returnnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->returnnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgTaskPageQueryReply)
}

::google::protobuf::uint8* PkgTaskPageQueryReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgTaskPageQueryReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskPageQueryReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  // repeated .comm.PkgTaskInfo taskinfolist = 3;
  for (unsigned int i = 0, n = this->taskinfolist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->taskinfolist(i), target);
  }

  // optional int32 returnnum = 5;
  if (has_returnnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->returnnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgTaskPageQueryReply)
  return target;
}

int PkgTaskPageQueryReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1;
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  if (_has_bits_[1 / 32] & 10) {
    // optional string err = 2;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->err());
    }

    // optional int32 returnnum = 5;
    if (has_returnnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->returnnum());
    }

  }
  // repeated .comm.PkgTaskInfo taskinfolist = 3;
  total_size += 1 * this->taskinfolist_size();
  for (int i = 0; i < this->taskinfolist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->taskinfolist(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgTaskPageQueryReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgTaskPageQueryReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgTaskPageQueryReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgTaskPageQueryReply::MergeFrom(const PkgTaskPageQueryReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  taskinfolist_.MergeFrom(from.taskinfolist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
    if (from.has_returnnum()) {
      set_returnnum(from.returnnum());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgTaskPageQueryReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgTaskPageQueryReply::CopyFrom(const PkgTaskPageQueryReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgTaskPageQueryReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgTaskPageQueryReply::Swap(PkgTaskPageQueryReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgTaskPageQueryReply::InternalSwap(PkgTaskPageQueryReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  taskinfolist_.UnsafeArenaSwap(&other->taskinfolist_);
  std::swap(returnnum_, other->returnnum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgTaskPageQueryReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgTaskPageQueryReply_descriptor_;
  metadata.reflection = PkgTaskPageQueryReply_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* PkgTaskQueryReq_EnQueryFlag_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgTaskQueryReq_EnQueryFlag_descriptor_;
}
bool PkgTaskQueryReq_EnQueryFlag_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PkgTaskQueryReq_EnQueryFlag PkgTaskQueryReq::QF_TASKINFO;
const PkgTaskQueryReq_EnQueryFlag PkgTaskQueryReq::QF_TASKWITHSUBTASK;
const PkgTaskQueryReq_EnQueryFlag PkgTaskQueryReq::QF_TASKWITHASSGIN;
const PkgTaskQueryReq_EnQueryFlag PkgTaskQueryReq::EnQueryFlag_MIN;
const PkgTaskQueryReq_EnQueryFlag PkgTaskQueryReq::EnQueryFlag_MAX;
const int PkgTaskQueryReq::EnQueryFlag_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int PkgTaskQueryReq::kQueryflagFieldNumber;
const int PkgTaskQueryReq::kTaskidFieldNumber;
#endif  // !_MSC_VER

PkgTaskQueryReq::PkgTaskQueryReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgTaskQueryReq)
}

void PkgTaskQueryReq::InitAsDefaultInstance() {
}

PkgTaskQueryReq::PkgTaskQueryReq(const PkgTaskQueryReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgTaskQueryReq)
}

void PkgTaskQueryReq::SharedCtor() {
  _cached_size_ = 0;
  queryflag_ = 1;
  taskid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgTaskQueryReq::~PkgTaskQueryReq() {
  // @@protoc_insertion_point(destructor:comm.PkgTaskQueryReq)
  SharedDtor();
}

void PkgTaskQueryReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PkgTaskQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgTaskQueryReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgTaskQueryReq_descriptor_;
}

const PkgTaskQueryReq& PkgTaskQueryReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgTaskQueryReq* PkgTaskQueryReq::default_instance_ = NULL;

PkgTaskQueryReq* PkgTaskQueryReq::New(::google::protobuf::Arena* arena) const {
  PkgTaskQueryReq* n = new PkgTaskQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgTaskQueryReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    queryflag_ = 1;
    taskid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgTaskQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgTaskQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .comm.PkgTaskQueryReq.EnQueryFlag queryflag = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::comm::PkgTaskQueryReq_EnQueryFlag_IsValid(value)) {
            set_queryflag(static_cast< ::comm::PkgTaskQueryReq_EnQueryFlag >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_taskid;
        break;
      }

      // required int32 taskid = 2;
      case 2: {
        if (tag == 16) {
         parse_taskid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &taskid_)));
          set_has_taskid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgTaskQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgTaskQueryReq)
  return false;
#undef DO_
}

void PkgTaskQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgTaskQueryReq)
  // required .comm.PkgTaskQueryReq.EnQueryFlag queryflag = 1;
  if (has_queryflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->queryflag(), output);
  }

  // required int32 taskid = 2;
  if (has_taskid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->taskid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgTaskQueryReq)
}

::google::protobuf::uint8* PkgTaskQueryReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgTaskQueryReq)
  // required .comm.PkgTaskQueryReq.EnQueryFlag queryflag = 1;
  if (has_queryflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->queryflag(), target);
  }

  // required int32 taskid = 2;
  if (has_taskid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->taskid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgTaskQueryReq)
  return target;
}

int PkgTaskQueryReq::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_queryflag()) {
    // required .comm.PkgTaskQueryReq.EnQueryFlag queryflag = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->queryflag());
  }

  if (has_taskid()) {
    // required int32 taskid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->taskid());
  }

  return total_size;
}
int PkgTaskQueryReq::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .comm.PkgTaskQueryReq.EnQueryFlag queryflag = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->queryflag());

    // required int32 taskid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->taskid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgTaskQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgTaskQueryReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgTaskQueryReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgTaskQueryReq::MergeFrom(const PkgTaskQueryReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_queryflag()) {
      set_queryflag(from.queryflag());
    }
    if (from.has_taskid()) {
      set_taskid(from.taskid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgTaskQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgTaskQueryReq::CopyFrom(const PkgTaskQueryReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgTaskQueryReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void PkgTaskQueryReq::Swap(PkgTaskQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgTaskQueryReq::InternalSwap(PkgTaskQueryReq* other) {
  std::swap(queryflag_, other->queryflag_);
  std::swap(taskid_, other->taskid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgTaskQueryReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgTaskQueryReq_descriptor_;
  metadata.reflection = PkgTaskQueryReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgTaskQueryReply::kIssuccessFieldNumber;
const int PkgTaskQueryReply::kErrFieldNumber;
const int PkgTaskQueryReply::kTaskinfoFieldNumber;
const int PkgTaskQueryReply::kTaskinfolistFieldNumber;
const int PkgTaskQueryReply::kAccepteduseridlistFieldNumber;
#endif  // !_MSC_VER

PkgTaskQueryReply::PkgTaskQueryReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgTaskQueryReply)
}

void PkgTaskQueryReply::InitAsDefaultInstance() {
  taskinfo_ = const_cast< ::comm::PkgTaskInfo*>(&::comm::PkgTaskInfo::default_instance());
}

PkgTaskQueryReply::PkgTaskQueryReply(const PkgTaskQueryReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgTaskQueryReply)
}

void PkgTaskQueryReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = false;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgTaskQueryReply::~PkgTaskQueryReply() {
  // @@protoc_insertion_point(destructor:comm.PkgTaskQueryReply)
  SharedDtor();
}

void PkgTaskQueryReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete taskinfo_;
  }
}

void PkgTaskQueryReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgTaskQueryReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgTaskQueryReply_descriptor_;
}

const PkgTaskQueryReply& PkgTaskQueryReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgTaskQueryReply* PkgTaskQueryReply::default_instance_ = NULL;

PkgTaskQueryReply* PkgTaskQueryReply::New(::google::protobuf::Arena* arena) const {
  PkgTaskQueryReply* n = new PkgTaskQueryReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgTaskQueryReply::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    issuccess_ = false;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_taskinfo()) {
      if (taskinfo_ != NULL) taskinfo_->::comm::PkgTaskInfo::Clear();
    }
  }
  taskinfolist_.Clear();
  accepteduseridlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgTaskQueryReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgTaskQueryReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgTaskQueryReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_taskinfo;
        break;
      }

      // optional .comm.PkgTaskInfo taskinfo = 3;
      case 3: {
        if (tag == 26) {
         parse_taskinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_taskinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_taskinfolist;
        break;
      }

      // repeated .comm.PkgTaskInfo taskinfolist = 4;
      case 4: {
        if (tag == 34) {
         parse_taskinfolist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_taskinfolist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_taskinfolist;
        if (input->ExpectTag(40)) goto parse_accepteduseridlist;
        break;
      }

      // repeated int32 accepteduseridlist = 5;
      case 5: {
        if (tag == 40) {
         parse_accepteduseridlist:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_accepteduseridlist())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_accepteduseridlist())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_accepteduseridlist;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgTaskQueryReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgTaskQueryReply)
  return false;
#undef DO_
}

void PkgTaskQueryReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgTaskQueryReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskQueryReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  // optional .comm.PkgTaskInfo taskinfo = 3;
  if (has_taskinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->taskinfo_, output);
  }

  // repeated .comm.PkgTaskInfo taskinfolist = 4;
  for (unsigned int i = 0, n = this->taskinfolist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->taskinfolist(i), output);
  }

  // repeated int32 accepteduseridlist = 5;
  for (int i = 0; i < this->accepteduseridlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->accepteduseridlist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgTaskQueryReply)
}

::google::protobuf::uint8* PkgTaskQueryReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgTaskQueryReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskQueryReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  // optional .comm.PkgTaskInfo taskinfo = 3;
  if (has_taskinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *this->taskinfo_, target);
  }

  // repeated .comm.PkgTaskInfo taskinfolist = 4;
  for (unsigned int i = 0, n = this->taskinfolist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->taskinfolist(i), target);
  }

  // repeated int32 accepteduseridlist = 5;
  for (int i = 0; i < this->accepteduseridlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->accepteduseridlist(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgTaskQueryReply)
  return target;
}

int PkgTaskQueryReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1;
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  if (_has_bits_[1 / 32] & 6) {
    // optional string err = 2;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->err());
    }

    // optional .comm.PkgTaskInfo taskinfo = 3;
    if (has_taskinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->taskinfo_);
    }

  }
  // repeated .comm.PkgTaskInfo taskinfolist = 4;
  total_size += 1 * this->taskinfolist_size();
  for (int i = 0; i < this->taskinfolist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->taskinfolist(i));
  }

  // repeated int32 accepteduseridlist = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->accepteduseridlist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->accepteduseridlist(i));
    }
    total_size += 1 * this->accepteduseridlist_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgTaskQueryReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgTaskQueryReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgTaskQueryReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgTaskQueryReply::MergeFrom(const PkgTaskQueryReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  taskinfolist_.MergeFrom(from.taskinfolist_);
  accepteduseridlist_.MergeFrom(from.accepteduseridlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
    if (from.has_taskinfo()) {
      mutable_taskinfo()->::comm::PkgTaskInfo::MergeFrom(from.taskinfo());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgTaskQueryReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgTaskQueryReply::CopyFrom(const PkgTaskQueryReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgTaskQueryReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgTaskQueryReply::Swap(PkgTaskQueryReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgTaskQueryReply::InternalSwap(PkgTaskQueryReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  std::swap(taskinfo_, other->taskinfo_);
  taskinfolist_.UnsafeArenaSwap(&other->taskinfolist_);
  accepteduseridlist_.UnsafeArenaSwap(&other->accepteduseridlist_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgTaskQueryReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgTaskQueryReply_descriptor_;
  metadata.reflection = PkgTaskQueryReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgTaskSortFlag::kTaskidFieldNumber;
const int PkgTaskSortFlag::kSortflagFieldNumber;
#endif  // !_MSC_VER

PkgTaskSortFlag::PkgTaskSortFlag()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgTaskSortFlag)
}

void PkgTaskSortFlag::InitAsDefaultInstance() {
}

PkgTaskSortFlag::PkgTaskSortFlag(const PkgTaskSortFlag& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgTaskSortFlag)
}

void PkgTaskSortFlag::SharedCtor() {
  _cached_size_ = 0;
  taskid_ = 0;
  sortflag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgTaskSortFlag::~PkgTaskSortFlag() {
  // @@protoc_insertion_point(destructor:comm.PkgTaskSortFlag)
  SharedDtor();
}

void PkgTaskSortFlag::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PkgTaskSortFlag::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgTaskSortFlag::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgTaskSortFlag_descriptor_;
}

const PkgTaskSortFlag& PkgTaskSortFlag::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgTaskSortFlag* PkgTaskSortFlag::default_instance_ = NULL;

PkgTaskSortFlag* PkgTaskSortFlag::New(::google::protobuf::Arena* arena) const {
  PkgTaskSortFlag* n = new PkgTaskSortFlag;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgTaskSortFlag::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgTaskSortFlag*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(taskid_, sortflag_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgTaskSortFlag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgTaskSortFlag)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 taskid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &taskid_)));
          set_has_taskid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_sortflag;
        break;
      }

      // required int32 sortflag = 2;
      case 2: {
        if (tag == 16) {
         parse_sortflag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sortflag_)));
          set_has_sortflag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgTaskSortFlag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgTaskSortFlag)
  return false;
#undef DO_
}

void PkgTaskSortFlag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgTaskSortFlag)
  // required int32 taskid = 1;
  if (has_taskid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->taskid(), output);
  }

  // required int32 sortflag = 2;
  if (has_sortflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sortflag(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgTaskSortFlag)
}

::google::protobuf::uint8* PkgTaskSortFlag::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgTaskSortFlag)
  // required int32 taskid = 1;
  if (has_taskid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->taskid(), target);
  }

  // required int32 sortflag = 2;
  if (has_sortflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sortflag(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgTaskSortFlag)
  return target;
}

int PkgTaskSortFlag::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_taskid()) {
    // required int32 taskid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->taskid());
  }

  if (has_sortflag()) {
    // required int32 sortflag = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sortflag());
  }

  return total_size;
}
int PkgTaskSortFlag::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 taskid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->taskid());

    // required int32 sortflag = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sortflag());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgTaskSortFlag::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgTaskSortFlag* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgTaskSortFlag*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgTaskSortFlag::MergeFrom(const PkgTaskSortFlag& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_taskid()) {
      set_taskid(from.taskid());
    }
    if (from.has_sortflag()) {
      set_sortflag(from.sortflag());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgTaskSortFlag::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgTaskSortFlag::CopyFrom(const PkgTaskSortFlag& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgTaskSortFlag::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void PkgTaskSortFlag::Swap(PkgTaskSortFlag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgTaskSortFlag::InternalSwap(PkgTaskSortFlag* other) {
  std::swap(taskid_, other->taskid_);
  std::swap(sortflag_, other->sortflag_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgTaskSortFlag::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgTaskSortFlag_descriptor_;
  metadata.reflection = PkgTaskSortFlag_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgTaskSetSortFlagReq::kTasksortflaglistFieldNumber;
#endif  // !_MSC_VER

PkgTaskSetSortFlagReq::PkgTaskSetSortFlagReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgTaskSetSortFlagReq)
}

void PkgTaskSetSortFlagReq::InitAsDefaultInstance() {
}

PkgTaskSetSortFlagReq::PkgTaskSetSortFlagReq(const PkgTaskSetSortFlagReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgTaskSetSortFlagReq)
}

void PkgTaskSetSortFlagReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgTaskSetSortFlagReq::~PkgTaskSetSortFlagReq() {
  // @@protoc_insertion_point(destructor:comm.PkgTaskSetSortFlagReq)
  SharedDtor();
}

void PkgTaskSetSortFlagReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PkgTaskSetSortFlagReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgTaskSetSortFlagReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgTaskSetSortFlagReq_descriptor_;
}

const PkgTaskSetSortFlagReq& PkgTaskSetSortFlagReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgTaskSetSortFlagReq* PkgTaskSetSortFlagReq::default_instance_ = NULL;

PkgTaskSetSortFlagReq* PkgTaskSetSortFlagReq::New(::google::protobuf::Arena* arena) const {
  PkgTaskSetSortFlagReq* n = new PkgTaskSetSortFlagReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgTaskSetSortFlagReq::Clear() {
  tasksortflaglist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgTaskSetSortFlagReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgTaskSetSortFlagReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .comm.PkgTaskSortFlag tasksortflaglist = 1;
      case 1: {
        if (tag == 10) {
         parse_tasksortflaglist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tasksortflaglist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_tasksortflaglist;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgTaskSetSortFlagReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgTaskSetSortFlagReq)
  return false;
#undef DO_
}

void PkgTaskSetSortFlagReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgTaskSetSortFlagReq)
  // repeated .comm.PkgTaskSortFlag tasksortflaglist = 1;
  for (unsigned int i = 0, n = this->tasksortflaglist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->tasksortflaglist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgTaskSetSortFlagReq)
}

::google::protobuf::uint8* PkgTaskSetSortFlagReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgTaskSetSortFlagReq)
  // repeated .comm.PkgTaskSortFlag tasksortflaglist = 1;
  for (unsigned int i = 0, n = this->tasksortflaglist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->tasksortflaglist(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgTaskSetSortFlagReq)
  return target;
}

int PkgTaskSetSortFlagReq::ByteSize() const {
  int total_size = 0;

  // repeated .comm.PkgTaskSortFlag tasksortflaglist = 1;
  total_size += 1 * this->tasksortflaglist_size();
  for (int i = 0; i < this->tasksortflaglist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tasksortflaglist(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgTaskSetSortFlagReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgTaskSetSortFlagReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgTaskSetSortFlagReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgTaskSetSortFlagReq::MergeFrom(const PkgTaskSetSortFlagReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  tasksortflaglist_.MergeFrom(from.tasksortflaglist_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgTaskSetSortFlagReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgTaskSetSortFlagReq::CopyFrom(const PkgTaskSetSortFlagReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgTaskSetSortFlagReq::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->tasksortflaglist())) return false;
  return true;
}

void PkgTaskSetSortFlagReq::Swap(PkgTaskSetSortFlagReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgTaskSetSortFlagReq::InternalSwap(PkgTaskSetSortFlagReq* other) {
  tasksortflaglist_.UnsafeArenaSwap(&other->tasksortflaglist_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgTaskSetSortFlagReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgTaskSetSortFlagReq_descriptor_;
  metadata.reflection = PkgTaskSetSortFlagReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgTaskSetSortFlagReply::kIssuccessFieldNumber;
const int PkgTaskSetSortFlagReply::kErrFieldNumber;
#endif  // !_MSC_VER

PkgTaskSetSortFlagReply::PkgTaskSetSortFlagReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgTaskSetSortFlagReply)
}

void PkgTaskSetSortFlagReply::InitAsDefaultInstance() {
}

PkgTaskSetSortFlagReply::PkgTaskSetSortFlagReply(const PkgTaskSetSortFlagReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgTaskSetSortFlagReply)
}

void PkgTaskSetSortFlagReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = false;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgTaskSetSortFlagReply::~PkgTaskSetSortFlagReply() {
  // @@protoc_insertion_point(destructor:comm.PkgTaskSetSortFlagReply)
  SharedDtor();
}

void PkgTaskSetSortFlagReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgTaskSetSortFlagReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgTaskSetSortFlagReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgTaskSetSortFlagReply_descriptor_;
}

const PkgTaskSetSortFlagReply& PkgTaskSetSortFlagReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgTaskSetSortFlagReply* PkgTaskSetSortFlagReply::default_instance_ = NULL;

PkgTaskSetSortFlagReply* PkgTaskSetSortFlagReply::New(::google::protobuf::Arena* arena) const {
  PkgTaskSetSortFlagReply* n = new PkgTaskSetSortFlagReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgTaskSetSortFlagReply::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    issuccess_ = false;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgTaskSetSortFlagReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgTaskSetSortFlagReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgTaskSetSortFlagReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgTaskSetSortFlagReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgTaskSetSortFlagReply)
  return false;
#undef DO_
}

void PkgTaskSetSortFlagReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgTaskSetSortFlagReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskSetSortFlagReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgTaskSetSortFlagReply)
}

::google::protobuf::uint8* PkgTaskSetSortFlagReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgTaskSetSortFlagReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskSetSortFlagReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgTaskSetSortFlagReply)
  return target;
}

int PkgTaskSetSortFlagReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1;
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  // optional string err = 2;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgTaskSetSortFlagReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgTaskSetSortFlagReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgTaskSetSortFlagReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgTaskSetSortFlagReply::MergeFrom(const PkgTaskSetSortFlagReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgTaskSetSortFlagReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgTaskSetSortFlagReply::CopyFrom(const PkgTaskSetSortFlagReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgTaskSetSortFlagReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgTaskSetSortFlagReply::Swap(PkgTaskSetSortFlagReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgTaskSetSortFlagReply::InternalSwap(PkgTaskSetSortFlagReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgTaskSetSortFlagReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgTaskSetSortFlagReply_descriptor_;
  metadata.reflection = PkgTaskSetSortFlagReply_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* PkgTaskOperationReq_EnTaskOperation_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgTaskOperationReq_EnTaskOperation_descriptor_;
}
bool PkgTaskOperationReq_EnTaskOperation_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 4:
    case 16:
    case 32:
    case 64:
    case 128:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PkgTaskOperationReq_EnTaskOperation PkgTaskOperationReq::TO_INSERT_INFO;
const PkgTaskOperationReq_EnTaskOperation PkgTaskOperationReq::TO_INSERT_INFO_SUBTASKINFO;
const PkgTaskOperationReq_EnTaskOperation PkgTaskOperationReq::TO_INSERT_INFO_COWORK;
const PkgTaskOperationReq_EnTaskOperation PkgTaskOperationReq::TO_UPDATE_INFO;
const PkgTaskOperationReq_EnTaskOperation PkgTaskOperationReq::TO_UPDATE_STATUS;
const PkgTaskOperationReq_EnTaskOperation PkgTaskOperationReq::TO_DELETE_INFO;
const PkgTaskOperationReq_EnTaskOperation PkgTaskOperationReq::TO_UPDATE_READED;
const PkgTaskOperationReq_EnTaskOperation PkgTaskOperationReq::EnTaskOperation_MIN;
const PkgTaskOperationReq_EnTaskOperation PkgTaskOperationReq::EnTaskOperation_MAX;
const int PkgTaskOperationReq::EnTaskOperation_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int PkgTaskOperationReq::kTaskoperationFieldNumber;
const int PkgTaskOperationReq::kTaskinfoFieldNumber;
const int PkgTaskOperationReq::kTaskinfolistFieldNumber;
const int PkgTaskOperationReq::kAccepteduseridlistFieldNumber;
const int PkgTaskOperationReq::kTaskidFieldNumber;
const int PkgTaskOperationReq::kReasonFieldNumber;
const int PkgTaskOperationReq::kUpdatestatusFieldNumber;
const int PkgTaskOperationReq::kUpdatereadedFieldNumber;
#endif  // !_MSC_VER

PkgTaskOperationReq::PkgTaskOperationReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgTaskOperationReq)
}

void PkgTaskOperationReq::InitAsDefaultInstance() {
  taskinfo_ = const_cast< ::comm::PkgTaskInfo*>(&::comm::PkgTaskInfo::default_instance());
}

PkgTaskOperationReq::PkgTaskOperationReq(const PkgTaskOperationReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgTaskOperationReq)
}

void PkgTaskOperationReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  taskoperation_ = 0;
  taskinfo_ = NULL;
  taskid_ = 0;
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatestatus_ = 0;
  updatereaded_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgTaskOperationReq::~PkgTaskOperationReq() {
  // @@protoc_insertion_point(destructor:comm.PkgTaskOperationReq)
  SharedDtor();
}

void PkgTaskOperationReq::SharedDtor() {
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete taskinfo_;
  }
}

void PkgTaskOperationReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgTaskOperationReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgTaskOperationReq_descriptor_;
}

const PkgTaskOperationReq& PkgTaskOperationReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgTaskOperationReq* PkgTaskOperationReq::default_instance_ = NULL;

PkgTaskOperationReq* PkgTaskOperationReq::New(::google::protobuf::Arena* arena) const {
  PkgTaskOperationReq* n = new PkgTaskOperationReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgTaskOperationReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgTaskOperationReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 243) {
    ZR_(taskoperation_, taskid_);
    ZR_(updatestatus_, updatereaded_);
    if (has_taskinfo()) {
      if (taskinfo_ != NULL) taskinfo_->::comm::PkgTaskInfo::Clear();
    }
    if (has_reason()) {
      reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  taskinfolist_.Clear();
  accepteduseridlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgTaskOperationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgTaskOperationReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 taskoperation = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &taskoperation_)));
          set_has_taskoperation();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_taskinfo;
        break;
      }

      // optional .comm.PkgTaskInfo taskinfo = 3;
      case 3: {
        if (tag == 26) {
         parse_taskinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_taskinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_taskinfolist;
        break;
      }

      // repeated .comm.PkgTaskInfo taskinfolist = 4;
      case 4: {
        if (tag == 34) {
         parse_taskinfolist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_taskinfolist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_taskinfolist;
        if (input->ExpectTag(40)) goto parse_accepteduseridlist;
        break;
      }

      // repeated int32 accepteduseridlist = 5;
      case 5: {
        if (tag == 40) {
         parse_accepteduseridlist:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_accepteduseridlist())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_accepteduseridlist())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_accepteduseridlist;
        if (input->ExpectTag(80)) goto parse_taskid;
        break;
      }

      // optional int32 taskid = 10;
      case 10: {
        if (tag == 80) {
         parse_taskid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &taskid_)));
          set_has_taskid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_reason;
        break;
      }

      // optional string reason = 11;
      case 11: {
        if (tag == 90) {
         parse_reason:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reason().data(), this->reason().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgTaskOperationReq.reason");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_updatestatus;
        break;
      }

      // optional int32 updatestatus = 12;
      case 12: {
        if (tag == 96) {
         parse_updatestatus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &updatestatus_)));
          set_has_updatestatus();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_updatereaded;
        break;
      }

      // optional int32 updatereaded = 13;
      case 13: {
        if (tag == 104) {
         parse_updatereaded:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &updatereaded_)));
          set_has_updatereaded();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgTaskOperationReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgTaskOperationReq)
  return false;
#undef DO_
}

void PkgTaskOperationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgTaskOperationReq)
  // required int32 taskoperation = 1;
  if (has_taskoperation()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->taskoperation(), output);
  }

  // optional .comm.PkgTaskInfo taskinfo = 3;
  if (has_taskinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->taskinfo_, output);
  }

  // repeated .comm.PkgTaskInfo taskinfolist = 4;
  for (unsigned int i = 0, n = this->taskinfolist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->taskinfolist(i), output);
  }

  // repeated int32 accepteduseridlist = 5;
  for (int i = 0; i < this->accepteduseridlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->accepteduseridlist(i), output);
  }

  // optional int32 taskid = 10;
  if (has_taskid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->taskid(), output);
  }

  // optional string reason = 11;
  if (has_reason()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reason().data(), this->reason().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskOperationReq.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->reason(), output);
  }

  // optional int32 updatestatus = 12;
  if (has_updatestatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->updatestatus(), output);
  }

  // optional int32 updatereaded = 13;
  if (has_updatereaded()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->updatereaded(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgTaskOperationReq)
}

::google::protobuf::uint8* PkgTaskOperationReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgTaskOperationReq)
  // required int32 taskoperation = 1;
  if (has_taskoperation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->taskoperation(), target);
  }

  // optional .comm.PkgTaskInfo taskinfo = 3;
  if (has_taskinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *this->taskinfo_, target);
  }

  // repeated .comm.PkgTaskInfo taskinfolist = 4;
  for (unsigned int i = 0, n = this->taskinfolist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->taskinfolist(i), target);
  }

  // repeated int32 accepteduseridlist = 5;
  for (int i = 0; i < this->accepteduseridlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->accepteduseridlist(i), target);
  }

  // optional int32 taskid = 10;
  if (has_taskid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->taskid(), target);
  }

  // optional string reason = 11;
  if (has_reason()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reason().data(), this->reason().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskOperationReq.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->reason(), target);
  }

  // optional int32 updatestatus = 12;
  if (has_updatestatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->updatestatus(), target);
  }

  // optional int32 updatereaded = 13;
  if (has_updatereaded()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->updatereaded(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgTaskOperationReq)
  return target;
}

int PkgTaskOperationReq::ByteSize() const {
  int total_size = 0;

  // required int32 taskoperation = 1;
  if (has_taskoperation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->taskoperation());
  }
  if (_has_bits_[1 / 32] & 242) {
    // optional .comm.PkgTaskInfo taskinfo = 3;
    if (has_taskinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->taskinfo_);
    }

    // optional int32 taskid = 10;
    if (has_taskid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->taskid());
    }

    // optional string reason = 11;
    if (has_reason()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reason());
    }

    // optional int32 updatestatus = 12;
    if (has_updatestatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->updatestatus());
    }

    // optional int32 updatereaded = 13;
    if (has_updatereaded()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->updatereaded());
    }

  }
  // repeated .comm.PkgTaskInfo taskinfolist = 4;
  total_size += 1 * this->taskinfolist_size();
  for (int i = 0; i < this->taskinfolist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->taskinfolist(i));
  }

  // repeated int32 accepteduseridlist = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->accepteduseridlist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->accepteduseridlist(i));
    }
    total_size += 1 * this->accepteduseridlist_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgTaskOperationReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgTaskOperationReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgTaskOperationReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgTaskOperationReq::MergeFrom(const PkgTaskOperationReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  taskinfolist_.MergeFrom(from.taskinfolist_);
  accepteduseridlist_.MergeFrom(from.accepteduseridlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_taskoperation()) {
      set_taskoperation(from.taskoperation());
    }
    if (from.has_taskinfo()) {
      mutable_taskinfo()->::comm::PkgTaskInfo::MergeFrom(from.taskinfo());
    }
    if (from.has_taskid()) {
      set_taskid(from.taskid());
    }
    if (from.has_reason()) {
      set_has_reason();
      reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
    }
    if (from.has_updatestatus()) {
      set_updatestatus(from.updatestatus());
    }
    if (from.has_updatereaded()) {
      set_updatereaded(from.updatereaded());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgTaskOperationReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgTaskOperationReq::CopyFrom(const PkgTaskOperationReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgTaskOperationReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgTaskOperationReq::Swap(PkgTaskOperationReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgTaskOperationReq::InternalSwap(PkgTaskOperationReq* other) {
  std::swap(taskoperation_, other->taskoperation_);
  std::swap(taskinfo_, other->taskinfo_);
  taskinfolist_.UnsafeArenaSwap(&other->taskinfolist_);
  accepteduseridlist_.UnsafeArenaSwap(&other->accepteduseridlist_);
  std::swap(taskid_, other->taskid_);
  reason_.Swap(&other->reason_);
  std::swap(updatestatus_, other->updatestatus_);
  std::swap(updatereaded_, other->updatereaded_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgTaskOperationReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgTaskOperationReq_descriptor_;
  metadata.reflection = PkgTaskOperationReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgTaskOperationReply::kIssuccessFieldNumber;
const int PkgTaskOperationReply::kErrFieldNumber;
const int PkgTaskOperationReply::kTaskidFieldNumber;
#endif  // !_MSC_VER

PkgTaskOperationReply::PkgTaskOperationReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgTaskOperationReply)
}

void PkgTaskOperationReply::InitAsDefaultInstance() {
}

PkgTaskOperationReply::PkgTaskOperationReply(const PkgTaskOperationReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgTaskOperationReply)
}

void PkgTaskOperationReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = false;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgTaskOperationReply::~PkgTaskOperationReply() {
  // @@protoc_insertion_point(destructor:comm.PkgTaskOperationReply)
  SharedDtor();
}

void PkgTaskOperationReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgTaskOperationReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgTaskOperationReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgTaskOperationReply_descriptor_;
}

const PkgTaskOperationReply& PkgTaskOperationReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgTaskOperationReply* PkgTaskOperationReply::default_instance_ = NULL;

PkgTaskOperationReply* PkgTaskOperationReply::New(::google::protobuf::Arena* arena) const {
  PkgTaskOperationReply* n = new PkgTaskOperationReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgTaskOperationReply::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgTaskOperationReply*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(issuccess_, taskid_);
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgTaskOperationReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgTaskOperationReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgTaskOperationReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_taskid;
        break;
      }

      // optional int32 taskid = 5;
      case 5: {
        if (tag == 40) {
         parse_taskid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &taskid_)));
          set_has_taskid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgTaskOperationReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgTaskOperationReply)
  return false;
#undef DO_
}

void PkgTaskOperationReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgTaskOperationReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskOperationReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  // optional int32 taskid = 5;
  if (has_taskid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->taskid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgTaskOperationReply)
}

::google::protobuf::uint8* PkgTaskOperationReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgTaskOperationReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgTaskOperationReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  // optional int32 taskid = 5;
  if (has_taskid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->taskid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgTaskOperationReply)
  return target;
}

int PkgTaskOperationReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1;
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  if (_has_bits_[1 / 32] & 6) {
    // optional string err = 2;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->err());
    }

    // optional int32 taskid = 5;
    if (has_taskid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->taskid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgTaskOperationReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgTaskOperationReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgTaskOperationReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgTaskOperationReply::MergeFrom(const PkgTaskOperationReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
    if (from.has_taskid()) {
      set_taskid(from.taskid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgTaskOperationReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgTaskOperationReply::CopyFrom(const PkgTaskOperationReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgTaskOperationReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgTaskOperationReply::Swap(PkgTaskOperationReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgTaskOperationReply::InternalSwap(PkgTaskOperationReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  std::swap(taskid_, other->taskid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgTaskOperationReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgTaskOperationReply_descriptor_;
  metadata.reflection = PkgTaskOperationReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgCompanyGroup::kGroupidFieldNumber;
const int PkgCompanyGroup::kCompanyidFieldNumber;
const int PkgCompanyGroup::kGroupnameFieldNumber;
#endif  // !_MSC_VER

PkgCompanyGroup::PkgCompanyGroup()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgCompanyGroup)
}

void PkgCompanyGroup::InitAsDefaultInstance() {
}

PkgCompanyGroup::PkgCompanyGroup(const PkgCompanyGroup& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgCompanyGroup)
}

void PkgCompanyGroup::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  groupid_ = 0;
  companyid_ = 0;
  groupname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgCompanyGroup::~PkgCompanyGroup() {
  // @@protoc_insertion_point(destructor:comm.PkgCompanyGroup)
  SharedDtor();
}

void PkgCompanyGroup::SharedDtor() {
  groupname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgCompanyGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgCompanyGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgCompanyGroup_descriptor_;
}

const PkgCompanyGroup& PkgCompanyGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgCompanyGroup* PkgCompanyGroup::default_instance_ = NULL;

PkgCompanyGroup* PkgCompanyGroup::New(::google::protobuf::Arena* arena) const {
  PkgCompanyGroup* n = new PkgCompanyGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgCompanyGroup::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgCompanyGroup*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(groupid_, companyid_);
    if (has_groupname()) {
      groupname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgCompanyGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgCompanyGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 groupid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &groupid_)));
          set_has_groupid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_companyid;
        break;
      }

      // required int32 companyid = 2;
      case 2: {
        if (tag == 16) {
         parse_companyid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &companyid_)));
          set_has_companyid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_groupname;
        break;
      }

      // required string groupname = 3;
      case 3: {
        if (tag == 26) {
         parse_groupname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->groupname().data(), this->groupname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgCompanyGroup.groupname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgCompanyGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgCompanyGroup)
  return false;
#undef DO_
}

void PkgCompanyGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgCompanyGroup)
  // required int32 groupid = 1;
  if (has_groupid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->groupid(), output);
  }

  // required int32 companyid = 2;
  if (has_companyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->companyid(), output);
  }

  // required string groupname = 3;
  if (has_groupname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->groupname().data(), this->groupname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgCompanyGroup.groupname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->groupname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgCompanyGroup)
}

::google::protobuf::uint8* PkgCompanyGroup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgCompanyGroup)
  // required int32 groupid = 1;
  if (has_groupid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->groupid(), target);
  }

  // required int32 companyid = 2;
  if (has_companyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->companyid(), target);
  }

  // required string groupname = 3;
  if (has_groupname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->groupname().data(), this->groupname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgCompanyGroup.groupname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->groupname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgCompanyGroup)
  return target;
}

int PkgCompanyGroup::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_groupid()) {
    // required int32 groupid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->groupid());
  }

  if (has_companyid()) {
    // required int32 companyid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->companyid());
  }

  if (has_groupname()) {
    // required string groupname = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->groupname());
  }

  return total_size;
}
int PkgCompanyGroup::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 groupid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->groupid());

    // required int32 companyid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->companyid());

    // required string groupname = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->groupname());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgCompanyGroup::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgCompanyGroup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgCompanyGroup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgCompanyGroup::MergeFrom(const PkgCompanyGroup& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_groupid()) {
      set_groupid(from.groupid());
    }
    if (from.has_companyid()) {
      set_companyid(from.companyid());
    }
    if (from.has_groupname()) {
      set_has_groupname();
      groupname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupname_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgCompanyGroup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgCompanyGroup::CopyFrom(const PkgCompanyGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgCompanyGroup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void PkgCompanyGroup::Swap(PkgCompanyGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgCompanyGroup::InternalSwap(PkgCompanyGroup* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(companyid_, other->companyid_);
  groupname_.Swap(&other->groupname_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgCompanyGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgCompanyGroup_descriptor_;
  metadata.reflection = PkgCompanyGroup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgGroupUser::kGroupidFieldNumber;
const int PkgGroupUser::kUseridFieldNumber;
const int PkgGroupUser::kRealnameFieldNumber;
const int PkgGroupUser::kPhonenumberFieldNumber;
const int PkgGroupUser::kEmailaddressFieldNumber;
const int PkgGroupUser::kPermissionFieldNumber;
const int PkgGroupUser::kCreatetimeFieldNumber;
const int PkgGroupUser::kRolenameFieldNumber;
const int PkgGroupUser::kPermissionroleidFieldNumber;
#endif  // !_MSC_VER

PkgGroupUser::PkgGroupUser()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgGroupUser)
}

void PkgGroupUser::InitAsDefaultInstance() {
}

PkgGroupUser::PkgGroupUser(const PkgGroupUser& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgGroupUser)
}

void PkgGroupUser::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  groupid_ = 0;
  userid_ = 0;
  realname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emailaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permission_ = 0;
  createtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rolename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permissionroleid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgGroupUser::~PkgGroupUser() {
  // @@protoc_insertion_point(destructor:comm.PkgGroupUser)
  SharedDtor();
}

void PkgGroupUser::SharedDtor() {
  realname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emailaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rolename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgGroupUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgGroupUser::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgGroupUser_descriptor_;
}

const PkgGroupUser& PkgGroupUser::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgGroupUser* PkgGroupUser::default_instance_ = NULL;

PkgGroupUser* PkgGroupUser::New(::google::protobuf::Arena* arena) const {
  PkgGroupUser* n = new PkgGroupUser;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgGroupUser::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgGroupUser*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(groupid_, userid_);
    if (has_realname()) {
      realname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_phonenumber()) {
      phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_emailaddress()) {
      emailaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    permission_ = 0;
    if (has_createtime()) {
      createtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_rolename()) {
      rolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  permissionroleid_ = 0;

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgGroupUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgGroupUser)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 groupid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &groupid_)));
          set_has_groupid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userid;
        break;
      }

      // required int32 userid = 2;
      case 2: {
        if (tag == 16) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
          set_has_userid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_realname;
        break;
      }

      // optional string realname = 3;
      case 3: {
        if (tag == 26) {
         parse_realname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_realname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->realname().data(), this->realname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgGroupUser.realname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_phonenumber;
        break;
      }

      // optional string phonenumber = 12;
      case 12: {
        if (tag == 98) {
         parse_phonenumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonenumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phonenumber().data(), this->phonenumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgGroupUser.phonenumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_emailaddress;
        break;
      }

      // optional string emailaddress = 13;
      case 13: {
        if (tag == 106) {
         parse_emailaddress:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_emailaddress()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->emailaddress().data(), this->emailaddress().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgGroupUser.emailaddress");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_permission;
        break;
      }

      // optional int32 permission = 15;
      case 15: {
        if (tag == 120) {
         parse_permission:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &permission_)));
          set_has_permission();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_createtime;
        break;
      }

      // optional string createtime = 19;
      case 19: {
        if (tag == 154) {
         parse_createtime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_createtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->createtime().data(), this->createtime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgGroupUser.createtime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_rolename;
        break;
      }

      // optional string rolename = 20;
      case 20: {
        if (tag == 162) {
         parse_rolename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rolename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rolename().data(), this->rolename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgGroupUser.rolename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_permissionroleid;
        break;
      }

      // optional int32 permissionroleid = 22;
      case 22: {
        if (tag == 176) {
         parse_permissionroleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &permissionroleid_)));
          set_has_permissionroleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgGroupUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgGroupUser)
  return false;
#undef DO_
}

void PkgGroupUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgGroupUser)
  // required int32 groupid = 1;
  if (has_groupid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->groupid(), output);
  }

  // required int32 userid = 2;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->userid(), output);
  }

  // optional string realname = 3;
  if (has_realname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->realname().data(), this->realname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgGroupUser.realname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->realname(), output);
  }

  // optional string phonenumber = 12;
  if (has_phonenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgGroupUser.phonenumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->phonenumber(), output);
  }

  // optional string emailaddress = 13;
  if (has_emailaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emailaddress().data(), this->emailaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgGroupUser.emailaddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->emailaddress(), output);
  }

  // optional int32 permission = 15;
  if (has_permission()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->permission(), output);
  }

  // optional string createtime = 19;
  if (has_createtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createtime().data(), this->createtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgGroupUser.createtime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->createtime(), output);
  }

  // optional string rolename = 20;
  if (has_rolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgGroupUser.rolename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->rolename(), output);
  }

  // optional int32 permissionroleid = 22;
  if (has_permissionroleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->permissionroleid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgGroupUser)
}

::google::protobuf::uint8* PkgGroupUser::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgGroupUser)
  // required int32 groupid = 1;
  if (has_groupid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->groupid(), target);
  }

  // required int32 userid = 2;
  if (has_userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->userid(), target);
  }

  // optional string realname = 3;
  if (has_realname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->realname().data(), this->realname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgGroupUser.realname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->realname(), target);
  }

  // optional string phonenumber = 12;
  if (has_phonenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgGroupUser.phonenumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->phonenumber(), target);
  }

  // optional string emailaddress = 13;
  if (has_emailaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emailaddress().data(), this->emailaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgGroupUser.emailaddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->emailaddress(), target);
  }

  // optional int32 permission = 15;
  if (has_permission()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->permission(), target);
  }

  // optional string createtime = 19;
  if (has_createtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createtime().data(), this->createtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgGroupUser.createtime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->createtime(), target);
  }

  // optional string rolename = 20;
  if (has_rolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgGroupUser.rolename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->rolename(), target);
  }

  // optional int32 permissionroleid = 22;
  if (has_permissionroleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->permissionroleid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgGroupUser)
  return target;
}

int PkgGroupUser::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_groupid()) {
    // required int32 groupid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->groupid());
  }

  if (has_userid()) {
    // required int32 userid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  return total_size;
}
int PkgGroupUser::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 groupid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->groupid());

    // required int32 userid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 252) {
    // optional string realname = 3;
    if (has_realname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->realname());
    }

    // optional string phonenumber = 12;
    if (has_phonenumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phonenumber());
    }

    // optional string emailaddress = 13;
    if (has_emailaddress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->emailaddress());
    }

    // optional int32 permission = 15;
    if (has_permission()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->permission());
    }

    // optional string createtime = 19;
    if (has_createtime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->createtime());
    }

    // optional string rolename = 20;
    if (has_rolename()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rolename());
    }

  }
  // optional int32 permissionroleid = 22;
  if (has_permissionroleid()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->permissionroleid());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgGroupUser::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgGroupUser* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgGroupUser*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgGroupUser::MergeFrom(const PkgGroupUser& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_groupid()) {
      set_groupid(from.groupid());
    }
    if (from.has_userid()) {
      set_userid(from.userid());
    }
    if (from.has_realname()) {
      set_has_realname();
      realname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.realname_);
    }
    if (from.has_phonenumber()) {
      set_has_phonenumber();
      phonenumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenumber_);
    }
    if (from.has_emailaddress()) {
      set_has_emailaddress();
      emailaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.emailaddress_);
    }
    if (from.has_permission()) {
      set_permission(from.permission());
    }
    if (from.has_createtime()) {
      set_has_createtime();
      createtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.createtime_);
    }
    if (from.has_rolename()) {
      set_has_rolename();
      rolename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rolename_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_permissionroleid()) {
      set_permissionroleid(from.permissionroleid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgGroupUser::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgGroupUser::CopyFrom(const PkgGroupUser& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgGroupUser::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void PkgGroupUser::Swap(PkgGroupUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgGroupUser::InternalSwap(PkgGroupUser* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(userid_, other->userid_);
  realname_.Swap(&other->realname_);
  phonenumber_.Swap(&other->phonenumber_);
  emailaddress_.Swap(&other->emailaddress_);
  std::swap(permission_, other->permission_);
  createtime_.Swap(&other->createtime_);
  rolename_.Swap(&other->rolename_);
  std::swap(permissionroleid_, other->permissionroleid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgGroupUser::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgGroupUser_descriptor_;
  metadata.reflection = PkgGroupUser_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* PkgCompanyGroupQueryReq_EnQueryType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgCompanyGroupQueryReq_EnQueryType_descriptor_;
}
bool PkgCompanyGroupQueryReq_EnQueryType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PkgCompanyGroupQueryReq_EnQueryType PkgCompanyGroupQueryReq::QT_ALL;
const PkgCompanyGroupQueryReq_EnQueryType PkgCompanyGroupQueryReq::QT_MINE;
const PkgCompanyGroupQueryReq_EnQueryType PkgCompanyGroupQueryReq::EnQueryType_MIN;
const PkgCompanyGroupQueryReq_EnQueryType PkgCompanyGroupQueryReq::EnQueryType_MAX;
const int PkgCompanyGroupQueryReq::EnQueryType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int PkgCompanyGroupQueryReq::kQuerytypeFieldNumber;
#endif  // !_MSC_VER

PkgCompanyGroupQueryReq::PkgCompanyGroupQueryReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgCompanyGroupQueryReq)
}

void PkgCompanyGroupQueryReq::InitAsDefaultInstance() {
}

PkgCompanyGroupQueryReq::PkgCompanyGroupQueryReq(const PkgCompanyGroupQueryReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgCompanyGroupQueryReq)
}

void PkgCompanyGroupQueryReq::SharedCtor() {
  _cached_size_ = 0;
  querytype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgCompanyGroupQueryReq::~PkgCompanyGroupQueryReq() {
  // @@protoc_insertion_point(destructor:comm.PkgCompanyGroupQueryReq)
  SharedDtor();
}

void PkgCompanyGroupQueryReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PkgCompanyGroupQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgCompanyGroupQueryReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgCompanyGroupQueryReq_descriptor_;
}

const PkgCompanyGroupQueryReq& PkgCompanyGroupQueryReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgCompanyGroupQueryReq* PkgCompanyGroupQueryReq::default_instance_ = NULL;

PkgCompanyGroupQueryReq* PkgCompanyGroupQueryReq::New(::google::protobuf::Arena* arena) const {
  PkgCompanyGroupQueryReq* n = new PkgCompanyGroupQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgCompanyGroupQueryReq::Clear() {
  querytype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgCompanyGroupQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgCompanyGroupQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .comm.PkgCompanyGroupQueryReq.EnQueryType querytype = 1 [default = QT_ALL];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::comm::PkgCompanyGroupQueryReq_EnQueryType_IsValid(value)) {
            set_querytype(static_cast< ::comm::PkgCompanyGroupQueryReq_EnQueryType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgCompanyGroupQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgCompanyGroupQueryReq)
  return false;
#undef DO_
}

void PkgCompanyGroupQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgCompanyGroupQueryReq)
  // required .comm.PkgCompanyGroupQueryReq.EnQueryType querytype = 1 [default = QT_ALL];
  if (has_querytype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->querytype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgCompanyGroupQueryReq)
}

::google::protobuf::uint8* PkgCompanyGroupQueryReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgCompanyGroupQueryReq)
  // required .comm.PkgCompanyGroupQueryReq.EnQueryType querytype = 1 [default = QT_ALL];
  if (has_querytype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->querytype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgCompanyGroupQueryReq)
  return target;
}

int PkgCompanyGroupQueryReq::ByteSize() const {
  int total_size = 0;

  // required .comm.PkgCompanyGroupQueryReq.EnQueryType querytype = 1 [default = QT_ALL];
  if (has_querytype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->querytype());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgCompanyGroupQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgCompanyGroupQueryReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgCompanyGroupQueryReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgCompanyGroupQueryReq::MergeFrom(const PkgCompanyGroupQueryReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_querytype()) {
      set_querytype(from.querytype());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgCompanyGroupQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgCompanyGroupQueryReq::CopyFrom(const PkgCompanyGroupQueryReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgCompanyGroupQueryReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgCompanyGroupQueryReq::Swap(PkgCompanyGroupQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgCompanyGroupQueryReq::InternalSwap(PkgCompanyGroupQueryReq* other) {
  std::swap(querytype_, other->querytype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgCompanyGroupQueryReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgCompanyGroupQueryReq_descriptor_;
  metadata.reflection = PkgCompanyGroupQueryReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgCompanyGroupQueryReply::kIssuccessFieldNumber;
const int PkgCompanyGroupQueryReply::kErrFieldNumber;
const int PkgCompanyGroupQueryReply::kCompanygrouplistFieldNumber;
const int PkgCompanyGroupQueryReply::kGroupuserlistFieldNumber;
#endif  // !_MSC_VER

PkgCompanyGroupQueryReply::PkgCompanyGroupQueryReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgCompanyGroupQueryReply)
}

void PkgCompanyGroupQueryReply::InitAsDefaultInstance() {
}

PkgCompanyGroupQueryReply::PkgCompanyGroupQueryReply(const PkgCompanyGroupQueryReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgCompanyGroupQueryReply)
}

void PkgCompanyGroupQueryReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = false;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgCompanyGroupQueryReply::~PkgCompanyGroupQueryReply() {
  // @@protoc_insertion_point(destructor:comm.PkgCompanyGroupQueryReply)
  SharedDtor();
}

void PkgCompanyGroupQueryReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgCompanyGroupQueryReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgCompanyGroupQueryReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgCompanyGroupQueryReply_descriptor_;
}

const PkgCompanyGroupQueryReply& PkgCompanyGroupQueryReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgCompanyGroupQueryReply* PkgCompanyGroupQueryReply::default_instance_ = NULL;

PkgCompanyGroupQueryReply* PkgCompanyGroupQueryReply::New(::google::protobuf::Arena* arena) const {
  PkgCompanyGroupQueryReply* n = new PkgCompanyGroupQueryReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgCompanyGroupQueryReply::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    issuccess_ = false;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  companygrouplist_.Clear();
  groupuserlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgCompanyGroupQueryReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgCompanyGroupQueryReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgCompanyGroupQueryReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_companygrouplist;
        break;
      }

      // repeated .comm.PkgCompanyGroup companygrouplist = 4;
      case 4: {
        if (tag == 34) {
         parse_companygrouplist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_companygrouplist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_companygrouplist;
        if (input->ExpectTag(42)) goto parse_groupuserlist;
        break;
      }

      // repeated .comm.PkgGroupUser groupuserlist = 5;
      case 5: {
        if (tag == 42) {
         parse_groupuserlist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_groupuserlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_groupuserlist;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgCompanyGroupQueryReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgCompanyGroupQueryReply)
  return false;
#undef DO_
}

void PkgCompanyGroupQueryReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgCompanyGroupQueryReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgCompanyGroupQueryReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  // repeated .comm.PkgCompanyGroup companygrouplist = 4;
  for (unsigned int i = 0, n = this->companygrouplist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->companygrouplist(i), output);
  }

  // repeated .comm.PkgGroupUser groupuserlist = 5;
  for (unsigned int i = 0, n = this->groupuserlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->groupuserlist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgCompanyGroupQueryReply)
}

::google::protobuf::uint8* PkgCompanyGroupQueryReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgCompanyGroupQueryReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgCompanyGroupQueryReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  // repeated .comm.PkgCompanyGroup companygrouplist = 4;
  for (unsigned int i = 0, n = this->companygrouplist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->companygrouplist(i), target);
  }

  // repeated .comm.PkgGroupUser groupuserlist = 5;
  for (unsigned int i = 0, n = this->groupuserlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->groupuserlist(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgCompanyGroupQueryReply)
  return target;
}

int PkgCompanyGroupQueryReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1;
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  // optional string err = 2;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  // repeated .comm.PkgCompanyGroup companygrouplist = 4;
  total_size += 1 * this->companygrouplist_size();
  for (int i = 0; i < this->companygrouplist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->companygrouplist(i));
  }

  // repeated .comm.PkgGroupUser groupuserlist = 5;
  total_size += 1 * this->groupuserlist_size();
  for (int i = 0; i < this->groupuserlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->groupuserlist(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgCompanyGroupQueryReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgCompanyGroupQueryReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgCompanyGroupQueryReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgCompanyGroupQueryReply::MergeFrom(const PkgCompanyGroupQueryReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  companygrouplist_.MergeFrom(from.companygrouplist_);
  groupuserlist_.MergeFrom(from.groupuserlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgCompanyGroupQueryReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgCompanyGroupQueryReply::CopyFrom(const PkgCompanyGroupQueryReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgCompanyGroupQueryReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->companygrouplist())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->groupuserlist())) return false;
  return true;
}

void PkgCompanyGroupQueryReply::Swap(PkgCompanyGroupQueryReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgCompanyGroupQueryReply::InternalSwap(PkgCompanyGroupQueryReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  companygrouplist_.UnsafeArenaSwap(&other->companygrouplist_);
  groupuserlist_.UnsafeArenaSwap(&other->groupuserlist_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgCompanyGroupQueryReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgCompanyGroupQueryReply_descriptor_;
  metadata.reflection = PkgCompanyGroupQueryReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgAdvInfo::kIdFieldNumber;
const int PkgAdvInfo::kNameFieldNumber;
const int PkgAdvInfo::kUrlpicFieldNumber;
const int PkgAdvInfo::kAdvtxtFieldNumber;
const int PkgAdvInfo::kAdvdescFieldNumber;
const int PkgAdvInfo::kCreatetimeFieldNumber;
const int PkgAdvInfo::kExpiretimeFieldNumber;
#endif  // !_MSC_VER

PkgAdvInfo::PkgAdvInfo()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgAdvInfo)
}

void PkgAdvInfo::InitAsDefaultInstance() {
}

PkgAdvInfo::PkgAdvInfo(const PkgAdvInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgAdvInfo)
}

void PkgAdvInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  urlpic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  advtxt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  advdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiretime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgAdvInfo::~PkgAdvInfo() {
  // @@protoc_insertion_point(destructor:comm.PkgAdvInfo)
  SharedDtor();
}

void PkgAdvInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  urlpic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  advtxt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  advdesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiretime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgAdvInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgAdvInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgAdvInfo_descriptor_;
}

const PkgAdvInfo& PkgAdvInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgAdvInfo* PkgAdvInfo::default_instance_ = NULL;

PkgAdvInfo* PkgAdvInfo::New(::google::protobuf::Arena* arena) const {
  PkgAdvInfo* n = new PkgAdvInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgAdvInfo::Clear() {
  if (_has_bits_[0 / 32] & 127) {
    id_ = 0;
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_urlpic()) {
      urlpic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_advtxt()) {
      advtxt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_advdesc()) {
      advdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_createtime()) {
      createtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_expiretime()) {
      expiretime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgAdvInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgAdvInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgAdvInfo.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_urlpic;
        break;
      }

      // optional string urlpic = 3;
      case 3: {
        if (tag == 26) {
         parse_urlpic:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_urlpic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->urlpic().data(), this->urlpic().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgAdvInfo.urlpic");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_advtxt;
        break;
      }

      // optional string advtxt = 4;
      case 4: {
        if (tag == 34) {
         parse_advtxt:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_advtxt()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->advtxt().data(), this->advtxt().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgAdvInfo.advtxt");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_advdesc;
        break;
      }

      // optional string advdesc = 5;
      case 5: {
        if (tag == 42) {
         parse_advdesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_advdesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->advdesc().data(), this->advdesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgAdvInfo.advdesc");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_createtime;
        break;
      }

      // optional string createtime = 6;
      case 6: {
        if (tag == 50) {
         parse_createtime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_createtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->createtime().data(), this->createtime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgAdvInfo.createtime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_expiretime;
        break;
      }

      // optional string expiretime = 7;
      case 7: {
        if (tag == 58) {
         parse_expiretime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_expiretime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->expiretime().data(), this->expiretime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgAdvInfo.expiretime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgAdvInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgAdvInfo)
  return false;
#undef DO_
}

void PkgAdvInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgAdvInfo)
  // optional int32 id = 1 [default = 0];
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgAdvInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string urlpic = 3;
  if (has_urlpic()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->urlpic().data(), this->urlpic().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgAdvInfo.urlpic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->urlpic(), output);
  }

  // optional string advtxt = 4;
  if (has_advtxt()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->advtxt().data(), this->advtxt().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgAdvInfo.advtxt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->advtxt(), output);
  }

  // optional string advdesc = 5;
  if (has_advdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->advdesc().data(), this->advdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgAdvInfo.advdesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->advdesc(), output);
  }

  // optional string createtime = 6;
  if (has_createtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createtime().data(), this->createtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgAdvInfo.createtime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->createtime(), output);
  }

  // optional string expiretime = 7;
  if (has_expiretime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->expiretime().data(), this->expiretime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgAdvInfo.expiretime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->expiretime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgAdvInfo)
}

::google::protobuf::uint8* PkgAdvInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgAdvInfo)
  // optional int32 id = 1 [default = 0];
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgAdvInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string urlpic = 3;
  if (has_urlpic()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->urlpic().data(), this->urlpic().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgAdvInfo.urlpic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->urlpic(), target);
  }

  // optional string advtxt = 4;
  if (has_advtxt()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->advtxt().data(), this->advtxt().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgAdvInfo.advtxt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->advtxt(), target);
  }

  // optional string advdesc = 5;
  if (has_advdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->advdesc().data(), this->advdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgAdvInfo.advdesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->advdesc(), target);
  }

  // optional string createtime = 6;
  if (has_createtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createtime().data(), this->createtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgAdvInfo.createtime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->createtime(), target);
  }

  // optional string expiretime = 7;
  if (has_expiretime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->expiretime().data(), this->expiretime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgAdvInfo.expiretime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->expiretime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgAdvInfo)
  return target;
}

int PkgAdvInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 127) {
    // optional int32 id = 1 [default = 0];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string urlpic = 3;
    if (has_urlpic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->urlpic());
    }

    // optional string advtxt = 4;
    if (has_advtxt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->advtxt());
    }

    // optional string advdesc = 5;
    if (has_advdesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->advdesc());
    }

    // optional string createtime = 6;
    if (has_createtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->createtime());
    }

    // optional string expiretime = 7;
    if (has_expiretime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->expiretime());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgAdvInfo::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgAdvInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgAdvInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgAdvInfo::MergeFrom(const PkgAdvInfo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_urlpic()) {
      set_has_urlpic();
      urlpic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.urlpic_);
    }
    if (from.has_advtxt()) {
      set_has_advtxt();
      advtxt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.advtxt_);
    }
    if (from.has_advdesc()) {
      set_has_advdesc();
      advdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.advdesc_);
    }
    if (from.has_createtime()) {
      set_has_createtime();
      createtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.createtime_);
    }
    if (from.has_expiretime()) {
      set_has_expiretime();
      expiretime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.expiretime_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgAdvInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgAdvInfo::CopyFrom(const PkgAdvInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgAdvInfo::IsInitialized() const {

  return true;
}

void PkgAdvInfo::Swap(PkgAdvInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgAdvInfo::InternalSwap(PkgAdvInfo* other) {
  std::swap(id_, other->id_);
  name_.Swap(&other->name_);
  urlpic_.Swap(&other->urlpic_);
  advtxt_.Swap(&other->advtxt_);
  advdesc_.Swap(&other->advdesc_);
  createtime_.Swap(&other->createtime_);
  expiretime_.Swap(&other->expiretime_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgAdvInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgAdvInfo_descriptor_;
  metadata.reflection = PkgAdvInfo_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* PkgAdvQueryReq_EnQueryType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgAdvQueryReq_EnQueryType_descriptor_;
}
bool PkgAdvQueryReq_EnQueryType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PkgAdvQueryReq_EnQueryType PkgAdvQueryReq::QT_SPNUM;
const PkgAdvQueryReq_EnQueryType PkgAdvQueryReq::QT_VAILDTIME;
const PkgAdvQueryReq_EnQueryType PkgAdvQueryReq::QT_ADVID;
const PkgAdvQueryReq_EnQueryType PkgAdvQueryReq::EnQueryType_MIN;
const PkgAdvQueryReq_EnQueryType PkgAdvQueryReq::EnQueryType_MAX;
const int PkgAdvQueryReq::EnQueryType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int PkgAdvQueryReq::kQueryflagFieldNumber;
const int PkgAdvQueryReq::kNumreqFieldNumber;
const int PkgAdvQueryReq::kAdvidFieldNumber;
#endif  // !_MSC_VER

PkgAdvQueryReq::PkgAdvQueryReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgAdvQueryReq)
}

void PkgAdvQueryReq::InitAsDefaultInstance() {
}

PkgAdvQueryReq::PkgAdvQueryReq(const PkgAdvQueryReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgAdvQueryReq)
}

void PkgAdvQueryReq::SharedCtor() {
  _cached_size_ = 0;
  queryflag_ = 1;
  numreq_ = 0;
  advid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgAdvQueryReq::~PkgAdvQueryReq() {
  // @@protoc_insertion_point(destructor:comm.PkgAdvQueryReq)
  SharedDtor();
}

void PkgAdvQueryReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PkgAdvQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgAdvQueryReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgAdvQueryReq_descriptor_;
}

const PkgAdvQueryReq& PkgAdvQueryReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgAdvQueryReq* PkgAdvQueryReq::default_instance_ = NULL;

PkgAdvQueryReq* PkgAdvQueryReq::New(::google::protobuf::Arena* arena) const {
  PkgAdvQueryReq* n = new PkgAdvQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgAdvQueryReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgAdvQueryReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(numreq_, advid_);
    queryflag_ = 1;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgAdvQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgAdvQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 queryflag = 1 [default = 1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &queryflag_)));
          set_has_queryflag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_numreq;
        break;
      }

      // optional int32 numreq = 2;
      case 2: {
        if (tag == 16) {
         parse_numreq:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numreq_)));
          set_has_numreq();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_advid;
        break;
      }

      // optional int32 advid = 3;
      case 3: {
        if (tag == 24) {
         parse_advid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &advid_)));
          set_has_advid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgAdvQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgAdvQueryReq)
  return false;
#undef DO_
}

void PkgAdvQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgAdvQueryReq)
  // required int32 queryflag = 1 [default = 1];
  if (has_queryflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->queryflag(), output);
  }

  // optional int32 numreq = 2;
  if (has_numreq()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->numreq(), output);
  }

  // optional int32 advid = 3;
  if (has_advid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->advid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgAdvQueryReq)
}

::google::protobuf::uint8* PkgAdvQueryReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgAdvQueryReq)
  // required int32 queryflag = 1 [default = 1];
  if (has_queryflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->queryflag(), target);
  }

  // optional int32 numreq = 2;
  if (has_numreq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->numreq(), target);
  }

  // optional int32 advid = 3;
  if (has_advid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->advid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgAdvQueryReq)
  return target;
}

int PkgAdvQueryReq::ByteSize() const {
  int total_size = 0;

  // required int32 queryflag = 1 [default = 1];
  if (has_queryflag()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->queryflag());
  }
  if (_has_bits_[1 / 32] & 6) {
    // optional int32 numreq = 2;
    if (has_numreq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->numreq());
    }

    // optional int32 advid = 3;
    if (has_advid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->advid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgAdvQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgAdvQueryReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgAdvQueryReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgAdvQueryReq::MergeFrom(const PkgAdvQueryReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_queryflag()) {
      set_queryflag(from.queryflag());
    }
    if (from.has_numreq()) {
      set_numreq(from.numreq());
    }
    if (from.has_advid()) {
      set_advid(from.advid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgAdvQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgAdvQueryReq::CopyFrom(const PkgAdvQueryReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgAdvQueryReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgAdvQueryReq::Swap(PkgAdvQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgAdvQueryReq::InternalSwap(PkgAdvQueryReq* other) {
  std::swap(queryflag_, other->queryflag_);
  std::swap(numreq_, other->numreq_);
  std::swap(advid_, other->advid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgAdvQueryReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgAdvQueryReq_descriptor_;
  metadata.reflection = PkgAdvQueryReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgAdvQueryReply::kIssuccessFieldNumber;
const int PkgAdvQueryReply::kErrFieldNumber;
const int PkgAdvQueryReply::kAdvinfolistFieldNumber;
#endif  // !_MSC_VER

PkgAdvQueryReply::PkgAdvQueryReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgAdvQueryReply)
}

void PkgAdvQueryReply::InitAsDefaultInstance() {
}

PkgAdvQueryReply::PkgAdvQueryReply(const PkgAdvQueryReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgAdvQueryReply)
}

void PkgAdvQueryReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = false;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgAdvQueryReply::~PkgAdvQueryReply() {
  // @@protoc_insertion_point(destructor:comm.PkgAdvQueryReply)
  SharedDtor();
}

void PkgAdvQueryReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgAdvQueryReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgAdvQueryReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgAdvQueryReply_descriptor_;
}

const PkgAdvQueryReply& PkgAdvQueryReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgAdvQueryReply* PkgAdvQueryReply::default_instance_ = NULL;

PkgAdvQueryReply* PkgAdvQueryReply::New(::google::protobuf::Arena* arena) const {
  PkgAdvQueryReply* n = new PkgAdvQueryReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgAdvQueryReply::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    issuccess_ = false;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  advinfolist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgAdvQueryReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgAdvQueryReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgAdvQueryReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_advinfolist;
        break;
      }

      // repeated .comm.PkgAdvInfo advinfolist = 3;
      case 3: {
        if (tag == 26) {
         parse_advinfolist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_advinfolist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_advinfolist;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgAdvQueryReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgAdvQueryReply)
  return false;
#undef DO_
}

void PkgAdvQueryReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgAdvQueryReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgAdvQueryReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  // repeated .comm.PkgAdvInfo advinfolist = 3;
  for (unsigned int i = 0, n = this->advinfolist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->advinfolist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgAdvQueryReply)
}

::google::protobuf::uint8* PkgAdvQueryReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgAdvQueryReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgAdvQueryReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  // repeated .comm.PkgAdvInfo advinfolist = 3;
  for (unsigned int i = 0, n = this->advinfolist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->advinfolist(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgAdvQueryReply)
  return target;
}

int PkgAdvQueryReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1;
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  // optional string err = 2;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  // repeated .comm.PkgAdvInfo advinfolist = 3;
  total_size += 1 * this->advinfolist_size();
  for (int i = 0; i < this->advinfolist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->advinfolist(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgAdvQueryReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgAdvQueryReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgAdvQueryReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgAdvQueryReply::MergeFrom(const PkgAdvQueryReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  advinfolist_.MergeFrom(from.advinfolist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgAdvQueryReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgAdvQueryReply::CopyFrom(const PkgAdvQueryReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgAdvQueryReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgAdvQueryReply::Swap(PkgAdvQueryReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgAdvQueryReply::InternalSwap(PkgAdvQueryReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  advinfolist_.UnsafeArenaSwap(&other->advinfolist_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgAdvQueryReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgAdvQueryReply_descriptor_;
  metadata.reflection = PkgAdvQueryReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgQueryMyProfileReq::kCurversionFieldNumber;
const int PkgQueryMyProfileReq::kPlatmformFieldNumber;
#endif  // !_MSC_VER

PkgQueryMyProfileReq::PkgQueryMyProfileReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgQueryMyProfileReq)
}

void PkgQueryMyProfileReq::InitAsDefaultInstance() {
}

PkgQueryMyProfileReq::PkgQueryMyProfileReq(const PkgQueryMyProfileReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgQueryMyProfileReq)
}

void PkgQueryMyProfileReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  curversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platmform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgQueryMyProfileReq::~PkgQueryMyProfileReq() {
  // @@protoc_insertion_point(destructor:comm.PkgQueryMyProfileReq)
  SharedDtor();
}

void PkgQueryMyProfileReq::SharedDtor() {
  curversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platmform_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgQueryMyProfileReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgQueryMyProfileReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgQueryMyProfileReq_descriptor_;
}

const PkgQueryMyProfileReq& PkgQueryMyProfileReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgQueryMyProfileReq* PkgQueryMyProfileReq::default_instance_ = NULL;

PkgQueryMyProfileReq* PkgQueryMyProfileReq::New(::google::protobuf::Arena* arena) const {
  PkgQueryMyProfileReq* n = new PkgQueryMyProfileReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgQueryMyProfileReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_curversion()) {
      curversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_platmform()) {
      platmform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgQueryMyProfileReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgQueryMyProfileReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string curversion = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_curversion()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->curversion().data(), this->curversion().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgQueryMyProfileReq.curversion");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_platmform;
        break;
      }

      // optional string platmform = 2;
      case 2: {
        if (tag == 18) {
         parse_platmform:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platmform()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->platmform().data(), this->platmform().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgQueryMyProfileReq.platmform");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgQueryMyProfileReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgQueryMyProfileReq)
  return false;
#undef DO_
}

void PkgQueryMyProfileReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgQueryMyProfileReq)
  // optional string curversion = 1;
  if (has_curversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->curversion().data(), this->curversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgQueryMyProfileReq.curversion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->curversion(), output);
  }

  // optional string platmform = 2;
  if (has_platmform()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platmform().data(), this->platmform().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgQueryMyProfileReq.platmform");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->platmform(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgQueryMyProfileReq)
}

::google::protobuf::uint8* PkgQueryMyProfileReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgQueryMyProfileReq)
  // optional string curversion = 1;
  if (has_curversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->curversion().data(), this->curversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgQueryMyProfileReq.curversion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->curversion(), target);
  }

  // optional string platmform = 2;
  if (has_platmform()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platmform().data(), this->platmform().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgQueryMyProfileReq.platmform");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->platmform(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgQueryMyProfileReq)
  return target;
}

int PkgQueryMyProfileReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3) {
    // optional string curversion = 1;
    if (has_curversion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->curversion());
    }

    // optional string platmform = 2;
    if (has_platmform()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->platmform());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgQueryMyProfileReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgQueryMyProfileReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgQueryMyProfileReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgQueryMyProfileReq::MergeFrom(const PkgQueryMyProfileReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_curversion()) {
      set_has_curversion();
      curversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.curversion_);
    }
    if (from.has_platmform()) {
      set_has_platmform();
      platmform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platmform_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgQueryMyProfileReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgQueryMyProfileReq::CopyFrom(const PkgQueryMyProfileReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgQueryMyProfileReq::IsInitialized() const {

  return true;
}

void PkgQueryMyProfileReq::Swap(PkgQueryMyProfileReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgQueryMyProfileReq::InternalSwap(PkgQueryMyProfileReq* other) {
  curversion_.Swap(&other->curversion_);
  platmform_.Swap(&other->platmform_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgQueryMyProfileReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgQueryMyProfileReq_descriptor_;
  metadata.reflection = PkgQueryMyProfileReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgQueryMyProfileReply::kVersionlastestFieldNumber;
const int PkgQueryMyProfileReply::kVersiondownloadurlFieldNumber;
const int PkgQueryMyProfileReply::kTasknumbernotfinishedFieldNumber;
const int PkgQueryMyProfileReply::kTasknumberfinshedFieldNumber;
#endif  // !_MSC_VER

PkgQueryMyProfileReply::PkgQueryMyProfileReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgQueryMyProfileReply)
}

void PkgQueryMyProfileReply::InitAsDefaultInstance() {
}

PkgQueryMyProfileReply::PkgQueryMyProfileReply(const PkgQueryMyProfileReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgQueryMyProfileReply)
}

void PkgQueryMyProfileReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  versionlastest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  versiondownloadurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tasknumbernotfinished_ = 0;
  tasknumberfinshed_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgQueryMyProfileReply::~PkgQueryMyProfileReply() {
  // @@protoc_insertion_point(destructor:comm.PkgQueryMyProfileReply)
  SharedDtor();
}

void PkgQueryMyProfileReply::SharedDtor() {
  versionlastest_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  versiondownloadurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgQueryMyProfileReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgQueryMyProfileReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgQueryMyProfileReply_descriptor_;
}

const PkgQueryMyProfileReply& PkgQueryMyProfileReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgQueryMyProfileReply* PkgQueryMyProfileReply::default_instance_ = NULL;

PkgQueryMyProfileReply* PkgQueryMyProfileReply::New(::google::protobuf::Arena* arena) const {
  PkgQueryMyProfileReply* n = new PkgQueryMyProfileReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgQueryMyProfileReply::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgQueryMyProfileReply*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(tasknumbernotfinished_, tasknumberfinshed_);
    if (has_versionlastest()) {
      versionlastest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_versiondownloadurl()) {
      versiondownloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgQueryMyProfileReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgQueryMyProfileReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string versionlastest = 51;
      case 51: {
        if (tag == 410) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_versionlastest()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->versionlastest().data(), this->versionlastest().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgQueryMyProfileReply.versionlastest");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(418)) goto parse_versiondownloadurl;
        break;
      }

      // optional string versiondownloadurl = 52;
      case 52: {
        if (tag == 418) {
         parse_versiondownloadurl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_versiondownloadurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->versiondownloadurl().data(), this->versiondownloadurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgQueryMyProfileReply.versiondownloadurl");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(800)) goto parse_tasknumbernotfinished;
        break;
      }

      // optional int32 tasknumbernotfinished = 100;
      case 100: {
        if (tag == 800) {
         parse_tasknumbernotfinished:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tasknumbernotfinished_)));
          set_has_tasknumbernotfinished();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(808)) goto parse_tasknumberfinshed;
        break;
      }

      // optional int32 tasknumberfinshed = 101;
      case 101: {
        if (tag == 808) {
         parse_tasknumberfinshed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tasknumberfinshed_)));
          set_has_tasknumberfinshed();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgQueryMyProfileReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgQueryMyProfileReply)
  return false;
#undef DO_
}

void PkgQueryMyProfileReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgQueryMyProfileReply)
  // optional string versionlastest = 51;
  if (has_versionlastest()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->versionlastest().data(), this->versionlastest().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgQueryMyProfileReply.versionlastest");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      51, this->versionlastest(), output);
  }

  // optional string versiondownloadurl = 52;
  if (has_versiondownloadurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->versiondownloadurl().data(), this->versiondownloadurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgQueryMyProfileReply.versiondownloadurl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      52, this->versiondownloadurl(), output);
  }

  // optional int32 tasknumbernotfinished = 100;
  if (has_tasknumbernotfinished()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(100, this->tasknumbernotfinished(), output);
  }

  // optional int32 tasknumberfinshed = 101;
  if (has_tasknumberfinshed()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(101, this->tasknumberfinshed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgQueryMyProfileReply)
}

::google::protobuf::uint8* PkgQueryMyProfileReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgQueryMyProfileReply)
  // optional string versionlastest = 51;
  if (has_versionlastest()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->versionlastest().data(), this->versionlastest().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgQueryMyProfileReply.versionlastest");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        51, this->versionlastest(), target);
  }

  // optional string versiondownloadurl = 52;
  if (has_versiondownloadurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->versiondownloadurl().data(), this->versiondownloadurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgQueryMyProfileReply.versiondownloadurl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        52, this->versiondownloadurl(), target);
  }

  // optional int32 tasknumbernotfinished = 100;
  if (has_tasknumbernotfinished()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(100, this->tasknumbernotfinished(), target);
  }

  // optional int32 tasknumberfinshed = 101;
  if (has_tasknumberfinshed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(101, this->tasknumberfinshed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgQueryMyProfileReply)
  return target;
}

int PkgQueryMyProfileReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15) {
    // optional string versionlastest = 51;
    if (has_versionlastest()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->versionlastest());
    }

    // optional string versiondownloadurl = 52;
    if (has_versiondownloadurl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->versiondownloadurl());
    }

    // optional int32 tasknumbernotfinished = 100;
    if (has_tasknumbernotfinished()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tasknumbernotfinished());
    }

    // optional int32 tasknumberfinshed = 101;
    if (has_tasknumberfinshed()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tasknumberfinshed());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgQueryMyProfileReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgQueryMyProfileReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgQueryMyProfileReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgQueryMyProfileReply::MergeFrom(const PkgQueryMyProfileReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_versionlastest()) {
      set_has_versionlastest();
      versionlastest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.versionlastest_);
    }
    if (from.has_versiondownloadurl()) {
      set_has_versiondownloadurl();
      versiondownloadurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.versiondownloadurl_);
    }
    if (from.has_tasknumbernotfinished()) {
      set_tasknumbernotfinished(from.tasknumbernotfinished());
    }
    if (from.has_tasknumberfinshed()) {
      set_tasknumberfinshed(from.tasknumberfinshed());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgQueryMyProfileReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgQueryMyProfileReply::CopyFrom(const PkgQueryMyProfileReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgQueryMyProfileReply::IsInitialized() const {

  return true;
}

void PkgQueryMyProfileReply::Swap(PkgQueryMyProfileReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgQueryMyProfileReply::InternalSwap(PkgQueryMyProfileReply* other) {
  versionlastest_.Swap(&other->versionlastest_);
  versiondownloadurl_.Swap(&other->versiondownloadurl_);
  std::swap(tasknumbernotfinished_, other->tasknumbernotfinished_);
  std::swap(tasknumberfinshed_, other->tasknumberfinshed_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgQueryMyProfileReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgQueryMyProfileReply_descriptor_;
  metadata.reflection = PkgQueryMyProfileReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

PkgLogoutReq::PkgLogoutReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgLogoutReq)
}

void PkgLogoutReq::InitAsDefaultInstance() {
}

PkgLogoutReq::PkgLogoutReq(const PkgLogoutReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgLogoutReq)
}

void PkgLogoutReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgLogoutReq::~PkgLogoutReq() {
  // @@protoc_insertion_point(destructor:comm.PkgLogoutReq)
  SharedDtor();
}

void PkgLogoutReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PkgLogoutReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgLogoutReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgLogoutReq_descriptor_;
}

const PkgLogoutReq& PkgLogoutReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgLogoutReq* PkgLogoutReq::default_instance_ = NULL;

PkgLogoutReq* PkgLogoutReq::New(::google::protobuf::Arena* arena) const {
  PkgLogoutReq* n = new PkgLogoutReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgLogoutReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgLogoutReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgLogoutReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgLogoutReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgLogoutReq)
  return false;
#undef DO_
}

void PkgLogoutReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgLogoutReq)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgLogoutReq)
}

::google::protobuf::uint8* PkgLogoutReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgLogoutReq)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgLogoutReq)
  return target;
}

int PkgLogoutReq::ByteSize() const {
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgLogoutReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgLogoutReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgLogoutReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgLogoutReq::MergeFrom(const PkgLogoutReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgLogoutReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgLogoutReq::CopyFrom(const PkgLogoutReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgLogoutReq::IsInitialized() const {

  return true;
}

void PkgLogoutReq::Swap(PkgLogoutReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgLogoutReq::InternalSwap(PkgLogoutReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgLogoutReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgLogoutReq_descriptor_;
  metadata.reflection = PkgLogoutReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

PkgLogoutReply::PkgLogoutReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgLogoutReply)
}

void PkgLogoutReply::InitAsDefaultInstance() {
}

PkgLogoutReply::PkgLogoutReply(const PkgLogoutReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgLogoutReply)
}

void PkgLogoutReply::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgLogoutReply::~PkgLogoutReply() {
  // @@protoc_insertion_point(destructor:comm.PkgLogoutReply)
  SharedDtor();
}

void PkgLogoutReply::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PkgLogoutReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgLogoutReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgLogoutReply_descriptor_;
}

const PkgLogoutReply& PkgLogoutReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgLogoutReply* PkgLogoutReply::default_instance_ = NULL;

PkgLogoutReply* PkgLogoutReply::New(::google::protobuf::Arena* arena) const {
  PkgLogoutReply* n = new PkgLogoutReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgLogoutReply::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgLogoutReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgLogoutReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgLogoutReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgLogoutReply)
  return false;
#undef DO_
}

void PkgLogoutReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgLogoutReply)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgLogoutReply)
}

::google::protobuf::uint8* PkgLogoutReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgLogoutReply)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgLogoutReply)
  return target;
}

int PkgLogoutReply::ByteSize() const {
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgLogoutReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgLogoutReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgLogoutReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgLogoutReply::MergeFrom(const PkgLogoutReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgLogoutReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgLogoutReply::CopyFrom(const PkgLogoutReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgLogoutReply::IsInitialized() const {

  return true;
}

void PkgLogoutReply::Swap(PkgLogoutReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgLogoutReply::InternalSwap(PkgLogoutReply* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgLogoutReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgLogoutReply_descriptor_;
  metadata.reflection = PkgLogoutReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgNotifyReq::kCurversionFieldNumber;
const int PkgNotifyReq::kPlatmformFieldNumber;
const int PkgNotifyReq::kDataupatedtimeFieldNumber;
const int PkgNotifyReq::kForceupdateflagFieldNumber;
#endif  // !_MSC_VER

PkgNotifyReq::PkgNotifyReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgNotifyReq)
}

void PkgNotifyReq::InitAsDefaultInstance() {
}

PkgNotifyReq::PkgNotifyReq(const PkgNotifyReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgNotifyReq)
}

void PkgNotifyReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  curversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platmform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dataupatedtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  forceupdateflag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgNotifyReq::~PkgNotifyReq() {
  // @@protoc_insertion_point(destructor:comm.PkgNotifyReq)
  SharedDtor();
}

void PkgNotifyReq::SharedDtor() {
  curversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platmform_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dataupatedtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgNotifyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgNotifyReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgNotifyReq_descriptor_;
}

const PkgNotifyReq& PkgNotifyReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgNotifyReq* PkgNotifyReq::default_instance_ = NULL;

PkgNotifyReq* PkgNotifyReq::New(::google::protobuf::Arena* arena) const {
  PkgNotifyReq* n = new PkgNotifyReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgNotifyReq::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_curversion()) {
      curversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_platmform()) {
      platmform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_dataupatedtime()) {
      dataupatedtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    forceupdateflag_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgNotifyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgNotifyReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string curversion = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_curversion()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->curversion().data(), this->curversion().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgNotifyReq.curversion");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_platmform;
        break;
      }

      // optional string platmform = 2;
      case 2: {
        if (tag == 18) {
         parse_platmform:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platmform()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->platmform().data(), this->platmform().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgNotifyReq.platmform");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_dataupatedtime;
        break;
      }

      // optional string dataupatedtime = 3;
      case 3: {
        if (tag == 26) {
         parse_dataupatedtime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dataupatedtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dataupatedtime().data(), this->dataupatedtime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgNotifyReq.dataupatedtime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(800)) goto parse_forceupdateflag;
        break;
      }

      // optional int32 forceupdateflag = 100 [default = 0];
      case 100: {
        if (tag == 800) {
         parse_forceupdateflag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &forceupdateflag_)));
          set_has_forceupdateflag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgNotifyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgNotifyReq)
  return false;
#undef DO_
}

void PkgNotifyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgNotifyReq)
  // optional string curversion = 1;
  if (has_curversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->curversion().data(), this->curversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgNotifyReq.curversion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->curversion(), output);
  }

  // optional string platmform = 2;
  if (has_platmform()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platmform().data(), this->platmform().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgNotifyReq.platmform");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->platmform(), output);
  }

  // optional string dataupatedtime = 3;
  if (has_dataupatedtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dataupatedtime().data(), this->dataupatedtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgNotifyReq.dataupatedtime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->dataupatedtime(), output);
  }

  // optional int32 forceupdateflag = 100 [default = 0];
  if (has_forceupdateflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(100, this->forceupdateflag(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgNotifyReq)
}

::google::protobuf::uint8* PkgNotifyReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgNotifyReq)
  // optional string curversion = 1;
  if (has_curversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->curversion().data(), this->curversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgNotifyReq.curversion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->curversion(), target);
  }

  // optional string platmform = 2;
  if (has_platmform()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platmform().data(), this->platmform().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgNotifyReq.platmform");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->platmform(), target);
  }

  // optional string dataupatedtime = 3;
  if (has_dataupatedtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dataupatedtime().data(), this->dataupatedtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgNotifyReq.dataupatedtime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->dataupatedtime(), target);
  }

  // optional int32 forceupdateflag = 100 [default = 0];
  if (has_forceupdateflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(100, this->forceupdateflag(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgNotifyReq)
  return target;
}

int PkgNotifyReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15) {
    // optional string curversion = 1;
    if (has_curversion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->curversion());
    }

    // optional string platmform = 2;
    if (has_platmform()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->platmform());
    }

    // optional string dataupatedtime = 3;
    if (has_dataupatedtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dataupatedtime());
    }

    // optional int32 forceupdateflag = 100 [default = 0];
    if (has_forceupdateflag()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->forceupdateflag());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgNotifyReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgNotifyReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgNotifyReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgNotifyReq::MergeFrom(const PkgNotifyReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_curversion()) {
      set_has_curversion();
      curversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.curversion_);
    }
    if (from.has_platmform()) {
      set_has_platmform();
      platmform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platmform_);
    }
    if (from.has_dataupatedtime()) {
      set_has_dataupatedtime();
      dataupatedtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dataupatedtime_);
    }
    if (from.has_forceupdateflag()) {
      set_forceupdateflag(from.forceupdateflag());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgNotifyReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgNotifyReq::CopyFrom(const PkgNotifyReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgNotifyReq::IsInitialized() const {

  return true;
}

void PkgNotifyReq::Swap(PkgNotifyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgNotifyReq::InternalSwap(PkgNotifyReq* other) {
  curversion_.Swap(&other->curversion_);
  platmform_.Swap(&other->platmform_);
  dataupatedtime_.Swap(&other->dataupatedtime_);
  std::swap(forceupdateflag_, other->forceupdateflag_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgNotifyReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgNotifyReq_descriptor_;
  metadata.reflection = PkgNotifyReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgNotifyReply::kDataupatedtimeFieldNumber;
const int PkgNotifyReply::kNotifyupdatedflagFieldNumber;
const int PkgNotifyReply::kCompanyinfoFieldNumber;
const int PkgNotifyReply::kTasknumbernotfinishedFieldNumber;
const int PkgNotifyReply::kTasknumberfinishedFieldNumber;
const int PkgNotifyReply::kVersionlastestFieldNumber;
const int PkgNotifyReply::kVersiondownloadurlFieldNumber;
const int PkgNotifyReply::kPermissionFieldNumber;
const int PkgNotifyReply::kRolenameFieldNumber;
const int PkgNotifyReply::kPermissionroleidFieldNumber;
#endif  // !_MSC_VER

PkgNotifyReply::PkgNotifyReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgNotifyReply)
}

void PkgNotifyReply::InitAsDefaultInstance() {
  companyinfo_ = const_cast< ::comm::PkgCompanyInfo*>(&::comm::PkgCompanyInfo::default_instance());
}

PkgNotifyReply::PkgNotifyReply(const PkgNotifyReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgNotifyReply)
}

void PkgNotifyReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  dataupatedtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notifyupdatedflag_ = 0;
  companyinfo_ = NULL;
  tasknumbernotfinished_ = 0;
  tasknumberfinished_ = 0;
  versionlastest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  versiondownloadurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permission_ = 0;
  rolename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permissionroleid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgNotifyReply::~PkgNotifyReply() {
  // @@protoc_insertion_point(destructor:comm.PkgNotifyReply)
  SharedDtor();
}

void PkgNotifyReply::SharedDtor() {
  dataupatedtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  versionlastest_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  versiondownloadurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rolename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete companyinfo_;
  }
}

void PkgNotifyReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgNotifyReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgNotifyReply_descriptor_;
}

const PkgNotifyReply& PkgNotifyReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgNotifyReply* PkgNotifyReply::default_instance_ = NULL;

PkgNotifyReply* PkgNotifyReply::New(::google::protobuf::Arena* arena) const {
  PkgNotifyReply* n = new PkgNotifyReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgNotifyReply::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgNotifyReply*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(notifyupdatedflag_, tasknumbernotfinished_);
    ZR_(tasknumberfinished_, permission_);
    if (has_dataupatedtime()) {
      dataupatedtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_companyinfo()) {
      if (companyinfo_ != NULL) companyinfo_->::comm::PkgCompanyInfo::Clear();
    }
    if (has_versionlastest()) {
      versionlastest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_versiondownloadurl()) {
      versiondownloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 768) {
    if (has_rolename()) {
      rolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    permissionroleid_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgNotifyReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgNotifyReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string dataupatedtime = 100;
      case 100: {
        if (tag == 802) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dataupatedtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dataupatedtime().data(), this->dataupatedtime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgNotifyReply.dataupatedtime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(808)) goto parse_notifyupdatedflag;
        break;
      }

      // optional int32 notifyupdatedflag = 101;
      case 101: {
        if (tag == 808) {
         parse_notifyupdatedflag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &notifyupdatedflag_)));
          set_has_notifyupdatedflag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8002)) goto parse_companyinfo;
        break;
      }

      // optional .comm.PkgCompanyInfo companyinfo = 1000;
      case 1000: {
        if (tag == 8002) {
         parse_companyinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_companyinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8088)) goto parse_tasknumbernotfinished;
        break;
      }

      // optional int32 tasknumbernotfinished = 1011;
      case 1011: {
        if (tag == 8088) {
         parse_tasknumbernotfinished:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tasknumbernotfinished_)));
          set_has_tasknumbernotfinished();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8096)) goto parse_tasknumberfinished;
        break;
      }

      // optional int32 tasknumberfinished = 1012;
      case 1012: {
        if (tag == 8096) {
         parse_tasknumberfinished:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tasknumberfinished_)));
          set_has_tasknumberfinished();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8242)) goto parse_versionlastest;
        break;
      }

      // optional string versionlastest = 1030;
      case 1030: {
        if (tag == 8242) {
         parse_versionlastest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_versionlastest()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->versionlastest().data(), this->versionlastest().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgNotifyReply.versionlastest");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8330)) goto parse_versiondownloadurl;
        break;
      }

      // optional string versiondownloadurl = 1041;
      case 1041: {
        if (tag == 8330) {
         parse_versiondownloadurl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_versiondownloadurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->versiondownloadurl().data(), this->versiondownloadurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgNotifyReply.versiondownloadurl");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8408)) goto parse_permission;
        break;
      }

      // optional int32 permission = 1051;
      case 1051: {
        if (tag == 8408) {
         parse_permission:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &permission_)));
          set_has_permission();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8418)) goto parse_rolename;
        break;
      }

      // optional string rolename = 1052;
      case 1052: {
        if (tag == 8418) {
         parse_rolename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rolename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rolename().data(), this->rolename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgNotifyReply.rolename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8424)) goto parse_permissionroleid;
        break;
      }

      // optional int32 permissionroleid = 1053;
      case 1053: {
        if (tag == 8424) {
         parse_permissionroleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &permissionroleid_)));
          set_has_permissionroleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgNotifyReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgNotifyReply)
  return false;
#undef DO_
}

void PkgNotifyReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgNotifyReply)
  // optional string dataupatedtime = 100;
  if (has_dataupatedtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dataupatedtime().data(), this->dataupatedtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgNotifyReply.dataupatedtime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      100, this->dataupatedtime(), output);
  }

  // optional int32 notifyupdatedflag = 101;
  if (has_notifyupdatedflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(101, this->notifyupdatedflag(), output);
  }

  // optional .comm.PkgCompanyInfo companyinfo = 1000;
  if (has_companyinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1000, *this->companyinfo_, output);
  }

  // optional int32 tasknumbernotfinished = 1011;
  if (has_tasknumbernotfinished()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1011, this->tasknumbernotfinished(), output);
  }

  // optional int32 tasknumberfinished = 1012;
  if (has_tasknumberfinished()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1012, this->tasknumberfinished(), output);
  }

  // optional string versionlastest = 1030;
  if (has_versionlastest()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->versionlastest().data(), this->versionlastest().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgNotifyReply.versionlastest");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1030, this->versionlastest(), output);
  }

  // optional string versiondownloadurl = 1041;
  if (has_versiondownloadurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->versiondownloadurl().data(), this->versiondownloadurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgNotifyReply.versiondownloadurl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1041, this->versiondownloadurl(), output);
  }

  // optional int32 permission = 1051;
  if (has_permission()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1051, this->permission(), output);
  }

  // optional string rolename = 1052;
  if (has_rolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgNotifyReply.rolename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1052, this->rolename(), output);
  }

  // optional int32 permissionroleid = 1053;
  if (has_permissionroleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1053, this->permissionroleid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgNotifyReply)
}

::google::protobuf::uint8* PkgNotifyReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgNotifyReply)
  // optional string dataupatedtime = 100;
  if (has_dataupatedtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dataupatedtime().data(), this->dataupatedtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgNotifyReply.dataupatedtime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        100, this->dataupatedtime(), target);
  }

  // optional int32 notifyupdatedflag = 101;
  if (has_notifyupdatedflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(101, this->notifyupdatedflag(), target);
  }

  // optional .comm.PkgCompanyInfo companyinfo = 1000;
  if (has_companyinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1000, *this->companyinfo_, target);
  }

  // optional int32 tasknumbernotfinished = 1011;
  if (has_tasknumbernotfinished()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1011, this->tasknumbernotfinished(), target);
  }

  // optional int32 tasknumberfinished = 1012;
  if (has_tasknumberfinished()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1012, this->tasknumberfinished(), target);
  }

  // optional string versionlastest = 1030;
  if (has_versionlastest()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->versionlastest().data(), this->versionlastest().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgNotifyReply.versionlastest");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1030, this->versionlastest(), target);
  }

  // optional string versiondownloadurl = 1041;
  if (has_versiondownloadurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->versiondownloadurl().data(), this->versiondownloadurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgNotifyReply.versiondownloadurl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1041, this->versiondownloadurl(), target);
  }

  // optional int32 permission = 1051;
  if (has_permission()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1051, this->permission(), target);
  }

  // optional string rolename = 1052;
  if (has_rolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgNotifyReply.rolename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1052, this->rolename(), target);
  }

  // optional int32 permissionroleid = 1053;
  if (has_permissionroleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1053, this->permissionroleid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgNotifyReply)
  return target;
}

int PkgNotifyReply::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255) {
    // optional string dataupatedtime = 100;
    if (has_dataupatedtime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dataupatedtime());
    }

    // optional int32 notifyupdatedflag = 101;
    if (has_notifyupdatedflag()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->notifyupdatedflag());
    }

    // optional .comm.PkgCompanyInfo companyinfo = 1000;
    if (has_companyinfo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->companyinfo_);
    }

    // optional int32 tasknumbernotfinished = 1011;
    if (has_tasknumbernotfinished()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tasknumbernotfinished());
    }

    // optional int32 tasknumberfinished = 1012;
    if (has_tasknumberfinished()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tasknumberfinished());
    }

    // optional string versionlastest = 1030;
    if (has_versionlastest()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->versionlastest());
    }

    // optional string versiondownloadurl = 1041;
    if (has_versiondownloadurl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->versiondownloadurl());
    }

    // optional int32 permission = 1051;
    if (has_permission()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->permission());
    }

  }
  if (_has_bits_[8 / 32] & 768) {
    // optional string rolename = 1052;
    if (has_rolename()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rolename());
    }

    // optional int32 permissionroleid = 1053;
    if (has_permissionroleid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->permissionroleid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgNotifyReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgNotifyReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgNotifyReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgNotifyReply::MergeFrom(const PkgNotifyReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dataupatedtime()) {
      set_has_dataupatedtime();
      dataupatedtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dataupatedtime_);
    }
    if (from.has_notifyupdatedflag()) {
      set_notifyupdatedflag(from.notifyupdatedflag());
    }
    if (from.has_companyinfo()) {
      mutable_companyinfo()->::comm::PkgCompanyInfo::MergeFrom(from.companyinfo());
    }
    if (from.has_tasknumbernotfinished()) {
      set_tasknumbernotfinished(from.tasknumbernotfinished());
    }
    if (from.has_tasknumberfinished()) {
      set_tasknumberfinished(from.tasknumberfinished());
    }
    if (from.has_versionlastest()) {
      set_has_versionlastest();
      versionlastest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.versionlastest_);
    }
    if (from.has_versiondownloadurl()) {
      set_has_versiondownloadurl();
      versiondownloadurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.versiondownloadurl_);
    }
    if (from.has_permission()) {
      set_permission(from.permission());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_rolename()) {
      set_has_rolename();
      rolename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rolename_);
    }
    if (from.has_permissionroleid()) {
      set_permissionroleid(from.permissionroleid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgNotifyReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgNotifyReply::CopyFrom(const PkgNotifyReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgNotifyReply::IsInitialized() const {

  return true;
}

void PkgNotifyReply::Swap(PkgNotifyReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgNotifyReply::InternalSwap(PkgNotifyReply* other) {
  dataupatedtime_.Swap(&other->dataupatedtime_);
  std::swap(notifyupdatedflag_, other->notifyupdatedflag_);
  std::swap(companyinfo_, other->companyinfo_);
  std::swap(tasknumbernotfinished_, other->tasknumbernotfinished_);
  std::swap(tasknumberfinished_, other->tasknumberfinished_);
  versionlastest_.Swap(&other->versionlastest_);
  versiondownloadurl_.Swap(&other->versiondownloadurl_);
  std::swap(permission_, other->permission_);
  rolename_.Swap(&other->rolename_);
  std::swap(permissionroleid_, other->permissionroleid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgNotifyReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgNotifyReply_descriptor_;
  metadata.reflection = PkgNotifyReply_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* PkgPhoneCppWrapReq_EnReqType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgPhoneCppWrapReq_EnReqType_descriptor_;
}
bool PkgPhoneCppWrapReq_EnReqType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PkgPhoneCppWrapReq_EnReqType PkgPhoneCppWrapReq::PONEWRAP_LOGINSUCCESS;
const PkgPhoneCppWrapReq_EnReqType PkgPhoneCppWrapReq::PONEWRAP_GETUSERTASKUPDATETIME;
const PkgPhoneCppWrapReq_EnReqType PkgPhoneCppWrapReq::PONEWRAP_SETUSERTASKUPDATETIMEANDTASKS;
const PkgPhoneCppWrapReq_EnReqType PkgPhoneCppWrapReq::PONEWRAP_QUERYPAGETASKS;
const PkgPhoneCppWrapReq_EnReqType PkgPhoneCppWrapReq::PONEWRAP_QUERYTASKDETAIL;
const PkgPhoneCppWrapReq_EnReqType PkgPhoneCppWrapReq::EnReqType_MIN;
const PkgPhoneCppWrapReq_EnReqType PkgPhoneCppWrapReq::EnReqType_MAX;
const int PkgPhoneCppWrapReq::EnReqType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int PkgPhoneCppWrapReq::kUseridFieldNumber;
const int PkgPhoneCppWrapReq::kEnreqtypeFieldNumber;
const int PkgPhoneCppWrapReq::kLasttaskupdatetimeFieldNumber;
const int PkgPhoneCppWrapReq::kTaskinfolistFieldNumber;
const int PkgPhoneCppWrapReq::kTaskpagequeryreqFieldNumber;
const int PkgPhoneCppWrapReq::kTaskqueryreqFieldNumber;
#endif  // !_MSC_VER

PkgPhoneCppWrapReq::PkgPhoneCppWrapReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgPhoneCppWrapReq)
}

void PkgPhoneCppWrapReq::InitAsDefaultInstance() {
  taskpagequeryreq_ = const_cast< ::comm::PkgTaskPageQueryReq*>(&::comm::PkgTaskPageQueryReq::default_instance());
  taskqueryreq_ = const_cast< ::comm::PkgTaskQueryReq*>(&::comm::PkgTaskQueryReq::default_instance());
}

PkgPhoneCppWrapReq::PkgPhoneCppWrapReq(const PkgPhoneCppWrapReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgPhoneCppWrapReq)
}

void PkgPhoneCppWrapReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  userid_ = 0;
  enreqtype_ = 0;
  lasttaskupdatetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskpagequeryreq_ = NULL;
  taskqueryreq_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgPhoneCppWrapReq::~PkgPhoneCppWrapReq() {
  // @@protoc_insertion_point(destructor:comm.PkgPhoneCppWrapReq)
  SharedDtor();
}

void PkgPhoneCppWrapReq::SharedDtor() {
  lasttaskupdatetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete taskpagequeryreq_;
    delete taskqueryreq_;
  }
}

void PkgPhoneCppWrapReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgPhoneCppWrapReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgPhoneCppWrapReq_descriptor_;
}

const PkgPhoneCppWrapReq& PkgPhoneCppWrapReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgPhoneCppWrapReq* PkgPhoneCppWrapReq::default_instance_ = NULL;

PkgPhoneCppWrapReq* PkgPhoneCppWrapReq::New(::google::protobuf::Arena* arena) const {
  PkgPhoneCppWrapReq* n = new PkgPhoneCppWrapReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgPhoneCppWrapReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgPhoneCppWrapReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 55) {
    ZR_(userid_, enreqtype_);
    if (has_lasttaskupdatetime()) {
      lasttaskupdatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_taskpagequeryreq()) {
      if (taskpagequeryreq_ != NULL) taskpagequeryreq_->::comm::PkgTaskPageQueryReq::Clear();
    }
    if (has_taskqueryreq()) {
      if (taskqueryreq_ != NULL) taskqueryreq_->::comm::PkgTaskQueryReq::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  taskinfolist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgPhoneCppWrapReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgPhoneCppWrapReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
          set_has_userid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_enreqtype;
        break;
      }

      // required .comm.PkgPhoneCppWrapReq.EnReqType enreqtype = 2;
      case 2: {
        if (tag == 16) {
         parse_enreqtype:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::comm::PkgPhoneCppWrapReq_EnReqType_IsValid(value)) {
            set_enreqtype(static_cast< ::comm::PkgPhoneCppWrapReq_EnReqType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8002)) goto parse_lasttaskupdatetime;
        break;
      }

      // optional string lasttaskupdatetime = 1000;
      case 1000: {
        if (tag == 8002) {
         parse_lasttaskupdatetime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lasttaskupdatetime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->lasttaskupdatetime().data(), this->lasttaskupdatetime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgPhoneCppWrapReq.lasttaskupdatetime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8010)) goto parse_taskinfolist;
        break;
      }

      // repeated .comm.PkgTaskInfo taskinfolist = 1001;
      case 1001: {
        if (tag == 8010) {
         parse_taskinfolist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_taskinfolist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8010)) goto parse_taskinfolist;
        if (input->ExpectTag(8090)) goto parse_taskpagequeryreq;
        break;
      }

      // optional .comm.PkgTaskPageQueryReq taskpagequeryreq = 1011;
      case 1011: {
        if (tag == 8090) {
         parse_taskpagequeryreq:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_taskpagequeryreq()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8170)) goto parse_taskqueryreq;
        break;
      }

      // optional .comm.PkgTaskQueryReq taskqueryreq = 1021;
      case 1021: {
        if (tag == 8170) {
         parse_taskqueryreq:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_taskqueryreq()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgPhoneCppWrapReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgPhoneCppWrapReq)
  return false;
#undef DO_
}

void PkgPhoneCppWrapReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgPhoneCppWrapReq)
  // required int32 userid = 1;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // required .comm.PkgPhoneCppWrapReq.EnReqType enreqtype = 2;
  if (has_enreqtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->enreqtype(), output);
  }

  // optional string lasttaskupdatetime = 1000;
  if (has_lasttaskupdatetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lasttaskupdatetime().data(), this->lasttaskupdatetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgPhoneCppWrapReq.lasttaskupdatetime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1000, this->lasttaskupdatetime(), output);
  }

  // repeated .comm.PkgTaskInfo taskinfolist = 1001;
  for (unsigned int i = 0, n = this->taskinfolist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1001, this->taskinfolist(i), output);
  }

  // optional .comm.PkgTaskPageQueryReq taskpagequeryreq = 1011;
  if (has_taskpagequeryreq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1011, *this->taskpagequeryreq_, output);
  }

  // optional .comm.PkgTaskQueryReq taskqueryreq = 1021;
  if (has_taskqueryreq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1021, *this->taskqueryreq_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgPhoneCppWrapReq)
}

::google::protobuf::uint8* PkgPhoneCppWrapReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgPhoneCppWrapReq)
  // required int32 userid = 1;
  if (has_userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // required .comm.PkgPhoneCppWrapReq.EnReqType enreqtype = 2;
  if (has_enreqtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->enreqtype(), target);
  }

  // optional string lasttaskupdatetime = 1000;
  if (has_lasttaskupdatetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lasttaskupdatetime().data(), this->lasttaskupdatetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgPhoneCppWrapReq.lasttaskupdatetime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1000, this->lasttaskupdatetime(), target);
  }

  // repeated .comm.PkgTaskInfo taskinfolist = 1001;
  for (unsigned int i = 0, n = this->taskinfolist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1001, this->taskinfolist(i), target);
  }

  // optional .comm.PkgTaskPageQueryReq taskpagequeryreq = 1011;
  if (has_taskpagequeryreq()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1011, *this->taskpagequeryreq_, target);
  }

  // optional .comm.PkgTaskQueryReq taskqueryreq = 1021;
  if (has_taskqueryreq()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1021, *this->taskqueryreq_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgPhoneCppWrapReq)
  return target;
}

int PkgPhoneCppWrapReq::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_userid()) {
    // required int32 userid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  if (has_enreqtype()) {
    // required .comm.PkgPhoneCppWrapReq.EnReqType enreqtype = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->enreqtype());
  }

  return total_size;
}
int PkgPhoneCppWrapReq::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 userid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());

    // required .comm.PkgPhoneCppWrapReq.EnReqType enreqtype = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->enreqtype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 52) {
    // optional string lasttaskupdatetime = 1000;
    if (has_lasttaskupdatetime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lasttaskupdatetime());
    }

    // optional .comm.PkgTaskPageQueryReq taskpagequeryreq = 1011;
    if (has_taskpagequeryreq()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->taskpagequeryreq_);
    }

    // optional .comm.PkgTaskQueryReq taskqueryreq = 1021;
    if (has_taskqueryreq()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->taskqueryreq_);
    }

  }
  // repeated .comm.PkgTaskInfo taskinfolist = 1001;
  total_size += 2 * this->taskinfolist_size();
  for (int i = 0; i < this->taskinfolist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->taskinfolist(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgPhoneCppWrapReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgPhoneCppWrapReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgPhoneCppWrapReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgPhoneCppWrapReq::MergeFrom(const PkgPhoneCppWrapReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  taskinfolist_.MergeFrom(from.taskinfolist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_userid()) {
      set_userid(from.userid());
    }
    if (from.has_enreqtype()) {
      set_enreqtype(from.enreqtype());
    }
    if (from.has_lasttaskupdatetime()) {
      set_has_lasttaskupdatetime();
      lasttaskupdatetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lasttaskupdatetime_);
    }
    if (from.has_taskpagequeryreq()) {
      mutable_taskpagequeryreq()->::comm::PkgTaskPageQueryReq::MergeFrom(from.taskpagequeryreq());
    }
    if (from.has_taskqueryreq()) {
      mutable_taskqueryreq()->::comm::PkgTaskQueryReq::MergeFrom(from.taskqueryreq());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgPhoneCppWrapReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgPhoneCppWrapReq::CopyFrom(const PkgPhoneCppWrapReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgPhoneCppWrapReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_taskpagequeryreq()) {
    if (!this->taskpagequeryreq_->IsInitialized()) return false;
  }
  if (has_taskqueryreq()) {
    if (!this->taskqueryreq_->IsInitialized()) return false;
  }
  return true;
}

void PkgPhoneCppWrapReq::Swap(PkgPhoneCppWrapReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgPhoneCppWrapReq::InternalSwap(PkgPhoneCppWrapReq* other) {
  std::swap(userid_, other->userid_);
  std::swap(enreqtype_, other->enreqtype_);
  lasttaskupdatetime_.Swap(&other->lasttaskupdatetime_);
  taskinfolist_.UnsafeArenaSwap(&other->taskinfolist_);
  std::swap(taskpagequeryreq_, other->taskpagequeryreq_);
  std::swap(taskqueryreq_, other->taskqueryreq_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgPhoneCppWrapReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgPhoneCppWrapReq_descriptor_;
  metadata.reflection = PkgPhoneCppWrapReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgPhoneCppWrapReply::kIssuccessFieldNumber;
const int PkgPhoneCppWrapReply::kErrFieldNumber;
const int PkgPhoneCppWrapReply::kLasttaskupdatetimeFieldNumber;
const int PkgPhoneCppWrapReply::kTaskpagequeryreplyFieldNumber;
const int PkgPhoneCppWrapReply::kTaskqueryreplyFieldNumber;
#endif  // !_MSC_VER

PkgPhoneCppWrapReply::PkgPhoneCppWrapReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comm.PkgPhoneCppWrapReply)
}

void PkgPhoneCppWrapReply::InitAsDefaultInstance() {
  taskpagequeryreply_ = const_cast< ::comm::PkgTaskPageQueryReply*>(&::comm::PkgTaskPageQueryReply::default_instance());
  taskqueryreply_ = const_cast< ::comm::PkgTaskQueryReply*>(&::comm::PkgTaskQueryReply::default_instance());
}

PkgPhoneCppWrapReply::PkgPhoneCppWrapReply(const PkgPhoneCppWrapReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comm.PkgPhoneCppWrapReply)
}

void PkgPhoneCppWrapReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = false;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lasttaskupdatetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskpagequeryreply_ = NULL;
  taskqueryreply_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgPhoneCppWrapReply::~PkgPhoneCppWrapReply() {
  // @@protoc_insertion_point(destructor:comm.PkgPhoneCppWrapReply)
  SharedDtor();
}

void PkgPhoneCppWrapReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lasttaskupdatetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete taskpagequeryreply_;
    delete taskqueryreply_;
  }
}

void PkgPhoneCppWrapReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgPhoneCppWrapReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgPhoneCppWrapReply_descriptor_;
}

const PkgPhoneCppWrapReply& PkgPhoneCppWrapReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_comm_2eproto();
  return *default_instance_;
}

PkgPhoneCppWrapReply* PkgPhoneCppWrapReply::default_instance_ = NULL;

PkgPhoneCppWrapReply* PkgPhoneCppWrapReply::New(::google::protobuf::Arena* arena) const {
  PkgPhoneCppWrapReply* n = new PkgPhoneCppWrapReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgPhoneCppWrapReply::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    issuccess_ = false;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_lasttaskupdatetime()) {
      lasttaskupdatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_taskpagequeryreply()) {
      if (taskpagequeryreply_ != NULL) taskpagequeryreply_->::comm::PkgTaskPageQueryReply::Clear();
    }
    if (has_taskqueryreply()) {
      if (taskqueryreply_ != NULL) taskqueryreply_->::comm::PkgTaskQueryReply::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgPhoneCppWrapReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comm.PkgPhoneCppWrapReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgPhoneCppWrapReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8002)) goto parse_lasttaskupdatetime;
        break;
      }

      // optional string lasttaskupdatetime = 1000;
      case 1000: {
        if (tag == 8002) {
         parse_lasttaskupdatetime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lasttaskupdatetime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->lasttaskupdatetime().data(), this->lasttaskupdatetime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comm.PkgPhoneCppWrapReply.lasttaskupdatetime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8090)) goto parse_taskpagequeryreply;
        break;
      }

      // optional .comm.PkgTaskPageQueryReply taskpagequeryreply = 1011;
      case 1011: {
        if (tag == 8090) {
         parse_taskpagequeryreply:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_taskpagequeryreply()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8170)) goto parse_taskqueryreply;
        break;
      }

      // optional .comm.PkgTaskQueryReply taskqueryreply = 1021;
      case 1021: {
        if (tag == 8170) {
         parse_taskqueryreply:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_taskqueryreply()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comm.PkgPhoneCppWrapReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comm.PkgPhoneCppWrapReply)
  return false;
#undef DO_
}

void PkgPhoneCppWrapReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comm.PkgPhoneCppWrapReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgPhoneCppWrapReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  // optional string lasttaskupdatetime = 1000;
  if (has_lasttaskupdatetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lasttaskupdatetime().data(), this->lasttaskupdatetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgPhoneCppWrapReply.lasttaskupdatetime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1000, this->lasttaskupdatetime(), output);
  }

  // optional .comm.PkgTaskPageQueryReply taskpagequeryreply = 1011;
  if (has_taskpagequeryreply()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1011, *this->taskpagequeryreply_, output);
  }

  // optional .comm.PkgTaskQueryReply taskqueryreply = 1021;
  if (has_taskqueryreply()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1021, *this->taskqueryreply_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comm.PkgPhoneCppWrapReply)
}

::google::protobuf::uint8* PkgPhoneCppWrapReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comm.PkgPhoneCppWrapReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgPhoneCppWrapReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  // optional string lasttaskupdatetime = 1000;
  if (has_lasttaskupdatetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lasttaskupdatetime().data(), this->lasttaskupdatetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comm.PkgPhoneCppWrapReply.lasttaskupdatetime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1000, this->lasttaskupdatetime(), target);
  }

  // optional .comm.PkgTaskPageQueryReply taskpagequeryreply = 1011;
  if (has_taskpagequeryreply()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1011, *this->taskpagequeryreply_, target);
  }

  // optional .comm.PkgTaskQueryReply taskqueryreply = 1021;
  if (has_taskqueryreply()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1021, *this->taskqueryreply_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comm.PkgPhoneCppWrapReply)
  return target;
}

int PkgPhoneCppWrapReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1;
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  if (_has_bits_[1 / 32] & 30) {
    // optional string err = 2;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->err());
    }

    // optional string lasttaskupdatetime = 1000;
    if (has_lasttaskupdatetime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lasttaskupdatetime());
    }

    // optional .comm.PkgTaskPageQueryReply taskpagequeryreply = 1011;
    if (has_taskpagequeryreply()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->taskpagequeryreply_);
    }

    // optional .comm.PkgTaskQueryReply taskqueryreply = 1021;
    if (has_taskqueryreply()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->taskqueryreply_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgPhoneCppWrapReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgPhoneCppWrapReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgPhoneCppWrapReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgPhoneCppWrapReply::MergeFrom(const PkgPhoneCppWrapReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
    if (from.has_lasttaskupdatetime()) {
      set_has_lasttaskupdatetime();
      lasttaskupdatetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lasttaskupdatetime_);
    }
    if (from.has_taskpagequeryreply()) {
      mutable_taskpagequeryreply()->::comm::PkgTaskPageQueryReply::MergeFrom(from.taskpagequeryreply());
    }
    if (from.has_taskqueryreply()) {
      mutable_taskqueryreply()->::comm::PkgTaskQueryReply::MergeFrom(from.taskqueryreply());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgPhoneCppWrapReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgPhoneCppWrapReply::CopyFrom(const PkgPhoneCppWrapReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgPhoneCppWrapReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_taskpagequeryreply()) {
    if (!this->taskpagequeryreply_->IsInitialized()) return false;
  }
  if (has_taskqueryreply()) {
    if (!this->taskqueryreply_->IsInitialized()) return false;
  }
  return true;
}

void PkgPhoneCppWrapReply::Swap(PkgPhoneCppWrapReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgPhoneCppWrapReply::InternalSwap(PkgPhoneCppWrapReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  lasttaskupdatetime_.Swap(&other->lasttaskupdatetime_);
  std::swap(taskpagequeryreply_, other->taskpagequeryreply_);
  std::swap(taskqueryreply_, other->taskqueryreply_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgPhoneCppWrapReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgPhoneCppWrapReply_descriptor_;
  metadata.reflection = PkgPhoneCppWrapReply_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace comm

// @@protoc_insertion_point(global_scope)
