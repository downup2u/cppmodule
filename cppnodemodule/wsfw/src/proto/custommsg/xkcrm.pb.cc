// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: xkcrm.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "xkcrm.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace xkcrm {

namespace {

const ::google::protobuf::Descriptor* PkgUserLoginReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserLoginReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgUserLoginReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserLoginReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgOptPartnerReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgOptPartnerReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgOptPartnerReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgOptPartnerReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgOptLeadReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgOptLeadReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgOptLeadReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgOptLeadReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgOptPhonecallReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgOptPhonecallReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgOptPhonecallReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgOptPhonecallReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgQueryCondition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgQueryCondition_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgPageQueryPartnerReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgPageQueryPartnerReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgPageQueryPartnerReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgPageQueryPartnerReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgPageQueryLeadReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgPageQueryLeadReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgPageQueryLeadReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgPageQueryLeadReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgPageQueryPhonecallReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgPageQueryPhonecallReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgPageQueryPhonecallReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgPageQueryPhonecallReply_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EnGetType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EnOperation_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EnQueryCondition_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EnPageFlag_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_xkcrm_2eproto() {
  protobuf_AddDesc_xkcrm_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "xkcrm.proto");
  GOOGLE_CHECK(file != NULL);
  PkgUserLoginReq_descriptor_ = file->message_type(0);
  static const int PkgUserLoginReq_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReq, gettype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReq, phonenumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReq, emailaddress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReq, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReq, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReq, hashedserversn_),
  };
  PkgUserLoginReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserLoginReq_descriptor_,
      PkgUserLoginReq::default_instance_,
      PkgUserLoginReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserLoginReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReq, _internal_metadata_),
      -1);
  PkgUserLoginReply_descriptor_ = file->message_type(1);
  static const int PkgUserLoginReply_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, userinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, companyinfo_),
  };
  PkgUserLoginReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserLoginReply_descriptor_,
      PkgUserLoginReply::default_instance_,
      PkgUserLoginReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserLoginReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, _internal_metadata_),
      -1);
  PkgOptPartnerReq_descriptor_ = file->message_type(2);
  static const int PkgOptPartnerReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptPartnerReq, opt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptPartnerReq, partner_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptPartnerReq, uuidpartner_),
  };
  PkgOptPartnerReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgOptPartnerReq_descriptor_,
      PkgOptPartnerReq::default_instance_,
      PkgOptPartnerReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptPartnerReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgOptPartnerReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptPartnerReq, _internal_metadata_),
      -1);
  PkgOptPartnerReply_descriptor_ = file->message_type(3);
  static const int PkgOptPartnerReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptPartnerReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptPartnerReply, err_),
  };
  PkgOptPartnerReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgOptPartnerReply_descriptor_,
      PkgOptPartnerReply::default_instance_,
      PkgOptPartnerReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptPartnerReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgOptPartnerReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptPartnerReply, _internal_metadata_),
      -1);
  PkgOptLeadReq_descriptor_ = file->message_type(4);
  static const int PkgOptLeadReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptLeadReq, opt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptLeadReq, lead_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptLeadReq, uuidleadid_),
  };
  PkgOptLeadReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgOptLeadReq_descriptor_,
      PkgOptLeadReq::default_instance_,
      PkgOptLeadReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptLeadReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgOptLeadReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptLeadReq, _internal_metadata_),
      -1);
  PkgOptLeadReply_descriptor_ = file->message_type(5);
  static const int PkgOptLeadReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptLeadReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptLeadReply, err_),
  };
  PkgOptLeadReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgOptLeadReply_descriptor_,
      PkgOptLeadReply::default_instance_,
      PkgOptLeadReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptLeadReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgOptLeadReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptLeadReply, _internal_metadata_),
      -1);
  PkgOptPhonecallReq_descriptor_ = file->message_type(6);
  static const int PkgOptPhonecallReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptPhonecallReq, opt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptPhonecallReq, phonecall_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptPhonecallReq, uuidphonecallid_),
  };
  PkgOptPhonecallReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgOptPhonecallReq_descriptor_,
      PkgOptPhonecallReq::default_instance_,
      PkgOptPhonecallReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptPhonecallReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgOptPhonecallReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptPhonecallReq, _internal_metadata_),
      -1);
  PkgOptPhonecallReply_descriptor_ = file->message_type(7);
  static const int PkgOptPhonecallReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptPhonecallReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptPhonecallReply, err_),
  };
  PkgOptPhonecallReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgOptPhonecallReply_descriptor_,
      PkgOptPhonecallReply::default_instance_,
      PkgOptPhonecallReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptPhonecallReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgOptPhonecallReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptPhonecallReply, _internal_metadata_),
      -1);
  PkgQueryCondition_descriptor_ = file->message_type(8);
  static const int PkgQueryCondition_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgQueryCondition, taskdatestart_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgQueryCondition, taskdateend_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgQueryCondition, keyforname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgQueryCondition, keyforcontent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgQueryCondition, partneruuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgQueryCondition, leaduuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgQueryCondition, selfuuid_),
  };
  PkgQueryCondition_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgQueryCondition_descriptor_,
      PkgQueryCondition::default_instance_,
      PkgQueryCondition_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgQueryCondition, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgQueryCondition),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgQueryCondition, _internal_metadata_),
      -1);
  PkgPageQueryPartnerReq_descriptor_ = file->message_type(9);
  static const int PkgPageQueryPartnerReq_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryPartnerReq, enconditon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryPartnerReq, pkgquerycondition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryPartnerReq, pageflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryPartnerReq, indexstart_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryPartnerReq, indexend_),
  };
  PkgPageQueryPartnerReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgPageQueryPartnerReq_descriptor_,
      PkgPageQueryPartnerReq::default_instance_,
      PkgPageQueryPartnerReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryPartnerReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgPageQueryPartnerReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryPartnerReq, _internal_metadata_),
      -1);
  PkgPageQueryPartnerReply_descriptor_ = file->message_type(10);
  static const int PkgPageQueryPartnerReply_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryPartnerReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryPartnerReply, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryPartnerReply, rows_),
  };
  PkgPageQueryPartnerReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgPageQueryPartnerReply_descriptor_,
      PkgPageQueryPartnerReply::default_instance_,
      PkgPageQueryPartnerReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryPartnerReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgPageQueryPartnerReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryPartnerReply, _internal_metadata_),
      -1);
  PkgPageQueryLeadReq_descriptor_ = file->message_type(11);
  static const int PkgPageQueryLeadReq_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryLeadReq, enconditon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryLeadReq, pkgquerycondition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryLeadReq, pageflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryLeadReq, indexstart_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryLeadReq, indexend_),
  };
  PkgPageQueryLeadReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgPageQueryLeadReq_descriptor_,
      PkgPageQueryLeadReq::default_instance_,
      PkgPageQueryLeadReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryLeadReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgPageQueryLeadReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryLeadReq, _internal_metadata_),
      -1);
  PkgPageQueryLeadReply_descriptor_ = file->message_type(12);
  static const int PkgPageQueryLeadReply_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryLeadReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryLeadReply, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryLeadReply, rows_),
  };
  PkgPageQueryLeadReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgPageQueryLeadReply_descriptor_,
      PkgPageQueryLeadReply::default_instance_,
      PkgPageQueryLeadReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryLeadReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgPageQueryLeadReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryLeadReply, _internal_metadata_),
      -1);
  PkgPageQueryPhonecallReq_descriptor_ = file->message_type(13);
  static const int PkgPageQueryPhonecallReq_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryPhonecallReq, enconditon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryPhonecallReq, pkgquerycondition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryPhonecallReq, pageflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryPhonecallReq, indexstart_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryPhonecallReq, indexend_),
  };
  PkgPageQueryPhonecallReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgPageQueryPhonecallReq_descriptor_,
      PkgPageQueryPhonecallReq::default_instance_,
      PkgPageQueryPhonecallReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryPhonecallReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgPageQueryPhonecallReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryPhonecallReq, _internal_metadata_),
      -1);
  PkgPageQueryPhonecallReply_descriptor_ = file->message_type(14);
  static const int PkgPageQueryPhonecallReply_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryPhonecallReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryPhonecallReply, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryPhonecallReply, rows_),
  };
  PkgPageQueryPhonecallReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgPageQueryPhonecallReply_descriptor_,
      PkgPageQueryPhonecallReply::default_instance_,
      PkgPageQueryPhonecallReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryPhonecallReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgPageQueryPhonecallReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryPhonecallReply, _internal_metadata_),
      -1);
  EnGetType_descriptor_ = file->enum_type(0);
  EnOperation_descriptor_ = file->enum_type(1);
  EnQueryCondition_descriptor_ = file->enum_type(2);
  EnPageFlag_descriptor_ = file->enum_type(3);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_xkcrm_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserLoginReq_descriptor_, &PkgUserLoginReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserLoginReply_descriptor_, &PkgUserLoginReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgOptPartnerReq_descriptor_, &PkgOptPartnerReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgOptPartnerReply_descriptor_, &PkgOptPartnerReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgOptLeadReq_descriptor_, &PkgOptLeadReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgOptLeadReply_descriptor_, &PkgOptLeadReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgOptPhonecallReq_descriptor_, &PkgOptPhonecallReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgOptPhonecallReply_descriptor_, &PkgOptPhonecallReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgQueryCondition_descriptor_, &PkgQueryCondition::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgPageQueryPartnerReq_descriptor_, &PkgPageQueryPartnerReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgPageQueryPartnerReply_descriptor_, &PkgPageQueryPartnerReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgPageQueryLeadReq_descriptor_, &PkgPageQueryLeadReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgPageQueryLeadReply_descriptor_, &PkgPageQueryLeadReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgPageQueryPhonecallReq_descriptor_, &PkgPageQueryPhonecallReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgPageQueryPhonecallReply_descriptor_, &PkgPageQueryPhonecallReply::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_xkcrm_2eproto() {
  delete PkgUserLoginReq::default_instance_;
  delete PkgUserLoginReq_reflection_;
  delete PkgUserLoginReply::default_instance_;
  delete PkgUserLoginReply_reflection_;
  delete PkgOptPartnerReq::default_instance_;
  delete PkgOptPartnerReq_reflection_;
  delete PkgOptPartnerReply::default_instance_;
  delete PkgOptPartnerReply_reflection_;
  delete PkgOptLeadReq::default_instance_;
  delete PkgOptLeadReq_reflection_;
  delete PkgOptLeadReply::default_instance_;
  delete PkgOptLeadReply_reflection_;
  delete PkgOptPhonecallReq::default_instance_;
  delete PkgOptPhonecallReq_reflection_;
  delete PkgOptPhonecallReply::default_instance_;
  delete PkgOptPhonecallReply_reflection_;
  delete PkgQueryCondition::default_instance_;
  delete PkgQueryCondition_reflection_;
  delete PkgPageQueryPartnerReq::default_instance_;
  delete PkgPageQueryPartnerReq_reflection_;
  delete PkgPageQueryPartnerReply::default_instance_;
  delete PkgPageQueryPartnerReply_reflection_;
  delete PkgPageQueryLeadReq::default_instance_;
  delete PkgPageQueryLeadReq_reflection_;
  delete PkgPageQueryLeadReply::default_instance_;
  delete PkgPageQueryLeadReply_reflection_;
  delete PkgPageQueryPhonecallReq::default_instance_;
  delete PkgPageQueryPhonecallReq_reflection_;
  delete PkgPageQueryPhonecallReply::default_instance_;
  delete PkgPageQueryPhonecallReply_reflection_;
}

void protobuf_AddDesc_xkcrm_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::xkcrm::protobuf_AddDesc_nosqldb_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013xkcrm.proto\022\005xkcrm\032\rnosqldb.proto\"\265\001\n\017"
    "PkgUserLoginReq\022+\n\007gettype\030\001 \002(\0162\020.xkcrm"
    ".EnGetType:\010GT_PHONE\022\016\n\006userid\030\002 \001(\005\022\023\n\013"
    "phonenumber\030\003 \001(\t\022\024\n\014emailaddress\030\004 \001(\t\022"
    "\020\n\010username\030\005 \001(\t\022\020\n\010password\030\n \002(\t\022\026\n\016h"
    "ashedserversn\030d \001(\t\"\214\001\n\021PkgUserLoginRepl"
    "y\022\027\n\tissuccess\030\001 \002(\010:\004true\022\013\n\003err\030\002 \001(\t\022"
    "%\n\010userinfo\030\013 \001(\0132\023.xkcrm.db_res_users\022*"
    "\n\013companyinfo\030\014 \001(\0132\025.xkcrm.db_res_compa"
    "ny\"p\n\020PkgOptPartnerReq\022\037\n\003opt\030\001 \002(\0162\022.xk"
    "crm.EnOperation\022&\n\007partner\030\002 \001(\0132\025.xkcrm"
    ".db_res_partner\022\023\n\013uuidpartner\030\003 \001(\t\"4\n\022"
    "PkgOptPartnerReply\022\021\n\tissuccess\030\001 \002(\010\022\013\n"
    "\003err\030\002 \001(\t\"f\n\rPkgOptLeadReq\022\037\n\003opt\030\001 \002(\016"
    "2\022.xkcrm.EnOperation\022 \n\004lead\030\002 \001(\0132\022.xkc"
    "rm.db_crm_lead\022\022\n\nuuidleadid\030\003 \001(\t\"1\n\017Pk"
    "gOptLeadReply\022\021\n\tissuccess\030\001 \002(\010\022\013\n\003err\030"
    "\002 \001(\t\"z\n\022PkgOptPhonecallReq\022\037\n\003opt\030\001 \002(\016"
    "2\022.xkcrm.EnOperation\022*\n\tphonecall\030\002 \001(\0132"
    "\027.xkcrm.db_crm_phonecall\022\027\n\017uuidphonecal"
    "lid\030\003 \001(\t\"6\n\024PkgOptPhonecallReply\022\021\n\tiss"
    "uccess\030\001 \002(\010\022\013\n\003err\030\002 \001(\t\"\243\001\n\021PkgQueryCo"
    "ndition\022\025\n\rtaskdatestart\030\002 \001(\t\022\023\n\013taskda"
    "teend\030\003 \001(\t\022\022\n\nkeyforname\030\004 \001(\t\022\025\n\rkeyfo"
    "rcontent\030\005 \001(\t\022\023\n\013partneruuid\030\n \001(\t\022\020\n\010l"
    "eaduuid\030\013 \001(\t\022\020\n\010selfuuid\030d \001(\t\"\274\001\n\026PkgP"
    "ageQueryPartnerReq\022\025\n\nenconditon\030\002 \001(\005:\001"
    "0\0223\n\021pkgquerycondition\030\003 \001(\0132\030.xkcrm.Pkg"
    "QueryCondition\0220\n\010pageflag\030\004 \001(\0162\021.xkcrm"
    ".EnPageFlag:\013P_RETURNALL\022\022\n\nindexstart\030\005"
    " \001(\005\022\020\n\010indexend\030\006 \001(\005\"_\n\030PkgPageQueryPa"
    "rtnerReply\022\021\n\tissuccess\030\001 \002(\010\022\013\n\003err\030\002 \001"
    "(\t\022#\n\004rows\030\n \003(\0132\025.xkcrm.db_res_partner\""
    "\271\001\n\023PkgPageQueryLeadReq\022\025\n\nenconditon\030\002 "
    "\001(\005:\0010\0223\n\021pkgquerycondition\030\003 \001(\0132\030.xkcr"
    "m.PkgQueryCondition\0220\n\010pageflag\030\004 \001(\0162\021."
    "xkcrm.EnPageFlag:\013P_RETURNALL\022\022\n\nindexst"
    "art\030\005 \001(\005\022\020\n\010indexend\030\006 \001(\005\"Y\n\025PkgPageQu"
    "eryLeadReply\022\021\n\tissuccess\030\001 \002(\010\022\013\n\003err\030\002"
    " \001(\t\022 \n\004rows\030\n \003(\0132\022.xkcrm.db_crm_lead\"\276"
    "\001\n\030PkgPageQueryPhonecallReq\022\025\n\nencondito"
    "n\030\002 \001(\005:\0010\0223\n\021pkgquerycondition\030\003 \001(\0132\030."
    "xkcrm.PkgQueryCondition\0220\n\010pageflag\030\004 \001("
    "\0162\021.xkcrm.EnPageFlag:\013P_RETURNALL\022\022\n\nind"
    "exstart\030\005 \001(\005\022\020\n\010indexend\030\006 \001(\005\"c\n\032PkgPa"
    "geQueryPhonecallReply\022\021\n\tissuccess\030\001 \002(\010"
    "\022\013\n\003err\030\002 \001(\t\022%\n\004rows\030\n \003(\0132\027.xkcrm.db_c"
    "rm_phonecall*G\n\tEnGetType\022\014\n\010GT_PHONE\020\000\022"
    "\014\n\010GT_EMAIL\020\001\022\r\n\tGT_USERID\020\002\022\017\n\013GT_USERN"
    "AME\020\003*:\n\013EnOperation\022\r\n\tTO_INSERT\020\001\022\r\n\tT"
    "O_UPDATE\020\020\022\r\n\tTO_DELETE\020@*\232\001\n\020EnQueryCon"
    "dition\022\021\n\rTQC_DATESTART\020\001\022\017\n\013TQC_DATEEND"
    "\020\002\022\022\n\016TQC_KEYFORNAME\020\004\022\025\n\021TQC_KEYFORCONT"
    "ENT\020\010\022\023\n\017TQC_PARTNERUUID\020\020\022\020\n\014TQC_LEADUU"
    "ID\020 \022\020\n\014TQC_SELFUUID\020@*>\n\nEnPageFlag\022\r\n\t"
    "P_ONLYNUM\020\001\022\017\n\013P_RETURNALL\020\002\022\020\n\014P_RETURN"
    "PAGE\020\003", 2246);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "xkcrm.proto", &protobuf_RegisterTypes);
  PkgUserLoginReq::default_instance_ = new PkgUserLoginReq();
  PkgUserLoginReply::default_instance_ = new PkgUserLoginReply();
  PkgOptPartnerReq::default_instance_ = new PkgOptPartnerReq();
  PkgOptPartnerReply::default_instance_ = new PkgOptPartnerReply();
  PkgOptLeadReq::default_instance_ = new PkgOptLeadReq();
  PkgOptLeadReply::default_instance_ = new PkgOptLeadReply();
  PkgOptPhonecallReq::default_instance_ = new PkgOptPhonecallReq();
  PkgOptPhonecallReply::default_instance_ = new PkgOptPhonecallReply();
  PkgQueryCondition::default_instance_ = new PkgQueryCondition();
  PkgPageQueryPartnerReq::default_instance_ = new PkgPageQueryPartnerReq();
  PkgPageQueryPartnerReply::default_instance_ = new PkgPageQueryPartnerReply();
  PkgPageQueryLeadReq::default_instance_ = new PkgPageQueryLeadReq();
  PkgPageQueryLeadReply::default_instance_ = new PkgPageQueryLeadReply();
  PkgPageQueryPhonecallReq::default_instance_ = new PkgPageQueryPhonecallReq();
  PkgPageQueryPhonecallReply::default_instance_ = new PkgPageQueryPhonecallReply();
  PkgUserLoginReq::default_instance_->InitAsDefaultInstance();
  PkgUserLoginReply::default_instance_->InitAsDefaultInstance();
  PkgOptPartnerReq::default_instance_->InitAsDefaultInstance();
  PkgOptPartnerReply::default_instance_->InitAsDefaultInstance();
  PkgOptLeadReq::default_instance_->InitAsDefaultInstance();
  PkgOptLeadReply::default_instance_->InitAsDefaultInstance();
  PkgOptPhonecallReq::default_instance_->InitAsDefaultInstance();
  PkgOptPhonecallReply::default_instance_->InitAsDefaultInstance();
  PkgQueryCondition::default_instance_->InitAsDefaultInstance();
  PkgPageQueryPartnerReq::default_instance_->InitAsDefaultInstance();
  PkgPageQueryPartnerReply::default_instance_->InitAsDefaultInstance();
  PkgPageQueryLeadReq::default_instance_->InitAsDefaultInstance();
  PkgPageQueryLeadReply::default_instance_->InitAsDefaultInstance();
  PkgPageQueryPhonecallReq::default_instance_->InitAsDefaultInstance();
  PkgPageQueryPhonecallReply::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_xkcrm_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_xkcrm_2eproto {
  StaticDescriptorInitializer_xkcrm_2eproto() {
    protobuf_AddDesc_xkcrm_2eproto();
  }
} static_descriptor_initializer_xkcrm_2eproto_;
const ::google::protobuf::EnumDescriptor* EnGetType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnGetType_descriptor_;
}
bool EnGetType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EnOperation_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnOperation_descriptor_;
}
bool EnOperation_IsValid(int value) {
  switch(value) {
    case 1:
    case 16:
    case 64:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EnQueryCondition_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnQueryCondition_descriptor_;
}
bool EnQueryCondition_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 32:
    case 64:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EnPageFlag_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnPageFlag_descriptor_;
}
bool EnPageFlag_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int PkgUserLoginReq::kGettypeFieldNumber;
const int PkgUserLoginReq::kUseridFieldNumber;
const int PkgUserLoginReq::kPhonenumberFieldNumber;
const int PkgUserLoginReq::kEmailaddressFieldNumber;
const int PkgUserLoginReq::kUsernameFieldNumber;
const int PkgUserLoginReq::kPasswordFieldNumber;
const int PkgUserLoginReq::kHashedserversnFieldNumber;
#endif  // !_MSC_VER

PkgUserLoginReq::PkgUserLoginReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:xkcrm.PkgUserLoginReq)
}

void PkgUserLoginReq::InitAsDefaultInstance() {
}

PkgUserLoginReq::PkgUserLoginReq(const PkgUserLoginReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:xkcrm.PkgUserLoginReq)
}

void PkgUserLoginReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  gettype_ = 0;
  userid_ = 0;
  phonenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emailaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashedserversn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserLoginReq::~PkgUserLoginReq() {
  // @@protoc_insertion_point(destructor:xkcrm.PkgUserLoginReq)
  SharedDtor();
}

void PkgUserLoginReq::SharedDtor() {
  phonenumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emailaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashedserversn_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgUserLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserLoginReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserLoginReq_descriptor_;
}

const PkgUserLoginReq& PkgUserLoginReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_xkcrm_2eproto();
  return *default_instance_;
}

PkgUserLoginReq* PkgUserLoginReq::default_instance_ = NULL;

PkgUserLoginReq* PkgUserLoginReq::New(::google::protobuf::Arena* arena) const {
  PkgUserLoginReq* n = new PkgUserLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserLoginReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgUserLoginReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(gettype_, userid_);
    if (has_phonenumber()) {
      phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_emailaddress()) {
      emailaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_username()) {
      username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_password()) {
      password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_hashedserversn()) {
      hashedserversn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xkcrm.PkgUserLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .xkcrm.EnGetType gettype = 1 [default = GT_PHONE];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::xkcrm::EnGetType_IsValid(value)) {
            set_gettype(static_cast< ::xkcrm::EnGetType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userid;
        break;
      }

      // optional int32 userid = 2;
      case 2: {
        if (tag == 16) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
          set_has_userid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_phonenumber;
        break;
      }

      // optional string phonenumber = 3;
      case 3: {
        if (tag == 26) {
         parse_phonenumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonenumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phonenumber().data(), this->phonenumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "xkcrm.PkgUserLoginReq.phonenumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_emailaddress;
        break;
      }

      // optional string emailaddress = 4;
      case 4: {
        if (tag == 34) {
         parse_emailaddress:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_emailaddress()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->emailaddress().data(), this->emailaddress().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "xkcrm.PkgUserLoginReq.emailaddress");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_username;
        break;
      }

      // optional string username = 5;
      case 5: {
        if (tag == 42) {
         parse_username:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "xkcrm.PkgUserLoginReq.username");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_password;
        break;
      }

      // required string password = 10;
      case 10: {
        if (tag == 82) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "xkcrm.PkgUserLoginReq.password");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(802)) goto parse_hashedserversn;
        break;
      }

      // optional string hashedserversn = 100;
      case 100: {
        if (tag == 802) {
         parse_hashedserversn:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hashedserversn()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hashedserversn().data(), this->hashedserversn().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "xkcrm.PkgUserLoginReq.hashedserversn");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xkcrm.PkgUserLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xkcrm.PkgUserLoginReq)
  return false;
#undef DO_
}

void PkgUserLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xkcrm.PkgUserLoginReq)
  // required .xkcrm.EnGetType gettype = 1 [default = GT_PHONE];
  if (has_gettype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->gettype(), output);
  }

  // optional int32 userid = 2;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->userid(), output);
  }

  // optional string phonenumber = 3;
  if (has_phonenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgUserLoginReq.phonenumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->phonenumber(), output);
  }

  // optional string emailaddress = 4;
  if (has_emailaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emailaddress().data(), this->emailaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgUserLoginReq.emailaddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->emailaddress(), output);
  }

  // optional string username = 5;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgUserLoginReq.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->username(), output);
  }

  // required string password = 10;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgUserLoginReq.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->password(), output);
  }

  // optional string hashedserversn = 100;
  if (has_hashedserversn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hashedserversn().data(), this->hashedserversn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgUserLoginReq.hashedserversn");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      100, this->hashedserversn(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:xkcrm.PkgUserLoginReq)
}

::google::protobuf::uint8* PkgUserLoginReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:xkcrm.PkgUserLoginReq)
  // required .xkcrm.EnGetType gettype = 1 [default = GT_PHONE];
  if (has_gettype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->gettype(), target);
  }

  // optional int32 userid = 2;
  if (has_userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->userid(), target);
  }

  // optional string phonenumber = 3;
  if (has_phonenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgUserLoginReq.phonenumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->phonenumber(), target);
  }

  // optional string emailaddress = 4;
  if (has_emailaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emailaddress().data(), this->emailaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgUserLoginReq.emailaddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->emailaddress(), target);
  }

  // optional string username = 5;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgUserLoginReq.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->username(), target);
  }

  // required string password = 10;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgUserLoginReq.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->password(), target);
  }

  // optional string hashedserversn = 100;
  if (has_hashedserversn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hashedserversn().data(), this->hashedserversn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgUserLoginReq.hashedserversn");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        100, this->hashedserversn(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xkcrm.PkgUserLoginReq)
  return target;
}

int PkgUserLoginReq::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_gettype()) {
    // required .xkcrm.EnGetType gettype = 1 [default = GT_PHONE];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gettype());
  }

  if (has_password()) {
    // required string password = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  return total_size;
}
int PkgUserLoginReq::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000021) ^ 0x00000021) == 0) {  // All required fields are present.
    // required .xkcrm.EnGetType gettype = 1 [default = GT_PHONE];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gettype());

    // required string password = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[1 / 32] & 94) {
    // optional int32 userid = 2;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional string phonenumber = 3;
    if (has_phonenumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phonenumber());
    }

    // optional string emailaddress = 4;
    if (has_emailaddress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->emailaddress());
    }

    // optional string username = 5;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional string hashedserversn = 100;
    if (has_hashedserversn()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hashedserversn());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserLoginReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserLoginReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserLoginReq::MergeFrom(const PkgUserLoginReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gettype()) {
      set_gettype(from.gettype());
    }
    if (from.has_userid()) {
      set_userid(from.userid());
    }
    if (from.has_phonenumber()) {
      set_has_phonenumber();
      phonenumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenumber_);
    }
    if (from.has_emailaddress()) {
      set_has_emailaddress();
      emailaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.emailaddress_);
    }
    if (from.has_username()) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (from.has_password()) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (from.has_hashedserversn()) {
      set_has_hashedserversn();
      hashedserversn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hashedserversn_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserLoginReq::CopyFrom(const PkgUserLoginReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserLoginReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000021) != 0x00000021) return false;

  return true;
}

void PkgUserLoginReq::Swap(PkgUserLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserLoginReq::InternalSwap(PkgUserLoginReq* other) {
  std::swap(gettype_, other->gettype_);
  std::swap(userid_, other->userid_);
  phonenumber_.Swap(&other->phonenumber_);
  emailaddress_.Swap(&other->emailaddress_);
  username_.Swap(&other->username_);
  password_.Swap(&other->password_);
  hashedserversn_.Swap(&other->hashedserversn_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserLoginReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserLoginReq_descriptor_;
  metadata.reflection = PkgUserLoginReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgUserLoginReply::kIssuccessFieldNumber;
const int PkgUserLoginReply::kErrFieldNumber;
const int PkgUserLoginReply::kUserinfoFieldNumber;
const int PkgUserLoginReply::kCompanyinfoFieldNumber;
#endif  // !_MSC_VER

PkgUserLoginReply::PkgUserLoginReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:xkcrm.PkgUserLoginReply)
}

void PkgUserLoginReply::InitAsDefaultInstance() {
  userinfo_ = const_cast< ::xkcrm::db_res_users*>(&::xkcrm::db_res_users::default_instance());
  companyinfo_ = const_cast< ::xkcrm::db_res_company*>(&::xkcrm::db_res_company::default_instance());
}

PkgUserLoginReply::PkgUserLoginReply(const PkgUserLoginReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:xkcrm.PkgUserLoginReply)
}

void PkgUserLoginReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = true;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userinfo_ = NULL;
  companyinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserLoginReply::~PkgUserLoginReply() {
  // @@protoc_insertion_point(destructor:xkcrm.PkgUserLoginReply)
  SharedDtor();
}

void PkgUserLoginReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete userinfo_;
    delete companyinfo_;
  }
}

void PkgUserLoginReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserLoginReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserLoginReply_descriptor_;
}

const PkgUserLoginReply& PkgUserLoginReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_xkcrm_2eproto();
  return *default_instance_;
}

PkgUserLoginReply* PkgUserLoginReply::default_instance_ = NULL;

PkgUserLoginReply* PkgUserLoginReply::New(::google::protobuf::Arena* arena) const {
  PkgUserLoginReply* n = new PkgUserLoginReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserLoginReply::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    issuccess_ = true;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_userinfo()) {
      if (userinfo_ != NULL) userinfo_->::xkcrm::db_res_users::Clear();
    }
    if (has_companyinfo()) {
      if (companyinfo_ != NULL) companyinfo_->::xkcrm::db_res_company::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserLoginReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xkcrm.PkgUserLoginReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1 [default = true];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "xkcrm.PkgUserLoginReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_userinfo;
        break;
      }

      // optional .xkcrm.db_res_users userinfo = 11;
      case 11: {
        if (tag == 90) {
         parse_userinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_companyinfo;
        break;
      }

      // optional .xkcrm.db_res_company companyinfo = 12;
      case 12: {
        if (tag == 98) {
         parse_companyinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_companyinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xkcrm.PkgUserLoginReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xkcrm.PkgUserLoginReply)
  return false;
#undef DO_
}

void PkgUserLoginReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xkcrm.PkgUserLoginReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgUserLoginReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  // optional .xkcrm.db_res_users userinfo = 11;
  if (has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->userinfo_, output);
  }

  // optional .xkcrm.db_res_company companyinfo = 12;
  if (has_companyinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->companyinfo_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:xkcrm.PkgUserLoginReply)
}

::google::protobuf::uint8* PkgUserLoginReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:xkcrm.PkgUserLoginReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgUserLoginReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  // optional .xkcrm.db_res_users userinfo = 11;
  if (has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, *this->userinfo_, target);
  }

  // optional .xkcrm.db_res_company companyinfo = 12;
  if (has_companyinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, *this->companyinfo_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xkcrm.PkgUserLoginReply)
  return target;
}

int PkgUserLoginReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  if (_has_bits_[1 / 32] & 14) {
    // optional string err = 2;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->err());
    }

    // optional .xkcrm.db_res_users userinfo = 11;
    if (has_userinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->userinfo_);
    }

    // optional .xkcrm.db_res_company companyinfo = 12;
    if (has_companyinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->companyinfo_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserLoginReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserLoginReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserLoginReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserLoginReply::MergeFrom(const PkgUserLoginReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
    if (from.has_userinfo()) {
      mutable_userinfo()->::xkcrm::db_res_users::MergeFrom(from.userinfo());
    }
    if (from.has_companyinfo()) {
      mutable_companyinfo()->::xkcrm::db_res_company::MergeFrom(from.companyinfo());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserLoginReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserLoginReply::CopyFrom(const PkgUserLoginReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserLoginReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_userinfo()) {
    if (!this->userinfo_->IsInitialized()) return false;
  }
  if (has_companyinfo()) {
    if (!this->companyinfo_->IsInitialized()) return false;
  }
  return true;
}

void PkgUserLoginReply::Swap(PkgUserLoginReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserLoginReply::InternalSwap(PkgUserLoginReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  std::swap(userinfo_, other->userinfo_);
  std::swap(companyinfo_, other->companyinfo_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserLoginReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserLoginReply_descriptor_;
  metadata.reflection = PkgUserLoginReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgOptPartnerReq::kOptFieldNumber;
const int PkgOptPartnerReq::kPartnerFieldNumber;
const int PkgOptPartnerReq::kUuidpartnerFieldNumber;
#endif  // !_MSC_VER

PkgOptPartnerReq::PkgOptPartnerReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:xkcrm.PkgOptPartnerReq)
}

void PkgOptPartnerReq::InitAsDefaultInstance() {
  partner_ = const_cast< ::xkcrm::db_res_partner*>(&::xkcrm::db_res_partner::default_instance());
}

PkgOptPartnerReq::PkgOptPartnerReq(const PkgOptPartnerReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:xkcrm.PkgOptPartnerReq)
}

void PkgOptPartnerReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  opt_ = 1;
  partner_ = NULL;
  uuidpartner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgOptPartnerReq::~PkgOptPartnerReq() {
  // @@protoc_insertion_point(destructor:xkcrm.PkgOptPartnerReq)
  SharedDtor();
}

void PkgOptPartnerReq::SharedDtor() {
  uuidpartner_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete partner_;
  }
}

void PkgOptPartnerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgOptPartnerReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgOptPartnerReq_descriptor_;
}

const PkgOptPartnerReq& PkgOptPartnerReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_xkcrm_2eproto();
  return *default_instance_;
}

PkgOptPartnerReq* PkgOptPartnerReq::default_instance_ = NULL;

PkgOptPartnerReq* PkgOptPartnerReq::New(::google::protobuf::Arena* arena) const {
  PkgOptPartnerReq* n = new PkgOptPartnerReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgOptPartnerReq::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    opt_ = 1;
    if (has_partner()) {
      if (partner_ != NULL) partner_->::xkcrm::db_res_partner::Clear();
    }
    if (has_uuidpartner()) {
      uuidpartner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgOptPartnerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xkcrm.PkgOptPartnerReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .xkcrm.EnOperation opt = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::xkcrm::EnOperation_IsValid(value)) {
            set_opt(static_cast< ::xkcrm::EnOperation >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_partner;
        break;
      }

      // optional .xkcrm.db_res_partner partner = 2;
      case 2: {
        if (tag == 18) {
         parse_partner:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_partner()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_uuidpartner;
        break;
      }

      // optional string uuidpartner = 3;
      case 3: {
        if (tag == 26) {
         parse_uuidpartner:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuidpartner()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->uuidpartner().data(), this->uuidpartner().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "xkcrm.PkgOptPartnerReq.uuidpartner");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xkcrm.PkgOptPartnerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xkcrm.PkgOptPartnerReq)
  return false;
#undef DO_
}

void PkgOptPartnerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xkcrm.PkgOptPartnerReq)
  // required .xkcrm.EnOperation opt = 1;
  if (has_opt()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->opt(), output);
  }

  // optional .xkcrm.db_res_partner partner = 2;
  if (has_partner()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->partner_, output);
  }

  // optional string uuidpartner = 3;
  if (has_uuidpartner()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uuidpartner().data(), this->uuidpartner().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgOptPartnerReq.uuidpartner");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->uuidpartner(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:xkcrm.PkgOptPartnerReq)
}

::google::protobuf::uint8* PkgOptPartnerReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:xkcrm.PkgOptPartnerReq)
  // required .xkcrm.EnOperation opt = 1;
  if (has_opt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->opt(), target);
  }

  // optional .xkcrm.db_res_partner partner = 2;
  if (has_partner()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->partner_, target);
  }

  // optional string uuidpartner = 3;
  if (has_uuidpartner()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uuidpartner().data(), this->uuidpartner().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgOptPartnerReq.uuidpartner");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->uuidpartner(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xkcrm.PkgOptPartnerReq)
  return target;
}

int PkgOptPartnerReq::ByteSize() const {
  int total_size = 0;

  // required .xkcrm.EnOperation opt = 1;
  if (has_opt()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->opt());
  }
  if (_has_bits_[1 / 32] & 6) {
    // optional .xkcrm.db_res_partner partner = 2;
    if (has_partner()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->partner_);
    }

    // optional string uuidpartner = 3;
    if (has_uuidpartner()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uuidpartner());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgOptPartnerReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgOptPartnerReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgOptPartnerReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgOptPartnerReq::MergeFrom(const PkgOptPartnerReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_opt()) {
      set_opt(from.opt());
    }
    if (from.has_partner()) {
      mutable_partner()->::xkcrm::db_res_partner::MergeFrom(from.partner());
    }
    if (from.has_uuidpartner()) {
      set_has_uuidpartner();
      uuidpartner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuidpartner_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgOptPartnerReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgOptPartnerReq::CopyFrom(const PkgOptPartnerReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgOptPartnerReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_partner()) {
    if (!this->partner_->IsInitialized()) return false;
  }
  return true;
}

void PkgOptPartnerReq::Swap(PkgOptPartnerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgOptPartnerReq::InternalSwap(PkgOptPartnerReq* other) {
  std::swap(opt_, other->opt_);
  std::swap(partner_, other->partner_);
  uuidpartner_.Swap(&other->uuidpartner_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgOptPartnerReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgOptPartnerReq_descriptor_;
  metadata.reflection = PkgOptPartnerReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgOptPartnerReply::kIssuccessFieldNumber;
const int PkgOptPartnerReply::kErrFieldNumber;
#endif  // !_MSC_VER

PkgOptPartnerReply::PkgOptPartnerReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:xkcrm.PkgOptPartnerReply)
}

void PkgOptPartnerReply::InitAsDefaultInstance() {
}

PkgOptPartnerReply::PkgOptPartnerReply(const PkgOptPartnerReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:xkcrm.PkgOptPartnerReply)
}

void PkgOptPartnerReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = false;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgOptPartnerReply::~PkgOptPartnerReply() {
  // @@protoc_insertion_point(destructor:xkcrm.PkgOptPartnerReply)
  SharedDtor();
}

void PkgOptPartnerReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgOptPartnerReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgOptPartnerReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgOptPartnerReply_descriptor_;
}

const PkgOptPartnerReply& PkgOptPartnerReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_xkcrm_2eproto();
  return *default_instance_;
}

PkgOptPartnerReply* PkgOptPartnerReply::default_instance_ = NULL;

PkgOptPartnerReply* PkgOptPartnerReply::New(::google::protobuf::Arena* arena) const {
  PkgOptPartnerReply* n = new PkgOptPartnerReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgOptPartnerReply::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    issuccess_ = false;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgOptPartnerReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xkcrm.PkgOptPartnerReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "xkcrm.PkgOptPartnerReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xkcrm.PkgOptPartnerReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xkcrm.PkgOptPartnerReply)
  return false;
#undef DO_
}

void PkgOptPartnerReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xkcrm.PkgOptPartnerReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgOptPartnerReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:xkcrm.PkgOptPartnerReply)
}

::google::protobuf::uint8* PkgOptPartnerReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:xkcrm.PkgOptPartnerReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgOptPartnerReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xkcrm.PkgOptPartnerReply)
  return target;
}

int PkgOptPartnerReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1;
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  // optional string err = 2;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgOptPartnerReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgOptPartnerReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgOptPartnerReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgOptPartnerReply::MergeFrom(const PkgOptPartnerReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgOptPartnerReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgOptPartnerReply::CopyFrom(const PkgOptPartnerReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgOptPartnerReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgOptPartnerReply::Swap(PkgOptPartnerReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgOptPartnerReply::InternalSwap(PkgOptPartnerReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgOptPartnerReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgOptPartnerReply_descriptor_;
  metadata.reflection = PkgOptPartnerReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgOptLeadReq::kOptFieldNumber;
const int PkgOptLeadReq::kLeadFieldNumber;
const int PkgOptLeadReq::kUuidleadidFieldNumber;
#endif  // !_MSC_VER

PkgOptLeadReq::PkgOptLeadReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:xkcrm.PkgOptLeadReq)
}

void PkgOptLeadReq::InitAsDefaultInstance() {
  lead_ = const_cast< ::xkcrm::db_crm_lead*>(&::xkcrm::db_crm_lead::default_instance());
}

PkgOptLeadReq::PkgOptLeadReq(const PkgOptLeadReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:xkcrm.PkgOptLeadReq)
}

void PkgOptLeadReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  opt_ = 1;
  lead_ = NULL;
  uuidleadid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgOptLeadReq::~PkgOptLeadReq() {
  // @@protoc_insertion_point(destructor:xkcrm.PkgOptLeadReq)
  SharedDtor();
}

void PkgOptLeadReq::SharedDtor() {
  uuidleadid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete lead_;
  }
}

void PkgOptLeadReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgOptLeadReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgOptLeadReq_descriptor_;
}

const PkgOptLeadReq& PkgOptLeadReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_xkcrm_2eproto();
  return *default_instance_;
}

PkgOptLeadReq* PkgOptLeadReq::default_instance_ = NULL;

PkgOptLeadReq* PkgOptLeadReq::New(::google::protobuf::Arena* arena) const {
  PkgOptLeadReq* n = new PkgOptLeadReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgOptLeadReq::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    opt_ = 1;
    if (has_lead()) {
      if (lead_ != NULL) lead_->::xkcrm::db_crm_lead::Clear();
    }
    if (has_uuidleadid()) {
      uuidleadid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgOptLeadReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xkcrm.PkgOptLeadReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .xkcrm.EnOperation opt = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::xkcrm::EnOperation_IsValid(value)) {
            set_opt(static_cast< ::xkcrm::EnOperation >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_lead;
        break;
      }

      // optional .xkcrm.db_crm_lead lead = 2;
      case 2: {
        if (tag == 18) {
         parse_lead:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lead()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_uuidleadid;
        break;
      }

      // optional string uuidleadid = 3;
      case 3: {
        if (tag == 26) {
         parse_uuidleadid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuidleadid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->uuidleadid().data(), this->uuidleadid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "xkcrm.PkgOptLeadReq.uuidleadid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xkcrm.PkgOptLeadReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xkcrm.PkgOptLeadReq)
  return false;
#undef DO_
}

void PkgOptLeadReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xkcrm.PkgOptLeadReq)
  // required .xkcrm.EnOperation opt = 1;
  if (has_opt()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->opt(), output);
  }

  // optional .xkcrm.db_crm_lead lead = 2;
  if (has_lead()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->lead_, output);
  }

  // optional string uuidleadid = 3;
  if (has_uuidleadid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uuidleadid().data(), this->uuidleadid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgOptLeadReq.uuidleadid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->uuidleadid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:xkcrm.PkgOptLeadReq)
}

::google::protobuf::uint8* PkgOptLeadReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:xkcrm.PkgOptLeadReq)
  // required .xkcrm.EnOperation opt = 1;
  if (has_opt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->opt(), target);
  }

  // optional .xkcrm.db_crm_lead lead = 2;
  if (has_lead()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->lead_, target);
  }

  // optional string uuidleadid = 3;
  if (has_uuidleadid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uuidleadid().data(), this->uuidleadid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgOptLeadReq.uuidleadid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->uuidleadid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xkcrm.PkgOptLeadReq)
  return target;
}

int PkgOptLeadReq::ByteSize() const {
  int total_size = 0;

  // required .xkcrm.EnOperation opt = 1;
  if (has_opt()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->opt());
  }
  if (_has_bits_[1 / 32] & 6) {
    // optional .xkcrm.db_crm_lead lead = 2;
    if (has_lead()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->lead_);
    }

    // optional string uuidleadid = 3;
    if (has_uuidleadid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uuidleadid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgOptLeadReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgOptLeadReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgOptLeadReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgOptLeadReq::MergeFrom(const PkgOptLeadReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_opt()) {
      set_opt(from.opt());
    }
    if (from.has_lead()) {
      mutable_lead()->::xkcrm::db_crm_lead::MergeFrom(from.lead());
    }
    if (from.has_uuidleadid()) {
      set_has_uuidleadid();
      uuidleadid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuidleadid_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgOptLeadReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgOptLeadReq::CopyFrom(const PkgOptLeadReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgOptLeadReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_lead()) {
    if (!this->lead_->IsInitialized()) return false;
  }
  return true;
}

void PkgOptLeadReq::Swap(PkgOptLeadReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgOptLeadReq::InternalSwap(PkgOptLeadReq* other) {
  std::swap(opt_, other->opt_);
  std::swap(lead_, other->lead_);
  uuidleadid_.Swap(&other->uuidleadid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgOptLeadReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgOptLeadReq_descriptor_;
  metadata.reflection = PkgOptLeadReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgOptLeadReply::kIssuccessFieldNumber;
const int PkgOptLeadReply::kErrFieldNumber;
#endif  // !_MSC_VER

PkgOptLeadReply::PkgOptLeadReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:xkcrm.PkgOptLeadReply)
}

void PkgOptLeadReply::InitAsDefaultInstance() {
}

PkgOptLeadReply::PkgOptLeadReply(const PkgOptLeadReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:xkcrm.PkgOptLeadReply)
}

void PkgOptLeadReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = false;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgOptLeadReply::~PkgOptLeadReply() {
  // @@protoc_insertion_point(destructor:xkcrm.PkgOptLeadReply)
  SharedDtor();
}

void PkgOptLeadReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgOptLeadReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgOptLeadReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgOptLeadReply_descriptor_;
}

const PkgOptLeadReply& PkgOptLeadReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_xkcrm_2eproto();
  return *default_instance_;
}

PkgOptLeadReply* PkgOptLeadReply::default_instance_ = NULL;

PkgOptLeadReply* PkgOptLeadReply::New(::google::protobuf::Arena* arena) const {
  PkgOptLeadReply* n = new PkgOptLeadReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgOptLeadReply::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    issuccess_ = false;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgOptLeadReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xkcrm.PkgOptLeadReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "xkcrm.PkgOptLeadReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xkcrm.PkgOptLeadReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xkcrm.PkgOptLeadReply)
  return false;
#undef DO_
}

void PkgOptLeadReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xkcrm.PkgOptLeadReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgOptLeadReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:xkcrm.PkgOptLeadReply)
}

::google::protobuf::uint8* PkgOptLeadReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:xkcrm.PkgOptLeadReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgOptLeadReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xkcrm.PkgOptLeadReply)
  return target;
}

int PkgOptLeadReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1;
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  // optional string err = 2;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgOptLeadReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgOptLeadReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgOptLeadReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgOptLeadReply::MergeFrom(const PkgOptLeadReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgOptLeadReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgOptLeadReply::CopyFrom(const PkgOptLeadReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgOptLeadReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgOptLeadReply::Swap(PkgOptLeadReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgOptLeadReply::InternalSwap(PkgOptLeadReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgOptLeadReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgOptLeadReply_descriptor_;
  metadata.reflection = PkgOptLeadReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgOptPhonecallReq::kOptFieldNumber;
const int PkgOptPhonecallReq::kPhonecallFieldNumber;
const int PkgOptPhonecallReq::kUuidphonecallidFieldNumber;
#endif  // !_MSC_VER

PkgOptPhonecallReq::PkgOptPhonecallReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:xkcrm.PkgOptPhonecallReq)
}

void PkgOptPhonecallReq::InitAsDefaultInstance() {
  phonecall_ = const_cast< ::xkcrm::db_crm_phonecall*>(&::xkcrm::db_crm_phonecall::default_instance());
}

PkgOptPhonecallReq::PkgOptPhonecallReq(const PkgOptPhonecallReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:xkcrm.PkgOptPhonecallReq)
}

void PkgOptPhonecallReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  opt_ = 1;
  phonecall_ = NULL;
  uuidphonecallid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgOptPhonecallReq::~PkgOptPhonecallReq() {
  // @@protoc_insertion_point(destructor:xkcrm.PkgOptPhonecallReq)
  SharedDtor();
}

void PkgOptPhonecallReq::SharedDtor() {
  uuidphonecallid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete phonecall_;
  }
}

void PkgOptPhonecallReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgOptPhonecallReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgOptPhonecallReq_descriptor_;
}

const PkgOptPhonecallReq& PkgOptPhonecallReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_xkcrm_2eproto();
  return *default_instance_;
}

PkgOptPhonecallReq* PkgOptPhonecallReq::default_instance_ = NULL;

PkgOptPhonecallReq* PkgOptPhonecallReq::New(::google::protobuf::Arena* arena) const {
  PkgOptPhonecallReq* n = new PkgOptPhonecallReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgOptPhonecallReq::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    opt_ = 1;
    if (has_phonecall()) {
      if (phonecall_ != NULL) phonecall_->::xkcrm::db_crm_phonecall::Clear();
    }
    if (has_uuidphonecallid()) {
      uuidphonecallid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgOptPhonecallReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xkcrm.PkgOptPhonecallReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .xkcrm.EnOperation opt = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::xkcrm::EnOperation_IsValid(value)) {
            set_opt(static_cast< ::xkcrm::EnOperation >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_phonecall;
        break;
      }

      // optional .xkcrm.db_crm_phonecall phonecall = 2;
      case 2: {
        if (tag == 18) {
         parse_phonecall:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_phonecall()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_uuidphonecallid;
        break;
      }

      // optional string uuidphonecallid = 3;
      case 3: {
        if (tag == 26) {
         parse_uuidphonecallid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuidphonecallid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->uuidphonecallid().data(), this->uuidphonecallid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "xkcrm.PkgOptPhonecallReq.uuidphonecallid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xkcrm.PkgOptPhonecallReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xkcrm.PkgOptPhonecallReq)
  return false;
#undef DO_
}

void PkgOptPhonecallReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xkcrm.PkgOptPhonecallReq)
  // required .xkcrm.EnOperation opt = 1;
  if (has_opt()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->opt(), output);
  }

  // optional .xkcrm.db_crm_phonecall phonecall = 2;
  if (has_phonecall()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->phonecall_, output);
  }

  // optional string uuidphonecallid = 3;
  if (has_uuidphonecallid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uuidphonecallid().data(), this->uuidphonecallid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgOptPhonecallReq.uuidphonecallid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->uuidphonecallid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:xkcrm.PkgOptPhonecallReq)
}

::google::protobuf::uint8* PkgOptPhonecallReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:xkcrm.PkgOptPhonecallReq)
  // required .xkcrm.EnOperation opt = 1;
  if (has_opt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->opt(), target);
  }

  // optional .xkcrm.db_crm_phonecall phonecall = 2;
  if (has_phonecall()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->phonecall_, target);
  }

  // optional string uuidphonecallid = 3;
  if (has_uuidphonecallid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uuidphonecallid().data(), this->uuidphonecallid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgOptPhonecallReq.uuidphonecallid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->uuidphonecallid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xkcrm.PkgOptPhonecallReq)
  return target;
}

int PkgOptPhonecallReq::ByteSize() const {
  int total_size = 0;

  // required .xkcrm.EnOperation opt = 1;
  if (has_opt()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->opt());
  }
  if (_has_bits_[1 / 32] & 6) {
    // optional .xkcrm.db_crm_phonecall phonecall = 2;
    if (has_phonecall()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->phonecall_);
    }

    // optional string uuidphonecallid = 3;
    if (has_uuidphonecallid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uuidphonecallid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgOptPhonecallReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgOptPhonecallReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgOptPhonecallReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgOptPhonecallReq::MergeFrom(const PkgOptPhonecallReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_opt()) {
      set_opt(from.opt());
    }
    if (from.has_phonecall()) {
      mutable_phonecall()->::xkcrm::db_crm_phonecall::MergeFrom(from.phonecall());
    }
    if (from.has_uuidphonecallid()) {
      set_has_uuidphonecallid();
      uuidphonecallid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuidphonecallid_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgOptPhonecallReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgOptPhonecallReq::CopyFrom(const PkgOptPhonecallReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgOptPhonecallReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_phonecall()) {
    if (!this->phonecall_->IsInitialized()) return false;
  }
  return true;
}

void PkgOptPhonecallReq::Swap(PkgOptPhonecallReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgOptPhonecallReq::InternalSwap(PkgOptPhonecallReq* other) {
  std::swap(opt_, other->opt_);
  std::swap(phonecall_, other->phonecall_);
  uuidphonecallid_.Swap(&other->uuidphonecallid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgOptPhonecallReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgOptPhonecallReq_descriptor_;
  metadata.reflection = PkgOptPhonecallReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgOptPhonecallReply::kIssuccessFieldNumber;
const int PkgOptPhonecallReply::kErrFieldNumber;
#endif  // !_MSC_VER

PkgOptPhonecallReply::PkgOptPhonecallReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:xkcrm.PkgOptPhonecallReply)
}

void PkgOptPhonecallReply::InitAsDefaultInstance() {
}

PkgOptPhonecallReply::PkgOptPhonecallReply(const PkgOptPhonecallReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:xkcrm.PkgOptPhonecallReply)
}

void PkgOptPhonecallReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = false;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgOptPhonecallReply::~PkgOptPhonecallReply() {
  // @@protoc_insertion_point(destructor:xkcrm.PkgOptPhonecallReply)
  SharedDtor();
}

void PkgOptPhonecallReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgOptPhonecallReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgOptPhonecallReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgOptPhonecallReply_descriptor_;
}

const PkgOptPhonecallReply& PkgOptPhonecallReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_xkcrm_2eproto();
  return *default_instance_;
}

PkgOptPhonecallReply* PkgOptPhonecallReply::default_instance_ = NULL;

PkgOptPhonecallReply* PkgOptPhonecallReply::New(::google::protobuf::Arena* arena) const {
  PkgOptPhonecallReply* n = new PkgOptPhonecallReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgOptPhonecallReply::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    issuccess_ = false;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgOptPhonecallReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xkcrm.PkgOptPhonecallReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "xkcrm.PkgOptPhonecallReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xkcrm.PkgOptPhonecallReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xkcrm.PkgOptPhonecallReply)
  return false;
#undef DO_
}

void PkgOptPhonecallReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xkcrm.PkgOptPhonecallReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgOptPhonecallReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:xkcrm.PkgOptPhonecallReply)
}

::google::protobuf::uint8* PkgOptPhonecallReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:xkcrm.PkgOptPhonecallReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgOptPhonecallReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xkcrm.PkgOptPhonecallReply)
  return target;
}

int PkgOptPhonecallReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1;
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  // optional string err = 2;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgOptPhonecallReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgOptPhonecallReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgOptPhonecallReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgOptPhonecallReply::MergeFrom(const PkgOptPhonecallReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgOptPhonecallReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgOptPhonecallReply::CopyFrom(const PkgOptPhonecallReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgOptPhonecallReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgOptPhonecallReply::Swap(PkgOptPhonecallReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgOptPhonecallReply::InternalSwap(PkgOptPhonecallReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgOptPhonecallReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgOptPhonecallReply_descriptor_;
  metadata.reflection = PkgOptPhonecallReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgQueryCondition::kTaskdatestartFieldNumber;
const int PkgQueryCondition::kTaskdateendFieldNumber;
const int PkgQueryCondition::kKeyfornameFieldNumber;
const int PkgQueryCondition::kKeyforcontentFieldNumber;
const int PkgQueryCondition::kPartneruuidFieldNumber;
const int PkgQueryCondition::kLeaduuidFieldNumber;
const int PkgQueryCondition::kSelfuuidFieldNumber;
#endif  // !_MSC_VER

PkgQueryCondition::PkgQueryCondition()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:xkcrm.PkgQueryCondition)
}

void PkgQueryCondition::InitAsDefaultInstance() {
}

PkgQueryCondition::PkgQueryCondition(const PkgQueryCondition& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:xkcrm.PkgQueryCondition)
}

void PkgQueryCondition::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  taskdatestart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskdateend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyforname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyforcontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  partneruuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leaduuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  selfuuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgQueryCondition::~PkgQueryCondition() {
  // @@protoc_insertion_point(destructor:xkcrm.PkgQueryCondition)
  SharedDtor();
}

void PkgQueryCondition::SharedDtor() {
  taskdatestart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskdateend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyforname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyforcontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  partneruuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leaduuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  selfuuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgQueryCondition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgQueryCondition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgQueryCondition_descriptor_;
}

const PkgQueryCondition& PkgQueryCondition::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_xkcrm_2eproto();
  return *default_instance_;
}

PkgQueryCondition* PkgQueryCondition::default_instance_ = NULL;

PkgQueryCondition* PkgQueryCondition::New(::google::protobuf::Arena* arena) const {
  PkgQueryCondition* n = new PkgQueryCondition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgQueryCondition::Clear() {
  if (_has_bits_[0 / 32] & 127) {
    if (has_taskdatestart()) {
      taskdatestart_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_taskdateend()) {
      taskdateend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_keyforname()) {
      keyforname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_keyforcontent()) {
      keyforcontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_partneruuid()) {
      partneruuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_leaduuid()) {
      leaduuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_selfuuid()) {
      selfuuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgQueryCondition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xkcrm.PkgQueryCondition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string taskdatestart = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_taskdatestart()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->taskdatestart().data(), this->taskdatestart().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "xkcrm.PkgQueryCondition.taskdatestart");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_taskdateend;
        break;
      }

      // optional string taskdateend = 3;
      case 3: {
        if (tag == 26) {
         parse_taskdateend:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_taskdateend()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->taskdateend().data(), this->taskdateend().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "xkcrm.PkgQueryCondition.taskdateend");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_keyforname;
        break;
      }

      // optional string keyforname = 4;
      case 4: {
        if (tag == 34) {
         parse_keyforname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_keyforname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->keyforname().data(), this->keyforname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "xkcrm.PkgQueryCondition.keyforname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_keyforcontent;
        break;
      }

      // optional string keyforcontent = 5;
      case 5: {
        if (tag == 42) {
         parse_keyforcontent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_keyforcontent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->keyforcontent().data(), this->keyforcontent().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "xkcrm.PkgQueryCondition.keyforcontent");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_partneruuid;
        break;
      }

      // optional string partneruuid = 10;
      case 10: {
        if (tag == 82) {
         parse_partneruuid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_partneruuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->partneruuid().data(), this->partneruuid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "xkcrm.PkgQueryCondition.partneruuid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_leaduuid;
        break;
      }

      // optional string leaduuid = 11;
      case 11: {
        if (tag == 90) {
         parse_leaduuid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_leaduuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->leaduuid().data(), this->leaduuid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "xkcrm.PkgQueryCondition.leaduuid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(802)) goto parse_selfuuid;
        break;
      }

      // optional string selfuuid = 100;
      case 100: {
        if (tag == 802) {
         parse_selfuuid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_selfuuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->selfuuid().data(), this->selfuuid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "xkcrm.PkgQueryCondition.selfuuid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xkcrm.PkgQueryCondition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xkcrm.PkgQueryCondition)
  return false;
#undef DO_
}

void PkgQueryCondition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xkcrm.PkgQueryCondition)
  // optional string taskdatestart = 2;
  if (has_taskdatestart()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->taskdatestart().data(), this->taskdatestart().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgQueryCondition.taskdatestart");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->taskdatestart(), output);
  }

  // optional string taskdateend = 3;
  if (has_taskdateend()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->taskdateend().data(), this->taskdateend().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgQueryCondition.taskdateend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->taskdateend(), output);
  }

  // optional string keyforname = 4;
  if (has_keyforname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keyforname().data(), this->keyforname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgQueryCondition.keyforname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->keyforname(), output);
  }

  // optional string keyforcontent = 5;
  if (has_keyforcontent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keyforcontent().data(), this->keyforcontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgQueryCondition.keyforcontent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->keyforcontent(), output);
  }

  // optional string partneruuid = 10;
  if (has_partneruuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->partneruuid().data(), this->partneruuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgQueryCondition.partneruuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->partneruuid(), output);
  }

  // optional string leaduuid = 11;
  if (has_leaduuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->leaduuid().data(), this->leaduuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgQueryCondition.leaduuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->leaduuid(), output);
  }

  // optional string selfuuid = 100;
  if (has_selfuuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->selfuuid().data(), this->selfuuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgQueryCondition.selfuuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      100, this->selfuuid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:xkcrm.PkgQueryCondition)
}

::google::protobuf::uint8* PkgQueryCondition::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:xkcrm.PkgQueryCondition)
  // optional string taskdatestart = 2;
  if (has_taskdatestart()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->taskdatestart().data(), this->taskdatestart().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgQueryCondition.taskdatestart");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->taskdatestart(), target);
  }

  // optional string taskdateend = 3;
  if (has_taskdateend()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->taskdateend().data(), this->taskdateend().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgQueryCondition.taskdateend");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->taskdateend(), target);
  }

  // optional string keyforname = 4;
  if (has_keyforname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keyforname().data(), this->keyforname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgQueryCondition.keyforname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->keyforname(), target);
  }

  // optional string keyforcontent = 5;
  if (has_keyforcontent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keyforcontent().data(), this->keyforcontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgQueryCondition.keyforcontent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->keyforcontent(), target);
  }

  // optional string partneruuid = 10;
  if (has_partneruuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->partneruuid().data(), this->partneruuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgQueryCondition.partneruuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->partneruuid(), target);
  }

  // optional string leaduuid = 11;
  if (has_leaduuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->leaduuid().data(), this->leaduuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgQueryCondition.leaduuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->leaduuid(), target);
  }

  // optional string selfuuid = 100;
  if (has_selfuuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->selfuuid().data(), this->selfuuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgQueryCondition.selfuuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        100, this->selfuuid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xkcrm.PkgQueryCondition)
  return target;
}

int PkgQueryCondition::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 127) {
    // optional string taskdatestart = 2;
    if (has_taskdatestart()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->taskdatestart());
    }

    // optional string taskdateend = 3;
    if (has_taskdateend()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->taskdateend());
    }

    // optional string keyforname = 4;
    if (has_keyforname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->keyforname());
    }

    // optional string keyforcontent = 5;
    if (has_keyforcontent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->keyforcontent());
    }

    // optional string partneruuid = 10;
    if (has_partneruuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->partneruuid());
    }

    // optional string leaduuid = 11;
    if (has_leaduuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->leaduuid());
    }

    // optional string selfuuid = 100;
    if (has_selfuuid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->selfuuid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgQueryCondition::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgQueryCondition* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgQueryCondition*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgQueryCondition::MergeFrom(const PkgQueryCondition& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_taskdatestart()) {
      set_has_taskdatestart();
      taskdatestart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskdatestart_);
    }
    if (from.has_taskdateend()) {
      set_has_taskdateend();
      taskdateend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskdateend_);
    }
    if (from.has_keyforname()) {
      set_has_keyforname();
      keyforname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyforname_);
    }
    if (from.has_keyforcontent()) {
      set_has_keyforcontent();
      keyforcontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyforcontent_);
    }
    if (from.has_partneruuid()) {
      set_has_partneruuid();
      partneruuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.partneruuid_);
    }
    if (from.has_leaduuid()) {
      set_has_leaduuid();
      leaduuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leaduuid_);
    }
    if (from.has_selfuuid()) {
      set_has_selfuuid();
      selfuuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.selfuuid_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgQueryCondition::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgQueryCondition::CopyFrom(const PkgQueryCondition& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgQueryCondition::IsInitialized() const {

  return true;
}

void PkgQueryCondition::Swap(PkgQueryCondition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgQueryCondition::InternalSwap(PkgQueryCondition* other) {
  taskdatestart_.Swap(&other->taskdatestart_);
  taskdateend_.Swap(&other->taskdateend_);
  keyforname_.Swap(&other->keyforname_);
  keyforcontent_.Swap(&other->keyforcontent_);
  partneruuid_.Swap(&other->partneruuid_);
  leaduuid_.Swap(&other->leaduuid_);
  selfuuid_.Swap(&other->selfuuid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgQueryCondition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgQueryCondition_descriptor_;
  metadata.reflection = PkgQueryCondition_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgPageQueryPartnerReq::kEnconditonFieldNumber;
const int PkgPageQueryPartnerReq::kPkgqueryconditionFieldNumber;
const int PkgPageQueryPartnerReq::kPageflagFieldNumber;
const int PkgPageQueryPartnerReq::kIndexstartFieldNumber;
const int PkgPageQueryPartnerReq::kIndexendFieldNumber;
#endif  // !_MSC_VER

PkgPageQueryPartnerReq::PkgPageQueryPartnerReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:xkcrm.PkgPageQueryPartnerReq)
}

void PkgPageQueryPartnerReq::InitAsDefaultInstance() {
  pkgquerycondition_ = const_cast< ::xkcrm::PkgQueryCondition*>(&::xkcrm::PkgQueryCondition::default_instance());
}

PkgPageQueryPartnerReq::PkgPageQueryPartnerReq(const PkgPageQueryPartnerReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:xkcrm.PkgPageQueryPartnerReq)
}

void PkgPageQueryPartnerReq::SharedCtor() {
  _cached_size_ = 0;
  enconditon_ = 0;
  pkgquerycondition_ = NULL;
  pageflag_ = 2;
  indexstart_ = 0;
  indexend_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgPageQueryPartnerReq::~PkgPageQueryPartnerReq() {
  // @@protoc_insertion_point(destructor:xkcrm.PkgPageQueryPartnerReq)
  SharedDtor();
}

void PkgPageQueryPartnerReq::SharedDtor() {
  if (this != default_instance_) {
    delete pkgquerycondition_;
  }
}

void PkgPageQueryPartnerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgPageQueryPartnerReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgPageQueryPartnerReq_descriptor_;
}

const PkgPageQueryPartnerReq& PkgPageQueryPartnerReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_xkcrm_2eproto();
  return *default_instance_;
}

PkgPageQueryPartnerReq* PkgPageQueryPartnerReq::default_instance_ = NULL;

PkgPageQueryPartnerReq* PkgPageQueryPartnerReq::New(::google::protobuf::Arena* arena) const {
  PkgPageQueryPartnerReq* n = new PkgPageQueryPartnerReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgPageQueryPartnerReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgPageQueryPartnerReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(indexstart_, indexend_);
    enconditon_ = 0;
    if (has_pkgquerycondition()) {
      if (pkgquerycondition_ != NULL) pkgquerycondition_->::xkcrm::PkgQueryCondition::Clear();
    }
    pageflag_ = 2;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgPageQueryPartnerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xkcrm.PkgPageQueryPartnerReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 enconditon = 2 [default = 0];
      case 2: {
        if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &enconditon_)));
          set_has_enconditon();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_pkgquerycondition;
        break;
      }

      // optional .xkcrm.PkgQueryCondition pkgquerycondition = 3;
      case 3: {
        if (tag == 26) {
         parse_pkgquerycondition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pkgquerycondition()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pageflag;
        break;
      }

      // optional .xkcrm.EnPageFlag pageflag = 4 [default = P_RETURNALL];
      case 4: {
        if (tag == 32) {
         parse_pageflag:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::xkcrm::EnPageFlag_IsValid(value)) {
            set_pageflag(static_cast< ::xkcrm::EnPageFlag >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_indexstart;
        break;
      }

      // optional int32 indexstart = 5;
      case 5: {
        if (tag == 40) {
         parse_indexstart:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &indexstart_)));
          set_has_indexstart();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_indexend;
        break;
      }

      // optional int32 indexend = 6;
      case 6: {
        if (tag == 48) {
         parse_indexend:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &indexend_)));
          set_has_indexend();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xkcrm.PkgPageQueryPartnerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xkcrm.PkgPageQueryPartnerReq)
  return false;
#undef DO_
}

void PkgPageQueryPartnerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xkcrm.PkgPageQueryPartnerReq)
  // optional int32 enconditon = 2 [default = 0];
  if (has_enconditon()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->enconditon(), output);
  }

  // optional .xkcrm.PkgQueryCondition pkgquerycondition = 3;
  if (has_pkgquerycondition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->pkgquerycondition_, output);
  }

  // optional .xkcrm.EnPageFlag pageflag = 4 [default = P_RETURNALL];
  if (has_pageflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->pageflag(), output);
  }

  // optional int32 indexstart = 5;
  if (has_indexstart()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->indexstart(), output);
  }

  // optional int32 indexend = 6;
  if (has_indexend()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->indexend(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:xkcrm.PkgPageQueryPartnerReq)
}

::google::protobuf::uint8* PkgPageQueryPartnerReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:xkcrm.PkgPageQueryPartnerReq)
  // optional int32 enconditon = 2 [default = 0];
  if (has_enconditon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->enconditon(), target);
  }

  // optional .xkcrm.PkgQueryCondition pkgquerycondition = 3;
  if (has_pkgquerycondition()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *this->pkgquerycondition_, target);
  }

  // optional .xkcrm.EnPageFlag pageflag = 4 [default = P_RETURNALL];
  if (has_pageflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->pageflag(), target);
  }

  // optional int32 indexstart = 5;
  if (has_indexstart()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->indexstart(), target);
  }

  // optional int32 indexend = 6;
  if (has_indexend()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->indexend(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xkcrm.PkgPageQueryPartnerReq)
  return target;
}

int PkgPageQueryPartnerReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31) {
    // optional int32 enconditon = 2 [default = 0];
    if (has_enconditon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->enconditon());
    }

    // optional .xkcrm.PkgQueryCondition pkgquerycondition = 3;
    if (has_pkgquerycondition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pkgquerycondition_);
    }

    // optional .xkcrm.EnPageFlag pageflag = 4 [default = P_RETURNALL];
    if (has_pageflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->pageflag());
    }

    // optional int32 indexstart = 5;
    if (has_indexstart()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->indexstart());
    }

    // optional int32 indexend = 6;
    if (has_indexend()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->indexend());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgPageQueryPartnerReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgPageQueryPartnerReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgPageQueryPartnerReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgPageQueryPartnerReq::MergeFrom(const PkgPageQueryPartnerReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_enconditon()) {
      set_enconditon(from.enconditon());
    }
    if (from.has_pkgquerycondition()) {
      mutable_pkgquerycondition()->::xkcrm::PkgQueryCondition::MergeFrom(from.pkgquerycondition());
    }
    if (from.has_pageflag()) {
      set_pageflag(from.pageflag());
    }
    if (from.has_indexstart()) {
      set_indexstart(from.indexstart());
    }
    if (from.has_indexend()) {
      set_indexend(from.indexend());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgPageQueryPartnerReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgPageQueryPartnerReq::CopyFrom(const PkgPageQueryPartnerReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgPageQueryPartnerReq::IsInitialized() const {

  return true;
}

void PkgPageQueryPartnerReq::Swap(PkgPageQueryPartnerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgPageQueryPartnerReq::InternalSwap(PkgPageQueryPartnerReq* other) {
  std::swap(enconditon_, other->enconditon_);
  std::swap(pkgquerycondition_, other->pkgquerycondition_);
  std::swap(pageflag_, other->pageflag_);
  std::swap(indexstart_, other->indexstart_);
  std::swap(indexend_, other->indexend_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgPageQueryPartnerReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgPageQueryPartnerReq_descriptor_;
  metadata.reflection = PkgPageQueryPartnerReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgPageQueryPartnerReply::kIssuccessFieldNumber;
const int PkgPageQueryPartnerReply::kErrFieldNumber;
const int PkgPageQueryPartnerReply::kRowsFieldNumber;
#endif  // !_MSC_VER

PkgPageQueryPartnerReply::PkgPageQueryPartnerReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:xkcrm.PkgPageQueryPartnerReply)
}

void PkgPageQueryPartnerReply::InitAsDefaultInstance() {
}

PkgPageQueryPartnerReply::PkgPageQueryPartnerReply(const PkgPageQueryPartnerReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:xkcrm.PkgPageQueryPartnerReply)
}

void PkgPageQueryPartnerReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = false;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgPageQueryPartnerReply::~PkgPageQueryPartnerReply() {
  // @@protoc_insertion_point(destructor:xkcrm.PkgPageQueryPartnerReply)
  SharedDtor();
}

void PkgPageQueryPartnerReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgPageQueryPartnerReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgPageQueryPartnerReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgPageQueryPartnerReply_descriptor_;
}

const PkgPageQueryPartnerReply& PkgPageQueryPartnerReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_xkcrm_2eproto();
  return *default_instance_;
}

PkgPageQueryPartnerReply* PkgPageQueryPartnerReply::default_instance_ = NULL;

PkgPageQueryPartnerReply* PkgPageQueryPartnerReply::New(::google::protobuf::Arena* arena) const {
  PkgPageQueryPartnerReply* n = new PkgPageQueryPartnerReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgPageQueryPartnerReply::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    issuccess_ = false;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  rows_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgPageQueryPartnerReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xkcrm.PkgPageQueryPartnerReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "xkcrm.PkgPageQueryPartnerReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_rows;
        break;
      }

      // repeated .xkcrm.db_res_partner rows = 10;
      case 10: {
        if (tag == 82) {
         parse_rows:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rows()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_rows;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xkcrm.PkgPageQueryPartnerReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xkcrm.PkgPageQueryPartnerReply)
  return false;
#undef DO_
}

void PkgPageQueryPartnerReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xkcrm.PkgPageQueryPartnerReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgPageQueryPartnerReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  // repeated .xkcrm.db_res_partner rows = 10;
  for (unsigned int i = 0, n = this->rows_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->rows(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:xkcrm.PkgPageQueryPartnerReply)
}

::google::protobuf::uint8* PkgPageQueryPartnerReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:xkcrm.PkgPageQueryPartnerReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgPageQueryPartnerReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  // repeated .xkcrm.db_res_partner rows = 10;
  for (unsigned int i = 0, n = this->rows_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->rows(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xkcrm.PkgPageQueryPartnerReply)
  return target;
}

int PkgPageQueryPartnerReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1;
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  // optional string err = 2;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  // repeated .xkcrm.db_res_partner rows = 10;
  total_size += 1 * this->rows_size();
  for (int i = 0; i < this->rows_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rows(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgPageQueryPartnerReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgPageQueryPartnerReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgPageQueryPartnerReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgPageQueryPartnerReply::MergeFrom(const PkgPageQueryPartnerReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  rows_.MergeFrom(from.rows_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgPageQueryPartnerReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgPageQueryPartnerReply::CopyFrom(const PkgPageQueryPartnerReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgPageQueryPartnerReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->rows())) return false;
  return true;
}

void PkgPageQueryPartnerReply::Swap(PkgPageQueryPartnerReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgPageQueryPartnerReply::InternalSwap(PkgPageQueryPartnerReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  rows_.UnsafeArenaSwap(&other->rows_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgPageQueryPartnerReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgPageQueryPartnerReply_descriptor_;
  metadata.reflection = PkgPageQueryPartnerReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgPageQueryLeadReq::kEnconditonFieldNumber;
const int PkgPageQueryLeadReq::kPkgqueryconditionFieldNumber;
const int PkgPageQueryLeadReq::kPageflagFieldNumber;
const int PkgPageQueryLeadReq::kIndexstartFieldNumber;
const int PkgPageQueryLeadReq::kIndexendFieldNumber;
#endif  // !_MSC_VER

PkgPageQueryLeadReq::PkgPageQueryLeadReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:xkcrm.PkgPageQueryLeadReq)
}

void PkgPageQueryLeadReq::InitAsDefaultInstance() {
  pkgquerycondition_ = const_cast< ::xkcrm::PkgQueryCondition*>(&::xkcrm::PkgQueryCondition::default_instance());
}

PkgPageQueryLeadReq::PkgPageQueryLeadReq(const PkgPageQueryLeadReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:xkcrm.PkgPageQueryLeadReq)
}

void PkgPageQueryLeadReq::SharedCtor() {
  _cached_size_ = 0;
  enconditon_ = 0;
  pkgquerycondition_ = NULL;
  pageflag_ = 2;
  indexstart_ = 0;
  indexend_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgPageQueryLeadReq::~PkgPageQueryLeadReq() {
  // @@protoc_insertion_point(destructor:xkcrm.PkgPageQueryLeadReq)
  SharedDtor();
}

void PkgPageQueryLeadReq::SharedDtor() {
  if (this != default_instance_) {
    delete pkgquerycondition_;
  }
}

void PkgPageQueryLeadReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgPageQueryLeadReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgPageQueryLeadReq_descriptor_;
}

const PkgPageQueryLeadReq& PkgPageQueryLeadReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_xkcrm_2eproto();
  return *default_instance_;
}

PkgPageQueryLeadReq* PkgPageQueryLeadReq::default_instance_ = NULL;

PkgPageQueryLeadReq* PkgPageQueryLeadReq::New(::google::protobuf::Arena* arena) const {
  PkgPageQueryLeadReq* n = new PkgPageQueryLeadReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgPageQueryLeadReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgPageQueryLeadReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(indexstart_, indexend_);
    enconditon_ = 0;
    if (has_pkgquerycondition()) {
      if (pkgquerycondition_ != NULL) pkgquerycondition_->::xkcrm::PkgQueryCondition::Clear();
    }
    pageflag_ = 2;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgPageQueryLeadReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xkcrm.PkgPageQueryLeadReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 enconditon = 2 [default = 0];
      case 2: {
        if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &enconditon_)));
          set_has_enconditon();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_pkgquerycondition;
        break;
      }

      // optional .xkcrm.PkgQueryCondition pkgquerycondition = 3;
      case 3: {
        if (tag == 26) {
         parse_pkgquerycondition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pkgquerycondition()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pageflag;
        break;
      }

      // optional .xkcrm.EnPageFlag pageflag = 4 [default = P_RETURNALL];
      case 4: {
        if (tag == 32) {
         parse_pageflag:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::xkcrm::EnPageFlag_IsValid(value)) {
            set_pageflag(static_cast< ::xkcrm::EnPageFlag >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_indexstart;
        break;
      }

      // optional int32 indexstart = 5;
      case 5: {
        if (tag == 40) {
         parse_indexstart:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &indexstart_)));
          set_has_indexstart();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_indexend;
        break;
      }

      // optional int32 indexend = 6;
      case 6: {
        if (tag == 48) {
         parse_indexend:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &indexend_)));
          set_has_indexend();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xkcrm.PkgPageQueryLeadReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xkcrm.PkgPageQueryLeadReq)
  return false;
#undef DO_
}

void PkgPageQueryLeadReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xkcrm.PkgPageQueryLeadReq)
  // optional int32 enconditon = 2 [default = 0];
  if (has_enconditon()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->enconditon(), output);
  }

  // optional .xkcrm.PkgQueryCondition pkgquerycondition = 3;
  if (has_pkgquerycondition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->pkgquerycondition_, output);
  }

  // optional .xkcrm.EnPageFlag pageflag = 4 [default = P_RETURNALL];
  if (has_pageflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->pageflag(), output);
  }

  // optional int32 indexstart = 5;
  if (has_indexstart()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->indexstart(), output);
  }

  // optional int32 indexend = 6;
  if (has_indexend()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->indexend(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:xkcrm.PkgPageQueryLeadReq)
}

::google::protobuf::uint8* PkgPageQueryLeadReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:xkcrm.PkgPageQueryLeadReq)
  // optional int32 enconditon = 2 [default = 0];
  if (has_enconditon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->enconditon(), target);
  }

  // optional .xkcrm.PkgQueryCondition pkgquerycondition = 3;
  if (has_pkgquerycondition()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *this->pkgquerycondition_, target);
  }

  // optional .xkcrm.EnPageFlag pageflag = 4 [default = P_RETURNALL];
  if (has_pageflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->pageflag(), target);
  }

  // optional int32 indexstart = 5;
  if (has_indexstart()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->indexstart(), target);
  }

  // optional int32 indexend = 6;
  if (has_indexend()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->indexend(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xkcrm.PkgPageQueryLeadReq)
  return target;
}

int PkgPageQueryLeadReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31) {
    // optional int32 enconditon = 2 [default = 0];
    if (has_enconditon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->enconditon());
    }

    // optional .xkcrm.PkgQueryCondition pkgquerycondition = 3;
    if (has_pkgquerycondition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pkgquerycondition_);
    }

    // optional .xkcrm.EnPageFlag pageflag = 4 [default = P_RETURNALL];
    if (has_pageflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->pageflag());
    }

    // optional int32 indexstart = 5;
    if (has_indexstart()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->indexstart());
    }

    // optional int32 indexend = 6;
    if (has_indexend()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->indexend());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgPageQueryLeadReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgPageQueryLeadReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgPageQueryLeadReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgPageQueryLeadReq::MergeFrom(const PkgPageQueryLeadReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_enconditon()) {
      set_enconditon(from.enconditon());
    }
    if (from.has_pkgquerycondition()) {
      mutable_pkgquerycondition()->::xkcrm::PkgQueryCondition::MergeFrom(from.pkgquerycondition());
    }
    if (from.has_pageflag()) {
      set_pageflag(from.pageflag());
    }
    if (from.has_indexstart()) {
      set_indexstart(from.indexstart());
    }
    if (from.has_indexend()) {
      set_indexend(from.indexend());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgPageQueryLeadReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgPageQueryLeadReq::CopyFrom(const PkgPageQueryLeadReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgPageQueryLeadReq::IsInitialized() const {

  return true;
}

void PkgPageQueryLeadReq::Swap(PkgPageQueryLeadReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgPageQueryLeadReq::InternalSwap(PkgPageQueryLeadReq* other) {
  std::swap(enconditon_, other->enconditon_);
  std::swap(pkgquerycondition_, other->pkgquerycondition_);
  std::swap(pageflag_, other->pageflag_);
  std::swap(indexstart_, other->indexstart_);
  std::swap(indexend_, other->indexend_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgPageQueryLeadReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgPageQueryLeadReq_descriptor_;
  metadata.reflection = PkgPageQueryLeadReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgPageQueryLeadReply::kIssuccessFieldNumber;
const int PkgPageQueryLeadReply::kErrFieldNumber;
const int PkgPageQueryLeadReply::kRowsFieldNumber;
#endif  // !_MSC_VER

PkgPageQueryLeadReply::PkgPageQueryLeadReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:xkcrm.PkgPageQueryLeadReply)
}

void PkgPageQueryLeadReply::InitAsDefaultInstance() {
}

PkgPageQueryLeadReply::PkgPageQueryLeadReply(const PkgPageQueryLeadReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:xkcrm.PkgPageQueryLeadReply)
}

void PkgPageQueryLeadReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = false;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgPageQueryLeadReply::~PkgPageQueryLeadReply() {
  // @@protoc_insertion_point(destructor:xkcrm.PkgPageQueryLeadReply)
  SharedDtor();
}

void PkgPageQueryLeadReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgPageQueryLeadReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgPageQueryLeadReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgPageQueryLeadReply_descriptor_;
}

const PkgPageQueryLeadReply& PkgPageQueryLeadReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_xkcrm_2eproto();
  return *default_instance_;
}

PkgPageQueryLeadReply* PkgPageQueryLeadReply::default_instance_ = NULL;

PkgPageQueryLeadReply* PkgPageQueryLeadReply::New(::google::protobuf::Arena* arena) const {
  PkgPageQueryLeadReply* n = new PkgPageQueryLeadReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgPageQueryLeadReply::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    issuccess_ = false;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  rows_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgPageQueryLeadReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xkcrm.PkgPageQueryLeadReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "xkcrm.PkgPageQueryLeadReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_rows;
        break;
      }

      // repeated .xkcrm.db_crm_lead rows = 10;
      case 10: {
        if (tag == 82) {
         parse_rows:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rows()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_rows;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xkcrm.PkgPageQueryLeadReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xkcrm.PkgPageQueryLeadReply)
  return false;
#undef DO_
}

void PkgPageQueryLeadReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xkcrm.PkgPageQueryLeadReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgPageQueryLeadReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  // repeated .xkcrm.db_crm_lead rows = 10;
  for (unsigned int i = 0, n = this->rows_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->rows(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:xkcrm.PkgPageQueryLeadReply)
}

::google::protobuf::uint8* PkgPageQueryLeadReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:xkcrm.PkgPageQueryLeadReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgPageQueryLeadReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  // repeated .xkcrm.db_crm_lead rows = 10;
  for (unsigned int i = 0, n = this->rows_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->rows(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xkcrm.PkgPageQueryLeadReply)
  return target;
}

int PkgPageQueryLeadReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1;
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  // optional string err = 2;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  // repeated .xkcrm.db_crm_lead rows = 10;
  total_size += 1 * this->rows_size();
  for (int i = 0; i < this->rows_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rows(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgPageQueryLeadReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgPageQueryLeadReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgPageQueryLeadReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgPageQueryLeadReply::MergeFrom(const PkgPageQueryLeadReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  rows_.MergeFrom(from.rows_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgPageQueryLeadReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgPageQueryLeadReply::CopyFrom(const PkgPageQueryLeadReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgPageQueryLeadReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->rows())) return false;
  return true;
}

void PkgPageQueryLeadReply::Swap(PkgPageQueryLeadReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgPageQueryLeadReply::InternalSwap(PkgPageQueryLeadReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  rows_.UnsafeArenaSwap(&other->rows_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgPageQueryLeadReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgPageQueryLeadReply_descriptor_;
  metadata.reflection = PkgPageQueryLeadReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgPageQueryPhonecallReq::kEnconditonFieldNumber;
const int PkgPageQueryPhonecallReq::kPkgqueryconditionFieldNumber;
const int PkgPageQueryPhonecallReq::kPageflagFieldNumber;
const int PkgPageQueryPhonecallReq::kIndexstartFieldNumber;
const int PkgPageQueryPhonecallReq::kIndexendFieldNumber;
#endif  // !_MSC_VER

PkgPageQueryPhonecallReq::PkgPageQueryPhonecallReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:xkcrm.PkgPageQueryPhonecallReq)
}

void PkgPageQueryPhonecallReq::InitAsDefaultInstance() {
  pkgquerycondition_ = const_cast< ::xkcrm::PkgQueryCondition*>(&::xkcrm::PkgQueryCondition::default_instance());
}

PkgPageQueryPhonecallReq::PkgPageQueryPhonecallReq(const PkgPageQueryPhonecallReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:xkcrm.PkgPageQueryPhonecallReq)
}

void PkgPageQueryPhonecallReq::SharedCtor() {
  _cached_size_ = 0;
  enconditon_ = 0;
  pkgquerycondition_ = NULL;
  pageflag_ = 2;
  indexstart_ = 0;
  indexend_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgPageQueryPhonecallReq::~PkgPageQueryPhonecallReq() {
  // @@protoc_insertion_point(destructor:xkcrm.PkgPageQueryPhonecallReq)
  SharedDtor();
}

void PkgPageQueryPhonecallReq::SharedDtor() {
  if (this != default_instance_) {
    delete pkgquerycondition_;
  }
}

void PkgPageQueryPhonecallReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgPageQueryPhonecallReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgPageQueryPhonecallReq_descriptor_;
}

const PkgPageQueryPhonecallReq& PkgPageQueryPhonecallReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_xkcrm_2eproto();
  return *default_instance_;
}

PkgPageQueryPhonecallReq* PkgPageQueryPhonecallReq::default_instance_ = NULL;

PkgPageQueryPhonecallReq* PkgPageQueryPhonecallReq::New(::google::protobuf::Arena* arena) const {
  PkgPageQueryPhonecallReq* n = new PkgPageQueryPhonecallReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgPageQueryPhonecallReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgPageQueryPhonecallReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(indexstart_, indexend_);
    enconditon_ = 0;
    if (has_pkgquerycondition()) {
      if (pkgquerycondition_ != NULL) pkgquerycondition_->::xkcrm::PkgQueryCondition::Clear();
    }
    pageflag_ = 2;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgPageQueryPhonecallReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xkcrm.PkgPageQueryPhonecallReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 enconditon = 2 [default = 0];
      case 2: {
        if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &enconditon_)));
          set_has_enconditon();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_pkgquerycondition;
        break;
      }

      // optional .xkcrm.PkgQueryCondition pkgquerycondition = 3;
      case 3: {
        if (tag == 26) {
         parse_pkgquerycondition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pkgquerycondition()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pageflag;
        break;
      }

      // optional .xkcrm.EnPageFlag pageflag = 4 [default = P_RETURNALL];
      case 4: {
        if (tag == 32) {
         parse_pageflag:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::xkcrm::EnPageFlag_IsValid(value)) {
            set_pageflag(static_cast< ::xkcrm::EnPageFlag >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_indexstart;
        break;
      }

      // optional int32 indexstart = 5;
      case 5: {
        if (tag == 40) {
         parse_indexstart:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &indexstart_)));
          set_has_indexstart();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_indexend;
        break;
      }

      // optional int32 indexend = 6;
      case 6: {
        if (tag == 48) {
         parse_indexend:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &indexend_)));
          set_has_indexend();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xkcrm.PkgPageQueryPhonecallReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xkcrm.PkgPageQueryPhonecallReq)
  return false;
#undef DO_
}

void PkgPageQueryPhonecallReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xkcrm.PkgPageQueryPhonecallReq)
  // optional int32 enconditon = 2 [default = 0];
  if (has_enconditon()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->enconditon(), output);
  }

  // optional .xkcrm.PkgQueryCondition pkgquerycondition = 3;
  if (has_pkgquerycondition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->pkgquerycondition_, output);
  }

  // optional .xkcrm.EnPageFlag pageflag = 4 [default = P_RETURNALL];
  if (has_pageflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->pageflag(), output);
  }

  // optional int32 indexstart = 5;
  if (has_indexstart()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->indexstart(), output);
  }

  // optional int32 indexend = 6;
  if (has_indexend()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->indexend(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:xkcrm.PkgPageQueryPhonecallReq)
}

::google::protobuf::uint8* PkgPageQueryPhonecallReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:xkcrm.PkgPageQueryPhonecallReq)
  // optional int32 enconditon = 2 [default = 0];
  if (has_enconditon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->enconditon(), target);
  }

  // optional .xkcrm.PkgQueryCondition pkgquerycondition = 3;
  if (has_pkgquerycondition()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *this->pkgquerycondition_, target);
  }

  // optional .xkcrm.EnPageFlag pageflag = 4 [default = P_RETURNALL];
  if (has_pageflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->pageflag(), target);
  }

  // optional int32 indexstart = 5;
  if (has_indexstart()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->indexstart(), target);
  }

  // optional int32 indexend = 6;
  if (has_indexend()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->indexend(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xkcrm.PkgPageQueryPhonecallReq)
  return target;
}

int PkgPageQueryPhonecallReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31) {
    // optional int32 enconditon = 2 [default = 0];
    if (has_enconditon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->enconditon());
    }

    // optional .xkcrm.PkgQueryCondition pkgquerycondition = 3;
    if (has_pkgquerycondition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pkgquerycondition_);
    }

    // optional .xkcrm.EnPageFlag pageflag = 4 [default = P_RETURNALL];
    if (has_pageflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->pageflag());
    }

    // optional int32 indexstart = 5;
    if (has_indexstart()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->indexstart());
    }

    // optional int32 indexend = 6;
    if (has_indexend()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->indexend());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgPageQueryPhonecallReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgPageQueryPhonecallReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgPageQueryPhonecallReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgPageQueryPhonecallReq::MergeFrom(const PkgPageQueryPhonecallReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_enconditon()) {
      set_enconditon(from.enconditon());
    }
    if (from.has_pkgquerycondition()) {
      mutable_pkgquerycondition()->::xkcrm::PkgQueryCondition::MergeFrom(from.pkgquerycondition());
    }
    if (from.has_pageflag()) {
      set_pageflag(from.pageflag());
    }
    if (from.has_indexstart()) {
      set_indexstart(from.indexstart());
    }
    if (from.has_indexend()) {
      set_indexend(from.indexend());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgPageQueryPhonecallReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgPageQueryPhonecallReq::CopyFrom(const PkgPageQueryPhonecallReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgPageQueryPhonecallReq::IsInitialized() const {

  return true;
}

void PkgPageQueryPhonecallReq::Swap(PkgPageQueryPhonecallReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgPageQueryPhonecallReq::InternalSwap(PkgPageQueryPhonecallReq* other) {
  std::swap(enconditon_, other->enconditon_);
  std::swap(pkgquerycondition_, other->pkgquerycondition_);
  std::swap(pageflag_, other->pageflag_);
  std::swap(indexstart_, other->indexstart_);
  std::swap(indexend_, other->indexend_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgPageQueryPhonecallReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgPageQueryPhonecallReq_descriptor_;
  metadata.reflection = PkgPageQueryPhonecallReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgPageQueryPhonecallReply::kIssuccessFieldNumber;
const int PkgPageQueryPhonecallReply::kErrFieldNumber;
const int PkgPageQueryPhonecallReply::kRowsFieldNumber;
#endif  // !_MSC_VER

PkgPageQueryPhonecallReply::PkgPageQueryPhonecallReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:xkcrm.PkgPageQueryPhonecallReply)
}

void PkgPageQueryPhonecallReply::InitAsDefaultInstance() {
}

PkgPageQueryPhonecallReply::PkgPageQueryPhonecallReply(const PkgPageQueryPhonecallReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:xkcrm.PkgPageQueryPhonecallReply)
}

void PkgPageQueryPhonecallReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = false;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgPageQueryPhonecallReply::~PkgPageQueryPhonecallReply() {
  // @@protoc_insertion_point(destructor:xkcrm.PkgPageQueryPhonecallReply)
  SharedDtor();
}

void PkgPageQueryPhonecallReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgPageQueryPhonecallReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgPageQueryPhonecallReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgPageQueryPhonecallReply_descriptor_;
}

const PkgPageQueryPhonecallReply& PkgPageQueryPhonecallReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_xkcrm_2eproto();
  return *default_instance_;
}

PkgPageQueryPhonecallReply* PkgPageQueryPhonecallReply::default_instance_ = NULL;

PkgPageQueryPhonecallReply* PkgPageQueryPhonecallReply::New(::google::protobuf::Arena* arena) const {
  PkgPageQueryPhonecallReply* n = new PkgPageQueryPhonecallReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgPageQueryPhonecallReply::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    issuccess_ = false;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  rows_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgPageQueryPhonecallReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xkcrm.PkgPageQueryPhonecallReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "xkcrm.PkgPageQueryPhonecallReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_rows;
        break;
      }

      // repeated .xkcrm.db_crm_phonecall rows = 10;
      case 10: {
        if (tag == 82) {
         parse_rows:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rows()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_rows;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xkcrm.PkgPageQueryPhonecallReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xkcrm.PkgPageQueryPhonecallReply)
  return false;
#undef DO_
}

void PkgPageQueryPhonecallReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xkcrm.PkgPageQueryPhonecallReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgPageQueryPhonecallReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  // repeated .xkcrm.db_crm_phonecall rows = 10;
  for (unsigned int i = 0, n = this->rows_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->rows(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:xkcrm.PkgPageQueryPhonecallReply)
}

::google::protobuf::uint8* PkgPageQueryPhonecallReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:xkcrm.PkgPageQueryPhonecallReply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xkcrm.PkgPageQueryPhonecallReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  // repeated .xkcrm.db_crm_phonecall rows = 10;
  for (unsigned int i = 0, n = this->rows_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->rows(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xkcrm.PkgPageQueryPhonecallReply)
  return target;
}

int PkgPageQueryPhonecallReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1;
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  // optional string err = 2;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  // repeated .xkcrm.db_crm_phonecall rows = 10;
  total_size += 1 * this->rows_size();
  for (int i = 0; i < this->rows_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rows(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgPageQueryPhonecallReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgPageQueryPhonecallReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgPageQueryPhonecallReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgPageQueryPhonecallReply::MergeFrom(const PkgPageQueryPhonecallReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  rows_.MergeFrom(from.rows_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgPageQueryPhonecallReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgPageQueryPhonecallReply::CopyFrom(const PkgPageQueryPhonecallReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgPageQueryPhonecallReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->rows())) return false;
  return true;
}

void PkgPageQueryPhonecallReply::Swap(PkgPageQueryPhonecallReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgPageQueryPhonecallReply::InternalSwap(PkgPageQueryPhonecallReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  rows_.UnsafeArenaSwap(&other->rows_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgPageQueryPhonecallReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgPageQueryPhonecallReply_descriptor_;
  metadata.reflection = PkgPageQueryPhonecallReply_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace xkcrm

// @@protoc_insertion_point(global_scope)
